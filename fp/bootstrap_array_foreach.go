// bootstrap_array_foreach.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func BoolArrayForeach(m []bool, f func(bool)) {
	for _, e := range m {
		f(e)
	}
}
func StringArrayForeach(m []string, f func(string)) {
	for _, e := range m {
		f(e)
	}
}
func IntArrayForeach(m []int, f func(int)) {
	for _, e := range m {
		f(e)
	}
}
func Int8ArrayForeach(m []int8, f func(int8)) {
	for _, e := range m {
		f(e)
	}
}
func Int16ArrayForeach(m []int16, f func(int16)) {
	for _, e := range m {
		f(e)
	}
}
func Int32ArrayForeach(m []int32, f func(int32)) {
	for _, e := range m {
		f(e)
	}
}
func Int64ArrayForeach(m []int64, f func(int64)) {
	for _, e := range m {
		f(e)
	}
}
func UintArrayForeach(m []uint, f func(uint)) {
	for _, e := range m {
		f(e)
	}
}
func Uint8ArrayForeach(m []uint8, f func(uint8)) {
	for _, e := range m {
		f(e)
	}
}
func Uint16ArrayForeach(m []uint16, f func(uint16)) {
	for _, e := range m {
		f(e)
	}
}
func Uint32ArrayForeach(m []uint32, f func(uint32)) {
	for _, e := range m {
		f(e)
	}
}
func Uint64ArrayForeach(m []uint64, f func(uint64)) {
	for _, e := range m {
		f(e)
	}
}
func UintptrArrayForeach(m []uintptr, f func(uintptr)) {
	for _, e := range m {
		f(e)
	}
}
func ByteArrayForeach(m []byte, f func(byte)) {
	for _, e := range m {
		f(e)
	}
}
func RuneArrayForeach(m []rune, f func(rune)) {
	for _, e := range m {
		f(e)
	}
}
func Float32ArrayForeach(m []float32, f func(float32)) {
	for _, e := range m {
		f(e)
	}
}
func Float64ArrayForeach(m []float64, f func(float64)) {
	for _, e := range m {
		f(e)
	}
}
func Complex64ArrayForeach(m []complex64, f func(complex64)) {
	for _, e := range m {
		f(e)
	}
}
func Complex128ArrayForeach(m []complex128, f func(complex128)) {
	for _, e := range m {
		f(e)
	}
}
func AnyArrayForeach(m []Any, f func(Any)) {
	for _, e := range m {
		f(e)
	}
}
func BoolArrayArrayForeach(m [][]bool, f func([]bool)) {
	for _, e := range m {
		f(e)
	}
}
func StringArrayArrayForeach(m [][]string, f func([]string)) {
	for _, e := range m {
		f(e)
	}
}
func IntArrayArrayForeach(m [][]int, f func([]int)) {
	for _, e := range m {
		f(e)
	}
}
func Int8ArrayArrayForeach(m [][]int8, f func([]int8)) {
	for _, e := range m {
		f(e)
	}
}
func Int16ArrayArrayForeach(m [][]int16, f func([]int16)) {
	for _, e := range m {
		f(e)
	}
}
func Int32ArrayArrayForeach(m [][]int32, f func([]int32)) {
	for _, e := range m {
		f(e)
	}
}
func Int64ArrayArrayForeach(m [][]int64, f func([]int64)) {
	for _, e := range m {
		f(e)
	}
}
func UintArrayArrayForeach(m [][]uint, f func([]uint)) {
	for _, e := range m {
		f(e)
	}
}
func Uint8ArrayArrayForeach(m [][]uint8, f func([]uint8)) {
	for _, e := range m {
		f(e)
	}
}
func Uint16ArrayArrayForeach(m [][]uint16, f func([]uint16)) {
	for _, e := range m {
		f(e)
	}
}
func Uint32ArrayArrayForeach(m [][]uint32, f func([]uint32)) {
	for _, e := range m {
		f(e)
	}
}
func Uint64ArrayArrayForeach(m [][]uint64, f func([]uint64)) {
	for _, e := range m {
		f(e)
	}
}
func UintptrArrayArrayForeach(m [][]uintptr, f func([]uintptr)) {
	for _, e := range m {
		f(e)
	}
}
func ByteArrayArrayForeach(m [][]byte, f func([]byte)) {
	for _, e := range m {
		f(e)
	}
}
func RuneArrayArrayForeach(m [][]rune, f func([]rune)) {
	for _, e := range m {
		f(e)
	}
}
func Float32ArrayArrayForeach(m [][]float32, f func([]float32)) {
	for _, e := range m {
		f(e)
	}
}
func Float64ArrayArrayForeach(m [][]float64, f func([]float64)) {
	for _, e := range m {
		f(e)
	}
}
func Complex64ArrayArrayForeach(m [][]complex64, f func([]complex64)) {
	for _, e := range m {
		f(e)
	}
}
func Complex128ArrayArrayForeach(m [][]complex128, f func([]complex128)) {
	for _, e := range m {
		f(e)
	}
}
func AnyArrayArrayForeach(m [][]Any, f func([]Any)) {
	for _, e := range m {
		f(e)
	}
}
func BoolOptionArrayForeach(m []BoolOption, f func(BoolOption)) {
	for _, e := range m {
		f(e)
	}
}
func StringOptionArrayForeach(m []StringOption, f func(StringOption)) {
	for _, e := range m {
		f(e)
	}
}
func IntOptionArrayForeach(m []IntOption, f func(IntOption)) {
	for _, e := range m {
		f(e)
	}
}
func Int8OptionArrayForeach(m []Int8Option, f func(Int8Option)) {
	for _, e := range m {
		f(e)
	}
}
func Int16OptionArrayForeach(m []Int16Option, f func(Int16Option)) {
	for _, e := range m {
		f(e)
	}
}
func Int32OptionArrayForeach(m []Int32Option, f func(Int32Option)) {
	for _, e := range m {
		f(e)
	}
}
func Int64OptionArrayForeach(m []Int64Option, f func(Int64Option)) {
	for _, e := range m {
		f(e)
	}
}
func UintOptionArrayForeach(m []UintOption, f func(UintOption)) {
	for _, e := range m {
		f(e)
	}
}
func Uint8OptionArrayForeach(m []Uint8Option, f func(Uint8Option)) {
	for _, e := range m {
		f(e)
	}
}
func Uint16OptionArrayForeach(m []Uint16Option, f func(Uint16Option)) {
	for _, e := range m {
		f(e)
	}
}
func Uint32OptionArrayForeach(m []Uint32Option, f func(Uint32Option)) {
	for _, e := range m {
		f(e)
	}
}
func Uint64OptionArrayForeach(m []Uint64Option, f func(Uint64Option)) {
	for _, e := range m {
		f(e)
	}
}
func UintptrOptionArrayForeach(m []UintptrOption, f func(UintptrOption)) {
	for _, e := range m {
		f(e)
	}
}
func ByteOptionArrayForeach(m []ByteOption, f func(ByteOption)) {
	for _, e := range m {
		f(e)
	}
}
func RuneOptionArrayForeach(m []RuneOption, f func(RuneOption)) {
	for _, e := range m {
		f(e)
	}
}
func Float32OptionArrayForeach(m []Float32Option, f func(Float32Option)) {
	for _, e := range m {
		f(e)
	}
}
func Float64OptionArrayForeach(m []Float64Option, f func(Float64Option)) {
	for _, e := range m {
		f(e)
	}
}
func Complex64OptionArrayForeach(m []Complex64Option, f func(Complex64Option)) {
	for _, e := range m {
		f(e)
	}
}
func Complex128OptionArrayForeach(m []Complex128Option, f func(Complex128Option)) {
	for _, e := range m {
		f(e)
	}
}
func AnyOptionArrayForeach(m []AnyOption, f func(AnyOption)) {
	for _, e := range m {
		f(e)
	}
}
