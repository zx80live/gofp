// bootstrap_array_headoption.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (m BoolArray) HeadOption() BoolOption {
	if len(m) > 0 {
		return MakeBoolOption(m[0])
	} else {
		return NoneBool
	}
}
func (m StringArray) HeadOption() StringOption {
	if len(m) > 0 {
		return MakeStringOption(m[0])
	} else {
		return NoneString
	}
}
func (m IntArray) HeadOption() IntOption {
	if len(m) > 0 {
		return MakeIntOption(m[0])
	} else {
		return NoneInt
	}
}
func (m Int64Array) HeadOption() Int64Option {
	if len(m) > 0 {
		return MakeInt64Option(m[0])
	} else {
		return NoneInt64
	}
}
func (m ByteArray) HeadOption() ByteOption {
	if len(m) > 0 {
		return MakeByteOption(m[0])
	} else {
		return NoneByte
	}
}
func (m RuneArray) HeadOption() RuneOption {
	if len(m) > 0 {
		return MakeRuneOption(m[0])
	} else {
		return NoneRune
	}
}
func (m Float32Array) HeadOption() Float32Option {
	if len(m) > 0 {
		return MakeFloat32Option(m[0])
	} else {
		return NoneFloat32
	}
}
func (m Float64Array) HeadOption() Float64Option {
	if len(m) > 0 {
		return MakeFloat64Option(m[0])
	} else {
		return NoneFloat64
	}
}
func (m AnyArray) HeadOption() AnyOption {
	if len(m) > 0 {
		return MakeAnyOption(m[0])
	} else {
		return NoneAny
	}
}
func (m Tuple2Array) HeadOption() Tuple2Option {
	if len(m) > 0 {
		return MakeTuple2Option(m[0])
	} else {
		return NoneTuple2
	}
}
func (m BoolArrayArray) HeadOption() BoolArrayOption {
	if len(m) > 0 {
		return MakeBoolArrayOption(m[0])
	} else {
		return NoneBoolArray
	}
}
func (m StringArrayArray) HeadOption() StringArrayOption {
	if len(m) > 0 {
		return MakeStringArrayOption(m[0])
	} else {
		return NoneStringArray
	}
}
func (m IntArrayArray) HeadOption() IntArrayOption {
	if len(m) > 0 {
		return MakeIntArrayOption(m[0])
	} else {
		return NoneIntArray
	}
}
func (m Int64ArrayArray) HeadOption() Int64ArrayOption {
	if len(m) > 0 {
		return MakeInt64ArrayOption(m[0])
	} else {
		return NoneInt64Array
	}
}
func (m ByteArrayArray) HeadOption() ByteArrayOption {
	if len(m) > 0 {
		return MakeByteArrayOption(m[0])
	} else {
		return NoneByteArray
	}
}
func (m RuneArrayArray) HeadOption() RuneArrayOption {
	if len(m) > 0 {
		return MakeRuneArrayOption(m[0])
	} else {
		return NoneRuneArray
	}
}
func (m Float32ArrayArray) HeadOption() Float32ArrayOption {
	if len(m) > 0 {
		return MakeFloat32ArrayOption(m[0])
	} else {
		return NoneFloat32Array
	}
}
func (m Float64ArrayArray) HeadOption() Float64ArrayOption {
	if len(m) > 0 {
		return MakeFloat64ArrayOption(m[0])
	} else {
		return NoneFloat64Array
	}
}
func (m AnyArrayArray) HeadOption() AnyArrayOption {
	if len(m) > 0 {
		return MakeAnyArrayOption(m[0])
	} else {
		return NoneAnyArray
	}
}
func (m Tuple2ArrayArray) HeadOption() Tuple2ArrayOption {
	if len(m) > 0 {
		return MakeTuple2ArrayOption(m[0])
	} else {
		return NoneTuple2Array
	}
}
