// bootstrap_func_equal.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func BoolEquals(a, b bool) bool                                                   { return a == b }
func StringEquals(a, b string) bool                                               { return a == b }
func IntEquals(a, b int) bool                                                     { return a == b }
func Int8Equals(a, b int8) bool                                                   { return a == b }
func Int16Equals(a, b int16) bool                                                 { return a == b }
func Int32Equals(a, b int32) bool                                                 { return a == b }
func Int64Equals(a, b int64) bool                                                 { return a == b }
func UintEquals(a, b uint) bool                                                   { return a == b }
func Uint8Equals(a, b uint8) bool                                                 { return a == b }
func Uint16Equals(a, b uint16) bool                                               { return a == b }
func Uint32Equals(a, b uint32) bool                                               { return a == b }
func Uint64Equals(a, b uint64) bool                                               { return a == b }
func UintptrEquals(a, b uintptr) bool                                             { return a == b }
func ByteEquals(a, b byte) bool                                                   { return a == b }
func RuneEquals(a, b rune) bool                                                   { return a == b }
func Float32Equals(a, b float32) bool                                             { return a == b }
func Float64Equals(a, b float64) bool                                             { return a == b }
func Complex64Equals(a, b complex64) bool                                         { return a == b }
func Complex128Equals(a, b complex128) bool                                       { return a == b }
func AnyEquals(a, b Any) bool                                                     { return a == b }
func BoolOptionEquals(a, b BoolOption) bool                                       { return a.Equals(b) }
func StringOptionEquals(a, b StringOption) bool                                   { return a.Equals(b) }
func IntOptionEquals(a, b IntOption) bool                                         { return a.Equals(b) }
func Int8OptionEquals(a, b Int8Option) bool                                       { return a.Equals(b) }
func Int16OptionEquals(a, b Int16Option) bool                                     { return a.Equals(b) }
func Int32OptionEquals(a, b Int32Option) bool                                     { return a.Equals(b) }
func Int64OptionEquals(a, b Int64Option) bool                                     { return a.Equals(b) }
func UintOptionEquals(a, b UintOption) bool                                       { return a.Equals(b) }
func Uint8OptionEquals(a, b Uint8Option) bool                                     { return a.Equals(b) }
func Uint16OptionEquals(a, b Uint16Option) bool                                   { return a.Equals(b) }
func Uint32OptionEquals(a, b Uint32Option) bool                                   { return a.Equals(b) }
func Uint64OptionEquals(a, b Uint64Option) bool                                   { return a.Equals(b) }
func UintptrOptionEquals(a, b UintptrOption) bool                                 { return a.Equals(b) }
func ByteOptionEquals(a, b ByteOption) bool                                       { return a.Equals(b) }
func RuneOptionEquals(a, b RuneOption) bool                                       { return a.Equals(b) }
func Float32OptionEquals(a, b Float32Option) bool                                 { return a.Equals(b) }
func Float64OptionEquals(a, b Float64Option) bool                                 { return a.Equals(b) }
func Complex64OptionEquals(a, b Complex64Option) bool                             { return a.Equals(b) }
func Complex128OptionEquals(a, b Complex128Option) bool                           { return a.Equals(b) }
func AnyOptionEquals(a, b AnyOption) bool                                         { return a.Equals(b) }
func BoolArrayOptionEquals(a, b BoolArrayOption) bool                             { return a.Equals(b) }
func StringArrayOptionEquals(a, b StringArrayOption) bool                         { return a.Equals(b) }
func IntArrayOptionEquals(a, b IntArrayOption) bool                               { return a.Equals(b) }
func Int8ArrayOptionEquals(a, b Int8ArrayOption) bool                             { return a.Equals(b) }
func Int16ArrayOptionEquals(a, b Int16ArrayOption) bool                           { return a.Equals(b) }
func Int32ArrayOptionEquals(a, b Int32ArrayOption) bool                           { return a.Equals(b) }
func Int64ArrayOptionEquals(a, b Int64ArrayOption) bool                           { return a.Equals(b) }
func UintArrayOptionEquals(a, b UintArrayOption) bool                             { return a.Equals(b) }
func Uint8ArrayOptionEquals(a, b Uint8ArrayOption) bool                           { return a.Equals(b) }
func Uint16ArrayOptionEquals(a, b Uint16ArrayOption) bool                         { return a.Equals(b) }
func Uint32ArrayOptionEquals(a, b Uint32ArrayOption) bool                         { return a.Equals(b) }
func Uint64ArrayOptionEquals(a, b Uint64ArrayOption) bool                         { return a.Equals(b) }
func UintptrArrayOptionEquals(a, b UintptrArrayOption) bool                       { return a.Equals(b) }
func ByteArrayOptionEquals(a, b ByteArrayOption) bool                             { return a.Equals(b) }
func RuneArrayOptionEquals(a, b RuneArrayOption) bool                             { return a.Equals(b) }
func Float32ArrayOptionEquals(a, b Float32ArrayOption) bool                       { return a.Equals(b) }
func Float64ArrayOptionEquals(a, b Float64ArrayOption) bool                       { return a.Equals(b) }
func Complex64ArrayOptionEquals(a, b Complex64ArrayOption) bool                   { return a.Equals(b) }
func Complex128ArrayOptionEquals(a, b Complex128ArrayOption) bool                 { return a.Equals(b) }
func AnyArrayOptionEquals(a, b AnyArrayOption) bool                               { return a.Equals(b) }
func BoolArrayArrayOptionEquals(a, b BoolArrayArrayOption) bool                   { return a.Equals(b) }
func StringArrayArrayOptionEquals(a, b StringArrayArrayOption) bool               { return a.Equals(b) }
func IntArrayArrayOptionEquals(a, b IntArrayArrayOption) bool                     { return a.Equals(b) }
func Int8ArrayArrayOptionEquals(a, b Int8ArrayArrayOption) bool                   { return a.Equals(b) }
func Int16ArrayArrayOptionEquals(a, b Int16ArrayArrayOption) bool                 { return a.Equals(b) }
func Int32ArrayArrayOptionEquals(a, b Int32ArrayArrayOption) bool                 { return a.Equals(b) }
func Int64ArrayArrayOptionEquals(a, b Int64ArrayArrayOption) bool                 { return a.Equals(b) }
func UintArrayArrayOptionEquals(a, b UintArrayArrayOption) bool                   { return a.Equals(b) }
func Uint8ArrayArrayOptionEquals(a, b Uint8ArrayArrayOption) bool                 { return a.Equals(b) }
func Uint16ArrayArrayOptionEquals(a, b Uint16ArrayArrayOption) bool               { return a.Equals(b) }
func Uint32ArrayArrayOptionEquals(a, b Uint32ArrayArrayOption) bool               { return a.Equals(b) }
func Uint64ArrayArrayOptionEquals(a, b Uint64ArrayArrayOption) bool               { return a.Equals(b) }
func UintptrArrayArrayOptionEquals(a, b UintptrArrayArrayOption) bool             { return a.Equals(b) }
func ByteArrayArrayOptionEquals(a, b ByteArrayArrayOption) bool                   { return a.Equals(b) }
func RuneArrayArrayOptionEquals(a, b RuneArrayArrayOption) bool                   { return a.Equals(b) }
func Float32ArrayArrayOptionEquals(a, b Float32ArrayArrayOption) bool             { return a.Equals(b) }
func Float64ArrayArrayOptionEquals(a, b Float64ArrayArrayOption) bool             { return a.Equals(b) }
func Complex64ArrayArrayOptionEquals(a, b Complex64ArrayArrayOption) bool         { return a.Equals(b) }
func Complex128ArrayArrayOptionEquals(a, b Complex128ArrayArrayOption) bool       { return a.Equals(b) }
func AnyArrayArrayOptionEquals(a, b AnyArrayArrayOption) bool                     { return a.Equals(b) }
func BoolOptionArrayOptionEquals(a, b BoolOptionArrayOption) bool                 { return a.Equals(b) }
func StringOptionArrayOptionEquals(a, b StringOptionArrayOption) bool             { return a.Equals(b) }
func IntOptionArrayOptionEquals(a, b IntOptionArrayOption) bool                   { return a.Equals(b) }
func Int8OptionArrayOptionEquals(a, b Int8OptionArrayOption) bool                 { return a.Equals(b) }
func Int16OptionArrayOptionEquals(a, b Int16OptionArrayOption) bool               { return a.Equals(b) }
func Int32OptionArrayOptionEquals(a, b Int32OptionArrayOption) bool               { return a.Equals(b) }
func Int64OptionArrayOptionEquals(a, b Int64OptionArrayOption) bool               { return a.Equals(b) }
func UintOptionArrayOptionEquals(a, b UintOptionArrayOption) bool                 { return a.Equals(b) }
func Uint8OptionArrayOptionEquals(a, b Uint8OptionArrayOption) bool               { return a.Equals(b) }
func Uint16OptionArrayOptionEquals(a, b Uint16OptionArrayOption) bool             { return a.Equals(b) }
func Uint32OptionArrayOptionEquals(a, b Uint32OptionArrayOption) bool             { return a.Equals(b) }
func Uint64OptionArrayOptionEquals(a, b Uint64OptionArrayOption) bool             { return a.Equals(b) }
func UintptrOptionArrayOptionEquals(a, b UintptrOptionArrayOption) bool           { return a.Equals(b) }
func ByteOptionArrayOptionEquals(a, b ByteOptionArrayOption) bool                 { return a.Equals(b) }
func RuneOptionArrayOptionEquals(a, b RuneOptionArrayOption) bool                 { return a.Equals(b) }
func Float32OptionArrayOptionEquals(a, b Float32OptionArrayOption) bool           { return a.Equals(b) }
func Float64OptionArrayOptionEquals(a, b Float64OptionArrayOption) bool           { return a.Equals(b) }
func Complex64OptionArrayOptionEquals(a, b Complex64OptionArrayOption) bool       { return a.Equals(b) }
func Complex128OptionArrayOptionEquals(a, b Complex128OptionArrayOption) bool     { return a.Equals(b) }
func AnyOptionArrayOptionEquals(a, b AnyOptionArrayOption) bool                   { return a.Equals(b) }
func BoolListOptionEquals(a, b BoolListOption) bool                               { return a.Equals(b) }
func StringListOptionEquals(a, b StringListOption) bool                           { return a.Equals(b) }
func IntListOptionEquals(a, b IntListOption) bool                                 { return a.Equals(b) }
func Int8ListOptionEquals(a, b Int8ListOption) bool                               { return a.Equals(b) }
func Int16ListOptionEquals(a, b Int16ListOption) bool                             { return a.Equals(b) }
func Int32ListOptionEquals(a, b Int32ListOption) bool                             { return a.Equals(b) }
func Int64ListOptionEquals(a, b Int64ListOption) bool                             { return a.Equals(b) }
func UintListOptionEquals(a, b UintListOption) bool                               { return a.Equals(b) }
func Uint8ListOptionEquals(a, b Uint8ListOption) bool                             { return a.Equals(b) }
func Uint16ListOptionEquals(a, b Uint16ListOption) bool                           { return a.Equals(b) }
func Uint32ListOptionEquals(a, b Uint32ListOption) bool                           { return a.Equals(b) }
func Uint64ListOptionEquals(a, b Uint64ListOption) bool                           { return a.Equals(b) }
func UintptrListOptionEquals(a, b UintptrListOption) bool                         { return a.Equals(b) }
func ByteListOptionEquals(a, b ByteListOption) bool                               { return a.Equals(b) }
func RuneListOptionEquals(a, b RuneListOption) bool                               { return a.Equals(b) }
func Float32ListOptionEquals(a, b Float32ListOption) bool                         { return a.Equals(b) }
func Float64ListOptionEquals(a, b Float64ListOption) bool                         { return a.Equals(b) }
func Complex64ListOptionEquals(a, b Complex64ListOption) bool                     { return a.Equals(b) }
func Complex128ListOptionEquals(a, b Complex128ListOption) bool                   { return a.Equals(b) }
func AnyListOptionEquals(a, b AnyListOption) bool                                 { return a.Equals(b) }
func BoolOptionOptionEquals(a, b BoolOptionOption) bool                           { return a.Equals(b) }
func StringOptionOptionEquals(a, b StringOptionOption) bool                       { return a.Equals(b) }
func IntOptionOptionEquals(a, b IntOptionOption) bool                             { return a.Equals(b) }
func Int8OptionOptionEquals(a, b Int8OptionOption) bool                           { return a.Equals(b) }
func Int16OptionOptionEquals(a, b Int16OptionOption) bool                         { return a.Equals(b) }
func Int32OptionOptionEquals(a, b Int32OptionOption) bool                         { return a.Equals(b) }
func Int64OptionOptionEquals(a, b Int64OptionOption) bool                         { return a.Equals(b) }
func UintOptionOptionEquals(a, b UintOptionOption) bool                           { return a.Equals(b) }
func Uint8OptionOptionEquals(a, b Uint8OptionOption) bool                         { return a.Equals(b) }
func Uint16OptionOptionEquals(a, b Uint16OptionOption) bool                       { return a.Equals(b) }
func Uint32OptionOptionEquals(a, b Uint32OptionOption) bool                       { return a.Equals(b) }
func Uint64OptionOptionEquals(a, b Uint64OptionOption) bool                       { return a.Equals(b) }
func UintptrOptionOptionEquals(a, b UintptrOptionOption) bool                     { return a.Equals(b) }
func ByteOptionOptionEquals(a, b ByteOptionOption) bool                           { return a.Equals(b) }
func RuneOptionOptionEquals(a, b RuneOptionOption) bool                           { return a.Equals(b) }
func Float32OptionOptionEquals(a, b Float32OptionOption) bool                     { return a.Equals(b) }
func Float64OptionOptionEquals(a, b Float64OptionOption) bool                     { return a.Equals(b) }
func Complex64OptionOptionEquals(a, b Complex64OptionOption) bool                 { return a.Equals(b) }
func Complex128OptionOptionEquals(a, b Complex128OptionOption) bool               { return a.Equals(b) }
func AnyOptionOptionEquals(a, b AnyOptionOption) bool                             { return a.Equals(b) }
func BoolArrayOptionOptionEquals(a, b BoolArrayOptionOption) bool                 { return a.Equals(b) }
func StringArrayOptionOptionEquals(a, b StringArrayOptionOption) bool             { return a.Equals(b) }
func IntArrayOptionOptionEquals(a, b IntArrayOptionOption) bool                   { return a.Equals(b) }
func Int8ArrayOptionOptionEquals(a, b Int8ArrayOptionOption) bool                 { return a.Equals(b) }
func Int16ArrayOptionOptionEquals(a, b Int16ArrayOptionOption) bool               { return a.Equals(b) }
func Int32ArrayOptionOptionEquals(a, b Int32ArrayOptionOption) bool               { return a.Equals(b) }
func Int64ArrayOptionOptionEquals(a, b Int64ArrayOptionOption) bool               { return a.Equals(b) }
func UintArrayOptionOptionEquals(a, b UintArrayOptionOption) bool                 { return a.Equals(b) }
func Uint8ArrayOptionOptionEquals(a, b Uint8ArrayOptionOption) bool               { return a.Equals(b) }
func Uint16ArrayOptionOptionEquals(a, b Uint16ArrayOptionOption) bool             { return a.Equals(b) }
func Uint32ArrayOptionOptionEquals(a, b Uint32ArrayOptionOption) bool             { return a.Equals(b) }
func Uint64ArrayOptionOptionEquals(a, b Uint64ArrayOptionOption) bool             { return a.Equals(b) }
func UintptrArrayOptionOptionEquals(a, b UintptrArrayOptionOption) bool           { return a.Equals(b) }
func ByteArrayOptionOptionEquals(a, b ByteArrayOptionOption) bool                 { return a.Equals(b) }
func RuneArrayOptionOptionEquals(a, b RuneArrayOptionOption) bool                 { return a.Equals(b) }
func Float32ArrayOptionOptionEquals(a, b Float32ArrayOptionOption) bool           { return a.Equals(b) }
func Float64ArrayOptionOptionEquals(a, b Float64ArrayOptionOption) bool           { return a.Equals(b) }
func Complex64ArrayOptionOptionEquals(a, b Complex64ArrayOptionOption) bool       { return a.Equals(b) }
func Complex128ArrayOptionOptionEquals(a, b Complex128ArrayOptionOption) bool     { return a.Equals(b) }
func AnyArrayOptionOptionEquals(a, b AnyArrayOptionOption) bool                   { return a.Equals(b) }
func BoolArrayArrayOptionOptionEquals(a, b BoolArrayArrayOptionOption) bool       { return a.Equals(b) }
func StringArrayArrayOptionOptionEquals(a, b StringArrayArrayOptionOption) bool   { return a.Equals(b) }
func IntArrayArrayOptionOptionEquals(a, b IntArrayArrayOptionOption) bool         { return a.Equals(b) }
func Int8ArrayArrayOptionOptionEquals(a, b Int8ArrayArrayOptionOption) bool       { return a.Equals(b) }
func Int16ArrayArrayOptionOptionEquals(a, b Int16ArrayArrayOptionOption) bool     { return a.Equals(b) }
func Int32ArrayArrayOptionOptionEquals(a, b Int32ArrayArrayOptionOption) bool     { return a.Equals(b) }
func Int64ArrayArrayOptionOptionEquals(a, b Int64ArrayArrayOptionOption) bool     { return a.Equals(b) }
func UintArrayArrayOptionOptionEquals(a, b UintArrayArrayOptionOption) bool       { return a.Equals(b) }
func Uint8ArrayArrayOptionOptionEquals(a, b Uint8ArrayArrayOptionOption) bool     { return a.Equals(b) }
func Uint16ArrayArrayOptionOptionEquals(a, b Uint16ArrayArrayOptionOption) bool   { return a.Equals(b) }
func Uint32ArrayArrayOptionOptionEquals(a, b Uint32ArrayArrayOptionOption) bool   { return a.Equals(b) }
func Uint64ArrayArrayOptionOptionEquals(a, b Uint64ArrayArrayOptionOption) bool   { return a.Equals(b) }
func UintptrArrayArrayOptionOptionEquals(a, b UintptrArrayArrayOptionOption) bool { return a.Equals(b) }
func ByteArrayArrayOptionOptionEquals(a, b ByteArrayArrayOptionOption) bool       { return a.Equals(b) }
func RuneArrayArrayOptionOptionEquals(a, b RuneArrayArrayOptionOption) bool       { return a.Equals(b) }
func Float32ArrayArrayOptionOptionEquals(a, b Float32ArrayArrayOptionOption) bool { return a.Equals(b) }
func Float64ArrayArrayOptionOptionEquals(a, b Float64ArrayArrayOptionOption) bool { return a.Equals(b) }
func Complex64ArrayArrayOptionOptionEquals(a, b Complex64ArrayArrayOptionOption) bool {
	return a.Equals(b)
}
func Complex128ArrayArrayOptionOptionEquals(a, b Complex128ArrayArrayOptionOption) bool {
	return a.Equals(b)
}
func AnyArrayArrayOptionOptionEquals(a, b AnyArrayArrayOptionOption) bool         { return a.Equals(b) }
func BoolOptionArrayOptionOptionEquals(a, b BoolOptionArrayOptionOption) bool     { return a.Equals(b) }
func StringOptionArrayOptionOptionEquals(a, b StringOptionArrayOptionOption) bool { return a.Equals(b) }
func IntOptionArrayOptionOptionEquals(a, b IntOptionArrayOptionOption) bool       { return a.Equals(b) }
func Int8OptionArrayOptionOptionEquals(a, b Int8OptionArrayOptionOption) bool     { return a.Equals(b) }
func Int16OptionArrayOptionOptionEquals(a, b Int16OptionArrayOptionOption) bool   { return a.Equals(b) }
func Int32OptionArrayOptionOptionEquals(a, b Int32OptionArrayOptionOption) bool   { return a.Equals(b) }
func Int64OptionArrayOptionOptionEquals(a, b Int64OptionArrayOptionOption) bool   { return a.Equals(b) }
func UintOptionArrayOptionOptionEquals(a, b UintOptionArrayOptionOption) bool     { return a.Equals(b) }
func Uint8OptionArrayOptionOptionEquals(a, b Uint8OptionArrayOptionOption) bool   { return a.Equals(b) }
func Uint16OptionArrayOptionOptionEquals(a, b Uint16OptionArrayOptionOption) bool { return a.Equals(b) }
func Uint32OptionArrayOptionOptionEquals(a, b Uint32OptionArrayOptionOption) bool { return a.Equals(b) }
func Uint64OptionArrayOptionOptionEquals(a, b Uint64OptionArrayOptionOption) bool { return a.Equals(b) }
func UintptrOptionArrayOptionOptionEquals(a, b UintptrOptionArrayOptionOption) bool {
	return a.Equals(b)
}
func ByteOptionArrayOptionOptionEquals(a, b ByteOptionArrayOptionOption) bool { return a.Equals(b) }
func RuneOptionArrayOptionOptionEquals(a, b RuneOptionArrayOptionOption) bool { return a.Equals(b) }
func Float32OptionArrayOptionOptionEquals(a, b Float32OptionArrayOptionOption) bool {
	return a.Equals(b)
}
func Float64OptionArrayOptionOptionEquals(a, b Float64OptionArrayOptionOption) bool {
	return a.Equals(b)
}
func Complex64OptionArrayOptionOptionEquals(a, b Complex64OptionArrayOptionOption) bool {
	return a.Equals(b)
}
func Complex128OptionArrayOptionOptionEquals(a, b Complex128OptionArrayOptionOption) bool {
	return a.Equals(b)
}
func AnyOptionArrayOptionOptionEquals(a, b AnyOptionArrayOptionOption) bool       { return a.Equals(b) }
func BoolListOptionOptionEquals(a, b BoolListOptionOption) bool                   { return a.Equals(b) }
func StringListOptionOptionEquals(a, b StringListOptionOption) bool               { return a.Equals(b) }
func IntListOptionOptionEquals(a, b IntListOptionOption) bool                     { return a.Equals(b) }
func Int8ListOptionOptionEquals(a, b Int8ListOptionOption) bool                   { return a.Equals(b) }
func Int16ListOptionOptionEquals(a, b Int16ListOptionOption) bool                 { return a.Equals(b) }
func Int32ListOptionOptionEquals(a, b Int32ListOptionOption) bool                 { return a.Equals(b) }
func Int64ListOptionOptionEquals(a, b Int64ListOptionOption) bool                 { return a.Equals(b) }
func UintListOptionOptionEquals(a, b UintListOptionOption) bool                   { return a.Equals(b) }
func Uint8ListOptionOptionEquals(a, b Uint8ListOptionOption) bool                 { return a.Equals(b) }
func Uint16ListOptionOptionEquals(a, b Uint16ListOptionOption) bool               { return a.Equals(b) }
func Uint32ListOptionOptionEquals(a, b Uint32ListOptionOption) bool               { return a.Equals(b) }
func Uint64ListOptionOptionEquals(a, b Uint64ListOptionOption) bool               { return a.Equals(b) }
func UintptrListOptionOptionEquals(a, b UintptrListOptionOption) bool             { return a.Equals(b) }
func ByteListOptionOptionEquals(a, b ByteListOptionOption) bool                   { return a.Equals(b) }
func RuneListOptionOptionEquals(a, b RuneListOptionOption) bool                   { return a.Equals(b) }
func Float32ListOptionOptionEquals(a, b Float32ListOptionOption) bool             { return a.Equals(b) }
func Float64ListOptionOptionEquals(a, b Float64ListOptionOption) bool             { return a.Equals(b) }
func Complex64ListOptionOptionEquals(a, b Complex64ListOptionOption) bool         { return a.Equals(b) }
func Complex128ListOptionOptionEquals(a, b Complex128ListOptionOption) bool       { return a.Equals(b) }
func AnyListOptionOptionEquals(a, b AnyListOptionOption) bool                     { return a.Equals(b) }
func BoolOptionOptionOptionEquals(a, b BoolOptionOptionOption) bool               { return a.Equals(b) }
func StringOptionOptionOptionEquals(a, b StringOptionOptionOption) bool           { return a.Equals(b) }
func IntOptionOptionOptionEquals(a, b IntOptionOptionOption) bool                 { return a.Equals(b) }
func Int8OptionOptionOptionEquals(a, b Int8OptionOptionOption) bool               { return a.Equals(b) }
func Int16OptionOptionOptionEquals(a, b Int16OptionOptionOption) bool             { return a.Equals(b) }
func Int32OptionOptionOptionEquals(a, b Int32OptionOptionOption) bool             { return a.Equals(b) }
func Int64OptionOptionOptionEquals(a, b Int64OptionOptionOption) bool             { return a.Equals(b) }
func UintOptionOptionOptionEquals(a, b UintOptionOptionOption) bool               { return a.Equals(b) }
func Uint8OptionOptionOptionEquals(a, b Uint8OptionOptionOption) bool             { return a.Equals(b) }
func Uint16OptionOptionOptionEquals(a, b Uint16OptionOptionOption) bool           { return a.Equals(b) }
func Uint32OptionOptionOptionEquals(a, b Uint32OptionOptionOption) bool           { return a.Equals(b) }
func Uint64OptionOptionOptionEquals(a, b Uint64OptionOptionOption) bool           { return a.Equals(b) }
func UintptrOptionOptionOptionEquals(a, b UintptrOptionOptionOption) bool         { return a.Equals(b) }
func ByteOptionOptionOptionEquals(a, b ByteOptionOptionOption) bool               { return a.Equals(b) }
func RuneOptionOptionOptionEquals(a, b RuneOptionOptionOption) bool               { return a.Equals(b) }
func Float32OptionOptionOptionEquals(a, b Float32OptionOptionOption) bool         { return a.Equals(b) }
func Float64OptionOptionOptionEquals(a, b Float64OptionOptionOption) bool         { return a.Equals(b) }
func Complex64OptionOptionOptionEquals(a, b Complex64OptionOptionOption) bool     { return a.Equals(b) }
func Complex128OptionOptionOptionEquals(a, b Complex128OptionOptionOption) bool   { return a.Equals(b) }
func AnyOptionOptionOptionEquals(a, b AnyOptionOptionOption) bool                 { return a.Equals(b) }
func BoolArrayOptionOptionOptionEquals(a, b BoolArrayOptionOptionOption) bool     { return a.Equals(b) }
func StringArrayOptionOptionOptionEquals(a, b StringArrayOptionOptionOption) bool { return a.Equals(b) }
func IntArrayOptionOptionOptionEquals(a, b IntArrayOptionOptionOption) bool       { return a.Equals(b) }
func Int8ArrayOptionOptionOptionEquals(a, b Int8ArrayOptionOptionOption) bool     { return a.Equals(b) }
func Int16ArrayOptionOptionOptionEquals(a, b Int16ArrayOptionOptionOption) bool   { return a.Equals(b) }
func Int32ArrayOptionOptionOptionEquals(a, b Int32ArrayOptionOptionOption) bool   { return a.Equals(b) }
func Int64ArrayOptionOptionOptionEquals(a, b Int64ArrayOptionOptionOption) bool   { return a.Equals(b) }
func UintArrayOptionOptionOptionEquals(a, b UintArrayOptionOptionOption) bool     { return a.Equals(b) }
func Uint8ArrayOptionOptionOptionEquals(a, b Uint8ArrayOptionOptionOption) bool   { return a.Equals(b) }
func Uint16ArrayOptionOptionOptionEquals(a, b Uint16ArrayOptionOptionOption) bool { return a.Equals(b) }
func Uint32ArrayOptionOptionOptionEquals(a, b Uint32ArrayOptionOptionOption) bool { return a.Equals(b) }
func Uint64ArrayOptionOptionOptionEquals(a, b Uint64ArrayOptionOptionOption) bool { return a.Equals(b) }
func UintptrArrayOptionOptionOptionEquals(a, b UintptrArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func ByteArrayOptionOptionOptionEquals(a, b ByteArrayOptionOptionOption) bool { return a.Equals(b) }
func RuneArrayOptionOptionOptionEquals(a, b RuneArrayOptionOptionOption) bool { return a.Equals(b) }
func Float32ArrayOptionOptionOptionEquals(a, b Float32ArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Float64ArrayOptionOptionOptionEquals(a, b Float64ArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex64ArrayOptionOptionOptionEquals(a, b Complex64ArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex128ArrayOptionOptionOptionEquals(a, b Complex128ArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func AnyArrayOptionOptionOptionEquals(a, b AnyArrayOptionOptionOption) bool { return a.Equals(b) }
func BoolArrayArrayOptionOptionOptionEquals(a, b BoolArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func StringArrayArrayOptionOptionOptionEquals(a, b StringArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func IntArrayArrayOptionOptionOptionEquals(a, b IntArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int8ArrayArrayOptionOptionOptionEquals(a, b Int8ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int16ArrayArrayOptionOptionOptionEquals(a, b Int16ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int32ArrayArrayOptionOptionOptionEquals(a, b Int32ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int64ArrayArrayOptionOptionOptionEquals(a, b Int64ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func UintArrayArrayOptionOptionOptionEquals(a, b UintArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint8ArrayArrayOptionOptionOptionEquals(a, b Uint8ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint16ArrayArrayOptionOptionOptionEquals(a, b Uint16ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint32ArrayArrayOptionOptionOptionEquals(a, b Uint32ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint64ArrayArrayOptionOptionOptionEquals(a, b Uint64ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func UintptrArrayArrayOptionOptionOptionEquals(a, b UintptrArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func ByteArrayArrayOptionOptionOptionEquals(a, b ByteArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func RuneArrayArrayOptionOptionOptionEquals(a, b RuneArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Float32ArrayArrayOptionOptionOptionEquals(a, b Float32ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Float64ArrayArrayOptionOptionOptionEquals(a, b Float64ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex64ArrayArrayOptionOptionOptionEquals(a, b Complex64ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex128ArrayArrayOptionOptionOptionEquals(a, b Complex128ArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func AnyArrayArrayOptionOptionOptionEquals(a, b AnyArrayArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func BoolOptionArrayOptionOptionOptionEquals(a, b BoolOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func StringOptionArrayOptionOptionOptionEquals(a, b StringOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func IntOptionArrayOptionOptionOptionEquals(a, b IntOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int8OptionArrayOptionOptionOptionEquals(a, b Int8OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int16OptionArrayOptionOptionOptionEquals(a, b Int16OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int32OptionArrayOptionOptionOptionEquals(a, b Int32OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Int64OptionArrayOptionOptionOptionEquals(a, b Int64OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func UintOptionArrayOptionOptionOptionEquals(a, b UintOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint8OptionArrayOptionOptionOptionEquals(a, b Uint8OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint16OptionArrayOptionOptionOptionEquals(a, b Uint16OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint32OptionArrayOptionOptionOptionEquals(a, b Uint32OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Uint64OptionArrayOptionOptionOptionEquals(a, b Uint64OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func UintptrOptionArrayOptionOptionOptionEquals(a, b UintptrOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func ByteOptionArrayOptionOptionOptionEquals(a, b ByteOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func RuneOptionArrayOptionOptionOptionEquals(a, b RuneOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Float32OptionArrayOptionOptionOptionEquals(a, b Float32OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Float64OptionArrayOptionOptionOptionEquals(a, b Float64OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex64OptionArrayOptionOptionOptionEquals(a, b Complex64OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex128OptionArrayOptionOptionOptionEquals(a, b Complex128OptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func AnyOptionArrayOptionOptionOptionEquals(a, b AnyOptionArrayOptionOptionOption) bool {
	return a.Equals(b)
}
func BoolListOptionOptionOptionEquals(a, b BoolListOptionOptionOption) bool       { return a.Equals(b) }
func StringListOptionOptionOptionEquals(a, b StringListOptionOptionOption) bool   { return a.Equals(b) }
func IntListOptionOptionOptionEquals(a, b IntListOptionOptionOption) bool         { return a.Equals(b) }
func Int8ListOptionOptionOptionEquals(a, b Int8ListOptionOptionOption) bool       { return a.Equals(b) }
func Int16ListOptionOptionOptionEquals(a, b Int16ListOptionOptionOption) bool     { return a.Equals(b) }
func Int32ListOptionOptionOptionEquals(a, b Int32ListOptionOptionOption) bool     { return a.Equals(b) }
func Int64ListOptionOptionOptionEquals(a, b Int64ListOptionOptionOption) bool     { return a.Equals(b) }
func UintListOptionOptionOptionEquals(a, b UintListOptionOptionOption) bool       { return a.Equals(b) }
func Uint8ListOptionOptionOptionEquals(a, b Uint8ListOptionOptionOption) bool     { return a.Equals(b) }
func Uint16ListOptionOptionOptionEquals(a, b Uint16ListOptionOptionOption) bool   { return a.Equals(b) }
func Uint32ListOptionOptionOptionEquals(a, b Uint32ListOptionOptionOption) bool   { return a.Equals(b) }
func Uint64ListOptionOptionOptionEquals(a, b Uint64ListOptionOptionOption) bool   { return a.Equals(b) }
func UintptrListOptionOptionOptionEquals(a, b UintptrListOptionOptionOption) bool { return a.Equals(b) }
func ByteListOptionOptionOptionEquals(a, b ByteListOptionOptionOption) bool       { return a.Equals(b) }
func RuneListOptionOptionOptionEquals(a, b RuneListOptionOptionOption) bool       { return a.Equals(b) }
func Float32ListOptionOptionOptionEquals(a, b Float32ListOptionOptionOption) bool { return a.Equals(b) }
func Float64ListOptionOptionOptionEquals(a, b Float64ListOptionOptionOption) bool { return a.Equals(b) }
func Complex64ListOptionOptionOptionEquals(a, b Complex64ListOptionOptionOption) bool {
	return a.Equals(b)
}
func Complex128ListOptionOptionOptionEquals(a, b Complex128ListOptionOptionOption) bool {
	return a.Equals(b)
}
func AnyListOptionOptionOptionEquals(a, b AnyListOptionOptionOption) bool { return a.Equals(b) }
func BoolArrayEquals(a, b []bool) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if BoolEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func StringArrayEquals(a, b []string) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if StringEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func IntArrayEquals(a, b []int) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if IntEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int8ArrayEquals(a, b []int8) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int8Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int16ArrayEquals(a, b []int16) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int16Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int32ArrayEquals(a, b []int32) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int32Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int64ArrayEquals(a, b []int64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int64Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func UintArrayEquals(a, b []uint) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if UintEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint8ArrayEquals(a, b []uint8) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint8Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint16ArrayEquals(a, b []uint16) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint16Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint32ArrayEquals(a, b []uint32) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint32Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint64ArrayEquals(a, b []uint64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint64Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func UintptrArrayEquals(a, b []uintptr) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if UintptrEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func ByteArrayEquals(a, b []byte) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if ByteEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func RuneArrayEquals(a, b []rune) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if RuneEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Float32ArrayEquals(a, b []float32) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Float32Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Float64ArrayEquals(a, b []float64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Float64Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Complex64ArrayEquals(a, b []complex64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Complex64Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func Complex128ArrayEquals(a, b []complex128) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Complex128Equals(e, b[i]) {
			return false
		}
	}
	return true
}
func AnyArrayEquals(a, b []Any) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if AnyEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func BoolArrayArrayEquals(a, b [][]bool) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if BoolArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func StringArrayArrayEquals(a, b [][]string) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if StringArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func IntArrayArrayEquals(a, b [][]int) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if IntArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int8ArrayArrayEquals(a, b [][]int8) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int8ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int16ArrayArrayEquals(a, b [][]int16) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int16ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int32ArrayArrayEquals(a, b [][]int32) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int32ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int64ArrayArrayEquals(a, b [][]int64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int64ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func UintArrayArrayEquals(a, b [][]uint) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if UintArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint8ArrayArrayEquals(a, b [][]uint8) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint8ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint16ArrayArrayEquals(a, b [][]uint16) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint16ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint32ArrayArrayEquals(a, b [][]uint32) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint32ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint64ArrayArrayEquals(a, b [][]uint64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint64ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func UintptrArrayArrayEquals(a, b [][]uintptr) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if UintptrArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func ByteArrayArrayEquals(a, b [][]byte) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if ByteArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func RuneArrayArrayEquals(a, b [][]rune) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if RuneArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Float32ArrayArrayEquals(a, b [][]float32) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Float32ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Float64ArrayArrayEquals(a, b [][]float64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Float64ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Complex64ArrayArrayEquals(a, b [][]complex64) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Complex64ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Complex128ArrayArrayEquals(a, b [][]complex128) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Complex128ArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func AnyArrayArrayEquals(a, b [][]Any) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if AnyArrayEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func BoolOptionArrayEquals(a, b []BoolOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if BoolOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func StringOptionArrayEquals(a, b []StringOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if StringOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func IntOptionArrayEquals(a, b []IntOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if IntOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int8OptionArrayEquals(a, b []Int8Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int8OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int16OptionArrayEquals(a, b []Int16Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int16OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int32OptionArrayEquals(a, b []Int32Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int32OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Int64OptionArrayEquals(a, b []Int64Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Int64OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func UintOptionArrayEquals(a, b []UintOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if UintOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint8OptionArrayEquals(a, b []Uint8Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint8OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint16OptionArrayEquals(a, b []Uint16Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint16OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint32OptionArrayEquals(a, b []Uint32Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint32OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Uint64OptionArrayEquals(a, b []Uint64Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Uint64OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func UintptrOptionArrayEquals(a, b []UintptrOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if UintptrOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func ByteOptionArrayEquals(a, b []ByteOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if ByteOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func RuneOptionArrayEquals(a, b []RuneOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if RuneOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Float32OptionArrayEquals(a, b []Float32Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Float32OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Float64OptionArrayEquals(a, b []Float64Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Float64OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Complex64OptionArrayEquals(a, b []Complex64Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Complex64OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func Complex128OptionArrayEquals(a, b []Complex128Option) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if Complex128OptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func AnyOptionArrayEquals(a, b []AnyOption) bool {
	len1 := len(a)
	if len1 != len(b) {
		return false
	}
	for i, e := range a {
		if AnyOptionEquals(e, b[i]) {
			return false
		}
	}
	return true
}
func BoolListEquals(a, b BoolList) bool                                           { return a.Equals(b) }
func StringListEquals(a, b StringList) bool                                       { return a.Equals(b) }
func IntListEquals(a, b IntList) bool                                             { return a.Equals(b) }
func Int8ListEquals(a, b Int8List) bool                                           { return a.Equals(b) }
func Int16ListEquals(a, b Int16List) bool                                         { return a.Equals(b) }
func Int32ListEquals(a, b Int32List) bool                                         { return a.Equals(b) }
func Int64ListEquals(a, b Int64List) bool                                         { return a.Equals(b) }
func UintListEquals(a, b UintList) bool                                           { return a.Equals(b) }
func Uint8ListEquals(a, b Uint8List) bool                                         { return a.Equals(b) }
func Uint16ListEquals(a, b Uint16List) bool                                       { return a.Equals(b) }
func Uint32ListEquals(a, b Uint32List) bool                                       { return a.Equals(b) }
func Uint64ListEquals(a, b Uint64List) bool                                       { return a.Equals(b) }
func UintptrListEquals(a, b UintptrList) bool                                     { return a.Equals(b) }
func ByteListEquals(a, b ByteList) bool                                           { return a.Equals(b) }
func RuneListEquals(a, b RuneList) bool                                           { return a.Equals(b) }
func Float32ListEquals(a, b Float32List) bool                                     { return a.Equals(b) }
func Float64ListEquals(a, b Float64List) bool                                     { return a.Equals(b) }
func Complex64ListEquals(a, b Complex64List) bool                                 { return a.Equals(b) }
func Complex128ListEquals(a, b Complex128List) bool                               { return a.Equals(b) }
func AnyListEquals(a, b AnyList) bool                                             { return a.Equals(b) }
func BoolOptionListEquals(a, b BoolOptionList) bool                               { return a.Equals(b) }
func StringOptionListEquals(a, b StringOptionList) bool                           { return a.Equals(b) }
func IntOptionListEquals(a, b IntOptionList) bool                                 { return a.Equals(b) }
func Int8OptionListEquals(a, b Int8OptionList) bool                               { return a.Equals(b) }
func Int16OptionListEquals(a, b Int16OptionList) bool                             { return a.Equals(b) }
func Int32OptionListEquals(a, b Int32OptionList) bool                             { return a.Equals(b) }
func Int64OptionListEquals(a, b Int64OptionList) bool                             { return a.Equals(b) }
func UintOptionListEquals(a, b UintOptionList) bool                               { return a.Equals(b) }
func Uint8OptionListEquals(a, b Uint8OptionList) bool                             { return a.Equals(b) }
func Uint16OptionListEquals(a, b Uint16OptionList) bool                           { return a.Equals(b) }
func Uint32OptionListEquals(a, b Uint32OptionList) bool                           { return a.Equals(b) }
func Uint64OptionListEquals(a, b Uint64OptionList) bool                           { return a.Equals(b) }
func UintptrOptionListEquals(a, b UintptrOptionList) bool                         { return a.Equals(b) }
func ByteOptionListEquals(a, b ByteOptionList) bool                               { return a.Equals(b) }
func RuneOptionListEquals(a, b RuneOptionList) bool                               { return a.Equals(b) }
func Float32OptionListEquals(a, b Float32OptionList) bool                         { return a.Equals(b) }
func Float64OptionListEquals(a, b Float64OptionList) bool                         { return a.Equals(b) }
func Complex64OptionListEquals(a, b Complex64OptionList) bool                     { return a.Equals(b) }
func Complex128OptionListEquals(a, b Complex128OptionList) bool                   { return a.Equals(b) }
func AnyOptionListEquals(a, b AnyOptionList) bool                                 { return a.Equals(b) }
func BoolArrayOptionListEquals(a, b BoolArrayOptionList) bool                     { return a.Equals(b) }
func StringArrayOptionListEquals(a, b StringArrayOptionList) bool                 { return a.Equals(b) }
func IntArrayOptionListEquals(a, b IntArrayOptionList) bool                       { return a.Equals(b) }
func Int8ArrayOptionListEquals(a, b Int8ArrayOptionList) bool                     { return a.Equals(b) }
func Int16ArrayOptionListEquals(a, b Int16ArrayOptionList) bool                   { return a.Equals(b) }
func Int32ArrayOptionListEquals(a, b Int32ArrayOptionList) bool                   { return a.Equals(b) }
func Int64ArrayOptionListEquals(a, b Int64ArrayOptionList) bool                   { return a.Equals(b) }
func UintArrayOptionListEquals(a, b UintArrayOptionList) bool                     { return a.Equals(b) }
func Uint8ArrayOptionListEquals(a, b Uint8ArrayOptionList) bool                   { return a.Equals(b) }
func Uint16ArrayOptionListEquals(a, b Uint16ArrayOptionList) bool                 { return a.Equals(b) }
func Uint32ArrayOptionListEquals(a, b Uint32ArrayOptionList) bool                 { return a.Equals(b) }
func Uint64ArrayOptionListEquals(a, b Uint64ArrayOptionList) bool                 { return a.Equals(b) }
func UintptrArrayOptionListEquals(a, b UintptrArrayOptionList) bool               { return a.Equals(b) }
func ByteArrayOptionListEquals(a, b ByteArrayOptionList) bool                     { return a.Equals(b) }
func RuneArrayOptionListEquals(a, b RuneArrayOptionList) bool                     { return a.Equals(b) }
func Float32ArrayOptionListEquals(a, b Float32ArrayOptionList) bool               { return a.Equals(b) }
func Float64ArrayOptionListEquals(a, b Float64ArrayOptionList) bool               { return a.Equals(b) }
func Complex64ArrayOptionListEquals(a, b Complex64ArrayOptionList) bool           { return a.Equals(b) }
func Complex128ArrayOptionListEquals(a, b Complex128ArrayOptionList) bool         { return a.Equals(b) }
func AnyArrayOptionListEquals(a, b AnyArrayOptionList) bool                       { return a.Equals(b) }
func BoolArrayArrayOptionListEquals(a, b BoolArrayArrayOptionList) bool           { return a.Equals(b) }
func StringArrayArrayOptionListEquals(a, b StringArrayArrayOptionList) bool       { return a.Equals(b) }
func IntArrayArrayOptionListEquals(a, b IntArrayArrayOptionList) bool             { return a.Equals(b) }
func Int8ArrayArrayOptionListEquals(a, b Int8ArrayArrayOptionList) bool           { return a.Equals(b) }
func Int16ArrayArrayOptionListEquals(a, b Int16ArrayArrayOptionList) bool         { return a.Equals(b) }
func Int32ArrayArrayOptionListEquals(a, b Int32ArrayArrayOptionList) bool         { return a.Equals(b) }
func Int64ArrayArrayOptionListEquals(a, b Int64ArrayArrayOptionList) bool         { return a.Equals(b) }
func UintArrayArrayOptionListEquals(a, b UintArrayArrayOptionList) bool           { return a.Equals(b) }
func Uint8ArrayArrayOptionListEquals(a, b Uint8ArrayArrayOptionList) bool         { return a.Equals(b) }
func Uint16ArrayArrayOptionListEquals(a, b Uint16ArrayArrayOptionList) bool       { return a.Equals(b) }
func Uint32ArrayArrayOptionListEquals(a, b Uint32ArrayArrayOptionList) bool       { return a.Equals(b) }
func Uint64ArrayArrayOptionListEquals(a, b Uint64ArrayArrayOptionList) bool       { return a.Equals(b) }
func UintptrArrayArrayOptionListEquals(a, b UintptrArrayArrayOptionList) bool     { return a.Equals(b) }
func ByteArrayArrayOptionListEquals(a, b ByteArrayArrayOptionList) bool           { return a.Equals(b) }
func RuneArrayArrayOptionListEquals(a, b RuneArrayArrayOptionList) bool           { return a.Equals(b) }
func Float32ArrayArrayOptionListEquals(a, b Float32ArrayArrayOptionList) bool     { return a.Equals(b) }
func Float64ArrayArrayOptionListEquals(a, b Float64ArrayArrayOptionList) bool     { return a.Equals(b) }
func Complex64ArrayArrayOptionListEquals(a, b Complex64ArrayArrayOptionList) bool { return a.Equals(b) }
func Complex128ArrayArrayOptionListEquals(a, b Complex128ArrayArrayOptionList) bool {
	return a.Equals(b)
}
func AnyArrayArrayOptionListEquals(a, b AnyArrayArrayOptionList) bool           { return a.Equals(b) }
func BoolOptionArrayOptionListEquals(a, b BoolOptionArrayOptionList) bool       { return a.Equals(b) }
func StringOptionArrayOptionListEquals(a, b StringOptionArrayOptionList) bool   { return a.Equals(b) }
func IntOptionArrayOptionListEquals(a, b IntOptionArrayOptionList) bool         { return a.Equals(b) }
func Int8OptionArrayOptionListEquals(a, b Int8OptionArrayOptionList) bool       { return a.Equals(b) }
func Int16OptionArrayOptionListEquals(a, b Int16OptionArrayOptionList) bool     { return a.Equals(b) }
func Int32OptionArrayOptionListEquals(a, b Int32OptionArrayOptionList) bool     { return a.Equals(b) }
func Int64OptionArrayOptionListEquals(a, b Int64OptionArrayOptionList) bool     { return a.Equals(b) }
func UintOptionArrayOptionListEquals(a, b UintOptionArrayOptionList) bool       { return a.Equals(b) }
func Uint8OptionArrayOptionListEquals(a, b Uint8OptionArrayOptionList) bool     { return a.Equals(b) }
func Uint16OptionArrayOptionListEquals(a, b Uint16OptionArrayOptionList) bool   { return a.Equals(b) }
func Uint32OptionArrayOptionListEquals(a, b Uint32OptionArrayOptionList) bool   { return a.Equals(b) }
func Uint64OptionArrayOptionListEquals(a, b Uint64OptionArrayOptionList) bool   { return a.Equals(b) }
func UintptrOptionArrayOptionListEquals(a, b UintptrOptionArrayOptionList) bool { return a.Equals(b) }
func ByteOptionArrayOptionListEquals(a, b ByteOptionArrayOptionList) bool       { return a.Equals(b) }
func RuneOptionArrayOptionListEquals(a, b RuneOptionArrayOptionList) bool       { return a.Equals(b) }
func Float32OptionArrayOptionListEquals(a, b Float32OptionArrayOptionList) bool { return a.Equals(b) }
func Float64OptionArrayOptionListEquals(a, b Float64OptionArrayOptionList) bool { return a.Equals(b) }
func Complex64OptionArrayOptionListEquals(a, b Complex64OptionArrayOptionList) bool {
	return a.Equals(b)
}
func Complex128OptionArrayOptionListEquals(a, b Complex128OptionArrayOptionList) bool {
	return a.Equals(b)
}
func AnyOptionArrayOptionListEquals(a, b AnyOptionArrayOptionList) bool         { return a.Equals(b) }
func BoolListOptionListEquals(a, b BoolListOptionList) bool                     { return a.Equals(b) }
func StringListOptionListEquals(a, b StringListOptionList) bool                 { return a.Equals(b) }
func IntListOptionListEquals(a, b IntListOptionList) bool                       { return a.Equals(b) }
func Int8ListOptionListEquals(a, b Int8ListOptionList) bool                     { return a.Equals(b) }
func Int16ListOptionListEquals(a, b Int16ListOptionList) bool                   { return a.Equals(b) }
func Int32ListOptionListEquals(a, b Int32ListOptionList) bool                   { return a.Equals(b) }
func Int64ListOptionListEquals(a, b Int64ListOptionList) bool                   { return a.Equals(b) }
func UintListOptionListEquals(a, b UintListOptionList) bool                     { return a.Equals(b) }
func Uint8ListOptionListEquals(a, b Uint8ListOptionList) bool                   { return a.Equals(b) }
func Uint16ListOptionListEquals(a, b Uint16ListOptionList) bool                 { return a.Equals(b) }
func Uint32ListOptionListEquals(a, b Uint32ListOptionList) bool                 { return a.Equals(b) }
func Uint64ListOptionListEquals(a, b Uint64ListOptionList) bool                 { return a.Equals(b) }
func UintptrListOptionListEquals(a, b UintptrListOptionList) bool               { return a.Equals(b) }
func ByteListOptionListEquals(a, b ByteListOptionList) bool                     { return a.Equals(b) }
func RuneListOptionListEquals(a, b RuneListOptionList) bool                     { return a.Equals(b) }
func Float32ListOptionListEquals(a, b Float32ListOptionList) bool               { return a.Equals(b) }
func Float64ListOptionListEquals(a, b Float64ListOptionList) bool               { return a.Equals(b) }
func Complex64ListOptionListEquals(a, b Complex64ListOptionList) bool           { return a.Equals(b) }
func Complex128ListOptionListEquals(a, b Complex128ListOptionList) bool         { return a.Equals(b) }
func AnyListOptionListEquals(a, b AnyListOptionList) bool                       { return a.Equals(b) }
func BoolOptionOptionListEquals(a, b BoolOptionOptionList) bool                 { return a.Equals(b) }
func StringOptionOptionListEquals(a, b StringOptionOptionList) bool             { return a.Equals(b) }
func IntOptionOptionListEquals(a, b IntOptionOptionList) bool                   { return a.Equals(b) }
func Int8OptionOptionListEquals(a, b Int8OptionOptionList) bool                 { return a.Equals(b) }
func Int16OptionOptionListEquals(a, b Int16OptionOptionList) bool               { return a.Equals(b) }
func Int32OptionOptionListEquals(a, b Int32OptionOptionList) bool               { return a.Equals(b) }
func Int64OptionOptionListEquals(a, b Int64OptionOptionList) bool               { return a.Equals(b) }
func UintOptionOptionListEquals(a, b UintOptionOptionList) bool                 { return a.Equals(b) }
func Uint8OptionOptionListEquals(a, b Uint8OptionOptionList) bool               { return a.Equals(b) }
func Uint16OptionOptionListEquals(a, b Uint16OptionOptionList) bool             { return a.Equals(b) }
func Uint32OptionOptionListEquals(a, b Uint32OptionOptionList) bool             { return a.Equals(b) }
func Uint64OptionOptionListEquals(a, b Uint64OptionOptionList) bool             { return a.Equals(b) }
func UintptrOptionOptionListEquals(a, b UintptrOptionOptionList) bool           { return a.Equals(b) }
func ByteOptionOptionListEquals(a, b ByteOptionOptionList) bool                 { return a.Equals(b) }
func RuneOptionOptionListEquals(a, b RuneOptionOptionList) bool                 { return a.Equals(b) }
func Float32OptionOptionListEquals(a, b Float32OptionOptionList) bool           { return a.Equals(b) }
func Float64OptionOptionListEquals(a, b Float64OptionOptionList) bool           { return a.Equals(b) }
func Complex64OptionOptionListEquals(a, b Complex64OptionOptionList) bool       { return a.Equals(b) }
func Complex128OptionOptionListEquals(a, b Complex128OptionOptionList) bool     { return a.Equals(b) }
func AnyOptionOptionListEquals(a, b AnyOptionOptionList) bool                   { return a.Equals(b) }
func BoolArrayOptionOptionListEquals(a, b BoolArrayOptionOptionList) bool       { return a.Equals(b) }
func StringArrayOptionOptionListEquals(a, b StringArrayOptionOptionList) bool   { return a.Equals(b) }
func IntArrayOptionOptionListEquals(a, b IntArrayOptionOptionList) bool         { return a.Equals(b) }
func Int8ArrayOptionOptionListEquals(a, b Int8ArrayOptionOptionList) bool       { return a.Equals(b) }
func Int16ArrayOptionOptionListEquals(a, b Int16ArrayOptionOptionList) bool     { return a.Equals(b) }
func Int32ArrayOptionOptionListEquals(a, b Int32ArrayOptionOptionList) bool     { return a.Equals(b) }
func Int64ArrayOptionOptionListEquals(a, b Int64ArrayOptionOptionList) bool     { return a.Equals(b) }
func UintArrayOptionOptionListEquals(a, b UintArrayOptionOptionList) bool       { return a.Equals(b) }
func Uint8ArrayOptionOptionListEquals(a, b Uint8ArrayOptionOptionList) bool     { return a.Equals(b) }
func Uint16ArrayOptionOptionListEquals(a, b Uint16ArrayOptionOptionList) bool   { return a.Equals(b) }
func Uint32ArrayOptionOptionListEquals(a, b Uint32ArrayOptionOptionList) bool   { return a.Equals(b) }
func Uint64ArrayOptionOptionListEquals(a, b Uint64ArrayOptionOptionList) bool   { return a.Equals(b) }
func UintptrArrayOptionOptionListEquals(a, b UintptrArrayOptionOptionList) bool { return a.Equals(b) }
func ByteArrayOptionOptionListEquals(a, b ByteArrayOptionOptionList) bool       { return a.Equals(b) }
func RuneArrayOptionOptionListEquals(a, b RuneArrayOptionOptionList) bool       { return a.Equals(b) }
func Float32ArrayOptionOptionListEquals(a, b Float32ArrayOptionOptionList) bool { return a.Equals(b) }
func Float64ArrayOptionOptionListEquals(a, b Float64ArrayOptionOptionList) bool { return a.Equals(b) }
func Complex64ArrayOptionOptionListEquals(a, b Complex64ArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128ArrayOptionOptionListEquals(a, b Complex128ArrayOptionOptionList) bool {
	return a.Equals(b)
}
func AnyArrayOptionOptionListEquals(a, b AnyArrayOptionOptionList) bool { return a.Equals(b) }
func BoolArrayArrayOptionOptionListEquals(a, b BoolArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func StringArrayArrayOptionOptionListEquals(a, b StringArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func IntArrayArrayOptionOptionListEquals(a, b IntArrayArrayOptionOptionList) bool { return a.Equals(b) }
func Int8ArrayArrayOptionOptionListEquals(a, b Int8ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int16ArrayArrayOptionOptionListEquals(a, b Int16ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int32ArrayArrayOptionOptionListEquals(a, b Int32ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int64ArrayArrayOptionOptionListEquals(a, b Int64ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func UintArrayArrayOptionOptionListEquals(a, b UintArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint8ArrayArrayOptionOptionListEquals(a, b Uint8ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint16ArrayArrayOptionOptionListEquals(a, b Uint16ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint32ArrayArrayOptionOptionListEquals(a, b Uint32ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint64ArrayArrayOptionOptionListEquals(a, b Uint64ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func UintptrArrayArrayOptionOptionListEquals(a, b UintptrArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func ByteArrayArrayOptionOptionListEquals(a, b ByteArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func RuneArrayArrayOptionOptionListEquals(a, b RuneArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Float32ArrayArrayOptionOptionListEquals(a, b Float32ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Float64ArrayArrayOptionOptionListEquals(a, b Float64ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Complex64ArrayArrayOptionOptionListEquals(a, b Complex64ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128ArrayArrayOptionOptionListEquals(a, b Complex128ArrayArrayOptionOptionList) bool {
	return a.Equals(b)
}
func AnyArrayArrayOptionOptionListEquals(a, b AnyArrayArrayOptionOptionList) bool { return a.Equals(b) }
func BoolOptionArrayOptionOptionListEquals(a, b BoolOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func StringOptionArrayOptionOptionListEquals(a, b StringOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func IntOptionArrayOptionOptionListEquals(a, b IntOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int8OptionArrayOptionOptionListEquals(a, b Int8OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int16OptionArrayOptionOptionListEquals(a, b Int16OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int32OptionArrayOptionOptionListEquals(a, b Int32OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Int64OptionArrayOptionOptionListEquals(a, b Int64OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func UintOptionArrayOptionOptionListEquals(a, b UintOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint8OptionArrayOptionOptionListEquals(a, b Uint8OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint16OptionArrayOptionOptionListEquals(a, b Uint16OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint32OptionArrayOptionOptionListEquals(a, b Uint32OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Uint64OptionArrayOptionOptionListEquals(a, b Uint64OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func UintptrOptionArrayOptionOptionListEquals(a, b UintptrOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func ByteOptionArrayOptionOptionListEquals(a, b ByteOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func RuneOptionArrayOptionOptionListEquals(a, b RuneOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Float32OptionArrayOptionOptionListEquals(a, b Float32OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Float64OptionArrayOptionOptionListEquals(a, b Float64OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Complex64OptionArrayOptionOptionListEquals(a, b Complex64OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128OptionArrayOptionOptionListEquals(a, b Complex128OptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func AnyOptionArrayOptionOptionListEquals(a, b AnyOptionArrayOptionOptionList) bool {
	return a.Equals(b)
}
func BoolListOptionOptionListEquals(a, b BoolListOptionOptionList) bool           { return a.Equals(b) }
func StringListOptionOptionListEquals(a, b StringListOptionOptionList) bool       { return a.Equals(b) }
func IntListOptionOptionListEquals(a, b IntListOptionOptionList) bool             { return a.Equals(b) }
func Int8ListOptionOptionListEquals(a, b Int8ListOptionOptionList) bool           { return a.Equals(b) }
func Int16ListOptionOptionListEquals(a, b Int16ListOptionOptionList) bool         { return a.Equals(b) }
func Int32ListOptionOptionListEquals(a, b Int32ListOptionOptionList) bool         { return a.Equals(b) }
func Int64ListOptionOptionListEquals(a, b Int64ListOptionOptionList) bool         { return a.Equals(b) }
func UintListOptionOptionListEquals(a, b UintListOptionOptionList) bool           { return a.Equals(b) }
func Uint8ListOptionOptionListEquals(a, b Uint8ListOptionOptionList) bool         { return a.Equals(b) }
func Uint16ListOptionOptionListEquals(a, b Uint16ListOptionOptionList) bool       { return a.Equals(b) }
func Uint32ListOptionOptionListEquals(a, b Uint32ListOptionOptionList) bool       { return a.Equals(b) }
func Uint64ListOptionOptionListEquals(a, b Uint64ListOptionOptionList) bool       { return a.Equals(b) }
func UintptrListOptionOptionListEquals(a, b UintptrListOptionOptionList) bool     { return a.Equals(b) }
func ByteListOptionOptionListEquals(a, b ByteListOptionOptionList) bool           { return a.Equals(b) }
func RuneListOptionOptionListEquals(a, b RuneListOptionOptionList) bool           { return a.Equals(b) }
func Float32ListOptionOptionListEquals(a, b Float32ListOptionOptionList) bool     { return a.Equals(b) }
func Float64ListOptionOptionListEquals(a, b Float64ListOptionOptionList) bool     { return a.Equals(b) }
func Complex64ListOptionOptionListEquals(a, b Complex64ListOptionOptionList) bool { return a.Equals(b) }
func Complex128ListOptionOptionListEquals(a, b Complex128ListOptionOptionList) bool {
	return a.Equals(b)
}
func AnyListOptionOptionListEquals(a, b AnyListOptionOptionList) bool             { return a.Equals(b) }
func BoolOptionOptionOptionListEquals(a, b BoolOptionOptionOptionList) bool       { return a.Equals(b) }
func StringOptionOptionOptionListEquals(a, b StringOptionOptionOptionList) bool   { return a.Equals(b) }
func IntOptionOptionOptionListEquals(a, b IntOptionOptionOptionList) bool         { return a.Equals(b) }
func Int8OptionOptionOptionListEquals(a, b Int8OptionOptionOptionList) bool       { return a.Equals(b) }
func Int16OptionOptionOptionListEquals(a, b Int16OptionOptionOptionList) bool     { return a.Equals(b) }
func Int32OptionOptionOptionListEquals(a, b Int32OptionOptionOptionList) bool     { return a.Equals(b) }
func Int64OptionOptionOptionListEquals(a, b Int64OptionOptionOptionList) bool     { return a.Equals(b) }
func UintOptionOptionOptionListEquals(a, b UintOptionOptionOptionList) bool       { return a.Equals(b) }
func Uint8OptionOptionOptionListEquals(a, b Uint8OptionOptionOptionList) bool     { return a.Equals(b) }
func Uint16OptionOptionOptionListEquals(a, b Uint16OptionOptionOptionList) bool   { return a.Equals(b) }
func Uint32OptionOptionOptionListEquals(a, b Uint32OptionOptionOptionList) bool   { return a.Equals(b) }
func Uint64OptionOptionOptionListEquals(a, b Uint64OptionOptionOptionList) bool   { return a.Equals(b) }
func UintptrOptionOptionOptionListEquals(a, b UintptrOptionOptionOptionList) bool { return a.Equals(b) }
func ByteOptionOptionOptionListEquals(a, b ByteOptionOptionOptionList) bool       { return a.Equals(b) }
func RuneOptionOptionOptionListEquals(a, b RuneOptionOptionOptionList) bool       { return a.Equals(b) }
func Float32OptionOptionOptionListEquals(a, b Float32OptionOptionOptionList) bool { return a.Equals(b) }
func Float64OptionOptionOptionListEquals(a, b Float64OptionOptionOptionList) bool { return a.Equals(b) }
func Complex64OptionOptionOptionListEquals(a, b Complex64OptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128OptionOptionOptionListEquals(a, b Complex128OptionOptionOptionList) bool {
	return a.Equals(b)
}
func AnyOptionOptionOptionListEquals(a, b AnyOptionOptionOptionList) bool { return a.Equals(b) }
func BoolArrayOptionOptionOptionListEquals(a, b BoolArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func StringArrayOptionOptionOptionListEquals(a, b StringArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func IntArrayOptionOptionOptionListEquals(a, b IntArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int8ArrayOptionOptionOptionListEquals(a, b Int8ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int16ArrayOptionOptionOptionListEquals(a, b Int16ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int32ArrayOptionOptionOptionListEquals(a, b Int32ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int64ArrayOptionOptionOptionListEquals(a, b Int64ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintArrayOptionOptionOptionListEquals(a, b UintArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint8ArrayOptionOptionOptionListEquals(a, b Uint8ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint16ArrayOptionOptionOptionListEquals(a, b Uint16ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint32ArrayOptionOptionOptionListEquals(a, b Uint32ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint64ArrayOptionOptionOptionListEquals(a, b Uint64ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintptrArrayOptionOptionOptionListEquals(a, b UintptrArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func ByteArrayOptionOptionOptionListEquals(a, b ByteArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func RuneArrayOptionOptionOptionListEquals(a, b RuneArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float32ArrayOptionOptionOptionListEquals(a, b Float32ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float64ArrayOptionOptionOptionListEquals(a, b Float64ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex64ArrayOptionOptionOptionListEquals(a, b Complex64ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128ArrayOptionOptionOptionListEquals(a, b Complex128ArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func AnyArrayOptionOptionOptionListEquals(a, b AnyArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func BoolArrayArrayOptionOptionOptionListEquals(a, b BoolArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func StringArrayArrayOptionOptionOptionListEquals(a, b StringArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func IntArrayArrayOptionOptionOptionListEquals(a, b IntArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int8ArrayArrayOptionOptionOptionListEquals(a, b Int8ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int16ArrayArrayOptionOptionOptionListEquals(a, b Int16ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int32ArrayArrayOptionOptionOptionListEquals(a, b Int32ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int64ArrayArrayOptionOptionOptionListEquals(a, b Int64ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintArrayArrayOptionOptionOptionListEquals(a, b UintArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint8ArrayArrayOptionOptionOptionListEquals(a, b Uint8ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint16ArrayArrayOptionOptionOptionListEquals(a, b Uint16ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint32ArrayArrayOptionOptionOptionListEquals(a, b Uint32ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint64ArrayArrayOptionOptionOptionListEquals(a, b Uint64ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintptrArrayArrayOptionOptionOptionListEquals(a, b UintptrArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func ByteArrayArrayOptionOptionOptionListEquals(a, b ByteArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func RuneArrayArrayOptionOptionOptionListEquals(a, b RuneArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float32ArrayArrayOptionOptionOptionListEquals(a, b Float32ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float64ArrayArrayOptionOptionOptionListEquals(a, b Float64ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex64ArrayArrayOptionOptionOptionListEquals(a, b Complex64ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128ArrayArrayOptionOptionOptionListEquals(a, b Complex128ArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func AnyArrayArrayOptionOptionOptionListEquals(a, b AnyArrayArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func BoolOptionArrayOptionOptionOptionListEquals(a, b BoolOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func StringOptionArrayOptionOptionOptionListEquals(a, b StringOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func IntOptionArrayOptionOptionOptionListEquals(a, b IntOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int8OptionArrayOptionOptionOptionListEquals(a, b Int8OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int16OptionArrayOptionOptionOptionListEquals(a, b Int16OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int32OptionArrayOptionOptionOptionListEquals(a, b Int32OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int64OptionArrayOptionOptionOptionListEquals(a, b Int64OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintOptionArrayOptionOptionOptionListEquals(a, b UintOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint8OptionArrayOptionOptionOptionListEquals(a, b Uint8OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint16OptionArrayOptionOptionOptionListEquals(a, b Uint16OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint32OptionArrayOptionOptionOptionListEquals(a, b Uint32OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint64OptionArrayOptionOptionOptionListEquals(a, b Uint64OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintptrOptionArrayOptionOptionOptionListEquals(a, b UintptrOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func ByteOptionArrayOptionOptionOptionListEquals(a, b ByteOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func RuneOptionArrayOptionOptionOptionListEquals(a, b RuneOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float32OptionArrayOptionOptionOptionListEquals(a, b Float32OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float64OptionArrayOptionOptionOptionListEquals(a, b Float64OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex64OptionArrayOptionOptionOptionListEquals(a, b Complex64OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128OptionArrayOptionOptionOptionListEquals(a, b Complex128OptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func AnyOptionArrayOptionOptionOptionListEquals(a, b AnyOptionArrayOptionOptionOptionList) bool {
	return a.Equals(b)
}
func BoolListOptionOptionOptionListEquals(a, b BoolListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func StringListOptionOptionOptionListEquals(a, b StringListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func IntListOptionOptionOptionListEquals(a, b IntListOptionOptionOptionList) bool { return a.Equals(b) }
func Int8ListOptionOptionOptionListEquals(a, b Int8ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int16ListOptionOptionOptionListEquals(a, b Int16ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int32ListOptionOptionOptionListEquals(a, b Int32ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Int64ListOptionOptionOptionListEquals(a, b Int64ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintListOptionOptionOptionListEquals(a, b UintListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint8ListOptionOptionOptionListEquals(a, b Uint8ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint16ListOptionOptionOptionListEquals(a, b Uint16ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint32ListOptionOptionOptionListEquals(a, b Uint32ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Uint64ListOptionOptionOptionListEquals(a, b Uint64ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func UintptrListOptionOptionOptionListEquals(a, b UintptrListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func ByteListOptionOptionOptionListEquals(a, b ByteListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func RuneListOptionOptionOptionListEquals(a, b RuneListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float32ListOptionOptionOptionListEquals(a, b Float32ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Float64ListOptionOptionOptionListEquals(a, b Float64ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex64ListOptionOptionOptionListEquals(a, b Complex64ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func Complex128ListOptionOptionOptionListEquals(a, b Complex128ListOptionOptionOptionList) bool {
	return a.Equals(b)
}
func AnyListOptionOptionOptionListEquals(a, b AnyListOptionOptionOptionList) bool { return a.Equals(b) }
func BoolArrayListEquals(a, b BoolArrayList) bool                                 { return a.Equals(b) }
func StringArrayListEquals(a, b StringArrayList) bool                             { return a.Equals(b) }
func IntArrayListEquals(a, b IntArrayList) bool                                   { return a.Equals(b) }
func Int8ArrayListEquals(a, b Int8ArrayList) bool                                 { return a.Equals(b) }
func Int16ArrayListEquals(a, b Int16ArrayList) bool                               { return a.Equals(b) }
func Int32ArrayListEquals(a, b Int32ArrayList) bool                               { return a.Equals(b) }
func Int64ArrayListEquals(a, b Int64ArrayList) bool                               { return a.Equals(b) }
func UintArrayListEquals(a, b UintArrayList) bool                                 { return a.Equals(b) }
func Uint8ArrayListEquals(a, b Uint8ArrayList) bool                               { return a.Equals(b) }
func Uint16ArrayListEquals(a, b Uint16ArrayList) bool                             { return a.Equals(b) }
func Uint32ArrayListEquals(a, b Uint32ArrayList) bool                             { return a.Equals(b) }
func Uint64ArrayListEquals(a, b Uint64ArrayList) bool                             { return a.Equals(b) }
func UintptrArrayListEquals(a, b UintptrArrayList) bool                           { return a.Equals(b) }
func ByteArrayListEquals(a, b ByteArrayList) bool                                 { return a.Equals(b) }
func RuneArrayListEquals(a, b RuneArrayList) bool                                 { return a.Equals(b) }
func Float32ArrayListEquals(a, b Float32ArrayList) bool                           { return a.Equals(b) }
func Float64ArrayListEquals(a, b Float64ArrayList) bool                           { return a.Equals(b) }
func Complex64ArrayListEquals(a, b Complex64ArrayList) bool                       { return a.Equals(b) }
func Complex128ArrayListEquals(a, b Complex128ArrayList) bool                     { return a.Equals(b) }
func AnyArrayListEquals(a, b AnyArrayList) bool                                   { return a.Equals(b) }
func BoolArrayArrayListEquals(a, b BoolArrayArrayList) bool                       { return a.Equals(b) }
func StringArrayArrayListEquals(a, b StringArrayArrayList) bool                   { return a.Equals(b) }
func IntArrayArrayListEquals(a, b IntArrayArrayList) bool                         { return a.Equals(b) }
func Int8ArrayArrayListEquals(a, b Int8ArrayArrayList) bool                       { return a.Equals(b) }
func Int16ArrayArrayListEquals(a, b Int16ArrayArrayList) bool                     { return a.Equals(b) }
func Int32ArrayArrayListEquals(a, b Int32ArrayArrayList) bool                     { return a.Equals(b) }
func Int64ArrayArrayListEquals(a, b Int64ArrayArrayList) bool                     { return a.Equals(b) }
func UintArrayArrayListEquals(a, b UintArrayArrayList) bool                       { return a.Equals(b) }
func Uint8ArrayArrayListEquals(a, b Uint8ArrayArrayList) bool                     { return a.Equals(b) }
func Uint16ArrayArrayListEquals(a, b Uint16ArrayArrayList) bool                   { return a.Equals(b) }
func Uint32ArrayArrayListEquals(a, b Uint32ArrayArrayList) bool                   { return a.Equals(b) }
func Uint64ArrayArrayListEquals(a, b Uint64ArrayArrayList) bool                   { return a.Equals(b) }
func UintptrArrayArrayListEquals(a, b UintptrArrayArrayList) bool                 { return a.Equals(b) }
func ByteArrayArrayListEquals(a, b ByteArrayArrayList) bool                       { return a.Equals(b) }
func RuneArrayArrayListEquals(a, b RuneArrayArrayList) bool                       { return a.Equals(b) }
func Float32ArrayArrayListEquals(a, b Float32ArrayArrayList) bool                 { return a.Equals(b) }
func Float64ArrayArrayListEquals(a, b Float64ArrayArrayList) bool                 { return a.Equals(b) }
func Complex64ArrayArrayListEquals(a, b Complex64ArrayArrayList) bool             { return a.Equals(b) }
func Complex128ArrayArrayListEquals(a, b Complex128ArrayArrayList) bool           { return a.Equals(b) }
func AnyArrayArrayListEquals(a, b AnyArrayArrayList) bool                         { return a.Equals(b) }
func BoolOptionArrayListEquals(a, b BoolOptionArrayList) bool                     { return a.Equals(b) }
func StringOptionArrayListEquals(a, b StringOptionArrayList) bool                 { return a.Equals(b) }
func IntOptionArrayListEquals(a, b IntOptionArrayList) bool                       { return a.Equals(b) }
func Int8OptionArrayListEquals(a, b Int8OptionArrayList) bool                     { return a.Equals(b) }
func Int16OptionArrayListEquals(a, b Int16OptionArrayList) bool                   { return a.Equals(b) }
func Int32OptionArrayListEquals(a, b Int32OptionArrayList) bool                   { return a.Equals(b) }
func Int64OptionArrayListEquals(a, b Int64OptionArrayList) bool                   { return a.Equals(b) }
func UintOptionArrayListEquals(a, b UintOptionArrayList) bool                     { return a.Equals(b) }
func Uint8OptionArrayListEquals(a, b Uint8OptionArrayList) bool                   { return a.Equals(b) }
func Uint16OptionArrayListEquals(a, b Uint16OptionArrayList) bool                 { return a.Equals(b) }
func Uint32OptionArrayListEquals(a, b Uint32OptionArrayList) bool                 { return a.Equals(b) }
func Uint64OptionArrayListEquals(a, b Uint64OptionArrayList) bool                 { return a.Equals(b) }
func UintptrOptionArrayListEquals(a, b UintptrOptionArrayList) bool               { return a.Equals(b) }
func ByteOptionArrayListEquals(a, b ByteOptionArrayList) bool                     { return a.Equals(b) }
func RuneOptionArrayListEquals(a, b RuneOptionArrayList) bool                     { return a.Equals(b) }
func Float32OptionArrayListEquals(a, b Float32OptionArrayList) bool               { return a.Equals(b) }
func Float64OptionArrayListEquals(a, b Float64OptionArrayList) bool               { return a.Equals(b) }
func Complex64OptionArrayListEquals(a, b Complex64OptionArrayList) bool           { return a.Equals(b) }
func Complex128OptionArrayListEquals(a, b Complex128OptionArrayList) bool         { return a.Equals(b) }
func AnyOptionArrayListEquals(a, b AnyOptionArrayList) bool                       { return a.Equals(b) }
func BoolListListEquals(a, b BoolListList) bool                                   { return a.Equals(b) }
func StringListListEquals(a, b StringListList) bool                               { return a.Equals(b) }
func IntListListEquals(a, b IntListList) bool                                     { return a.Equals(b) }
func Int8ListListEquals(a, b Int8ListList) bool                                   { return a.Equals(b) }
func Int16ListListEquals(a, b Int16ListList) bool                                 { return a.Equals(b) }
func Int32ListListEquals(a, b Int32ListList) bool                                 { return a.Equals(b) }
func Int64ListListEquals(a, b Int64ListList) bool                                 { return a.Equals(b) }
func UintListListEquals(a, b UintListList) bool                                   { return a.Equals(b) }
func Uint8ListListEquals(a, b Uint8ListList) bool                                 { return a.Equals(b) }
func Uint16ListListEquals(a, b Uint16ListList) bool                               { return a.Equals(b) }
func Uint32ListListEquals(a, b Uint32ListList) bool                               { return a.Equals(b) }
func Uint64ListListEquals(a, b Uint64ListList) bool                               { return a.Equals(b) }
func UintptrListListEquals(a, b UintptrListList) bool                             { return a.Equals(b) }
func ByteListListEquals(a, b ByteListList) bool                                   { return a.Equals(b) }
func RuneListListEquals(a, b RuneListList) bool                                   { return a.Equals(b) }
func Float32ListListEquals(a, b Float32ListList) bool                             { return a.Equals(b) }
func Float64ListListEquals(a, b Float64ListList) bool                             { return a.Equals(b) }
func Complex64ListListEquals(a, b Complex64ListList) bool                         { return a.Equals(b) }
func Complex128ListListEquals(a, b Complex128ListList) bool                       { return a.Equals(b) }
func AnyListListEquals(a, b AnyListList) bool                                     { return a.Equals(b) }
