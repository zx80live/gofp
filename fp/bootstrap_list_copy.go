// bootstrap_list_copy.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (l BoolList) Copy() BoolList {
	acc := NilBoolList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringList) Copy() StringList {
	acc := NilStringList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntList) Copy() IntList {
	acc := NilIntList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8List) Copy() Int8List {
	acc := NilInt8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16List) Copy() Int16List {
	acc := NilInt16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32List) Copy() Int32List {
	acc := NilInt32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64List) Copy() Int64List {
	acc := NilInt64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintList) Copy() UintList {
	acc := NilUintList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8List) Copy() Uint8List {
	acc := NilUint8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16List) Copy() Uint16List {
	acc := NilUint16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32List) Copy() Uint32List {
	acc := NilUint32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64List) Copy() Uint64List {
	acc := NilUint64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrList) Copy() UintptrList {
	acc := NilUintptrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteList) Copy() ByteList {
	acc := NilByteList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneList) Copy() RuneList {
	acc := NilRuneList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32List) Copy() Float32List {
	acc := NilFloat32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64List) Copy() Float64List {
	acc := NilFloat64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64List) Copy() Complex64List {
	acc := NilComplex64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128List) Copy() Complex128List {
	acc := NilComplex128List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyList) Copy() AnyList {
	acc := NilAnyList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionList) Copy() BoolOptionList {
	acc := NilBoolOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionList) Copy() StringOptionList {
	acc := NilStringOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionList) Copy() IntOptionList {
	acc := NilIntOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionList) Copy() Int8OptionList {
	acc := NilInt8OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionList) Copy() Int16OptionList {
	acc := NilInt16OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionList) Copy() Int32OptionList {
	acc := NilInt32OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionList) Copy() Int64OptionList {
	acc := NilInt64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionList) Copy() UintOptionList {
	acc := NilUintOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionList) Copy() Uint8OptionList {
	acc := NilUint8OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionList) Copy() Uint16OptionList {
	acc := NilUint16OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionList) Copy() Uint32OptionList {
	acc := NilUint32OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionList) Copy() Uint64OptionList {
	acc := NilUint64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionList) Copy() UintptrOptionList {
	acc := NilUintptrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionList) Copy() ByteOptionList {
	acc := NilByteOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionList) Copy() RuneOptionList {
	acc := NilRuneOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionList) Copy() Float32OptionList {
	acc := NilFloat32OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionList) Copy() Float64OptionList {
	acc := NilFloat64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionList) Copy() Complex64OptionList {
	acc := NilComplex64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionList) Copy() Complex128OptionList {
	acc := NilComplex128OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionList) Copy() AnyOptionList {
	acc := NilAnyOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrOptionList) Copy() BoolArrOptionList {
	acc := NilBoolArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrOptionList) Copy() StringArrOptionList {
	acc := NilStringArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrOptionList) Copy() IntArrOptionList {
	acc := NilIntArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrOptionList) Copy() Int8ArrOptionList {
	acc := NilInt8ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrOptionList) Copy() Int16ArrOptionList {
	acc := NilInt16ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrOptionList) Copy() Int32ArrOptionList {
	acc := NilInt32ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrOptionList) Copy() Int64ArrOptionList {
	acc := NilInt64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrOptionList) Copy() UintArrOptionList {
	acc := NilUintArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrOptionList) Copy() Uint8ArrOptionList {
	acc := NilUint8ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrOptionList) Copy() Uint16ArrOptionList {
	acc := NilUint16ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrOptionList) Copy() Uint32ArrOptionList {
	acc := NilUint32ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrOptionList) Copy() Uint64ArrOptionList {
	acc := NilUint64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrOptionList) Copy() UintptrArrOptionList {
	acc := NilUintptrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrOptionList) Copy() ByteArrOptionList {
	acc := NilByteArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrOptionList) Copy() RuneArrOptionList {
	acc := NilRuneArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrOptionList) Copy() Float32ArrOptionList {
	acc := NilFloat32ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrOptionList) Copy() Float64ArrOptionList {
	acc := NilFloat64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrOptionList) Copy() Complex64ArrOptionList {
	acc := NilComplex64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrOptionList) Copy() Complex128ArrOptionList {
	acc := NilComplex128ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrOptionList) Copy() AnyArrOptionList {
	acc := NilAnyArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrArrOptionList) Copy() BoolArrArrOptionList {
	acc := NilBoolArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrArrOptionList) Copy() StringArrArrOptionList {
	acc := NilStringArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrArrOptionList) Copy() IntArrArrOptionList {
	acc := NilIntArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrArrOptionList) Copy() Int8ArrArrOptionList {
	acc := NilInt8ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrArrOptionList) Copy() Int16ArrArrOptionList {
	acc := NilInt16ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrArrOptionList) Copy() Int32ArrArrOptionList {
	acc := NilInt32ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrArrOptionList) Copy() Int64ArrArrOptionList {
	acc := NilInt64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrArrOptionList) Copy() UintArrArrOptionList {
	acc := NilUintArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrArrOptionList) Copy() Uint8ArrArrOptionList {
	acc := NilUint8ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrArrOptionList) Copy() Uint16ArrArrOptionList {
	acc := NilUint16ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrArrOptionList) Copy() Uint32ArrArrOptionList {
	acc := NilUint32ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrArrOptionList) Copy() Uint64ArrArrOptionList {
	acc := NilUint64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrArrOptionList) Copy() UintptrArrArrOptionList {
	acc := NilUintptrArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrArrOptionList) Copy() ByteArrArrOptionList {
	acc := NilByteArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrArrOptionList) Copy() RuneArrArrOptionList {
	acc := NilRuneArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrArrOptionList) Copy() Float32ArrArrOptionList {
	acc := NilFloat32ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrArrOptionList) Copy() Float64ArrArrOptionList {
	acc := NilFloat64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrArrOptionList) Copy() Complex64ArrArrOptionList {
	acc := NilComplex64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrArrOptionList) Copy() Complex128ArrArrOptionList {
	acc := NilComplex128ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrArrOptionList) Copy() AnyArrArrOptionList {
	acc := NilAnyArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrOptionList) Copy() BoolOptionArrOptionList {
	acc := NilBoolOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrOptionList) Copy() StringOptionArrOptionList {
	acc := NilStringOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrOptionList) Copy() IntOptionArrOptionList {
	acc := NilIntOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrOptionList) Copy() Int8OptionArrOptionList {
	acc := NilInt8OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrOptionList) Copy() Int16OptionArrOptionList {
	acc := NilInt16OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrOptionList) Copy() Int32OptionArrOptionList {
	acc := NilInt32OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrOptionList) Copy() Int64OptionArrOptionList {
	acc := NilInt64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrOptionList) Copy() UintOptionArrOptionList {
	acc := NilUintOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrOptionList) Copy() Uint8OptionArrOptionList {
	acc := NilUint8OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrOptionList) Copy() Uint16OptionArrOptionList {
	acc := NilUint16OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrOptionList) Copy() Uint32OptionArrOptionList {
	acc := NilUint32OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrOptionList) Copy() Uint64OptionArrOptionList {
	acc := NilUint64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrOptionList) Copy() UintptrOptionArrOptionList {
	acc := NilUintptrOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrOptionList) Copy() ByteOptionArrOptionList {
	acc := NilByteOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrOptionList) Copy() RuneOptionArrOptionList {
	acc := NilRuneOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrOptionList) Copy() Float32OptionArrOptionList {
	acc := NilFloat32OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrOptionList) Copy() Float64OptionArrOptionList {
	acc := NilFloat64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrOptionList) Copy() Complex64OptionArrOptionList {
	acc := NilComplex64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrOptionList) Copy() Complex128OptionArrOptionList {
	acc := NilComplex128OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrOptionList) Copy() AnyOptionArrOptionList {
	acc := NilAnyOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionList) Copy() BoolListOptionList {
	acc := NilBoolListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionList) Copy() StringListOptionList {
	acc := NilStringListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionList) Copy() IntListOptionList {
	acc := NilIntListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionList) Copy() Int8ListOptionList {
	acc := NilInt8ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionList) Copy() Int16ListOptionList {
	acc := NilInt16ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionList) Copy() Int32ListOptionList {
	acc := NilInt32ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionList) Copy() Int64ListOptionList {
	acc := NilInt64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionList) Copy() UintListOptionList {
	acc := NilUintListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionList) Copy() Uint8ListOptionList {
	acc := NilUint8ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionList) Copy() Uint16ListOptionList {
	acc := NilUint16ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionList) Copy() Uint32ListOptionList {
	acc := NilUint32ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionList) Copy() Uint64ListOptionList {
	acc := NilUint64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionList) Copy() UintptrListOptionList {
	acc := NilUintptrListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionList) Copy() ByteListOptionList {
	acc := NilByteListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionList) Copy() RuneListOptionList {
	acc := NilRuneListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionList) Copy() Float32ListOptionList {
	acc := NilFloat32ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionList) Copy() Float64ListOptionList {
	acc := NilFloat64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionList) Copy() Complex64ListOptionList {
	acc := NilComplex64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionList) Copy() Complex128ListOptionList {
	acc := NilComplex128ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionList) Copy() AnyListOptionList {
	acc := NilAnyListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionOptionList) Copy() BoolOptionOptionList {
	acc := NilBoolOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionOptionList) Copy() StringOptionOptionList {
	acc := NilStringOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionOptionList) Copy() IntOptionOptionList {
	acc := NilIntOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionOptionList) Copy() Int8OptionOptionList {
	acc := NilInt8OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionOptionList) Copy() Int16OptionOptionList {
	acc := NilInt16OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionOptionList) Copy() Int32OptionOptionList {
	acc := NilInt32OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionOptionList) Copy() Int64OptionOptionList {
	acc := NilInt64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionOptionList) Copy() UintOptionOptionList {
	acc := NilUintOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionOptionList) Copy() Uint8OptionOptionList {
	acc := NilUint8OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionOptionList) Copy() Uint16OptionOptionList {
	acc := NilUint16OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionOptionList) Copy() Uint32OptionOptionList {
	acc := NilUint32OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionOptionList) Copy() Uint64OptionOptionList {
	acc := NilUint64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionOptionList) Copy() UintptrOptionOptionList {
	acc := NilUintptrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionOptionList) Copy() ByteOptionOptionList {
	acc := NilByteOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionOptionList) Copy() RuneOptionOptionList {
	acc := NilRuneOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionOptionList) Copy() Float32OptionOptionList {
	acc := NilFloat32OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionOptionList) Copy() Float64OptionOptionList {
	acc := NilFloat64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionOptionList) Copy() Complex64OptionOptionList {
	acc := NilComplex64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionOptionList) Copy() Complex128OptionOptionList {
	acc := NilComplex128OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionOptionList) Copy() AnyOptionOptionList {
	acc := NilAnyOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrOptionOptionList) Copy() BoolArrOptionOptionList {
	acc := NilBoolArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrOptionOptionList) Copy() StringArrOptionOptionList {
	acc := NilStringArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrOptionOptionList) Copy() IntArrOptionOptionList {
	acc := NilIntArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrOptionOptionList) Copy() Int8ArrOptionOptionList {
	acc := NilInt8ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrOptionOptionList) Copy() Int16ArrOptionOptionList {
	acc := NilInt16ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrOptionOptionList) Copy() Int32ArrOptionOptionList {
	acc := NilInt32ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrOptionOptionList) Copy() Int64ArrOptionOptionList {
	acc := NilInt64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrOptionOptionList) Copy() UintArrOptionOptionList {
	acc := NilUintArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrOptionOptionList) Copy() Uint8ArrOptionOptionList {
	acc := NilUint8ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrOptionOptionList) Copy() Uint16ArrOptionOptionList {
	acc := NilUint16ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrOptionOptionList) Copy() Uint32ArrOptionOptionList {
	acc := NilUint32ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrOptionOptionList) Copy() Uint64ArrOptionOptionList {
	acc := NilUint64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrOptionOptionList) Copy() UintptrArrOptionOptionList {
	acc := NilUintptrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrOptionOptionList) Copy() ByteArrOptionOptionList {
	acc := NilByteArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrOptionOptionList) Copy() RuneArrOptionOptionList {
	acc := NilRuneArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrOptionOptionList) Copy() Float32ArrOptionOptionList {
	acc := NilFloat32ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrOptionOptionList) Copy() Float64ArrOptionOptionList {
	acc := NilFloat64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrOptionOptionList) Copy() Complex64ArrOptionOptionList {
	acc := NilComplex64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrOptionOptionList) Copy() Complex128ArrOptionOptionList {
	acc := NilComplex128ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrOptionOptionList) Copy() AnyArrOptionOptionList {
	acc := NilAnyArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrArrOptionOptionList) Copy() BoolArrArrOptionOptionList {
	acc := NilBoolArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrArrOptionOptionList) Copy() StringArrArrOptionOptionList {
	acc := NilStringArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrArrOptionOptionList) Copy() IntArrArrOptionOptionList {
	acc := NilIntArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrArrOptionOptionList) Copy() Int8ArrArrOptionOptionList {
	acc := NilInt8ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrArrOptionOptionList) Copy() Int16ArrArrOptionOptionList {
	acc := NilInt16ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrArrOptionOptionList) Copy() Int32ArrArrOptionOptionList {
	acc := NilInt32ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrArrOptionOptionList) Copy() Int64ArrArrOptionOptionList {
	acc := NilInt64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrArrOptionOptionList) Copy() UintArrArrOptionOptionList {
	acc := NilUintArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrArrOptionOptionList) Copy() Uint8ArrArrOptionOptionList {
	acc := NilUint8ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrArrOptionOptionList) Copy() Uint16ArrArrOptionOptionList {
	acc := NilUint16ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrArrOptionOptionList) Copy() Uint32ArrArrOptionOptionList {
	acc := NilUint32ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrArrOptionOptionList) Copy() Uint64ArrArrOptionOptionList {
	acc := NilUint64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrArrOptionOptionList) Copy() UintptrArrArrOptionOptionList {
	acc := NilUintptrArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrArrOptionOptionList) Copy() ByteArrArrOptionOptionList {
	acc := NilByteArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrArrOptionOptionList) Copy() RuneArrArrOptionOptionList {
	acc := NilRuneArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrArrOptionOptionList) Copy() Float32ArrArrOptionOptionList {
	acc := NilFloat32ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrArrOptionOptionList) Copy() Float64ArrArrOptionOptionList {
	acc := NilFloat64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrArrOptionOptionList) Copy() Complex64ArrArrOptionOptionList {
	acc := NilComplex64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrArrOptionOptionList) Copy() Complex128ArrArrOptionOptionList {
	acc := NilComplex128ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrArrOptionOptionList) Copy() AnyArrArrOptionOptionList {
	acc := NilAnyArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrOptionOptionList) Copy() BoolOptionArrOptionOptionList {
	acc := NilBoolOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrOptionOptionList) Copy() StringOptionArrOptionOptionList {
	acc := NilStringOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrOptionOptionList) Copy() IntOptionArrOptionOptionList {
	acc := NilIntOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrOptionOptionList) Copy() Int8OptionArrOptionOptionList {
	acc := NilInt8OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrOptionOptionList) Copy() Int16OptionArrOptionOptionList {
	acc := NilInt16OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrOptionOptionList) Copy() Int32OptionArrOptionOptionList {
	acc := NilInt32OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrOptionOptionList) Copy() Int64OptionArrOptionOptionList {
	acc := NilInt64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrOptionOptionList) Copy() UintOptionArrOptionOptionList {
	acc := NilUintOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrOptionOptionList) Copy() Uint8OptionArrOptionOptionList {
	acc := NilUint8OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrOptionOptionList) Copy() Uint16OptionArrOptionOptionList {
	acc := NilUint16OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrOptionOptionList) Copy() Uint32OptionArrOptionOptionList {
	acc := NilUint32OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrOptionOptionList) Copy() Uint64OptionArrOptionOptionList {
	acc := NilUint64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrOptionOptionList) Copy() UintptrOptionArrOptionOptionList {
	acc := NilUintptrOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrOptionOptionList) Copy() ByteOptionArrOptionOptionList {
	acc := NilByteOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrOptionOptionList) Copy() RuneOptionArrOptionOptionList {
	acc := NilRuneOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrOptionOptionList) Copy() Float32OptionArrOptionOptionList {
	acc := NilFloat32OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrOptionOptionList) Copy() Float64OptionArrOptionOptionList {
	acc := NilFloat64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrOptionOptionList) Copy() Complex64OptionArrOptionOptionList {
	acc := NilComplex64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrOptionOptionList) Copy() Complex128OptionArrOptionOptionList {
	acc := NilComplex128OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrOptionOptionList) Copy() AnyOptionArrOptionOptionList {
	acc := NilAnyOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionOptionList) Copy() BoolListOptionOptionList {
	acc := NilBoolListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionOptionList) Copy() StringListOptionOptionList {
	acc := NilStringListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionOptionList) Copy() IntListOptionOptionList {
	acc := NilIntListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionOptionList) Copy() Int8ListOptionOptionList {
	acc := NilInt8ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionOptionList) Copy() Int16ListOptionOptionList {
	acc := NilInt16ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionOptionList) Copy() Int32ListOptionOptionList {
	acc := NilInt32ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionOptionList) Copy() Int64ListOptionOptionList {
	acc := NilInt64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionOptionList) Copy() UintListOptionOptionList {
	acc := NilUintListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionOptionList) Copy() Uint8ListOptionOptionList {
	acc := NilUint8ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionOptionList) Copy() Uint16ListOptionOptionList {
	acc := NilUint16ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionOptionList) Copy() Uint32ListOptionOptionList {
	acc := NilUint32ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionOptionList) Copy() Uint64ListOptionOptionList {
	acc := NilUint64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionOptionList) Copy() UintptrListOptionOptionList {
	acc := NilUintptrListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionOptionList) Copy() ByteListOptionOptionList {
	acc := NilByteListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionOptionList) Copy() RuneListOptionOptionList {
	acc := NilRuneListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionOptionList) Copy() Float32ListOptionOptionList {
	acc := NilFloat32ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionOptionList) Copy() Float64ListOptionOptionList {
	acc := NilFloat64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionOptionList) Copy() Complex64ListOptionOptionList {
	acc := NilComplex64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionOptionList) Copy() Complex128ListOptionOptionList {
	acc := NilComplex128ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionOptionList) Copy() AnyListOptionOptionList {
	acc := NilAnyListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrList) Copy() BoolArrList {
	acc := NilBoolArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrList) Copy() StringArrList {
	acc := NilStringArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrList) Copy() IntArrList {
	acc := NilIntArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrList) Copy() Int8ArrList {
	acc := NilInt8ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrList) Copy() Int16ArrList {
	acc := NilInt16ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrList) Copy() Int32ArrList {
	acc := NilInt32ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrList) Copy() Int64ArrList {
	acc := NilInt64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrList) Copy() UintArrList {
	acc := NilUintArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrList) Copy() Uint8ArrList {
	acc := NilUint8ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrList) Copy() Uint16ArrList {
	acc := NilUint16ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrList) Copy() Uint32ArrList {
	acc := NilUint32ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrList) Copy() Uint64ArrList {
	acc := NilUint64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrList) Copy() UintptrArrList {
	acc := NilUintptrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrList) Copy() ByteArrList {
	acc := NilByteArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrList) Copy() RuneArrList {
	acc := NilRuneArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrList) Copy() Float32ArrList {
	acc := NilFloat32ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrList) Copy() Float64ArrList {
	acc := NilFloat64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrList) Copy() Complex64ArrList {
	acc := NilComplex64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrList) Copy() Complex128ArrList {
	acc := NilComplex128ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrList) Copy() AnyArrList {
	acc := NilAnyArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrArrList) Copy() BoolArrArrList {
	acc := NilBoolArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrArrList) Copy() StringArrArrList {
	acc := NilStringArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrArrList) Copy() IntArrArrList {
	acc := NilIntArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrArrList) Copy() Int8ArrArrList {
	acc := NilInt8ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrArrList) Copy() Int16ArrArrList {
	acc := NilInt16ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrArrList) Copy() Int32ArrArrList {
	acc := NilInt32ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrArrList) Copy() Int64ArrArrList {
	acc := NilInt64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrArrList) Copy() UintArrArrList {
	acc := NilUintArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrArrList) Copy() Uint8ArrArrList {
	acc := NilUint8ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrArrList) Copy() Uint16ArrArrList {
	acc := NilUint16ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrArrList) Copy() Uint32ArrArrList {
	acc := NilUint32ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrArrList) Copy() Uint64ArrArrList {
	acc := NilUint64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrArrList) Copy() UintptrArrArrList {
	acc := NilUintptrArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrArrList) Copy() ByteArrArrList {
	acc := NilByteArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrArrList) Copy() RuneArrArrList {
	acc := NilRuneArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrArrList) Copy() Float32ArrArrList {
	acc := NilFloat32ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrArrList) Copy() Float64ArrArrList {
	acc := NilFloat64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrArrList) Copy() Complex64ArrArrList {
	acc := NilComplex64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrArrList) Copy() Complex128ArrArrList {
	acc := NilComplex128ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrArrList) Copy() AnyArrArrList {
	acc := NilAnyArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrList) Copy() BoolOptionArrList {
	acc := NilBoolOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrList) Copy() StringOptionArrList {
	acc := NilStringOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrList) Copy() IntOptionArrList {
	acc := NilIntOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrList) Copy() Int8OptionArrList {
	acc := NilInt8OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrList) Copy() Int16OptionArrList {
	acc := NilInt16OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrList) Copy() Int32OptionArrList {
	acc := NilInt32OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrList) Copy() Int64OptionArrList {
	acc := NilInt64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrList) Copy() UintOptionArrList {
	acc := NilUintOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrList) Copy() Uint8OptionArrList {
	acc := NilUint8OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrList) Copy() Uint16OptionArrList {
	acc := NilUint16OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrList) Copy() Uint32OptionArrList {
	acc := NilUint32OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrList) Copy() Uint64OptionArrList {
	acc := NilUint64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrList) Copy() UintptrOptionArrList {
	acc := NilUintptrOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrList) Copy() ByteOptionArrList {
	acc := NilByteOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrList) Copy() RuneOptionArrList {
	acc := NilRuneOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrList) Copy() Float32OptionArrList {
	acc := NilFloat32OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrList) Copy() Float64OptionArrList {
	acc := NilFloat64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrList) Copy() Complex64OptionArrList {
	acc := NilComplex64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrList) Copy() Complex128OptionArrList {
	acc := NilComplex128OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrList) Copy() AnyOptionArrList {
	acc := NilAnyOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListList) Copy() BoolListList {
	acc := NilBoolListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListList) Copy() StringListList {
	acc := NilStringListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListList) Copy() IntListList {
	acc := NilIntListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListList) Copy() Int8ListList {
	acc := NilInt8ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListList) Copy() Int16ListList {
	acc := NilInt16ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListList) Copy() Int32ListList {
	acc := NilInt32ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListList) Copy() Int64ListList {
	acc := NilInt64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListList) Copy() UintListList {
	acc := NilUintListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListList) Copy() Uint8ListList {
	acc := NilUint8ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListList) Copy() Uint16ListList {
	acc := NilUint16ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListList) Copy() Uint32ListList {
	acc := NilUint32ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListList) Copy() Uint64ListList {
	acc := NilUint64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListList) Copy() UintptrListList {
	acc := NilUintptrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListList) Copy() ByteListList {
	acc := NilByteListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListList) Copy() RuneListList {
	acc := NilRuneListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListList) Copy() Float32ListList {
	acc := NilFloat32ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListList) Copy() Float64ListList {
	acc := NilFloat64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListList) Copy() Complex64ListList {
	acc := NilComplex64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListList) Copy() Complex128ListList {
	acc := NilComplex128ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListList) Copy() AnyListList {
	acc := NilAnyListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionListList) Copy() BoolOptionListList {
	acc := NilBoolOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionListList) Copy() StringOptionListList {
	acc := NilStringOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionListList) Copy() IntOptionListList {
	acc := NilIntOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionListList) Copy() Int8OptionListList {
	acc := NilInt8OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionListList) Copy() Int16OptionListList {
	acc := NilInt16OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionListList) Copy() Int32OptionListList {
	acc := NilInt32OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionListList) Copy() Int64OptionListList {
	acc := NilInt64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionListList) Copy() UintOptionListList {
	acc := NilUintOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionListList) Copy() Uint8OptionListList {
	acc := NilUint8OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionListList) Copy() Uint16OptionListList {
	acc := NilUint16OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionListList) Copy() Uint32OptionListList {
	acc := NilUint32OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionListList) Copy() Uint64OptionListList {
	acc := NilUint64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionListList) Copy() UintptrOptionListList {
	acc := NilUintptrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionListList) Copy() ByteOptionListList {
	acc := NilByteOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionListList) Copy() RuneOptionListList {
	acc := NilRuneOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionListList) Copy() Float32OptionListList {
	acc := NilFloat32OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionListList) Copy() Float64OptionListList {
	acc := NilFloat64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionListList) Copy() Complex64OptionListList {
	acc := NilComplex64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionListList) Copy() Complex128OptionListList {
	acc := NilComplex128OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionListList) Copy() AnyOptionListList {
	acc := NilAnyOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrOptionListList) Copy() BoolArrOptionListList {
	acc := NilBoolArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrOptionListList) Copy() StringArrOptionListList {
	acc := NilStringArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrOptionListList) Copy() IntArrOptionListList {
	acc := NilIntArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrOptionListList) Copy() Int8ArrOptionListList {
	acc := NilInt8ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrOptionListList) Copy() Int16ArrOptionListList {
	acc := NilInt16ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrOptionListList) Copy() Int32ArrOptionListList {
	acc := NilInt32ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrOptionListList) Copy() Int64ArrOptionListList {
	acc := NilInt64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrOptionListList) Copy() UintArrOptionListList {
	acc := NilUintArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrOptionListList) Copy() Uint8ArrOptionListList {
	acc := NilUint8ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrOptionListList) Copy() Uint16ArrOptionListList {
	acc := NilUint16ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrOptionListList) Copy() Uint32ArrOptionListList {
	acc := NilUint32ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrOptionListList) Copy() Uint64ArrOptionListList {
	acc := NilUint64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrOptionListList) Copy() UintptrArrOptionListList {
	acc := NilUintptrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrOptionListList) Copy() ByteArrOptionListList {
	acc := NilByteArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrOptionListList) Copy() RuneArrOptionListList {
	acc := NilRuneArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrOptionListList) Copy() Float32ArrOptionListList {
	acc := NilFloat32ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrOptionListList) Copy() Float64ArrOptionListList {
	acc := NilFloat64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrOptionListList) Copy() Complex64ArrOptionListList {
	acc := NilComplex64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrOptionListList) Copy() Complex128ArrOptionListList {
	acc := NilComplex128ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrOptionListList) Copy() AnyArrOptionListList {
	acc := NilAnyArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrArrOptionListList) Copy() BoolArrArrOptionListList {
	acc := NilBoolArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrArrOptionListList) Copy() StringArrArrOptionListList {
	acc := NilStringArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrArrOptionListList) Copy() IntArrArrOptionListList {
	acc := NilIntArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrArrOptionListList) Copy() Int8ArrArrOptionListList {
	acc := NilInt8ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrArrOptionListList) Copy() Int16ArrArrOptionListList {
	acc := NilInt16ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrArrOptionListList) Copy() Int32ArrArrOptionListList {
	acc := NilInt32ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrArrOptionListList) Copy() Int64ArrArrOptionListList {
	acc := NilInt64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrArrOptionListList) Copy() UintArrArrOptionListList {
	acc := NilUintArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrArrOptionListList) Copy() Uint8ArrArrOptionListList {
	acc := NilUint8ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrArrOptionListList) Copy() Uint16ArrArrOptionListList {
	acc := NilUint16ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrArrOptionListList) Copy() Uint32ArrArrOptionListList {
	acc := NilUint32ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrArrOptionListList) Copy() Uint64ArrArrOptionListList {
	acc := NilUint64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrArrOptionListList) Copy() UintptrArrArrOptionListList {
	acc := NilUintptrArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrArrOptionListList) Copy() ByteArrArrOptionListList {
	acc := NilByteArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrArrOptionListList) Copy() RuneArrArrOptionListList {
	acc := NilRuneArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrArrOptionListList) Copy() Float32ArrArrOptionListList {
	acc := NilFloat32ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrArrOptionListList) Copy() Float64ArrArrOptionListList {
	acc := NilFloat64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrArrOptionListList) Copy() Complex64ArrArrOptionListList {
	acc := NilComplex64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrArrOptionListList) Copy() Complex128ArrArrOptionListList {
	acc := NilComplex128ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrArrOptionListList) Copy() AnyArrArrOptionListList {
	acc := NilAnyArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrOptionListList) Copy() BoolOptionArrOptionListList {
	acc := NilBoolOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrOptionListList) Copy() StringOptionArrOptionListList {
	acc := NilStringOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrOptionListList) Copy() IntOptionArrOptionListList {
	acc := NilIntOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrOptionListList) Copy() Int8OptionArrOptionListList {
	acc := NilInt8OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrOptionListList) Copy() Int16OptionArrOptionListList {
	acc := NilInt16OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrOptionListList) Copy() Int32OptionArrOptionListList {
	acc := NilInt32OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrOptionListList) Copy() Int64OptionArrOptionListList {
	acc := NilInt64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrOptionListList) Copy() UintOptionArrOptionListList {
	acc := NilUintOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrOptionListList) Copy() Uint8OptionArrOptionListList {
	acc := NilUint8OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrOptionListList) Copy() Uint16OptionArrOptionListList {
	acc := NilUint16OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrOptionListList) Copy() Uint32OptionArrOptionListList {
	acc := NilUint32OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrOptionListList) Copy() Uint64OptionArrOptionListList {
	acc := NilUint64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrOptionListList) Copy() UintptrOptionArrOptionListList {
	acc := NilUintptrOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrOptionListList) Copy() ByteOptionArrOptionListList {
	acc := NilByteOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrOptionListList) Copy() RuneOptionArrOptionListList {
	acc := NilRuneOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrOptionListList) Copy() Float32OptionArrOptionListList {
	acc := NilFloat32OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrOptionListList) Copy() Float64OptionArrOptionListList {
	acc := NilFloat64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrOptionListList) Copy() Complex64OptionArrOptionListList {
	acc := NilComplex64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrOptionListList) Copy() Complex128OptionArrOptionListList {
	acc := NilComplex128OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrOptionListList) Copy() AnyOptionArrOptionListList {
	acc := NilAnyOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionListList) Copy() BoolListOptionListList {
	acc := NilBoolListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionListList) Copy() StringListOptionListList {
	acc := NilStringListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionListList) Copy() IntListOptionListList {
	acc := NilIntListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionListList) Copy() Int8ListOptionListList {
	acc := NilInt8ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionListList) Copy() Int16ListOptionListList {
	acc := NilInt16ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionListList) Copy() Int32ListOptionListList {
	acc := NilInt32ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionListList) Copy() Int64ListOptionListList {
	acc := NilInt64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionListList) Copy() UintListOptionListList {
	acc := NilUintListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionListList) Copy() Uint8ListOptionListList {
	acc := NilUint8ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionListList) Copy() Uint16ListOptionListList {
	acc := NilUint16ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionListList) Copy() Uint32ListOptionListList {
	acc := NilUint32ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionListList) Copy() Uint64ListOptionListList {
	acc := NilUint64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionListList) Copy() UintptrListOptionListList {
	acc := NilUintptrListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionListList) Copy() ByteListOptionListList {
	acc := NilByteListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionListList) Copy() RuneListOptionListList {
	acc := NilRuneListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionListList) Copy() Float32ListOptionListList {
	acc := NilFloat32ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionListList) Copy() Float64ListOptionListList {
	acc := NilFloat64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionListList) Copy() Complex64ListOptionListList {
	acc := NilComplex64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionListList) Copy() Complex128ListOptionListList {
	acc := NilComplex128ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionListList) Copy() AnyListOptionListList {
	acc := NilAnyListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionOptionListList) Copy() BoolOptionOptionListList {
	acc := NilBoolOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionOptionListList) Copy() StringOptionOptionListList {
	acc := NilStringOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionOptionListList) Copy() IntOptionOptionListList {
	acc := NilIntOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionOptionListList) Copy() Int8OptionOptionListList {
	acc := NilInt8OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionOptionListList) Copy() Int16OptionOptionListList {
	acc := NilInt16OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionOptionListList) Copy() Int32OptionOptionListList {
	acc := NilInt32OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionOptionListList) Copy() Int64OptionOptionListList {
	acc := NilInt64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionOptionListList) Copy() UintOptionOptionListList {
	acc := NilUintOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionOptionListList) Copy() Uint8OptionOptionListList {
	acc := NilUint8OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionOptionListList) Copy() Uint16OptionOptionListList {
	acc := NilUint16OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionOptionListList) Copy() Uint32OptionOptionListList {
	acc := NilUint32OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionOptionListList) Copy() Uint64OptionOptionListList {
	acc := NilUint64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionOptionListList) Copy() UintptrOptionOptionListList {
	acc := NilUintptrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionOptionListList) Copy() ByteOptionOptionListList {
	acc := NilByteOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionOptionListList) Copy() RuneOptionOptionListList {
	acc := NilRuneOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionOptionListList) Copy() Float32OptionOptionListList {
	acc := NilFloat32OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionOptionListList) Copy() Float64OptionOptionListList {
	acc := NilFloat64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionOptionListList) Copy() Complex64OptionOptionListList {
	acc := NilComplex64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionOptionListList) Copy() Complex128OptionOptionListList {
	acc := NilComplex128OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionOptionListList) Copy() AnyOptionOptionListList {
	acc := NilAnyOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrOptionOptionListList) Copy() BoolArrOptionOptionListList {
	acc := NilBoolArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrOptionOptionListList) Copy() StringArrOptionOptionListList {
	acc := NilStringArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrOptionOptionListList) Copy() IntArrOptionOptionListList {
	acc := NilIntArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrOptionOptionListList) Copy() Int8ArrOptionOptionListList {
	acc := NilInt8ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrOptionOptionListList) Copy() Int16ArrOptionOptionListList {
	acc := NilInt16ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrOptionOptionListList) Copy() Int32ArrOptionOptionListList {
	acc := NilInt32ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrOptionOptionListList) Copy() Int64ArrOptionOptionListList {
	acc := NilInt64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrOptionOptionListList) Copy() UintArrOptionOptionListList {
	acc := NilUintArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrOptionOptionListList) Copy() Uint8ArrOptionOptionListList {
	acc := NilUint8ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrOptionOptionListList) Copy() Uint16ArrOptionOptionListList {
	acc := NilUint16ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrOptionOptionListList) Copy() Uint32ArrOptionOptionListList {
	acc := NilUint32ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrOptionOptionListList) Copy() Uint64ArrOptionOptionListList {
	acc := NilUint64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrOptionOptionListList) Copy() UintptrArrOptionOptionListList {
	acc := NilUintptrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrOptionOptionListList) Copy() ByteArrOptionOptionListList {
	acc := NilByteArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrOptionOptionListList) Copy() RuneArrOptionOptionListList {
	acc := NilRuneArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrOptionOptionListList) Copy() Float32ArrOptionOptionListList {
	acc := NilFloat32ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrOptionOptionListList) Copy() Float64ArrOptionOptionListList {
	acc := NilFloat64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrOptionOptionListList) Copy() Complex64ArrOptionOptionListList {
	acc := NilComplex64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrOptionOptionListList) Copy() Complex128ArrOptionOptionListList {
	acc := NilComplex128ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrOptionOptionListList) Copy() AnyArrOptionOptionListList {
	acc := NilAnyArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrArrOptionOptionListList) Copy() BoolArrArrOptionOptionListList {
	acc := NilBoolArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrArrOptionOptionListList) Copy() StringArrArrOptionOptionListList {
	acc := NilStringArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrArrOptionOptionListList) Copy() IntArrArrOptionOptionListList {
	acc := NilIntArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrArrOptionOptionListList) Copy() Int8ArrArrOptionOptionListList {
	acc := NilInt8ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrArrOptionOptionListList) Copy() Int16ArrArrOptionOptionListList {
	acc := NilInt16ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrArrOptionOptionListList) Copy() Int32ArrArrOptionOptionListList {
	acc := NilInt32ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrArrOptionOptionListList) Copy() Int64ArrArrOptionOptionListList {
	acc := NilInt64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrArrOptionOptionListList) Copy() UintArrArrOptionOptionListList {
	acc := NilUintArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrArrOptionOptionListList) Copy() Uint8ArrArrOptionOptionListList {
	acc := NilUint8ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrArrOptionOptionListList) Copy() Uint16ArrArrOptionOptionListList {
	acc := NilUint16ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrArrOptionOptionListList) Copy() Uint32ArrArrOptionOptionListList {
	acc := NilUint32ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrArrOptionOptionListList) Copy() Uint64ArrArrOptionOptionListList {
	acc := NilUint64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrArrOptionOptionListList) Copy() UintptrArrArrOptionOptionListList {
	acc := NilUintptrArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrArrOptionOptionListList) Copy() ByteArrArrOptionOptionListList {
	acc := NilByteArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrArrOptionOptionListList) Copy() RuneArrArrOptionOptionListList {
	acc := NilRuneArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrArrOptionOptionListList) Copy() Float32ArrArrOptionOptionListList {
	acc := NilFloat32ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrArrOptionOptionListList) Copy() Float64ArrArrOptionOptionListList {
	acc := NilFloat64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrArrOptionOptionListList) Copy() Complex64ArrArrOptionOptionListList {
	acc := NilComplex64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrArrOptionOptionListList) Copy() Complex128ArrArrOptionOptionListList {
	acc := NilComplex128ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrArrOptionOptionListList) Copy() AnyArrArrOptionOptionListList {
	acc := NilAnyArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrOptionOptionListList) Copy() BoolOptionArrOptionOptionListList {
	acc := NilBoolOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrOptionOptionListList) Copy() StringOptionArrOptionOptionListList {
	acc := NilStringOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrOptionOptionListList) Copy() IntOptionArrOptionOptionListList {
	acc := NilIntOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrOptionOptionListList) Copy() Int8OptionArrOptionOptionListList {
	acc := NilInt8OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrOptionOptionListList) Copy() Int16OptionArrOptionOptionListList {
	acc := NilInt16OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrOptionOptionListList) Copy() Int32OptionArrOptionOptionListList {
	acc := NilInt32OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrOptionOptionListList) Copy() Int64OptionArrOptionOptionListList {
	acc := NilInt64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrOptionOptionListList) Copy() UintOptionArrOptionOptionListList {
	acc := NilUintOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrOptionOptionListList) Copy() Uint8OptionArrOptionOptionListList {
	acc := NilUint8OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrOptionOptionListList) Copy() Uint16OptionArrOptionOptionListList {
	acc := NilUint16OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrOptionOptionListList) Copy() Uint32OptionArrOptionOptionListList {
	acc := NilUint32OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrOptionOptionListList) Copy() Uint64OptionArrOptionOptionListList {
	acc := NilUint64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrOptionOptionListList) Copy() UintptrOptionArrOptionOptionListList {
	acc := NilUintptrOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrOptionOptionListList) Copy() ByteOptionArrOptionOptionListList {
	acc := NilByteOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrOptionOptionListList) Copy() RuneOptionArrOptionOptionListList {
	acc := NilRuneOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrOptionOptionListList) Copy() Float32OptionArrOptionOptionListList {
	acc := NilFloat32OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrOptionOptionListList) Copy() Float64OptionArrOptionOptionListList {
	acc := NilFloat64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrOptionOptionListList) Copy() Complex64OptionArrOptionOptionListList {
	acc := NilComplex64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrOptionOptionListList) Copy() Complex128OptionArrOptionOptionListList {
	acc := NilComplex128OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrOptionOptionListList) Copy() AnyOptionArrOptionOptionListList {
	acc := NilAnyOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionOptionListList) Copy() BoolListOptionOptionListList {
	acc := NilBoolListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionOptionListList) Copy() StringListOptionOptionListList {
	acc := NilStringListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionOptionListList) Copy() IntListOptionOptionListList {
	acc := NilIntListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionOptionListList) Copy() Int8ListOptionOptionListList {
	acc := NilInt8ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionOptionListList) Copy() Int16ListOptionOptionListList {
	acc := NilInt16ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionOptionListList) Copy() Int32ListOptionOptionListList {
	acc := NilInt32ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionOptionListList) Copy() Int64ListOptionOptionListList {
	acc := NilInt64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionOptionListList) Copy() UintListOptionOptionListList {
	acc := NilUintListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionOptionListList) Copy() Uint8ListOptionOptionListList {
	acc := NilUint8ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionOptionListList) Copy() Uint16ListOptionOptionListList {
	acc := NilUint16ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionOptionListList) Copy() Uint32ListOptionOptionListList {
	acc := NilUint32ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionOptionListList) Copy() Uint64ListOptionOptionListList {
	acc := NilUint64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionOptionListList) Copy() UintptrListOptionOptionListList {
	acc := NilUintptrListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionOptionListList) Copy() ByteListOptionOptionListList {
	acc := NilByteListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionOptionListList) Copy() RuneListOptionOptionListList {
	acc := NilRuneListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionOptionListList) Copy() Float32ListOptionOptionListList {
	acc := NilFloat32ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionOptionListList) Copy() Float64ListOptionOptionListList {
	acc := NilFloat64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionOptionListList) Copy() Complex64ListOptionOptionListList {
	acc := NilComplex64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionOptionListList) Copy() Complex128ListOptionOptionListList {
	acc := NilComplex128ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionOptionListList) Copy() AnyListOptionOptionListList {
	acc := NilAnyListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrListList) Copy() BoolArrListList {
	acc := NilBoolArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrListList) Copy() StringArrListList {
	acc := NilStringArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrListList) Copy() IntArrListList {
	acc := NilIntArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrListList) Copy() Int8ArrListList {
	acc := NilInt8ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrListList) Copy() Int16ArrListList {
	acc := NilInt16ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrListList) Copy() Int32ArrListList {
	acc := NilInt32ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrListList) Copy() Int64ArrListList {
	acc := NilInt64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrListList) Copy() UintArrListList {
	acc := NilUintArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrListList) Copy() Uint8ArrListList {
	acc := NilUint8ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrListList) Copy() Uint16ArrListList {
	acc := NilUint16ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrListList) Copy() Uint32ArrListList {
	acc := NilUint32ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrListList) Copy() Uint64ArrListList {
	acc := NilUint64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrListList) Copy() UintptrArrListList {
	acc := NilUintptrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrListList) Copy() ByteArrListList {
	acc := NilByteArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrListList) Copy() RuneArrListList {
	acc := NilRuneArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrListList) Copy() Float32ArrListList {
	acc := NilFloat32ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrListList) Copy() Float64ArrListList {
	acc := NilFloat64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrListList) Copy() Complex64ArrListList {
	acc := NilComplex64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrListList) Copy() Complex128ArrListList {
	acc := NilComplex128ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrListList) Copy() AnyArrListList {
	acc := NilAnyArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrArrListList) Copy() BoolArrArrListList {
	acc := NilBoolArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrArrListList) Copy() StringArrArrListList {
	acc := NilStringArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrArrListList) Copy() IntArrArrListList {
	acc := NilIntArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrArrListList) Copy() Int8ArrArrListList {
	acc := NilInt8ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrArrListList) Copy() Int16ArrArrListList {
	acc := NilInt16ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrArrListList) Copy() Int32ArrArrListList {
	acc := NilInt32ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrArrListList) Copy() Int64ArrArrListList {
	acc := NilInt64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrArrListList) Copy() UintArrArrListList {
	acc := NilUintArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrArrListList) Copy() Uint8ArrArrListList {
	acc := NilUint8ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrArrListList) Copy() Uint16ArrArrListList {
	acc := NilUint16ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrArrListList) Copy() Uint32ArrArrListList {
	acc := NilUint32ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrArrListList) Copy() Uint64ArrArrListList {
	acc := NilUint64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrArrListList) Copy() UintptrArrArrListList {
	acc := NilUintptrArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrArrListList) Copy() ByteArrArrListList {
	acc := NilByteArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrArrListList) Copy() RuneArrArrListList {
	acc := NilRuneArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrArrListList) Copy() Float32ArrArrListList {
	acc := NilFloat32ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrArrListList) Copy() Float64ArrArrListList {
	acc := NilFloat64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrArrListList) Copy() Complex64ArrArrListList {
	acc := NilComplex64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrArrListList) Copy() Complex128ArrArrListList {
	acc := NilComplex128ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrArrListList) Copy() AnyArrArrListList {
	acc := NilAnyArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrListList) Copy() BoolOptionArrListList {
	acc := NilBoolOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrListList) Copy() StringOptionArrListList {
	acc := NilStringOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrListList) Copy() IntOptionArrListList {
	acc := NilIntOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrListList) Copy() Int8OptionArrListList {
	acc := NilInt8OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrListList) Copy() Int16OptionArrListList {
	acc := NilInt16OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrListList) Copy() Int32OptionArrListList {
	acc := NilInt32OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrListList) Copy() Int64OptionArrListList {
	acc := NilInt64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrListList) Copy() UintOptionArrListList {
	acc := NilUintOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrListList) Copy() Uint8OptionArrListList {
	acc := NilUint8OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrListList) Copy() Uint16OptionArrListList {
	acc := NilUint16OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrListList) Copy() Uint32OptionArrListList {
	acc := NilUint32OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrListList) Copy() Uint64OptionArrListList {
	acc := NilUint64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrListList) Copy() UintptrOptionArrListList {
	acc := NilUintptrOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrListList) Copy() ByteOptionArrListList {
	acc := NilByteOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrListList) Copy() RuneOptionArrListList {
	acc := NilRuneOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrListList) Copy() Float32OptionArrListList {
	acc := NilFloat32OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrListList) Copy() Float64OptionArrListList {
	acc := NilFloat64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrListList) Copy() Complex64OptionArrListList {
	acc := NilComplex64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrListList) Copy() Complex128OptionArrListList {
	acc := NilComplex128OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrListList) Copy() AnyOptionArrListList {
	acc := NilAnyOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
