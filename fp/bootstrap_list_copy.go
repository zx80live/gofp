// bootstrap_list_copy.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (l BoolList) Copy() BoolList {
	acc := NilBool
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringList) Copy() StringList {
	acc := NilString
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntList) Copy() IntList {
	acc := NilInt
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8List) Copy() Int8List {
	acc := NilInt8
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16List) Copy() Int16List {
	acc := NilInt16
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32List) Copy() Int32List {
	acc := NilInt32
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64List) Copy() Int64List {
	acc := NilInt64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintList) Copy() UintList {
	acc := NilUint
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8List) Copy() Uint8List {
	acc := NilUint8
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16List) Copy() Uint16List {
	acc := NilUint16
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32List) Copy() Uint32List {
	acc := NilUint32
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64List) Copy() Uint64List {
	acc := NilUint64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrList) Copy() UintptrList {
	acc := NilUintptr
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteList) Copy() ByteList {
	acc := NilByte
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneList) Copy() RuneList {
	acc := NilRune
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32List) Copy() Float32List {
	acc := NilFloat32
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64List) Copy() Float64List {
	acc := NilFloat64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64List) Copy() Complex64List {
	acc := NilComplex64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128List) Copy() Complex128List {
	acc := NilComplex128
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyList) Copy() AnyList {
	acc := NilAny
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionList) Copy() BoolOptionList {
	acc := NilBoolOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionList) Copy() StringOptionList {
	acc := NilStringOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionList) Copy() IntOptionList {
	acc := NilIntOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionList) Copy() Int8OptionList {
	acc := NilInt8Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionList) Copy() Int16OptionList {
	acc := NilInt16Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionList) Copy() Int32OptionList {
	acc := NilInt32Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionList) Copy() Int64OptionList {
	acc := NilInt64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionList) Copy() UintOptionList {
	acc := NilUintOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionList) Copy() Uint8OptionList {
	acc := NilUint8Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionList) Copy() Uint16OptionList {
	acc := NilUint16Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionList) Copy() Uint32OptionList {
	acc := NilUint32Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionList) Copy() Uint64OptionList {
	acc := NilUint64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionList) Copy() UintptrOptionList {
	acc := NilUintptrOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionList) Copy() ByteOptionList {
	acc := NilByteOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionList) Copy() RuneOptionList {
	acc := NilRuneOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionList) Copy() Float32OptionList {
	acc := NilFloat32Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionList) Copy() Float64OptionList {
	acc := NilFloat64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionList) Copy() Complex64OptionList {
	acc := NilComplex64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionList) Copy() Complex128OptionList {
	acc := NilComplex128Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionList) Copy() AnyOptionList {
	acc := NilAnyOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayOptionList) Copy() BoolArrayOptionList {
	acc := NilBoolArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayOptionList) Copy() StringArrayOptionList {
	acc := NilStringArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayOptionList) Copy() IntArrayOptionList {
	acc := NilIntArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayOptionList) Copy() Int8ArrayOptionList {
	acc := NilInt8ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayOptionList) Copy() Int16ArrayOptionList {
	acc := NilInt16ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayOptionList) Copy() Int32ArrayOptionList {
	acc := NilInt32ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayOptionList) Copy() Int64ArrayOptionList {
	acc := NilInt64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayOptionList) Copy() UintArrayOptionList {
	acc := NilUintArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayOptionList) Copy() Uint8ArrayOptionList {
	acc := NilUint8ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayOptionList) Copy() Uint16ArrayOptionList {
	acc := NilUint16ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayOptionList) Copy() Uint32ArrayOptionList {
	acc := NilUint32ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayOptionList) Copy() Uint64ArrayOptionList {
	acc := NilUint64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayOptionList) Copy() UintptrArrayOptionList {
	acc := NilUintptrArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayOptionList) Copy() ByteArrayOptionList {
	acc := NilByteArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayOptionList) Copy() RuneArrayOptionList {
	acc := NilRuneArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayOptionList) Copy() Float32ArrayOptionList {
	acc := NilFloat32ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayOptionList) Copy() Float64ArrayOptionList {
	acc := NilFloat64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayOptionList) Copy() Complex64ArrayOptionList {
	acc := NilComplex64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayOptionList) Copy() Complex128ArrayOptionList {
	acc := NilComplex128ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayOptionList) Copy() AnyArrayOptionList {
	acc := NilAnyArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayArrayOptionList) Copy() BoolArrayArrayOptionList {
	acc := NilBoolArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayArrayOptionList) Copy() StringArrayArrayOptionList {
	acc := NilStringArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayArrayOptionList) Copy() IntArrayArrayOptionList {
	acc := NilIntArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayArrayOptionList) Copy() Int8ArrayArrayOptionList {
	acc := NilInt8ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayArrayOptionList) Copy() Int16ArrayArrayOptionList {
	acc := NilInt16ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayArrayOptionList) Copy() Int32ArrayArrayOptionList {
	acc := NilInt32ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayArrayOptionList) Copy() Int64ArrayArrayOptionList {
	acc := NilInt64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayArrayOptionList) Copy() UintArrayArrayOptionList {
	acc := NilUintArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayArrayOptionList) Copy() Uint8ArrayArrayOptionList {
	acc := NilUint8ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayArrayOptionList) Copy() Uint16ArrayArrayOptionList {
	acc := NilUint16ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayArrayOptionList) Copy() Uint32ArrayArrayOptionList {
	acc := NilUint32ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayArrayOptionList) Copy() Uint64ArrayArrayOptionList {
	acc := NilUint64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayArrayOptionList) Copy() UintptrArrayArrayOptionList {
	acc := NilUintptrArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayArrayOptionList) Copy() ByteArrayArrayOptionList {
	acc := NilByteArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayArrayOptionList) Copy() RuneArrayArrayOptionList {
	acc := NilRuneArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayArrayOptionList) Copy() Float32ArrayArrayOptionList {
	acc := NilFloat32ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayArrayOptionList) Copy() Float64ArrayArrayOptionList {
	acc := NilFloat64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayArrayOptionList) Copy() Complex64ArrayArrayOptionList {
	acc := NilComplex64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayArrayOptionList) Copy() Complex128ArrayArrayOptionList {
	acc := NilComplex128ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayArrayOptionList) Copy() AnyArrayArrayOptionList {
	acc := NilAnyArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrayOptionList) Copy() BoolOptionArrayOptionList {
	acc := NilBoolOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrayOptionList) Copy() StringOptionArrayOptionList {
	acc := NilStringOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrayOptionList) Copy() IntOptionArrayOptionList {
	acc := NilIntOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrayOptionList) Copy() Int8OptionArrayOptionList {
	acc := NilInt8OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrayOptionList) Copy() Int16OptionArrayOptionList {
	acc := NilInt16OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrayOptionList) Copy() Int32OptionArrayOptionList {
	acc := NilInt32OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrayOptionList) Copy() Int64OptionArrayOptionList {
	acc := NilInt64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrayOptionList) Copy() UintOptionArrayOptionList {
	acc := NilUintOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrayOptionList) Copy() Uint8OptionArrayOptionList {
	acc := NilUint8OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrayOptionList) Copy() Uint16OptionArrayOptionList {
	acc := NilUint16OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrayOptionList) Copy() Uint32OptionArrayOptionList {
	acc := NilUint32OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrayOptionList) Copy() Uint64OptionArrayOptionList {
	acc := NilUint64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrayOptionList) Copy() UintptrOptionArrayOptionList {
	acc := NilUintptrOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrayOptionList) Copy() ByteOptionArrayOptionList {
	acc := NilByteOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrayOptionList) Copy() RuneOptionArrayOptionList {
	acc := NilRuneOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrayOptionList) Copy() Float32OptionArrayOptionList {
	acc := NilFloat32OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrayOptionList) Copy() Float64OptionArrayOptionList {
	acc := NilFloat64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrayOptionList) Copy() Complex64OptionArrayOptionList {
	acc := NilComplex64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrayOptionList) Copy() Complex128OptionArrayOptionList {
	acc := NilComplex128OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrayOptionList) Copy() AnyOptionArrayOptionList {
	acc := NilAnyOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionList) Copy() BoolListOptionList {
	acc := NilBoolListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionList) Copy() StringListOptionList {
	acc := NilStringListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionList) Copy() IntListOptionList {
	acc := NilIntListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionList) Copy() Int8ListOptionList {
	acc := NilInt8ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionList) Copy() Int16ListOptionList {
	acc := NilInt16ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionList) Copy() Int32ListOptionList {
	acc := NilInt32ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionList) Copy() Int64ListOptionList {
	acc := NilInt64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionList) Copy() UintListOptionList {
	acc := NilUintListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionList) Copy() Uint8ListOptionList {
	acc := NilUint8ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionList) Copy() Uint16ListOptionList {
	acc := NilUint16ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionList) Copy() Uint32ListOptionList {
	acc := NilUint32ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionList) Copy() Uint64ListOptionList {
	acc := NilUint64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionList) Copy() UintptrListOptionList {
	acc := NilUintptrListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionList) Copy() ByteListOptionList {
	acc := NilByteListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionList) Copy() RuneListOptionList {
	acc := NilRuneListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionList) Copy() Float32ListOptionList {
	acc := NilFloat32ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionList) Copy() Float64ListOptionList {
	acc := NilFloat64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionList) Copy() Complex64ListOptionList {
	acc := NilComplex64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionList) Copy() Complex128ListOptionList {
	acc := NilComplex128ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionList) Copy() AnyListOptionList {
	acc := NilAnyListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionOptionList) Copy() BoolOptionOptionList {
	acc := NilBoolOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionOptionList) Copy() StringOptionOptionList {
	acc := NilStringOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionOptionList) Copy() IntOptionOptionList {
	acc := NilIntOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionOptionList) Copy() Int8OptionOptionList {
	acc := NilInt8OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionOptionList) Copy() Int16OptionOptionList {
	acc := NilInt16OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionOptionList) Copy() Int32OptionOptionList {
	acc := NilInt32OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionOptionList) Copy() Int64OptionOptionList {
	acc := NilInt64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionOptionList) Copy() UintOptionOptionList {
	acc := NilUintOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionOptionList) Copy() Uint8OptionOptionList {
	acc := NilUint8OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionOptionList) Copy() Uint16OptionOptionList {
	acc := NilUint16OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionOptionList) Copy() Uint32OptionOptionList {
	acc := NilUint32OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionOptionList) Copy() Uint64OptionOptionList {
	acc := NilUint64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionOptionList) Copy() UintptrOptionOptionList {
	acc := NilUintptrOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionOptionList) Copy() ByteOptionOptionList {
	acc := NilByteOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionOptionList) Copy() RuneOptionOptionList {
	acc := NilRuneOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionOptionList) Copy() Float32OptionOptionList {
	acc := NilFloat32OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionOptionList) Copy() Float64OptionOptionList {
	acc := NilFloat64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionOptionList) Copy() Complex64OptionOptionList {
	acc := NilComplex64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionOptionList) Copy() Complex128OptionOptionList {
	acc := NilComplex128OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionOptionList) Copy() AnyOptionOptionList {
	acc := NilAnyOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayOptionOptionList) Copy() BoolArrayOptionOptionList {
	acc := NilBoolArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayOptionOptionList) Copy() StringArrayOptionOptionList {
	acc := NilStringArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayOptionOptionList) Copy() IntArrayOptionOptionList {
	acc := NilIntArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayOptionOptionList) Copy() Int8ArrayOptionOptionList {
	acc := NilInt8ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayOptionOptionList) Copy() Int16ArrayOptionOptionList {
	acc := NilInt16ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayOptionOptionList) Copy() Int32ArrayOptionOptionList {
	acc := NilInt32ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayOptionOptionList) Copy() Int64ArrayOptionOptionList {
	acc := NilInt64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayOptionOptionList) Copy() UintArrayOptionOptionList {
	acc := NilUintArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayOptionOptionList) Copy() Uint8ArrayOptionOptionList {
	acc := NilUint8ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayOptionOptionList) Copy() Uint16ArrayOptionOptionList {
	acc := NilUint16ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayOptionOptionList) Copy() Uint32ArrayOptionOptionList {
	acc := NilUint32ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayOptionOptionList) Copy() Uint64ArrayOptionOptionList {
	acc := NilUint64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayOptionOptionList) Copy() UintptrArrayOptionOptionList {
	acc := NilUintptrArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayOptionOptionList) Copy() ByteArrayOptionOptionList {
	acc := NilByteArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayOptionOptionList) Copy() RuneArrayOptionOptionList {
	acc := NilRuneArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayOptionOptionList) Copy() Float32ArrayOptionOptionList {
	acc := NilFloat32ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayOptionOptionList) Copy() Float64ArrayOptionOptionList {
	acc := NilFloat64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayOptionOptionList) Copy() Complex64ArrayOptionOptionList {
	acc := NilComplex64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayOptionOptionList) Copy() Complex128ArrayOptionOptionList {
	acc := NilComplex128ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayOptionOptionList) Copy() AnyArrayOptionOptionList {
	acc := NilAnyArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayArrayOptionOptionList) Copy() BoolArrayArrayOptionOptionList {
	acc := NilBoolArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayArrayOptionOptionList) Copy() StringArrayArrayOptionOptionList {
	acc := NilStringArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayArrayOptionOptionList) Copy() IntArrayArrayOptionOptionList {
	acc := NilIntArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayArrayOptionOptionList) Copy() Int8ArrayArrayOptionOptionList {
	acc := NilInt8ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayArrayOptionOptionList) Copy() Int16ArrayArrayOptionOptionList {
	acc := NilInt16ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayArrayOptionOptionList) Copy() Int32ArrayArrayOptionOptionList {
	acc := NilInt32ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayArrayOptionOptionList) Copy() Int64ArrayArrayOptionOptionList {
	acc := NilInt64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayArrayOptionOptionList) Copy() UintArrayArrayOptionOptionList {
	acc := NilUintArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayArrayOptionOptionList) Copy() Uint8ArrayArrayOptionOptionList {
	acc := NilUint8ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayArrayOptionOptionList) Copy() Uint16ArrayArrayOptionOptionList {
	acc := NilUint16ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayArrayOptionOptionList) Copy() Uint32ArrayArrayOptionOptionList {
	acc := NilUint32ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayArrayOptionOptionList) Copy() Uint64ArrayArrayOptionOptionList {
	acc := NilUint64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayArrayOptionOptionList) Copy() UintptrArrayArrayOptionOptionList {
	acc := NilUintptrArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayArrayOptionOptionList) Copy() ByteArrayArrayOptionOptionList {
	acc := NilByteArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayArrayOptionOptionList) Copy() RuneArrayArrayOptionOptionList {
	acc := NilRuneArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayArrayOptionOptionList) Copy() Float32ArrayArrayOptionOptionList {
	acc := NilFloat32ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayArrayOptionOptionList) Copy() Float64ArrayArrayOptionOptionList {
	acc := NilFloat64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayArrayOptionOptionList) Copy() Complex64ArrayArrayOptionOptionList {
	acc := NilComplex64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayArrayOptionOptionList) Copy() Complex128ArrayArrayOptionOptionList {
	acc := NilComplex128ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayArrayOptionOptionList) Copy() AnyArrayArrayOptionOptionList {
	acc := NilAnyArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrayOptionOptionList) Copy() BoolOptionArrayOptionOptionList {
	acc := NilBoolOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrayOptionOptionList) Copy() StringOptionArrayOptionOptionList {
	acc := NilStringOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrayOptionOptionList) Copy() IntOptionArrayOptionOptionList {
	acc := NilIntOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrayOptionOptionList) Copy() Int8OptionArrayOptionOptionList {
	acc := NilInt8OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrayOptionOptionList) Copy() Int16OptionArrayOptionOptionList {
	acc := NilInt16OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrayOptionOptionList) Copy() Int32OptionArrayOptionOptionList {
	acc := NilInt32OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrayOptionOptionList) Copy() Int64OptionArrayOptionOptionList {
	acc := NilInt64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrayOptionOptionList) Copy() UintOptionArrayOptionOptionList {
	acc := NilUintOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrayOptionOptionList) Copy() Uint8OptionArrayOptionOptionList {
	acc := NilUint8OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrayOptionOptionList) Copy() Uint16OptionArrayOptionOptionList {
	acc := NilUint16OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrayOptionOptionList) Copy() Uint32OptionArrayOptionOptionList {
	acc := NilUint32OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrayOptionOptionList) Copy() Uint64OptionArrayOptionOptionList {
	acc := NilUint64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrayOptionOptionList) Copy() UintptrOptionArrayOptionOptionList {
	acc := NilUintptrOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrayOptionOptionList) Copy() ByteOptionArrayOptionOptionList {
	acc := NilByteOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrayOptionOptionList) Copy() RuneOptionArrayOptionOptionList {
	acc := NilRuneOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrayOptionOptionList) Copy() Float32OptionArrayOptionOptionList {
	acc := NilFloat32OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrayOptionOptionList) Copy() Float64OptionArrayOptionOptionList {
	acc := NilFloat64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrayOptionOptionList) Copy() Complex64OptionArrayOptionOptionList {
	acc := NilComplex64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrayOptionOptionList) Copy() Complex128OptionArrayOptionOptionList {
	acc := NilComplex128OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrayOptionOptionList) Copy() AnyOptionArrayOptionOptionList {
	acc := NilAnyOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionOptionList) Copy() BoolListOptionOptionList {
	acc := NilBoolListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionOptionList) Copy() StringListOptionOptionList {
	acc := NilStringListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionOptionList) Copy() IntListOptionOptionList {
	acc := NilIntListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionOptionList) Copy() Int8ListOptionOptionList {
	acc := NilInt8ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionOptionList) Copy() Int16ListOptionOptionList {
	acc := NilInt16ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionOptionList) Copy() Int32ListOptionOptionList {
	acc := NilInt32ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionOptionList) Copy() Int64ListOptionOptionList {
	acc := NilInt64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionOptionList) Copy() UintListOptionOptionList {
	acc := NilUintListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionOptionList) Copy() Uint8ListOptionOptionList {
	acc := NilUint8ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionOptionList) Copy() Uint16ListOptionOptionList {
	acc := NilUint16ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionOptionList) Copy() Uint32ListOptionOptionList {
	acc := NilUint32ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionOptionList) Copy() Uint64ListOptionOptionList {
	acc := NilUint64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionOptionList) Copy() UintptrListOptionOptionList {
	acc := NilUintptrListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionOptionList) Copy() ByteListOptionOptionList {
	acc := NilByteListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionOptionList) Copy() RuneListOptionOptionList {
	acc := NilRuneListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionOptionList) Copy() Float32ListOptionOptionList {
	acc := NilFloat32ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionOptionList) Copy() Float64ListOptionOptionList {
	acc := NilFloat64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionOptionList) Copy() Complex64ListOptionOptionList {
	acc := NilComplex64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionOptionList) Copy() Complex128ListOptionOptionList {
	acc := NilComplex128ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionOptionList) Copy() AnyListOptionOptionList {
	acc := NilAnyListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionOptionOptionList) Copy() BoolOptionOptionOptionList {
	acc := NilBoolOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionOptionOptionList) Copy() StringOptionOptionOptionList {
	acc := NilStringOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionOptionOptionList) Copy() IntOptionOptionOptionList {
	acc := NilIntOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionOptionOptionList) Copy() Int8OptionOptionOptionList {
	acc := NilInt8OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionOptionOptionList) Copy() Int16OptionOptionOptionList {
	acc := NilInt16OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionOptionOptionList) Copy() Int32OptionOptionOptionList {
	acc := NilInt32OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionOptionOptionList) Copy() Int64OptionOptionOptionList {
	acc := NilInt64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionOptionOptionList) Copy() UintOptionOptionOptionList {
	acc := NilUintOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionOptionOptionList) Copy() Uint8OptionOptionOptionList {
	acc := NilUint8OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionOptionOptionList) Copy() Uint16OptionOptionOptionList {
	acc := NilUint16OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionOptionOptionList) Copy() Uint32OptionOptionOptionList {
	acc := NilUint32OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionOptionOptionList) Copy() Uint64OptionOptionOptionList {
	acc := NilUint64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionOptionOptionList) Copy() UintptrOptionOptionOptionList {
	acc := NilUintptrOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionOptionOptionList) Copy() ByteOptionOptionOptionList {
	acc := NilByteOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionOptionOptionList) Copy() RuneOptionOptionOptionList {
	acc := NilRuneOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionOptionOptionList) Copy() Float32OptionOptionOptionList {
	acc := NilFloat32OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionOptionOptionList) Copy() Float64OptionOptionOptionList {
	acc := NilFloat64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionOptionOptionList) Copy() Complex64OptionOptionOptionList {
	acc := NilComplex64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionOptionOptionList) Copy() Complex128OptionOptionOptionList {
	acc := NilComplex128OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionOptionOptionList) Copy() AnyOptionOptionOptionList {
	acc := NilAnyOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayOptionOptionOptionList) Copy() BoolArrayOptionOptionOptionList {
	acc := NilBoolArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayOptionOptionOptionList) Copy() StringArrayOptionOptionOptionList {
	acc := NilStringArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayOptionOptionOptionList) Copy() IntArrayOptionOptionOptionList {
	acc := NilIntArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayOptionOptionOptionList) Copy() Int8ArrayOptionOptionOptionList {
	acc := NilInt8ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayOptionOptionOptionList) Copy() Int16ArrayOptionOptionOptionList {
	acc := NilInt16ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayOptionOptionOptionList) Copy() Int32ArrayOptionOptionOptionList {
	acc := NilInt32ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayOptionOptionOptionList) Copy() Int64ArrayOptionOptionOptionList {
	acc := NilInt64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayOptionOptionOptionList) Copy() UintArrayOptionOptionOptionList {
	acc := NilUintArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayOptionOptionOptionList) Copy() Uint8ArrayOptionOptionOptionList {
	acc := NilUint8ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayOptionOptionOptionList) Copy() Uint16ArrayOptionOptionOptionList {
	acc := NilUint16ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayOptionOptionOptionList) Copy() Uint32ArrayOptionOptionOptionList {
	acc := NilUint32ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayOptionOptionOptionList) Copy() Uint64ArrayOptionOptionOptionList {
	acc := NilUint64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayOptionOptionOptionList) Copy() UintptrArrayOptionOptionOptionList {
	acc := NilUintptrArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayOptionOptionOptionList) Copy() ByteArrayOptionOptionOptionList {
	acc := NilByteArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayOptionOptionOptionList) Copy() RuneArrayOptionOptionOptionList {
	acc := NilRuneArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayOptionOptionOptionList) Copy() Float32ArrayOptionOptionOptionList {
	acc := NilFloat32ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayOptionOptionOptionList) Copy() Float64ArrayOptionOptionOptionList {
	acc := NilFloat64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayOptionOptionOptionList) Copy() Complex64ArrayOptionOptionOptionList {
	acc := NilComplex64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayOptionOptionOptionList) Copy() Complex128ArrayOptionOptionOptionList {
	acc := NilComplex128ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayOptionOptionOptionList) Copy() AnyArrayOptionOptionOptionList {
	acc := NilAnyArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayArrayOptionOptionOptionList) Copy() BoolArrayArrayOptionOptionOptionList {
	acc := NilBoolArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayArrayOptionOptionOptionList) Copy() StringArrayArrayOptionOptionOptionList {
	acc := NilStringArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayArrayOptionOptionOptionList) Copy() IntArrayArrayOptionOptionOptionList {
	acc := NilIntArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayArrayOptionOptionOptionList) Copy() Int8ArrayArrayOptionOptionOptionList {
	acc := NilInt8ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayArrayOptionOptionOptionList) Copy() Int16ArrayArrayOptionOptionOptionList {
	acc := NilInt16ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayArrayOptionOptionOptionList) Copy() Int32ArrayArrayOptionOptionOptionList {
	acc := NilInt32ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayArrayOptionOptionOptionList) Copy() Int64ArrayArrayOptionOptionOptionList {
	acc := NilInt64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayArrayOptionOptionOptionList) Copy() UintArrayArrayOptionOptionOptionList {
	acc := NilUintArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayArrayOptionOptionOptionList) Copy() Uint8ArrayArrayOptionOptionOptionList {
	acc := NilUint8ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayArrayOptionOptionOptionList) Copy() Uint16ArrayArrayOptionOptionOptionList {
	acc := NilUint16ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayArrayOptionOptionOptionList) Copy() Uint32ArrayArrayOptionOptionOptionList {
	acc := NilUint32ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayArrayOptionOptionOptionList) Copy() Uint64ArrayArrayOptionOptionOptionList {
	acc := NilUint64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayArrayOptionOptionOptionList) Copy() UintptrArrayArrayOptionOptionOptionList {
	acc := NilUintptrArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayArrayOptionOptionOptionList) Copy() ByteArrayArrayOptionOptionOptionList {
	acc := NilByteArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayArrayOptionOptionOptionList) Copy() RuneArrayArrayOptionOptionOptionList {
	acc := NilRuneArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayArrayOptionOptionOptionList) Copy() Float32ArrayArrayOptionOptionOptionList {
	acc := NilFloat32ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayArrayOptionOptionOptionList) Copy() Float64ArrayArrayOptionOptionOptionList {
	acc := NilFloat64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayArrayOptionOptionOptionList) Copy() Complex64ArrayArrayOptionOptionOptionList {
	acc := NilComplex64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayArrayOptionOptionOptionList) Copy() Complex128ArrayArrayOptionOptionOptionList {
	acc := NilComplex128ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayArrayOptionOptionOptionList) Copy() AnyArrayArrayOptionOptionOptionList {
	acc := NilAnyArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrayOptionOptionOptionList) Copy() BoolOptionArrayOptionOptionOptionList {
	acc := NilBoolOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrayOptionOptionOptionList) Copy() StringOptionArrayOptionOptionOptionList {
	acc := NilStringOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrayOptionOptionOptionList) Copy() IntOptionArrayOptionOptionOptionList {
	acc := NilIntOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrayOptionOptionOptionList) Copy() Int8OptionArrayOptionOptionOptionList {
	acc := NilInt8OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrayOptionOptionOptionList) Copy() Int16OptionArrayOptionOptionOptionList {
	acc := NilInt16OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrayOptionOptionOptionList) Copy() Int32OptionArrayOptionOptionOptionList {
	acc := NilInt32OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrayOptionOptionOptionList) Copy() Int64OptionArrayOptionOptionOptionList {
	acc := NilInt64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrayOptionOptionOptionList) Copy() UintOptionArrayOptionOptionOptionList {
	acc := NilUintOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrayOptionOptionOptionList) Copy() Uint8OptionArrayOptionOptionOptionList {
	acc := NilUint8OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrayOptionOptionOptionList) Copy() Uint16OptionArrayOptionOptionOptionList {
	acc := NilUint16OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrayOptionOptionOptionList) Copy() Uint32OptionArrayOptionOptionOptionList {
	acc := NilUint32OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrayOptionOptionOptionList) Copy() Uint64OptionArrayOptionOptionOptionList {
	acc := NilUint64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrayOptionOptionOptionList) Copy() UintptrOptionArrayOptionOptionOptionList {
	acc := NilUintptrOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrayOptionOptionOptionList) Copy() ByteOptionArrayOptionOptionOptionList {
	acc := NilByteOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrayOptionOptionOptionList) Copy() RuneOptionArrayOptionOptionOptionList {
	acc := NilRuneOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrayOptionOptionOptionList) Copy() Float32OptionArrayOptionOptionOptionList {
	acc := NilFloat32OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrayOptionOptionOptionList) Copy() Float64OptionArrayOptionOptionOptionList {
	acc := NilFloat64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrayOptionOptionOptionList) Copy() Complex64OptionArrayOptionOptionOptionList {
	acc := NilComplex64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrayOptionOptionOptionList) Copy() Complex128OptionArrayOptionOptionOptionList {
	acc := NilComplex128OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrayOptionOptionOptionList) Copy() AnyOptionArrayOptionOptionOptionList {
	acc := NilAnyOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListOptionOptionOptionList) Copy() BoolListOptionOptionOptionList {
	acc := NilBoolListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListOptionOptionOptionList) Copy() StringListOptionOptionOptionList {
	acc := NilStringListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListOptionOptionOptionList) Copy() IntListOptionOptionOptionList {
	acc := NilIntListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListOptionOptionOptionList) Copy() Int8ListOptionOptionOptionList {
	acc := NilInt8ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListOptionOptionOptionList) Copy() Int16ListOptionOptionOptionList {
	acc := NilInt16ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListOptionOptionOptionList) Copy() Int32ListOptionOptionOptionList {
	acc := NilInt32ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListOptionOptionOptionList) Copy() Int64ListOptionOptionOptionList {
	acc := NilInt64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListOptionOptionOptionList) Copy() UintListOptionOptionOptionList {
	acc := NilUintListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListOptionOptionOptionList) Copy() Uint8ListOptionOptionOptionList {
	acc := NilUint8ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListOptionOptionOptionList) Copy() Uint16ListOptionOptionOptionList {
	acc := NilUint16ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListOptionOptionOptionList) Copy() Uint32ListOptionOptionOptionList {
	acc := NilUint32ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListOptionOptionOptionList) Copy() Uint64ListOptionOptionOptionList {
	acc := NilUint64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListOptionOptionOptionList) Copy() UintptrListOptionOptionOptionList {
	acc := NilUintptrListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListOptionOptionOptionList) Copy() ByteListOptionOptionOptionList {
	acc := NilByteListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListOptionOptionOptionList) Copy() RuneListOptionOptionOptionList {
	acc := NilRuneListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListOptionOptionOptionList) Copy() Float32ListOptionOptionOptionList {
	acc := NilFloat32ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListOptionOptionOptionList) Copy() Float64ListOptionOptionOptionList {
	acc := NilFloat64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListOptionOptionOptionList) Copy() Complex64ListOptionOptionOptionList {
	acc := NilComplex64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListOptionOptionOptionList) Copy() Complex128ListOptionOptionOptionList {
	acc := NilComplex128ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListOptionOptionOptionList) Copy() AnyListOptionOptionOptionList {
	acc := NilAnyListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayList) Copy() BoolArrayList {
	acc := NilBoolArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayList) Copy() StringArrayList {
	acc := NilStringArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayList) Copy() IntArrayList {
	acc := NilIntArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayList) Copy() Int8ArrayList {
	acc := NilInt8Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayList) Copy() Int16ArrayList {
	acc := NilInt16Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayList) Copy() Int32ArrayList {
	acc := NilInt32Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayList) Copy() Int64ArrayList {
	acc := NilInt64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayList) Copy() UintArrayList {
	acc := NilUintArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayList) Copy() Uint8ArrayList {
	acc := NilUint8Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayList) Copy() Uint16ArrayList {
	acc := NilUint16Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayList) Copy() Uint32ArrayList {
	acc := NilUint32Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayList) Copy() Uint64ArrayList {
	acc := NilUint64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayList) Copy() UintptrArrayList {
	acc := NilUintptrArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayList) Copy() ByteArrayList {
	acc := NilByteArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayList) Copy() RuneArrayList {
	acc := NilRuneArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayList) Copy() Float32ArrayList {
	acc := NilFloat32Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayList) Copy() Float64ArrayList {
	acc := NilFloat64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayList) Copy() Complex64ArrayList {
	acc := NilComplex64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayList) Copy() Complex128ArrayList {
	acc := NilComplex128Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayList) Copy() AnyArrayList {
	acc := NilAnyArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolArrayArrayList) Copy() BoolArrayArrayList {
	acc := NilBoolArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringArrayArrayList) Copy() StringArrayArrayList {
	acc := NilStringArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntArrayArrayList) Copy() IntArrayArrayList {
	acc := NilIntArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ArrayArrayList) Copy() Int8ArrayArrayList {
	acc := NilInt8ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ArrayArrayList) Copy() Int16ArrayArrayList {
	acc := NilInt16ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ArrayArrayList) Copy() Int32ArrayArrayList {
	acc := NilInt32ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ArrayArrayList) Copy() Int64ArrayArrayList {
	acc := NilInt64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintArrayArrayList) Copy() UintArrayArrayList {
	acc := NilUintArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ArrayArrayList) Copy() Uint8ArrayArrayList {
	acc := NilUint8ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ArrayArrayList) Copy() Uint16ArrayArrayList {
	acc := NilUint16ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ArrayArrayList) Copy() Uint32ArrayArrayList {
	acc := NilUint32ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ArrayArrayList) Copy() Uint64ArrayArrayList {
	acc := NilUint64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrArrayArrayList) Copy() UintptrArrayArrayList {
	acc := NilUintptrArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteArrayArrayList) Copy() ByteArrayArrayList {
	acc := NilByteArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneArrayArrayList) Copy() RuneArrayArrayList {
	acc := NilRuneArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ArrayArrayList) Copy() Float32ArrayArrayList {
	acc := NilFloat32ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ArrayArrayList) Copy() Float64ArrayArrayList {
	acc := NilFloat64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ArrayArrayList) Copy() Complex64ArrayArrayList {
	acc := NilComplex64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ArrayArrayList) Copy() Complex128ArrayArrayList {
	acc := NilComplex128ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyArrayArrayList) Copy() AnyArrayArrayList {
	acc := NilAnyArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolOptionArrayList) Copy() BoolOptionArrayList {
	acc := NilBoolOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringOptionArrayList) Copy() StringOptionArrayList {
	acc := NilStringOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntOptionArrayList) Copy() IntOptionArrayList {
	acc := NilIntOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8OptionArrayList) Copy() Int8OptionArrayList {
	acc := NilInt8OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16OptionArrayList) Copy() Int16OptionArrayList {
	acc := NilInt16OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32OptionArrayList) Copy() Int32OptionArrayList {
	acc := NilInt32OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64OptionArrayList) Copy() Int64OptionArrayList {
	acc := NilInt64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintOptionArrayList) Copy() UintOptionArrayList {
	acc := NilUintOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8OptionArrayList) Copy() Uint8OptionArrayList {
	acc := NilUint8OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16OptionArrayList) Copy() Uint16OptionArrayList {
	acc := NilUint16OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32OptionArrayList) Copy() Uint32OptionArrayList {
	acc := NilUint32OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64OptionArrayList) Copy() Uint64OptionArrayList {
	acc := NilUint64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrOptionArrayList) Copy() UintptrOptionArrayList {
	acc := NilUintptrOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteOptionArrayList) Copy() ByteOptionArrayList {
	acc := NilByteOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneOptionArrayList) Copy() RuneOptionArrayList {
	acc := NilRuneOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32OptionArrayList) Copy() Float32OptionArrayList {
	acc := NilFloat32OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64OptionArrayList) Copy() Float64OptionArrayList {
	acc := NilFloat64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64OptionArrayList) Copy() Complex64OptionArrayList {
	acc := NilComplex64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128OptionArrayList) Copy() Complex128OptionArrayList {
	acc := NilComplex128OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyOptionArrayList) Copy() AnyOptionArrayList {
	acc := NilAnyOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l BoolListList) Copy() BoolListList {
	acc := NilBoolList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l StringListList) Copy() StringListList {
	acc := NilStringList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l IntListList) Copy() IntListList {
	acc := NilIntList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int8ListList) Copy() Int8ListList {
	acc := NilInt8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int16ListList) Copy() Int16ListList {
	acc := NilInt16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int32ListList) Copy() Int32ListList {
	acc := NilInt32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Int64ListList) Copy() Int64ListList {
	acc := NilInt64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintListList) Copy() UintListList {
	acc := NilUintList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint8ListList) Copy() Uint8ListList {
	acc := NilUint8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint16ListList) Copy() Uint16ListList {
	acc := NilUint16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint32ListList) Copy() Uint32ListList {
	acc := NilUint32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Uint64ListList) Copy() Uint64ListList {
	acc := NilUint64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l UintptrListList) Copy() UintptrListList {
	acc := NilUintptrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l ByteListList) Copy() ByteListList {
	acc := NilByteList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l RuneListList) Copy() RuneListList {
	acc := NilRuneList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float32ListList) Copy() Float32ListList {
	acc := NilFloat32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Float64ListList) Copy() Float64ListList {
	acc := NilFloat64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex64ListList) Copy() Complex64ListList {
	acc := NilComplex64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l Complex128ListList) Copy() Complex128ListList {
	acc := NilComplex128List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
func (l AnyListList) Copy() AnyListList {
	acc := NilAnyList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc.Reverse()
}
