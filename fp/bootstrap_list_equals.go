// bootstrap_list_equals.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (m1 BoolList) Equals(m2 BoolList) bool                   { return BoolListEquals(m1, m2) }
func (m1 StringList) Equals(m2 StringList) bool               { return StringListEquals(m1, m2) }
func (m1 IntList) Equals(m2 IntList) bool                     { return IntListEquals(m1, m2) }
func (m1 Int8List) Equals(m2 Int8List) bool                   { return Int8ListEquals(m1, m2) }
func (m1 Int16List) Equals(m2 Int16List) bool                 { return Int16ListEquals(m1, m2) }
func (m1 Int32List) Equals(m2 Int32List) bool                 { return Int32ListEquals(m1, m2) }
func (m1 Int64List) Equals(m2 Int64List) bool                 { return Int64ListEquals(m1, m2) }
func (m1 UintList) Equals(m2 UintList) bool                   { return UintListEquals(m1, m2) }
func (m1 Uint8List) Equals(m2 Uint8List) bool                 { return Uint8ListEquals(m1, m2) }
func (m1 Uint16List) Equals(m2 Uint16List) bool               { return Uint16ListEquals(m1, m2) }
func (m1 Uint32List) Equals(m2 Uint32List) bool               { return Uint32ListEquals(m1, m2) }
func (m1 Uint64List) Equals(m2 Uint64List) bool               { return Uint64ListEquals(m1, m2) }
func (m1 UintptrList) Equals(m2 UintptrList) bool             { return UintptrListEquals(m1, m2) }
func (m1 ByteList) Equals(m2 ByteList) bool                   { return ByteListEquals(m1, m2) }
func (m1 RuneList) Equals(m2 RuneList) bool                   { return RuneListEquals(m1, m2) }
func (m1 Float32List) Equals(m2 Float32List) bool             { return Float32ListEquals(m1, m2) }
func (m1 Float64List) Equals(m2 Float64List) bool             { return Float64ListEquals(m1, m2) }
func (m1 Complex64List) Equals(m2 Complex64List) bool         { return Complex64ListEquals(m1, m2) }
func (m1 Complex128List) Equals(m2 Complex128List) bool       { return Complex128ListEquals(m1, m2) }
func (m1 AnyList) Equals(m2 AnyList) bool                     { return AnyListEquals(m1, m2) }
func (m1 BoolOptionList) Equals(m2 BoolOptionList) bool       { return BoolOptionListEquals(m1, m2) }
func (m1 StringOptionList) Equals(m2 StringOptionList) bool   { return StringOptionListEquals(m1, m2) }
func (m1 IntOptionList) Equals(m2 IntOptionList) bool         { return IntOptionListEquals(m1, m2) }
func (m1 Int8OptionList) Equals(m2 Int8OptionList) bool       { return Int8OptionListEquals(m1, m2) }
func (m1 Int16OptionList) Equals(m2 Int16OptionList) bool     { return Int16OptionListEquals(m1, m2) }
func (m1 Int32OptionList) Equals(m2 Int32OptionList) bool     { return Int32OptionListEquals(m1, m2) }
func (m1 Int64OptionList) Equals(m2 Int64OptionList) bool     { return Int64OptionListEquals(m1, m2) }
func (m1 UintOptionList) Equals(m2 UintOptionList) bool       { return UintOptionListEquals(m1, m2) }
func (m1 Uint8OptionList) Equals(m2 Uint8OptionList) bool     { return Uint8OptionListEquals(m1, m2) }
func (m1 Uint16OptionList) Equals(m2 Uint16OptionList) bool   { return Uint16OptionListEquals(m1, m2) }
func (m1 Uint32OptionList) Equals(m2 Uint32OptionList) bool   { return Uint32OptionListEquals(m1, m2) }
func (m1 Uint64OptionList) Equals(m2 Uint64OptionList) bool   { return Uint64OptionListEquals(m1, m2) }
func (m1 UintptrOptionList) Equals(m2 UintptrOptionList) bool { return UintptrOptionListEquals(m1, m2) }
func (m1 ByteOptionList) Equals(m2 ByteOptionList) bool       { return ByteOptionListEquals(m1, m2) }
func (m1 RuneOptionList) Equals(m2 RuneOptionList) bool       { return RuneOptionListEquals(m1, m2) }
func (m1 Float32OptionList) Equals(m2 Float32OptionList) bool { return Float32OptionListEquals(m1, m2) }
func (m1 Float64OptionList) Equals(m2 Float64OptionList) bool { return Float64OptionListEquals(m1, m2) }
func (m1 Complex64OptionList) Equals(m2 Complex64OptionList) bool {
	return Complex64OptionListEquals(m1, m2)
}
func (m1 Complex128OptionList) Equals(m2 Complex128OptionList) bool {
	return Complex128OptionListEquals(m1, m2)
}
func (m1 AnyOptionList) Equals(m2 AnyOptionList) bool         { return AnyOptionListEquals(m1, m2) }
func (m1 BoolArrOptionList) Equals(m2 BoolArrOptionList) bool { return BoolArrOptionListEquals(m1, m2) }
func (m1 StringArrOptionList) Equals(m2 StringArrOptionList) bool {
	return StringArrOptionListEquals(m1, m2)
}
func (m1 IntArrOptionList) Equals(m2 IntArrOptionList) bool   { return IntArrOptionListEquals(m1, m2) }
func (m1 Int8ArrOptionList) Equals(m2 Int8ArrOptionList) bool { return Int8ArrOptionListEquals(m1, m2) }
func (m1 Int16ArrOptionList) Equals(m2 Int16ArrOptionList) bool {
	return Int16ArrOptionListEquals(m1, m2)
}
func (m1 Int32ArrOptionList) Equals(m2 Int32ArrOptionList) bool {
	return Int32ArrOptionListEquals(m1, m2)
}
func (m1 Int64ArrOptionList) Equals(m2 Int64ArrOptionList) bool {
	return Int64ArrOptionListEquals(m1, m2)
}
func (m1 UintArrOptionList) Equals(m2 UintArrOptionList) bool { return UintArrOptionListEquals(m1, m2) }
func (m1 Uint8ArrOptionList) Equals(m2 Uint8ArrOptionList) bool {
	return Uint8ArrOptionListEquals(m1, m2)
}
func (m1 Uint16ArrOptionList) Equals(m2 Uint16ArrOptionList) bool {
	return Uint16ArrOptionListEquals(m1, m2)
}
func (m1 Uint32ArrOptionList) Equals(m2 Uint32ArrOptionList) bool {
	return Uint32ArrOptionListEquals(m1, m2)
}
func (m1 Uint64ArrOptionList) Equals(m2 Uint64ArrOptionList) bool {
	return Uint64ArrOptionListEquals(m1, m2)
}
func (m1 UintptrArrOptionList) Equals(m2 UintptrArrOptionList) bool {
	return UintptrArrOptionListEquals(m1, m2)
}
func (m1 ByteArrOptionList) Equals(m2 ByteArrOptionList) bool { return ByteArrOptionListEquals(m1, m2) }
func (m1 RuneArrOptionList) Equals(m2 RuneArrOptionList) bool { return RuneArrOptionListEquals(m1, m2) }
func (m1 Float32ArrOptionList) Equals(m2 Float32ArrOptionList) bool {
	return Float32ArrOptionListEquals(m1, m2)
}
func (m1 Float64ArrOptionList) Equals(m2 Float64ArrOptionList) bool {
	return Float64ArrOptionListEquals(m1, m2)
}
func (m1 Complex64ArrOptionList) Equals(m2 Complex64ArrOptionList) bool {
	return Complex64ArrOptionListEquals(m1, m2)
}
func (m1 Complex128ArrOptionList) Equals(m2 Complex128ArrOptionList) bool {
	return Complex128ArrOptionListEquals(m1, m2)
}
func (m1 AnyArrOptionList) Equals(m2 AnyArrOptionList) bool { return AnyArrOptionListEquals(m1, m2) }
func (m1 BoolArrArrOptionList) Equals(m2 BoolArrArrOptionList) bool {
	return BoolArrArrOptionListEquals(m1, m2)
}
func (m1 StringArrArrOptionList) Equals(m2 StringArrArrOptionList) bool {
	return StringArrArrOptionListEquals(m1, m2)
}
func (m1 IntArrArrOptionList) Equals(m2 IntArrArrOptionList) bool {
	return IntArrArrOptionListEquals(m1, m2)
}
func (m1 Int8ArrArrOptionList) Equals(m2 Int8ArrArrOptionList) bool {
	return Int8ArrArrOptionListEquals(m1, m2)
}
func (m1 Int16ArrArrOptionList) Equals(m2 Int16ArrArrOptionList) bool {
	return Int16ArrArrOptionListEquals(m1, m2)
}
func (m1 Int32ArrArrOptionList) Equals(m2 Int32ArrArrOptionList) bool {
	return Int32ArrArrOptionListEquals(m1, m2)
}
func (m1 Int64ArrArrOptionList) Equals(m2 Int64ArrArrOptionList) bool {
	return Int64ArrArrOptionListEquals(m1, m2)
}
func (m1 UintArrArrOptionList) Equals(m2 UintArrArrOptionList) bool {
	return UintArrArrOptionListEquals(m1, m2)
}
func (m1 Uint8ArrArrOptionList) Equals(m2 Uint8ArrArrOptionList) bool {
	return Uint8ArrArrOptionListEquals(m1, m2)
}
func (m1 Uint16ArrArrOptionList) Equals(m2 Uint16ArrArrOptionList) bool {
	return Uint16ArrArrOptionListEquals(m1, m2)
}
func (m1 Uint32ArrArrOptionList) Equals(m2 Uint32ArrArrOptionList) bool {
	return Uint32ArrArrOptionListEquals(m1, m2)
}
func (m1 Uint64ArrArrOptionList) Equals(m2 Uint64ArrArrOptionList) bool {
	return Uint64ArrArrOptionListEquals(m1, m2)
}
func (m1 UintptrArrArrOptionList) Equals(m2 UintptrArrArrOptionList) bool {
	return UintptrArrArrOptionListEquals(m1, m2)
}
func (m1 ByteArrArrOptionList) Equals(m2 ByteArrArrOptionList) bool {
	return ByteArrArrOptionListEquals(m1, m2)
}
func (m1 RuneArrArrOptionList) Equals(m2 RuneArrArrOptionList) bool {
	return RuneArrArrOptionListEquals(m1, m2)
}
func (m1 Float32ArrArrOptionList) Equals(m2 Float32ArrArrOptionList) bool {
	return Float32ArrArrOptionListEquals(m1, m2)
}
func (m1 Float64ArrArrOptionList) Equals(m2 Float64ArrArrOptionList) bool {
	return Float64ArrArrOptionListEquals(m1, m2)
}
func (m1 Complex64ArrArrOptionList) Equals(m2 Complex64ArrArrOptionList) bool {
	return Complex64ArrArrOptionListEquals(m1, m2)
}
func (m1 Complex128ArrArrOptionList) Equals(m2 Complex128ArrArrOptionList) bool {
	return Complex128ArrArrOptionListEquals(m1, m2)
}
func (m1 AnyArrArrOptionList) Equals(m2 AnyArrArrOptionList) bool {
	return AnyArrArrOptionListEquals(m1, m2)
}
func (m1 BoolOptionArrOptionList) Equals(m2 BoolOptionArrOptionList) bool {
	return BoolOptionArrOptionListEquals(m1, m2)
}
func (m1 StringOptionArrOptionList) Equals(m2 StringOptionArrOptionList) bool {
	return StringOptionArrOptionListEquals(m1, m2)
}
func (m1 IntOptionArrOptionList) Equals(m2 IntOptionArrOptionList) bool {
	return IntOptionArrOptionListEquals(m1, m2)
}
func (m1 Int8OptionArrOptionList) Equals(m2 Int8OptionArrOptionList) bool {
	return Int8OptionArrOptionListEquals(m1, m2)
}
func (m1 Int16OptionArrOptionList) Equals(m2 Int16OptionArrOptionList) bool {
	return Int16OptionArrOptionListEquals(m1, m2)
}
func (m1 Int32OptionArrOptionList) Equals(m2 Int32OptionArrOptionList) bool {
	return Int32OptionArrOptionListEquals(m1, m2)
}
func (m1 Int64OptionArrOptionList) Equals(m2 Int64OptionArrOptionList) bool {
	return Int64OptionArrOptionListEquals(m1, m2)
}
func (m1 UintOptionArrOptionList) Equals(m2 UintOptionArrOptionList) bool {
	return UintOptionArrOptionListEquals(m1, m2)
}
func (m1 Uint8OptionArrOptionList) Equals(m2 Uint8OptionArrOptionList) bool {
	return Uint8OptionArrOptionListEquals(m1, m2)
}
func (m1 Uint16OptionArrOptionList) Equals(m2 Uint16OptionArrOptionList) bool {
	return Uint16OptionArrOptionListEquals(m1, m2)
}
func (m1 Uint32OptionArrOptionList) Equals(m2 Uint32OptionArrOptionList) bool {
	return Uint32OptionArrOptionListEquals(m1, m2)
}
func (m1 Uint64OptionArrOptionList) Equals(m2 Uint64OptionArrOptionList) bool {
	return Uint64OptionArrOptionListEquals(m1, m2)
}
func (m1 UintptrOptionArrOptionList) Equals(m2 UintptrOptionArrOptionList) bool {
	return UintptrOptionArrOptionListEquals(m1, m2)
}
func (m1 ByteOptionArrOptionList) Equals(m2 ByteOptionArrOptionList) bool {
	return ByteOptionArrOptionListEquals(m1, m2)
}
func (m1 RuneOptionArrOptionList) Equals(m2 RuneOptionArrOptionList) bool {
	return RuneOptionArrOptionListEquals(m1, m2)
}
func (m1 Float32OptionArrOptionList) Equals(m2 Float32OptionArrOptionList) bool {
	return Float32OptionArrOptionListEquals(m1, m2)
}
func (m1 Float64OptionArrOptionList) Equals(m2 Float64OptionArrOptionList) bool {
	return Float64OptionArrOptionListEquals(m1, m2)
}
func (m1 Complex64OptionArrOptionList) Equals(m2 Complex64OptionArrOptionList) bool {
	return Complex64OptionArrOptionListEquals(m1, m2)
}
func (m1 Complex128OptionArrOptionList) Equals(m2 Complex128OptionArrOptionList) bool {
	return Complex128OptionArrOptionListEquals(m1, m2)
}
func (m1 AnyOptionArrOptionList) Equals(m2 AnyOptionArrOptionList) bool {
	return AnyOptionArrOptionListEquals(m1, m2)
}
func (m1 BoolListOptionList) Equals(m2 BoolListOptionList) bool {
	return BoolListOptionListEquals(m1, m2)
}
func (m1 StringListOptionList) Equals(m2 StringListOptionList) bool {
	return StringListOptionListEquals(m1, m2)
}
func (m1 IntListOptionList) Equals(m2 IntListOptionList) bool { return IntListOptionListEquals(m1, m2) }
func (m1 Int8ListOptionList) Equals(m2 Int8ListOptionList) bool {
	return Int8ListOptionListEquals(m1, m2)
}
func (m1 Int16ListOptionList) Equals(m2 Int16ListOptionList) bool {
	return Int16ListOptionListEquals(m1, m2)
}
func (m1 Int32ListOptionList) Equals(m2 Int32ListOptionList) bool {
	return Int32ListOptionListEquals(m1, m2)
}
func (m1 Int64ListOptionList) Equals(m2 Int64ListOptionList) bool {
	return Int64ListOptionListEquals(m1, m2)
}
func (m1 UintListOptionList) Equals(m2 UintListOptionList) bool {
	return UintListOptionListEquals(m1, m2)
}
func (m1 Uint8ListOptionList) Equals(m2 Uint8ListOptionList) bool {
	return Uint8ListOptionListEquals(m1, m2)
}
func (m1 Uint16ListOptionList) Equals(m2 Uint16ListOptionList) bool {
	return Uint16ListOptionListEquals(m1, m2)
}
func (m1 Uint32ListOptionList) Equals(m2 Uint32ListOptionList) bool {
	return Uint32ListOptionListEquals(m1, m2)
}
func (m1 Uint64ListOptionList) Equals(m2 Uint64ListOptionList) bool {
	return Uint64ListOptionListEquals(m1, m2)
}
func (m1 UintptrListOptionList) Equals(m2 UintptrListOptionList) bool {
	return UintptrListOptionListEquals(m1, m2)
}
func (m1 ByteListOptionList) Equals(m2 ByteListOptionList) bool {
	return ByteListOptionListEquals(m1, m2)
}
func (m1 RuneListOptionList) Equals(m2 RuneListOptionList) bool {
	return RuneListOptionListEquals(m1, m2)
}
func (m1 Float32ListOptionList) Equals(m2 Float32ListOptionList) bool {
	return Float32ListOptionListEquals(m1, m2)
}
func (m1 Float64ListOptionList) Equals(m2 Float64ListOptionList) bool {
	return Float64ListOptionListEquals(m1, m2)
}
func (m1 Complex64ListOptionList) Equals(m2 Complex64ListOptionList) bool {
	return Complex64ListOptionListEquals(m1, m2)
}
func (m1 Complex128ListOptionList) Equals(m2 Complex128ListOptionList) bool {
	return Complex128ListOptionListEquals(m1, m2)
}
func (m1 AnyListOptionList) Equals(m2 AnyListOptionList) bool { return AnyListOptionListEquals(m1, m2) }
func (m1 BoolOptionOptionList) Equals(m2 BoolOptionOptionList) bool {
	return BoolOptionOptionListEquals(m1, m2)
}
func (m1 StringOptionOptionList) Equals(m2 StringOptionOptionList) bool {
	return StringOptionOptionListEquals(m1, m2)
}
func (m1 IntOptionOptionList) Equals(m2 IntOptionOptionList) bool {
	return IntOptionOptionListEquals(m1, m2)
}
func (m1 Int8OptionOptionList) Equals(m2 Int8OptionOptionList) bool {
	return Int8OptionOptionListEquals(m1, m2)
}
func (m1 Int16OptionOptionList) Equals(m2 Int16OptionOptionList) bool {
	return Int16OptionOptionListEquals(m1, m2)
}
func (m1 Int32OptionOptionList) Equals(m2 Int32OptionOptionList) bool {
	return Int32OptionOptionListEquals(m1, m2)
}
func (m1 Int64OptionOptionList) Equals(m2 Int64OptionOptionList) bool {
	return Int64OptionOptionListEquals(m1, m2)
}
func (m1 UintOptionOptionList) Equals(m2 UintOptionOptionList) bool {
	return UintOptionOptionListEquals(m1, m2)
}
func (m1 Uint8OptionOptionList) Equals(m2 Uint8OptionOptionList) bool {
	return Uint8OptionOptionListEquals(m1, m2)
}
func (m1 Uint16OptionOptionList) Equals(m2 Uint16OptionOptionList) bool {
	return Uint16OptionOptionListEquals(m1, m2)
}
func (m1 Uint32OptionOptionList) Equals(m2 Uint32OptionOptionList) bool {
	return Uint32OptionOptionListEquals(m1, m2)
}
func (m1 Uint64OptionOptionList) Equals(m2 Uint64OptionOptionList) bool {
	return Uint64OptionOptionListEquals(m1, m2)
}
func (m1 UintptrOptionOptionList) Equals(m2 UintptrOptionOptionList) bool {
	return UintptrOptionOptionListEquals(m1, m2)
}
func (m1 ByteOptionOptionList) Equals(m2 ByteOptionOptionList) bool {
	return ByteOptionOptionListEquals(m1, m2)
}
func (m1 RuneOptionOptionList) Equals(m2 RuneOptionOptionList) bool {
	return RuneOptionOptionListEquals(m1, m2)
}
func (m1 Float32OptionOptionList) Equals(m2 Float32OptionOptionList) bool {
	return Float32OptionOptionListEquals(m1, m2)
}
func (m1 Float64OptionOptionList) Equals(m2 Float64OptionOptionList) bool {
	return Float64OptionOptionListEquals(m1, m2)
}
func (m1 Complex64OptionOptionList) Equals(m2 Complex64OptionOptionList) bool {
	return Complex64OptionOptionListEquals(m1, m2)
}
func (m1 Complex128OptionOptionList) Equals(m2 Complex128OptionOptionList) bool {
	return Complex128OptionOptionListEquals(m1, m2)
}
func (m1 AnyOptionOptionList) Equals(m2 AnyOptionOptionList) bool {
	return AnyOptionOptionListEquals(m1, m2)
}
func (m1 BoolArrOptionOptionList) Equals(m2 BoolArrOptionOptionList) bool {
	return BoolArrOptionOptionListEquals(m1, m2)
}
func (m1 StringArrOptionOptionList) Equals(m2 StringArrOptionOptionList) bool {
	return StringArrOptionOptionListEquals(m1, m2)
}
func (m1 IntArrOptionOptionList) Equals(m2 IntArrOptionOptionList) bool {
	return IntArrOptionOptionListEquals(m1, m2)
}
func (m1 Int8ArrOptionOptionList) Equals(m2 Int8ArrOptionOptionList) bool {
	return Int8ArrOptionOptionListEquals(m1, m2)
}
func (m1 Int16ArrOptionOptionList) Equals(m2 Int16ArrOptionOptionList) bool {
	return Int16ArrOptionOptionListEquals(m1, m2)
}
func (m1 Int32ArrOptionOptionList) Equals(m2 Int32ArrOptionOptionList) bool {
	return Int32ArrOptionOptionListEquals(m1, m2)
}
func (m1 Int64ArrOptionOptionList) Equals(m2 Int64ArrOptionOptionList) bool {
	return Int64ArrOptionOptionListEquals(m1, m2)
}
func (m1 UintArrOptionOptionList) Equals(m2 UintArrOptionOptionList) bool {
	return UintArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint8ArrOptionOptionList) Equals(m2 Uint8ArrOptionOptionList) bool {
	return Uint8ArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint16ArrOptionOptionList) Equals(m2 Uint16ArrOptionOptionList) bool {
	return Uint16ArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint32ArrOptionOptionList) Equals(m2 Uint32ArrOptionOptionList) bool {
	return Uint32ArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint64ArrOptionOptionList) Equals(m2 Uint64ArrOptionOptionList) bool {
	return Uint64ArrOptionOptionListEquals(m1, m2)
}
func (m1 UintptrArrOptionOptionList) Equals(m2 UintptrArrOptionOptionList) bool {
	return UintptrArrOptionOptionListEquals(m1, m2)
}
func (m1 ByteArrOptionOptionList) Equals(m2 ByteArrOptionOptionList) bool {
	return ByteArrOptionOptionListEquals(m1, m2)
}
func (m1 RuneArrOptionOptionList) Equals(m2 RuneArrOptionOptionList) bool {
	return RuneArrOptionOptionListEquals(m1, m2)
}
func (m1 Float32ArrOptionOptionList) Equals(m2 Float32ArrOptionOptionList) bool {
	return Float32ArrOptionOptionListEquals(m1, m2)
}
func (m1 Float64ArrOptionOptionList) Equals(m2 Float64ArrOptionOptionList) bool {
	return Float64ArrOptionOptionListEquals(m1, m2)
}
func (m1 Complex64ArrOptionOptionList) Equals(m2 Complex64ArrOptionOptionList) bool {
	return Complex64ArrOptionOptionListEquals(m1, m2)
}
func (m1 Complex128ArrOptionOptionList) Equals(m2 Complex128ArrOptionOptionList) bool {
	return Complex128ArrOptionOptionListEquals(m1, m2)
}
func (m1 AnyArrOptionOptionList) Equals(m2 AnyArrOptionOptionList) bool {
	return AnyArrOptionOptionListEquals(m1, m2)
}
func (m1 BoolArrArrOptionOptionList) Equals(m2 BoolArrArrOptionOptionList) bool {
	return BoolArrArrOptionOptionListEquals(m1, m2)
}
func (m1 StringArrArrOptionOptionList) Equals(m2 StringArrArrOptionOptionList) bool {
	return StringArrArrOptionOptionListEquals(m1, m2)
}
func (m1 IntArrArrOptionOptionList) Equals(m2 IntArrArrOptionOptionList) bool {
	return IntArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Int8ArrArrOptionOptionList) Equals(m2 Int8ArrArrOptionOptionList) bool {
	return Int8ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Int16ArrArrOptionOptionList) Equals(m2 Int16ArrArrOptionOptionList) bool {
	return Int16ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Int32ArrArrOptionOptionList) Equals(m2 Int32ArrArrOptionOptionList) bool {
	return Int32ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Int64ArrArrOptionOptionList) Equals(m2 Int64ArrArrOptionOptionList) bool {
	return Int64ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 UintArrArrOptionOptionList) Equals(m2 UintArrArrOptionOptionList) bool {
	return UintArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint8ArrArrOptionOptionList) Equals(m2 Uint8ArrArrOptionOptionList) bool {
	return Uint8ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint16ArrArrOptionOptionList) Equals(m2 Uint16ArrArrOptionOptionList) bool {
	return Uint16ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint32ArrArrOptionOptionList) Equals(m2 Uint32ArrArrOptionOptionList) bool {
	return Uint32ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint64ArrArrOptionOptionList) Equals(m2 Uint64ArrArrOptionOptionList) bool {
	return Uint64ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 UintptrArrArrOptionOptionList) Equals(m2 UintptrArrArrOptionOptionList) bool {
	return UintptrArrArrOptionOptionListEquals(m1, m2)
}
func (m1 ByteArrArrOptionOptionList) Equals(m2 ByteArrArrOptionOptionList) bool {
	return ByteArrArrOptionOptionListEquals(m1, m2)
}
func (m1 RuneArrArrOptionOptionList) Equals(m2 RuneArrArrOptionOptionList) bool {
	return RuneArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Float32ArrArrOptionOptionList) Equals(m2 Float32ArrArrOptionOptionList) bool {
	return Float32ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Float64ArrArrOptionOptionList) Equals(m2 Float64ArrArrOptionOptionList) bool {
	return Float64ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Complex64ArrArrOptionOptionList) Equals(m2 Complex64ArrArrOptionOptionList) bool {
	return Complex64ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 Complex128ArrArrOptionOptionList) Equals(m2 Complex128ArrArrOptionOptionList) bool {
	return Complex128ArrArrOptionOptionListEquals(m1, m2)
}
func (m1 AnyArrArrOptionOptionList) Equals(m2 AnyArrArrOptionOptionList) bool {
	return AnyArrArrOptionOptionListEquals(m1, m2)
}
func (m1 BoolOptionArrOptionOptionList) Equals(m2 BoolOptionArrOptionOptionList) bool {
	return BoolOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 StringOptionArrOptionOptionList) Equals(m2 StringOptionArrOptionOptionList) bool {
	return StringOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 IntOptionArrOptionOptionList) Equals(m2 IntOptionArrOptionOptionList) bool {
	return IntOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Int8OptionArrOptionOptionList) Equals(m2 Int8OptionArrOptionOptionList) bool {
	return Int8OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Int16OptionArrOptionOptionList) Equals(m2 Int16OptionArrOptionOptionList) bool {
	return Int16OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Int32OptionArrOptionOptionList) Equals(m2 Int32OptionArrOptionOptionList) bool {
	return Int32OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Int64OptionArrOptionOptionList) Equals(m2 Int64OptionArrOptionOptionList) bool {
	return Int64OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 UintOptionArrOptionOptionList) Equals(m2 UintOptionArrOptionOptionList) bool {
	return UintOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint8OptionArrOptionOptionList) Equals(m2 Uint8OptionArrOptionOptionList) bool {
	return Uint8OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint16OptionArrOptionOptionList) Equals(m2 Uint16OptionArrOptionOptionList) bool {
	return Uint16OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint32OptionArrOptionOptionList) Equals(m2 Uint32OptionArrOptionOptionList) bool {
	return Uint32OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Uint64OptionArrOptionOptionList) Equals(m2 Uint64OptionArrOptionOptionList) bool {
	return Uint64OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 UintptrOptionArrOptionOptionList) Equals(m2 UintptrOptionArrOptionOptionList) bool {
	return UintptrOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 ByteOptionArrOptionOptionList) Equals(m2 ByteOptionArrOptionOptionList) bool {
	return ByteOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 RuneOptionArrOptionOptionList) Equals(m2 RuneOptionArrOptionOptionList) bool {
	return RuneOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Float32OptionArrOptionOptionList) Equals(m2 Float32OptionArrOptionOptionList) bool {
	return Float32OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Float64OptionArrOptionOptionList) Equals(m2 Float64OptionArrOptionOptionList) bool {
	return Float64OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Complex64OptionArrOptionOptionList) Equals(m2 Complex64OptionArrOptionOptionList) bool {
	return Complex64OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 Complex128OptionArrOptionOptionList) Equals(m2 Complex128OptionArrOptionOptionList) bool {
	return Complex128OptionArrOptionOptionListEquals(m1, m2)
}
func (m1 AnyOptionArrOptionOptionList) Equals(m2 AnyOptionArrOptionOptionList) bool {
	return AnyOptionArrOptionOptionListEquals(m1, m2)
}
func (m1 BoolListOptionOptionList) Equals(m2 BoolListOptionOptionList) bool {
	return BoolListOptionOptionListEquals(m1, m2)
}
func (m1 StringListOptionOptionList) Equals(m2 StringListOptionOptionList) bool {
	return StringListOptionOptionListEquals(m1, m2)
}
func (m1 IntListOptionOptionList) Equals(m2 IntListOptionOptionList) bool {
	return IntListOptionOptionListEquals(m1, m2)
}
func (m1 Int8ListOptionOptionList) Equals(m2 Int8ListOptionOptionList) bool {
	return Int8ListOptionOptionListEquals(m1, m2)
}
func (m1 Int16ListOptionOptionList) Equals(m2 Int16ListOptionOptionList) bool {
	return Int16ListOptionOptionListEquals(m1, m2)
}
func (m1 Int32ListOptionOptionList) Equals(m2 Int32ListOptionOptionList) bool {
	return Int32ListOptionOptionListEquals(m1, m2)
}
func (m1 Int64ListOptionOptionList) Equals(m2 Int64ListOptionOptionList) bool {
	return Int64ListOptionOptionListEquals(m1, m2)
}
func (m1 UintListOptionOptionList) Equals(m2 UintListOptionOptionList) bool {
	return UintListOptionOptionListEquals(m1, m2)
}
func (m1 Uint8ListOptionOptionList) Equals(m2 Uint8ListOptionOptionList) bool {
	return Uint8ListOptionOptionListEquals(m1, m2)
}
func (m1 Uint16ListOptionOptionList) Equals(m2 Uint16ListOptionOptionList) bool {
	return Uint16ListOptionOptionListEquals(m1, m2)
}
func (m1 Uint32ListOptionOptionList) Equals(m2 Uint32ListOptionOptionList) bool {
	return Uint32ListOptionOptionListEquals(m1, m2)
}
func (m1 Uint64ListOptionOptionList) Equals(m2 Uint64ListOptionOptionList) bool {
	return Uint64ListOptionOptionListEquals(m1, m2)
}
func (m1 UintptrListOptionOptionList) Equals(m2 UintptrListOptionOptionList) bool {
	return UintptrListOptionOptionListEquals(m1, m2)
}
func (m1 ByteListOptionOptionList) Equals(m2 ByteListOptionOptionList) bool {
	return ByteListOptionOptionListEquals(m1, m2)
}
func (m1 RuneListOptionOptionList) Equals(m2 RuneListOptionOptionList) bool {
	return RuneListOptionOptionListEquals(m1, m2)
}
func (m1 Float32ListOptionOptionList) Equals(m2 Float32ListOptionOptionList) bool {
	return Float32ListOptionOptionListEquals(m1, m2)
}
func (m1 Float64ListOptionOptionList) Equals(m2 Float64ListOptionOptionList) bool {
	return Float64ListOptionOptionListEquals(m1, m2)
}
func (m1 Complex64ListOptionOptionList) Equals(m2 Complex64ListOptionOptionList) bool {
	return Complex64ListOptionOptionListEquals(m1, m2)
}
func (m1 Complex128ListOptionOptionList) Equals(m2 Complex128ListOptionOptionList) bool {
	return Complex128ListOptionOptionListEquals(m1, m2)
}
func (m1 AnyListOptionOptionList) Equals(m2 AnyListOptionOptionList) bool {
	return AnyListOptionOptionListEquals(m1, m2)
}
func (m1 BoolArrList) Equals(m2 BoolArrList) bool             { return BoolArrListEquals(m1, m2) }
func (m1 StringArrList) Equals(m2 StringArrList) bool         { return StringArrListEquals(m1, m2) }
func (m1 IntArrList) Equals(m2 IntArrList) bool               { return IntArrListEquals(m1, m2) }
func (m1 Int8ArrList) Equals(m2 Int8ArrList) bool             { return Int8ArrListEquals(m1, m2) }
func (m1 Int16ArrList) Equals(m2 Int16ArrList) bool           { return Int16ArrListEquals(m1, m2) }
func (m1 Int32ArrList) Equals(m2 Int32ArrList) bool           { return Int32ArrListEquals(m1, m2) }
func (m1 Int64ArrList) Equals(m2 Int64ArrList) bool           { return Int64ArrListEquals(m1, m2) }
func (m1 UintArrList) Equals(m2 UintArrList) bool             { return UintArrListEquals(m1, m2) }
func (m1 Uint8ArrList) Equals(m2 Uint8ArrList) bool           { return Uint8ArrListEquals(m1, m2) }
func (m1 Uint16ArrList) Equals(m2 Uint16ArrList) bool         { return Uint16ArrListEquals(m1, m2) }
func (m1 Uint32ArrList) Equals(m2 Uint32ArrList) bool         { return Uint32ArrListEquals(m1, m2) }
func (m1 Uint64ArrList) Equals(m2 Uint64ArrList) bool         { return Uint64ArrListEquals(m1, m2) }
func (m1 UintptrArrList) Equals(m2 UintptrArrList) bool       { return UintptrArrListEquals(m1, m2) }
func (m1 ByteArrList) Equals(m2 ByteArrList) bool             { return ByteArrListEquals(m1, m2) }
func (m1 RuneArrList) Equals(m2 RuneArrList) bool             { return RuneArrListEquals(m1, m2) }
func (m1 Float32ArrList) Equals(m2 Float32ArrList) bool       { return Float32ArrListEquals(m1, m2) }
func (m1 Float64ArrList) Equals(m2 Float64ArrList) bool       { return Float64ArrListEquals(m1, m2) }
func (m1 Complex64ArrList) Equals(m2 Complex64ArrList) bool   { return Complex64ArrListEquals(m1, m2) }
func (m1 Complex128ArrList) Equals(m2 Complex128ArrList) bool { return Complex128ArrListEquals(m1, m2) }
func (m1 AnyArrList) Equals(m2 AnyArrList) bool               { return AnyArrListEquals(m1, m2) }
func (m1 BoolArrArrList) Equals(m2 BoolArrArrList) bool       { return BoolArrArrListEquals(m1, m2) }
func (m1 StringArrArrList) Equals(m2 StringArrArrList) bool   { return StringArrArrListEquals(m1, m2) }
func (m1 IntArrArrList) Equals(m2 IntArrArrList) bool         { return IntArrArrListEquals(m1, m2) }
func (m1 Int8ArrArrList) Equals(m2 Int8ArrArrList) bool       { return Int8ArrArrListEquals(m1, m2) }
func (m1 Int16ArrArrList) Equals(m2 Int16ArrArrList) bool     { return Int16ArrArrListEquals(m1, m2) }
func (m1 Int32ArrArrList) Equals(m2 Int32ArrArrList) bool     { return Int32ArrArrListEquals(m1, m2) }
func (m1 Int64ArrArrList) Equals(m2 Int64ArrArrList) bool     { return Int64ArrArrListEquals(m1, m2) }
func (m1 UintArrArrList) Equals(m2 UintArrArrList) bool       { return UintArrArrListEquals(m1, m2) }
func (m1 Uint8ArrArrList) Equals(m2 Uint8ArrArrList) bool     { return Uint8ArrArrListEquals(m1, m2) }
func (m1 Uint16ArrArrList) Equals(m2 Uint16ArrArrList) bool   { return Uint16ArrArrListEquals(m1, m2) }
func (m1 Uint32ArrArrList) Equals(m2 Uint32ArrArrList) bool   { return Uint32ArrArrListEquals(m1, m2) }
func (m1 Uint64ArrArrList) Equals(m2 Uint64ArrArrList) bool   { return Uint64ArrArrListEquals(m1, m2) }
func (m1 UintptrArrArrList) Equals(m2 UintptrArrArrList) bool { return UintptrArrArrListEquals(m1, m2) }
func (m1 ByteArrArrList) Equals(m2 ByteArrArrList) bool       { return ByteArrArrListEquals(m1, m2) }
func (m1 RuneArrArrList) Equals(m2 RuneArrArrList) bool       { return RuneArrArrListEquals(m1, m2) }
func (m1 Float32ArrArrList) Equals(m2 Float32ArrArrList) bool { return Float32ArrArrListEquals(m1, m2) }
func (m1 Float64ArrArrList) Equals(m2 Float64ArrArrList) bool { return Float64ArrArrListEquals(m1, m2) }
func (m1 Complex64ArrArrList) Equals(m2 Complex64ArrArrList) bool {
	return Complex64ArrArrListEquals(m1, m2)
}
func (m1 Complex128ArrArrList) Equals(m2 Complex128ArrArrList) bool {
	return Complex128ArrArrListEquals(m1, m2)
}
func (m1 AnyArrArrList) Equals(m2 AnyArrArrList) bool         { return AnyArrArrListEquals(m1, m2) }
func (m1 BoolOptionArrList) Equals(m2 BoolOptionArrList) bool { return BoolOptionArrListEquals(m1, m2) }
func (m1 StringOptionArrList) Equals(m2 StringOptionArrList) bool {
	return StringOptionArrListEquals(m1, m2)
}
func (m1 IntOptionArrList) Equals(m2 IntOptionArrList) bool   { return IntOptionArrListEquals(m1, m2) }
func (m1 Int8OptionArrList) Equals(m2 Int8OptionArrList) bool { return Int8OptionArrListEquals(m1, m2) }
func (m1 Int16OptionArrList) Equals(m2 Int16OptionArrList) bool {
	return Int16OptionArrListEquals(m1, m2)
}
func (m1 Int32OptionArrList) Equals(m2 Int32OptionArrList) bool {
	return Int32OptionArrListEquals(m1, m2)
}
func (m1 Int64OptionArrList) Equals(m2 Int64OptionArrList) bool {
	return Int64OptionArrListEquals(m1, m2)
}
func (m1 UintOptionArrList) Equals(m2 UintOptionArrList) bool { return UintOptionArrListEquals(m1, m2) }
func (m1 Uint8OptionArrList) Equals(m2 Uint8OptionArrList) bool {
	return Uint8OptionArrListEquals(m1, m2)
}
func (m1 Uint16OptionArrList) Equals(m2 Uint16OptionArrList) bool {
	return Uint16OptionArrListEquals(m1, m2)
}
func (m1 Uint32OptionArrList) Equals(m2 Uint32OptionArrList) bool {
	return Uint32OptionArrListEquals(m1, m2)
}
func (m1 Uint64OptionArrList) Equals(m2 Uint64OptionArrList) bool {
	return Uint64OptionArrListEquals(m1, m2)
}
func (m1 UintptrOptionArrList) Equals(m2 UintptrOptionArrList) bool {
	return UintptrOptionArrListEquals(m1, m2)
}
func (m1 ByteOptionArrList) Equals(m2 ByteOptionArrList) bool { return ByteOptionArrListEquals(m1, m2) }
func (m1 RuneOptionArrList) Equals(m2 RuneOptionArrList) bool { return RuneOptionArrListEquals(m1, m2) }
func (m1 Float32OptionArrList) Equals(m2 Float32OptionArrList) bool {
	return Float32OptionArrListEquals(m1, m2)
}
func (m1 Float64OptionArrList) Equals(m2 Float64OptionArrList) bool {
	return Float64OptionArrListEquals(m1, m2)
}
func (m1 Complex64OptionArrList) Equals(m2 Complex64OptionArrList) bool {
	return Complex64OptionArrListEquals(m1, m2)
}
func (m1 Complex128OptionArrList) Equals(m2 Complex128OptionArrList) bool {
	return Complex128OptionArrListEquals(m1, m2)
}
func (m1 AnyOptionArrList) Equals(m2 AnyOptionArrList) bool   { return AnyOptionArrListEquals(m1, m2) }
func (m1 BoolListList) Equals(m2 BoolListList) bool           { return BoolListListEquals(m1, m2) }
func (m1 StringListList) Equals(m2 StringListList) bool       { return StringListListEquals(m1, m2) }
func (m1 IntListList) Equals(m2 IntListList) bool             { return IntListListEquals(m1, m2) }
func (m1 Int8ListList) Equals(m2 Int8ListList) bool           { return Int8ListListEquals(m1, m2) }
func (m1 Int16ListList) Equals(m2 Int16ListList) bool         { return Int16ListListEquals(m1, m2) }
func (m1 Int32ListList) Equals(m2 Int32ListList) bool         { return Int32ListListEquals(m1, m2) }
func (m1 Int64ListList) Equals(m2 Int64ListList) bool         { return Int64ListListEquals(m1, m2) }
func (m1 UintListList) Equals(m2 UintListList) bool           { return UintListListEquals(m1, m2) }
func (m1 Uint8ListList) Equals(m2 Uint8ListList) bool         { return Uint8ListListEquals(m1, m2) }
func (m1 Uint16ListList) Equals(m2 Uint16ListList) bool       { return Uint16ListListEquals(m1, m2) }
func (m1 Uint32ListList) Equals(m2 Uint32ListList) bool       { return Uint32ListListEquals(m1, m2) }
func (m1 Uint64ListList) Equals(m2 Uint64ListList) bool       { return Uint64ListListEquals(m1, m2) }
func (m1 UintptrListList) Equals(m2 UintptrListList) bool     { return UintptrListListEquals(m1, m2) }
func (m1 ByteListList) Equals(m2 ByteListList) bool           { return ByteListListEquals(m1, m2) }
func (m1 RuneListList) Equals(m2 RuneListList) bool           { return RuneListListEquals(m1, m2) }
func (m1 Float32ListList) Equals(m2 Float32ListList) bool     { return Float32ListListEquals(m1, m2) }
func (m1 Float64ListList) Equals(m2 Float64ListList) bool     { return Float64ListListEquals(m1, m2) }
func (m1 Complex64ListList) Equals(m2 Complex64ListList) bool { return Complex64ListListEquals(m1, m2) }
func (m1 Complex128ListList) Equals(m2 Complex128ListList) bool {
	return Complex128ListListEquals(m1, m2)
}
func (m1 AnyListList) Equals(m2 AnyListList) bool { return AnyListListEquals(m1, m2) }
func (m1 BoolOptionListList) Equals(m2 BoolOptionListList) bool {
	return BoolOptionListListEquals(m1, m2)
}
func (m1 StringOptionListList) Equals(m2 StringOptionListList) bool {
	return StringOptionListListEquals(m1, m2)
}
func (m1 IntOptionListList) Equals(m2 IntOptionListList) bool { return IntOptionListListEquals(m1, m2) }
func (m1 Int8OptionListList) Equals(m2 Int8OptionListList) bool {
	return Int8OptionListListEquals(m1, m2)
}
func (m1 Int16OptionListList) Equals(m2 Int16OptionListList) bool {
	return Int16OptionListListEquals(m1, m2)
}
func (m1 Int32OptionListList) Equals(m2 Int32OptionListList) bool {
	return Int32OptionListListEquals(m1, m2)
}
func (m1 Int64OptionListList) Equals(m2 Int64OptionListList) bool {
	return Int64OptionListListEquals(m1, m2)
}
func (m1 UintOptionListList) Equals(m2 UintOptionListList) bool {
	return UintOptionListListEquals(m1, m2)
}
func (m1 Uint8OptionListList) Equals(m2 Uint8OptionListList) bool {
	return Uint8OptionListListEquals(m1, m2)
}
func (m1 Uint16OptionListList) Equals(m2 Uint16OptionListList) bool {
	return Uint16OptionListListEquals(m1, m2)
}
func (m1 Uint32OptionListList) Equals(m2 Uint32OptionListList) bool {
	return Uint32OptionListListEquals(m1, m2)
}
func (m1 Uint64OptionListList) Equals(m2 Uint64OptionListList) bool {
	return Uint64OptionListListEquals(m1, m2)
}
func (m1 UintptrOptionListList) Equals(m2 UintptrOptionListList) bool {
	return UintptrOptionListListEquals(m1, m2)
}
func (m1 ByteOptionListList) Equals(m2 ByteOptionListList) bool {
	return ByteOptionListListEquals(m1, m2)
}
func (m1 RuneOptionListList) Equals(m2 RuneOptionListList) bool {
	return RuneOptionListListEquals(m1, m2)
}
func (m1 Float32OptionListList) Equals(m2 Float32OptionListList) bool {
	return Float32OptionListListEquals(m1, m2)
}
func (m1 Float64OptionListList) Equals(m2 Float64OptionListList) bool {
	return Float64OptionListListEquals(m1, m2)
}
func (m1 Complex64OptionListList) Equals(m2 Complex64OptionListList) bool {
	return Complex64OptionListListEquals(m1, m2)
}
func (m1 Complex128OptionListList) Equals(m2 Complex128OptionListList) bool {
	return Complex128OptionListListEquals(m1, m2)
}
func (m1 AnyOptionListList) Equals(m2 AnyOptionListList) bool { return AnyOptionListListEquals(m1, m2) }
func (m1 BoolArrOptionListList) Equals(m2 BoolArrOptionListList) bool {
	return BoolArrOptionListListEquals(m1, m2)
}
func (m1 StringArrOptionListList) Equals(m2 StringArrOptionListList) bool {
	return StringArrOptionListListEquals(m1, m2)
}
func (m1 IntArrOptionListList) Equals(m2 IntArrOptionListList) bool {
	return IntArrOptionListListEquals(m1, m2)
}
func (m1 Int8ArrOptionListList) Equals(m2 Int8ArrOptionListList) bool {
	return Int8ArrOptionListListEquals(m1, m2)
}
func (m1 Int16ArrOptionListList) Equals(m2 Int16ArrOptionListList) bool {
	return Int16ArrOptionListListEquals(m1, m2)
}
func (m1 Int32ArrOptionListList) Equals(m2 Int32ArrOptionListList) bool {
	return Int32ArrOptionListListEquals(m1, m2)
}
func (m1 Int64ArrOptionListList) Equals(m2 Int64ArrOptionListList) bool {
	return Int64ArrOptionListListEquals(m1, m2)
}
func (m1 UintArrOptionListList) Equals(m2 UintArrOptionListList) bool {
	return UintArrOptionListListEquals(m1, m2)
}
func (m1 Uint8ArrOptionListList) Equals(m2 Uint8ArrOptionListList) bool {
	return Uint8ArrOptionListListEquals(m1, m2)
}
func (m1 Uint16ArrOptionListList) Equals(m2 Uint16ArrOptionListList) bool {
	return Uint16ArrOptionListListEquals(m1, m2)
}
func (m1 Uint32ArrOptionListList) Equals(m2 Uint32ArrOptionListList) bool {
	return Uint32ArrOptionListListEquals(m1, m2)
}
func (m1 Uint64ArrOptionListList) Equals(m2 Uint64ArrOptionListList) bool {
	return Uint64ArrOptionListListEquals(m1, m2)
}
func (m1 UintptrArrOptionListList) Equals(m2 UintptrArrOptionListList) bool {
	return UintptrArrOptionListListEquals(m1, m2)
}
func (m1 ByteArrOptionListList) Equals(m2 ByteArrOptionListList) bool {
	return ByteArrOptionListListEquals(m1, m2)
}
func (m1 RuneArrOptionListList) Equals(m2 RuneArrOptionListList) bool {
	return RuneArrOptionListListEquals(m1, m2)
}
func (m1 Float32ArrOptionListList) Equals(m2 Float32ArrOptionListList) bool {
	return Float32ArrOptionListListEquals(m1, m2)
}
func (m1 Float64ArrOptionListList) Equals(m2 Float64ArrOptionListList) bool {
	return Float64ArrOptionListListEquals(m1, m2)
}
func (m1 Complex64ArrOptionListList) Equals(m2 Complex64ArrOptionListList) bool {
	return Complex64ArrOptionListListEquals(m1, m2)
}
func (m1 Complex128ArrOptionListList) Equals(m2 Complex128ArrOptionListList) bool {
	return Complex128ArrOptionListListEquals(m1, m2)
}
func (m1 AnyArrOptionListList) Equals(m2 AnyArrOptionListList) bool {
	return AnyArrOptionListListEquals(m1, m2)
}
func (m1 BoolArrArrOptionListList) Equals(m2 BoolArrArrOptionListList) bool {
	return BoolArrArrOptionListListEquals(m1, m2)
}
func (m1 StringArrArrOptionListList) Equals(m2 StringArrArrOptionListList) bool {
	return StringArrArrOptionListListEquals(m1, m2)
}
func (m1 IntArrArrOptionListList) Equals(m2 IntArrArrOptionListList) bool {
	return IntArrArrOptionListListEquals(m1, m2)
}
func (m1 Int8ArrArrOptionListList) Equals(m2 Int8ArrArrOptionListList) bool {
	return Int8ArrArrOptionListListEquals(m1, m2)
}
func (m1 Int16ArrArrOptionListList) Equals(m2 Int16ArrArrOptionListList) bool {
	return Int16ArrArrOptionListListEquals(m1, m2)
}
func (m1 Int32ArrArrOptionListList) Equals(m2 Int32ArrArrOptionListList) bool {
	return Int32ArrArrOptionListListEquals(m1, m2)
}
func (m1 Int64ArrArrOptionListList) Equals(m2 Int64ArrArrOptionListList) bool {
	return Int64ArrArrOptionListListEquals(m1, m2)
}
func (m1 UintArrArrOptionListList) Equals(m2 UintArrArrOptionListList) bool {
	return UintArrArrOptionListListEquals(m1, m2)
}
func (m1 Uint8ArrArrOptionListList) Equals(m2 Uint8ArrArrOptionListList) bool {
	return Uint8ArrArrOptionListListEquals(m1, m2)
}
func (m1 Uint16ArrArrOptionListList) Equals(m2 Uint16ArrArrOptionListList) bool {
	return Uint16ArrArrOptionListListEquals(m1, m2)
}
func (m1 Uint32ArrArrOptionListList) Equals(m2 Uint32ArrArrOptionListList) bool {
	return Uint32ArrArrOptionListListEquals(m1, m2)
}
func (m1 Uint64ArrArrOptionListList) Equals(m2 Uint64ArrArrOptionListList) bool {
	return Uint64ArrArrOptionListListEquals(m1, m2)
}
func (m1 UintptrArrArrOptionListList) Equals(m2 UintptrArrArrOptionListList) bool {
	return UintptrArrArrOptionListListEquals(m1, m2)
}
func (m1 ByteArrArrOptionListList) Equals(m2 ByteArrArrOptionListList) bool {
	return ByteArrArrOptionListListEquals(m1, m2)
}
func (m1 RuneArrArrOptionListList) Equals(m2 RuneArrArrOptionListList) bool {
	return RuneArrArrOptionListListEquals(m1, m2)
}
func (m1 Float32ArrArrOptionListList) Equals(m2 Float32ArrArrOptionListList) bool {
	return Float32ArrArrOptionListListEquals(m1, m2)
}
func (m1 Float64ArrArrOptionListList) Equals(m2 Float64ArrArrOptionListList) bool {
	return Float64ArrArrOptionListListEquals(m1, m2)
}
func (m1 Complex64ArrArrOptionListList) Equals(m2 Complex64ArrArrOptionListList) bool {
	return Complex64ArrArrOptionListListEquals(m1, m2)
}
func (m1 Complex128ArrArrOptionListList) Equals(m2 Complex128ArrArrOptionListList) bool {
	return Complex128ArrArrOptionListListEquals(m1, m2)
}
func (m1 AnyArrArrOptionListList) Equals(m2 AnyArrArrOptionListList) bool {
	return AnyArrArrOptionListListEquals(m1, m2)
}
func (m1 BoolOptionArrOptionListList) Equals(m2 BoolOptionArrOptionListList) bool {
	return BoolOptionArrOptionListListEquals(m1, m2)
}
func (m1 StringOptionArrOptionListList) Equals(m2 StringOptionArrOptionListList) bool {
	return StringOptionArrOptionListListEquals(m1, m2)
}
func (m1 IntOptionArrOptionListList) Equals(m2 IntOptionArrOptionListList) bool {
	return IntOptionArrOptionListListEquals(m1, m2)
}
func (m1 Int8OptionArrOptionListList) Equals(m2 Int8OptionArrOptionListList) bool {
	return Int8OptionArrOptionListListEquals(m1, m2)
}
func (m1 Int16OptionArrOptionListList) Equals(m2 Int16OptionArrOptionListList) bool {
	return Int16OptionArrOptionListListEquals(m1, m2)
}
func (m1 Int32OptionArrOptionListList) Equals(m2 Int32OptionArrOptionListList) bool {
	return Int32OptionArrOptionListListEquals(m1, m2)
}
func (m1 Int64OptionArrOptionListList) Equals(m2 Int64OptionArrOptionListList) bool {
	return Int64OptionArrOptionListListEquals(m1, m2)
}
func (m1 UintOptionArrOptionListList) Equals(m2 UintOptionArrOptionListList) bool {
	return UintOptionArrOptionListListEquals(m1, m2)
}
func (m1 Uint8OptionArrOptionListList) Equals(m2 Uint8OptionArrOptionListList) bool {
	return Uint8OptionArrOptionListListEquals(m1, m2)
}
func (m1 Uint16OptionArrOptionListList) Equals(m2 Uint16OptionArrOptionListList) bool {
	return Uint16OptionArrOptionListListEquals(m1, m2)
}
func (m1 Uint32OptionArrOptionListList) Equals(m2 Uint32OptionArrOptionListList) bool {
	return Uint32OptionArrOptionListListEquals(m1, m2)
}
func (m1 Uint64OptionArrOptionListList) Equals(m2 Uint64OptionArrOptionListList) bool {
	return Uint64OptionArrOptionListListEquals(m1, m2)
}
func (m1 UintptrOptionArrOptionListList) Equals(m2 UintptrOptionArrOptionListList) bool {
	return UintptrOptionArrOptionListListEquals(m1, m2)
}
func (m1 ByteOptionArrOptionListList) Equals(m2 ByteOptionArrOptionListList) bool {
	return ByteOptionArrOptionListListEquals(m1, m2)
}
func (m1 RuneOptionArrOptionListList) Equals(m2 RuneOptionArrOptionListList) bool {
	return RuneOptionArrOptionListListEquals(m1, m2)
}
func (m1 Float32OptionArrOptionListList) Equals(m2 Float32OptionArrOptionListList) bool {
	return Float32OptionArrOptionListListEquals(m1, m2)
}
func (m1 Float64OptionArrOptionListList) Equals(m2 Float64OptionArrOptionListList) bool {
	return Float64OptionArrOptionListListEquals(m1, m2)
}
func (m1 Complex64OptionArrOptionListList) Equals(m2 Complex64OptionArrOptionListList) bool {
	return Complex64OptionArrOptionListListEquals(m1, m2)
}
func (m1 Complex128OptionArrOptionListList) Equals(m2 Complex128OptionArrOptionListList) bool {
	return Complex128OptionArrOptionListListEquals(m1, m2)
}
func (m1 AnyOptionArrOptionListList) Equals(m2 AnyOptionArrOptionListList) bool {
	return AnyOptionArrOptionListListEquals(m1, m2)
}
func (m1 BoolListOptionListList) Equals(m2 BoolListOptionListList) bool {
	return BoolListOptionListListEquals(m1, m2)
}
func (m1 StringListOptionListList) Equals(m2 StringListOptionListList) bool {
	return StringListOptionListListEquals(m1, m2)
}
func (m1 IntListOptionListList) Equals(m2 IntListOptionListList) bool {
	return IntListOptionListListEquals(m1, m2)
}
func (m1 Int8ListOptionListList) Equals(m2 Int8ListOptionListList) bool {
	return Int8ListOptionListListEquals(m1, m2)
}
func (m1 Int16ListOptionListList) Equals(m2 Int16ListOptionListList) bool {
	return Int16ListOptionListListEquals(m1, m2)
}
func (m1 Int32ListOptionListList) Equals(m2 Int32ListOptionListList) bool {
	return Int32ListOptionListListEquals(m1, m2)
}
func (m1 Int64ListOptionListList) Equals(m2 Int64ListOptionListList) bool {
	return Int64ListOptionListListEquals(m1, m2)
}
func (m1 UintListOptionListList) Equals(m2 UintListOptionListList) bool {
	return UintListOptionListListEquals(m1, m2)
}
func (m1 Uint8ListOptionListList) Equals(m2 Uint8ListOptionListList) bool {
	return Uint8ListOptionListListEquals(m1, m2)
}
func (m1 Uint16ListOptionListList) Equals(m2 Uint16ListOptionListList) bool {
	return Uint16ListOptionListListEquals(m1, m2)
}
func (m1 Uint32ListOptionListList) Equals(m2 Uint32ListOptionListList) bool {
	return Uint32ListOptionListListEquals(m1, m2)
}
func (m1 Uint64ListOptionListList) Equals(m2 Uint64ListOptionListList) bool {
	return Uint64ListOptionListListEquals(m1, m2)
}
func (m1 UintptrListOptionListList) Equals(m2 UintptrListOptionListList) bool {
	return UintptrListOptionListListEquals(m1, m2)
}
func (m1 ByteListOptionListList) Equals(m2 ByteListOptionListList) bool {
	return ByteListOptionListListEquals(m1, m2)
}
func (m1 RuneListOptionListList) Equals(m2 RuneListOptionListList) bool {
	return RuneListOptionListListEquals(m1, m2)
}
func (m1 Float32ListOptionListList) Equals(m2 Float32ListOptionListList) bool {
	return Float32ListOptionListListEquals(m1, m2)
}
func (m1 Float64ListOptionListList) Equals(m2 Float64ListOptionListList) bool {
	return Float64ListOptionListListEquals(m1, m2)
}
func (m1 Complex64ListOptionListList) Equals(m2 Complex64ListOptionListList) bool {
	return Complex64ListOptionListListEquals(m1, m2)
}
func (m1 Complex128ListOptionListList) Equals(m2 Complex128ListOptionListList) bool {
	return Complex128ListOptionListListEquals(m1, m2)
}
func (m1 AnyListOptionListList) Equals(m2 AnyListOptionListList) bool {
	return AnyListOptionListListEquals(m1, m2)
}
func (m1 BoolOptionOptionListList) Equals(m2 BoolOptionOptionListList) bool {
	return BoolOptionOptionListListEquals(m1, m2)
}
func (m1 StringOptionOptionListList) Equals(m2 StringOptionOptionListList) bool {
	return StringOptionOptionListListEquals(m1, m2)
}
func (m1 IntOptionOptionListList) Equals(m2 IntOptionOptionListList) bool {
	return IntOptionOptionListListEquals(m1, m2)
}
func (m1 Int8OptionOptionListList) Equals(m2 Int8OptionOptionListList) bool {
	return Int8OptionOptionListListEquals(m1, m2)
}
func (m1 Int16OptionOptionListList) Equals(m2 Int16OptionOptionListList) bool {
	return Int16OptionOptionListListEquals(m1, m2)
}
func (m1 Int32OptionOptionListList) Equals(m2 Int32OptionOptionListList) bool {
	return Int32OptionOptionListListEquals(m1, m2)
}
func (m1 Int64OptionOptionListList) Equals(m2 Int64OptionOptionListList) bool {
	return Int64OptionOptionListListEquals(m1, m2)
}
func (m1 UintOptionOptionListList) Equals(m2 UintOptionOptionListList) bool {
	return UintOptionOptionListListEquals(m1, m2)
}
func (m1 Uint8OptionOptionListList) Equals(m2 Uint8OptionOptionListList) bool {
	return Uint8OptionOptionListListEquals(m1, m2)
}
func (m1 Uint16OptionOptionListList) Equals(m2 Uint16OptionOptionListList) bool {
	return Uint16OptionOptionListListEquals(m1, m2)
}
func (m1 Uint32OptionOptionListList) Equals(m2 Uint32OptionOptionListList) bool {
	return Uint32OptionOptionListListEquals(m1, m2)
}
func (m1 Uint64OptionOptionListList) Equals(m2 Uint64OptionOptionListList) bool {
	return Uint64OptionOptionListListEquals(m1, m2)
}
func (m1 UintptrOptionOptionListList) Equals(m2 UintptrOptionOptionListList) bool {
	return UintptrOptionOptionListListEquals(m1, m2)
}
func (m1 ByteOptionOptionListList) Equals(m2 ByteOptionOptionListList) bool {
	return ByteOptionOptionListListEquals(m1, m2)
}
func (m1 RuneOptionOptionListList) Equals(m2 RuneOptionOptionListList) bool {
	return RuneOptionOptionListListEquals(m1, m2)
}
func (m1 Float32OptionOptionListList) Equals(m2 Float32OptionOptionListList) bool {
	return Float32OptionOptionListListEquals(m1, m2)
}
func (m1 Float64OptionOptionListList) Equals(m2 Float64OptionOptionListList) bool {
	return Float64OptionOptionListListEquals(m1, m2)
}
func (m1 Complex64OptionOptionListList) Equals(m2 Complex64OptionOptionListList) bool {
	return Complex64OptionOptionListListEquals(m1, m2)
}
func (m1 Complex128OptionOptionListList) Equals(m2 Complex128OptionOptionListList) bool {
	return Complex128OptionOptionListListEquals(m1, m2)
}
func (m1 AnyOptionOptionListList) Equals(m2 AnyOptionOptionListList) bool {
	return AnyOptionOptionListListEquals(m1, m2)
}
func (m1 BoolArrOptionOptionListList) Equals(m2 BoolArrOptionOptionListList) bool {
	return BoolArrOptionOptionListListEquals(m1, m2)
}
func (m1 StringArrOptionOptionListList) Equals(m2 StringArrOptionOptionListList) bool {
	return StringArrOptionOptionListListEquals(m1, m2)
}
func (m1 IntArrOptionOptionListList) Equals(m2 IntArrOptionOptionListList) bool {
	return IntArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int8ArrOptionOptionListList) Equals(m2 Int8ArrOptionOptionListList) bool {
	return Int8ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int16ArrOptionOptionListList) Equals(m2 Int16ArrOptionOptionListList) bool {
	return Int16ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int32ArrOptionOptionListList) Equals(m2 Int32ArrOptionOptionListList) bool {
	return Int32ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int64ArrOptionOptionListList) Equals(m2 Int64ArrOptionOptionListList) bool {
	return Int64ArrOptionOptionListListEquals(m1, m2)
}
func (m1 UintArrOptionOptionListList) Equals(m2 UintArrOptionOptionListList) bool {
	return UintArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint8ArrOptionOptionListList) Equals(m2 Uint8ArrOptionOptionListList) bool {
	return Uint8ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint16ArrOptionOptionListList) Equals(m2 Uint16ArrOptionOptionListList) bool {
	return Uint16ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint32ArrOptionOptionListList) Equals(m2 Uint32ArrOptionOptionListList) bool {
	return Uint32ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint64ArrOptionOptionListList) Equals(m2 Uint64ArrOptionOptionListList) bool {
	return Uint64ArrOptionOptionListListEquals(m1, m2)
}
func (m1 UintptrArrOptionOptionListList) Equals(m2 UintptrArrOptionOptionListList) bool {
	return UintptrArrOptionOptionListListEquals(m1, m2)
}
func (m1 ByteArrOptionOptionListList) Equals(m2 ByteArrOptionOptionListList) bool {
	return ByteArrOptionOptionListListEquals(m1, m2)
}
func (m1 RuneArrOptionOptionListList) Equals(m2 RuneArrOptionOptionListList) bool {
	return RuneArrOptionOptionListListEquals(m1, m2)
}
func (m1 Float32ArrOptionOptionListList) Equals(m2 Float32ArrOptionOptionListList) bool {
	return Float32ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Float64ArrOptionOptionListList) Equals(m2 Float64ArrOptionOptionListList) bool {
	return Float64ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Complex64ArrOptionOptionListList) Equals(m2 Complex64ArrOptionOptionListList) bool {
	return Complex64ArrOptionOptionListListEquals(m1, m2)
}
func (m1 Complex128ArrOptionOptionListList) Equals(m2 Complex128ArrOptionOptionListList) bool {
	return Complex128ArrOptionOptionListListEquals(m1, m2)
}
func (m1 AnyArrOptionOptionListList) Equals(m2 AnyArrOptionOptionListList) bool {
	return AnyArrOptionOptionListListEquals(m1, m2)
}
func (m1 BoolArrArrOptionOptionListList) Equals(m2 BoolArrArrOptionOptionListList) bool {
	return BoolArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 StringArrArrOptionOptionListList) Equals(m2 StringArrArrOptionOptionListList) bool {
	return StringArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 IntArrArrOptionOptionListList) Equals(m2 IntArrArrOptionOptionListList) bool {
	return IntArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int8ArrArrOptionOptionListList) Equals(m2 Int8ArrArrOptionOptionListList) bool {
	return Int8ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int16ArrArrOptionOptionListList) Equals(m2 Int16ArrArrOptionOptionListList) bool {
	return Int16ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int32ArrArrOptionOptionListList) Equals(m2 Int32ArrArrOptionOptionListList) bool {
	return Int32ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int64ArrArrOptionOptionListList) Equals(m2 Int64ArrArrOptionOptionListList) bool {
	return Int64ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 UintArrArrOptionOptionListList) Equals(m2 UintArrArrOptionOptionListList) bool {
	return UintArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint8ArrArrOptionOptionListList) Equals(m2 Uint8ArrArrOptionOptionListList) bool {
	return Uint8ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint16ArrArrOptionOptionListList) Equals(m2 Uint16ArrArrOptionOptionListList) bool {
	return Uint16ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint32ArrArrOptionOptionListList) Equals(m2 Uint32ArrArrOptionOptionListList) bool {
	return Uint32ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint64ArrArrOptionOptionListList) Equals(m2 Uint64ArrArrOptionOptionListList) bool {
	return Uint64ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 UintptrArrArrOptionOptionListList) Equals(m2 UintptrArrArrOptionOptionListList) bool {
	return UintptrArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 ByteArrArrOptionOptionListList) Equals(m2 ByteArrArrOptionOptionListList) bool {
	return ByteArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 RuneArrArrOptionOptionListList) Equals(m2 RuneArrArrOptionOptionListList) bool {
	return RuneArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Float32ArrArrOptionOptionListList) Equals(m2 Float32ArrArrOptionOptionListList) bool {
	return Float32ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Float64ArrArrOptionOptionListList) Equals(m2 Float64ArrArrOptionOptionListList) bool {
	return Float64ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Complex64ArrArrOptionOptionListList) Equals(m2 Complex64ArrArrOptionOptionListList) bool {
	return Complex64ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 Complex128ArrArrOptionOptionListList) Equals(m2 Complex128ArrArrOptionOptionListList) bool {
	return Complex128ArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 AnyArrArrOptionOptionListList) Equals(m2 AnyArrArrOptionOptionListList) bool {
	return AnyArrArrOptionOptionListListEquals(m1, m2)
}
func (m1 BoolOptionArrOptionOptionListList) Equals(m2 BoolOptionArrOptionOptionListList) bool {
	return BoolOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 StringOptionArrOptionOptionListList) Equals(m2 StringOptionArrOptionOptionListList) bool {
	return StringOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 IntOptionArrOptionOptionListList) Equals(m2 IntOptionArrOptionOptionListList) bool {
	return IntOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int8OptionArrOptionOptionListList) Equals(m2 Int8OptionArrOptionOptionListList) bool {
	return Int8OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int16OptionArrOptionOptionListList) Equals(m2 Int16OptionArrOptionOptionListList) bool {
	return Int16OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int32OptionArrOptionOptionListList) Equals(m2 Int32OptionArrOptionOptionListList) bool {
	return Int32OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Int64OptionArrOptionOptionListList) Equals(m2 Int64OptionArrOptionOptionListList) bool {
	return Int64OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 UintOptionArrOptionOptionListList) Equals(m2 UintOptionArrOptionOptionListList) bool {
	return UintOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint8OptionArrOptionOptionListList) Equals(m2 Uint8OptionArrOptionOptionListList) bool {
	return Uint8OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint16OptionArrOptionOptionListList) Equals(m2 Uint16OptionArrOptionOptionListList) bool {
	return Uint16OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint32OptionArrOptionOptionListList) Equals(m2 Uint32OptionArrOptionOptionListList) bool {
	return Uint32OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Uint64OptionArrOptionOptionListList) Equals(m2 Uint64OptionArrOptionOptionListList) bool {
	return Uint64OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 UintptrOptionArrOptionOptionListList) Equals(m2 UintptrOptionArrOptionOptionListList) bool {
	return UintptrOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 ByteOptionArrOptionOptionListList) Equals(m2 ByteOptionArrOptionOptionListList) bool {
	return ByteOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 RuneOptionArrOptionOptionListList) Equals(m2 RuneOptionArrOptionOptionListList) bool {
	return RuneOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Float32OptionArrOptionOptionListList) Equals(m2 Float32OptionArrOptionOptionListList) bool {
	return Float32OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Float64OptionArrOptionOptionListList) Equals(m2 Float64OptionArrOptionOptionListList) bool {
	return Float64OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Complex64OptionArrOptionOptionListList) Equals(m2 Complex64OptionArrOptionOptionListList) bool {
	return Complex64OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 Complex128OptionArrOptionOptionListList) Equals(m2 Complex128OptionArrOptionOptionListList) bool {
	return Complex128OptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 AnyOptionArrOptionOptionListList) Equals(m2 AnyOptionArrOptionOptionListList) bool {
	return AnyOptionArrOptionOptionListListEquals(m1, m2)
}
func (m1 BoolListOptionOptionListList) Equals(m2 BoolListOptionOptionListList) bool {
	return BoolListOptionOptionListListEquals(m1, m2)
}
func (m1 StringListOptionOptionListList) Equals(m2 StringListOptionOptionListList) bool {
	return StringListOptionOptionListListEquals(m1, m2)
}
func (m1 IntListOptionOptionListList) Equals(m2 IntListOptionOptionListList) bool {
	return IntListOptionOptionListListEquals(m1, m2)
}
func (m1 Int8ListOptionOptionListList) Equals(m2 Int8ListOptionOptionListList) bool {
	return Int8ListOptionOptionListListEquals(m1, m2)
}
func (m1 Int16ListOptionOptionListList) Equals(m2 Int16ListOptionOptionListList) bool {
	return Int16ListOptionOptionListListEquals(m1, m2)
}
func (m1 Int32ListOptionOptionListList) Equals(m2 Int32ListOptionOptionListList) bool {
	return Int32ListOptionOptionListListEquals(m1, m2)
}
func (m1 Int64ListOptionOptionListList) Equals(m2 Int64ListOptionOptionListList) bool {
	return Int64ListOptionOptionListListEquals(m1, m2)
}
func (m1 UintListOptionOptionListList) Equals(m2 UintListOptionOptionListList) bool {
	return UintListOptionOptionListListEquals(m1, m2)
}
func (m1 Uint8ListOptionOptionListList) Equals(m2 Uint8ListOptionOptionListList) bool {
	return Uint8ListOptionOptionListListEquals(m1, m2)
}
func (m1 Uint16ListOptionOptionListList) Equals(m2 Uint16ListOptionOptionListList) bool {
	return Uint16ListOptionOptionListListEquals(m1, m2)
}
func (m1 Uint32ListOptionOptionListList) Equals(m2 Uint32ListOptionOptionListList) bool {
	return Uint32ListOptionOptionListListEquals(m1, m2)
}
func (m1 Uint64ListOptionOptionListList) Equals(m2 Uint64ListOptionOptionListList) bool {
	return Uint64ListOptionOptionListListEquals(m1, m2)
}
func (m1 UintptrListOptionOptionListList) Equals(m2 UintptrListOptionOptionListList) bool {
	return UintptrListOptionOptionListListEquals(m1, m2)
}
func (m1 ByteListOptionOptionListList) Equals(m2 ByteListOptionOptionListList) bool {
	return ByteListOptionOptionListListEquals(m1, m2)
}
func (m1 RuneListOptionOptionListList) Equals(m2 RuneListOptionOptionListList) bool {
	return RuneListOptionOptionListListEquals(m1, m2)
}
func (m1 Float32ListOptionOptionListList) Equals(m2 Float32ListOptionOptionListList) bool {
	return Float32ListOptionOptionListListEquals(m1, m2)
}
func (m1 Float64ListOptionOptionListList) Equals(m2 Float64ListOptionOptionListList) bool {
	return Float64ListOptionOptionListListEquals(m1, m2)
}
func (m1 Complex64ListOptionOptionListList) Equals(m2 Complex64ListOptionOptionListList) bool {
	return Complex64ListOptionOptionListListEquals(m1, m2)
}
func (m1 Complex128ListOptionOptionListList) Equals(m2 Complex128ListOptionOptionListList) bool {
	return Complex128ListOptionOptionListListEquals(m1, m2)
}
func (m1 AnyListOptionOptionListList) Equals(m2 AnyListOptionOptionListList) bool {
	return AnyListOptionOptionListListEquals(m1, m2)
}
func (m1 BoolArrListList) Equals(m2 BoolArrListList) bool     { return BoolArrListListEquals(m1, m2) }
func (m1 StringArrListList) Equals(m2 StringArrListList) bool { return StringArrListListEquals(m1, m2) }
func (m1 IntArrListList) Equals(m2 IntArrListList) bool       { return IntArrListListEquals(m1, m2) }
func (m1 Int8ArrListList) Equals(m2 Int8ArrListList) bool     { return Int8ArrListListEquals(m1, m2) }
func (m1 Int16ArrListList) Equals(m2 Int16ArrListList) bool   { return Int16ArrListListEquals(m1, m2) }
func (m1 Int32ArrListList) Equals(m2 Int32ArrListList) bool   { return Int32ArrListListEquals(m1, m2) }
func (m1 Int64ArrListList) Equals(m2 Int64ArrListList) bool   { return Int64ArrListListEquals(m1, m2) }
func (m1 UintArrListList) Equals(m2 UintArrListList) bool     { return UintArrListListEquals(m1, m2) }
func (m1 Uint8ArrListList) Equals(m2 Uint8ArrListList) bool   { return Uint8ArrListListEquals(m1, m2) }
func (m1 Uint16ArrListList) Equals(m2 Uint16ArrListList) bool { return Uint16ArrListListEquals(m1, m2) }
func (m1 Uint32ArrListList) Equals(m2 Uint32ArrListList) bool { return Uint32ArrListListEquals(m1, m2) }
func (m1 Uint64ArrListList) Equals(m2 Uint64ArrListList) bool { return Uint64ArrListListEquals(m1, m2) }
func (m1 UintptrArrListList) Equals(m2 UintptrArrListList) bool {
	return UintptrArrListListEquals(m1, m2)
}
func (m1 ByteArrListList) Equals(m2 ByteArrListList) bool { return ByteArrListListEquals(m1, m2) }
func (m1 RuneArrListList) Equals(m2 RuneArrListList) bool { return RuneArrListListEquals(m1, m2) }
func (m1 Float32ArrListList) Equals(m2 Float32ArrListList) bool {
	return Float32ArrListListEquals(m1, m2)
}
func (m1 Float64ArrListList) Equals(m2 Float64ArrListList) bool {
	return Float64ArrListListEquals(m1, m2)
}
func (m1 Complex64ArrListList) Equals(m2 Complex64ArrListList) bool {
	return Complex64ArrListListEquals(m1, m2)
}
func (m1 Complex128ArrListList) Equals(m2 Complex128ArrListList) bool {
	return Complex128ArrListListEquals(m1, m2)
}
func (m1 AnyArrListList) Equals(m2 AnyArrListList) bool { return AnyArrListListEquals(m1, m2) }
func (m1 BoolArrArrListList) Equals(m2 BoolArrArrListList) bool {
	return BoolArrArrListListEquals(m1, m2)
}
func (m1 StringArrArrListList) Equals(m2 StringArrArrListList) bool {
	return StringArrArrListListEquals(m1, m2)
}
func (m1 IntArrArrListList) Equals(m2 IntArrArrListList) bool { return IntArrArrListListEquals(m1, m2) }
func (m1 Int8ArrArrListList) Equals(m2 Int8ArrArrListList) bool {
	return Int8ArrArrListListEquals(m1, m2)
}
func (m1 Int16ArrArrListList) Equals(m2 Int16ArrArrListList) bool {
	return Int16ArrArrListListEquals(m1, m2)
}
func (m1 Int32ArrArrListList) Equals(m2 Int32ArrArrListList) bool {
	return Int32ArrArrListListEquals(m1, m2)
}
func (m1 Int64ArrArrListList) Equals(m2 Int64ArrArrListList) bool {
	return Int64ArrArrListListEquals(m1, m2)
}
func (m1 UintArrArrListList) Equals(m2 UintArrArrListList) bool {
	return UintArrArrListListEquals(m1, m2)
}
func (m1 Uint8ArrArrListList) Equals(m2 Uint8ArrArrListList) bool {
	return Uint8ArrArrListListEquals(m1, m2)
}
func (m1 Uint16ArrArrListList) Equals(m2 Uint16ArrArrListList) bool {
	return Uint16ArrArrListListEquals(m1, m2)
}
func (m1 Uint32ArrArrListList) Equals(m2 Uint32ArrArrListList) bool {
	return Uint32ArrArrListListEquals(m1, m2)
}
func (m1 Uint64ArrArrListList) Equals(m2 Uint64ArrArrListList) bool {
	return Uint64ArrArrListListEquals(m1, m2)
}
func (m1 UintptrArrArrListList) Equals(m2 UintptrArrArrListList) bool {
	return UintptrArrArrListListEquals(m1, m2)
}
func (m1 ByteArrArrListList) Equals(m2 ByteArrArrListList) bool {
	return ByteArrArrListListEquals(m1, m2)
}
func (m1 RuneArrArrListList) Equals(m2 RuneArrArrListList) bool {
	return RuneArrArrListListEquals(m1, m2)
}
func (m1 Float32ArrArrListList) Equals(m2 Float32ArrArrListList) bool {
	return Float32ArrArrListListEquals(m1, m2)
}
func (m1 Float64ArrArrListList) Equals(m2 Float64ArrArrListList) bool {
	return Float64ArrArrListListEquals(m1, m2)
}
func (m1 Complex64ArrArrListList) Equals(m2 Complex64ArrArrListList) bool {
	return Complex64ArrArrListListEquals(m1, m2)
}
func (m1 Complex128ArrArrListList) Equals(m2 Complex128ArrArrListList) bool {
	return Complex128ArrArrListListEquals(m1, m2)
}
func (m1 AnyArrArrListList) Equals(m2 AnyArrArrListList) bool { return AnyArrArrListListEquals(m1, m2) }
func (m1 BoolOptionArrListList) Equals(m2 BoolOptionArrListList) bool {
	return BoolOptionArrListListEquals(m1, m2)
}
func (m1 StringOptionArrListList) Equals(m2 StringOptionArrListList) bool {
	return StringOptionArrListListEquals(m1, m2)
}
func (m1 IntOptionArrListList) Equals(m2 IntOptionArrListList) bool {
	return IntOptionArrListListEquals(m1, m2)
}
func (m1 Int8OptionArrListList) Equals(m2 Int8OptionArrListList) bool {
	return Int8OptionArrListListEquals(m1, m2)
}
func (m1 Int16OptionArrListList) Equals(m2 Int16OptionArrListList) bool {
	return Int16OptionArrListListEquals(m1, m2)
}
func (m1 Int32OptionArrListList) Equals(m2 Int32OptionArrListList) bool {
	return Int32OptionArrListListEquals(m1, m2)
}
func (m1 Int64OptionArrListList) Equals(m2 Int64OptionArrListList) bool {
	return Int64OptionArrListListEquals(m1, m2)
}
func (m1 UintOptionArrListList) Equals(m2 UintOptionArrListList) bool {
	return UintOptionArrListListEquals(m1, m2)
}
func (m1 Uint8OptionArrListList) Equals(m2 Uint8OptionArrListList) bool {
	return Uint8OptionArrListListEquals(m1, m2)
}
func (m1 Uint16OptionArrListList) Equals(m2 Uint16OptionArrListList) bool {
	return Uint16OptionArrListListEquals(m1, m2)
}
func (m1 Uint32OptionArrListList) Equals(m2 Uint32OptionArrListList) bool {
	return Uint32OptionArrListListEquals(m1, m2)
}
func (m1 Uint64OptionArrListList) Equals(m2 Uint64OptionArrListList) bool {
	return Uint64OptionArrListListEquals(m1, m2)
}
func (m1 UintptrOptionArrListList) Equals(m2 UintptrOptionArrListList) bool {
	return UintptrOptionArrListListEquals(m1, m2)
}
func (m1 ByteOptionArrListList) Equals(m2 ByteOptionArrListList) bool {
	return ByteOptionArrListListEquals(m1, m2)
}
func (m1 RuneOptionArrListList) Equals(m2 RuneOptionArrListList) bool {
	return RuneOptionArrListListEquals(m1, m2)
}
func (m1 Float32OptionArrListList) Equals(m2 Float32OptionArrListList) bool {
	return Float32OptionArrListListEquals(m1, m2)
}
func (m1 Float64OptionArrListList) Equals(m2 Float64OptionArrListList) bool {
	return Float64OptionArrListListEquals(m1, m2)
}
func (m1 Complex64OptionArrListList) Equals(m2 Complex64OptionArrListList) bool {
	return Complex64OptionArrListListEquals(m1, m2)
}
func (m1 Complex128OptionArrListList) Equals(m2 Complex128OptionArrListList) bool {
	return Complex128OptionArrListListEquals(m1, m2)
}
func (m1 AnyOptionArrListList) Equals(m2 AnyOptionArrListList) bool {
	return AnyOptionArrListListEquals(m1, m2)
}
