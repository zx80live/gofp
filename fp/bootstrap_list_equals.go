// bootstrap_list_equals.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (a BoolList) Equals(b BoolList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringList) Equals(b StringList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntList) Equals(b IntList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8List) Equals(b Int8List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16List) Equals(b Int16List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32List) Equals(b Int32List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64List) Equals(b Int64List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintList) Equals(b UintList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8List) Equals(b Uint8List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16List) Equals(b Uint16List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32List) Equals(b Uint32List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64List) Equals(b Uint64List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrList) Equals(b UintptrList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteList) Equals(b ByteList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneList) Equals(b RuneList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32List) Equals(b Float32List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64List) Equals(b Float64List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64List) Equals(b Complex64List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128List) Equals(b Complex128List) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128Equals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyList) Equals(b AnyList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionList) Equals(b BoolOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionList) Equals(b StringOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionList) Equals(b IntOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionList) Equals(b Int8OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionList) Equals(b Int16OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionList) Equals(b Int32OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionList) Equals(b Int64OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionList) Equals(b UintOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionList) Equals(b Uint8OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionList) Equals(b Uint16OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionList) Equals(b Uint32OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionList) Equals(b Uint64OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionList) Equals(b UintptrOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionList) Equals(b ByteOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionList) Equals(b RuneOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionList) Equals(b Float32OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionList) Equals(b Float64OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionList) Equals(b Complex64OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionList) Equals(b Complex128OptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionList) Equals(b AnyOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayOptionList) Equals(b BoolArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayOptionList) Equals(b StringArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayOptionList) Equals(b IntArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayOptionList) Equals(b Int8ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayOptionList) Equals(b Int16ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayOptionList) Equals(b Int32ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayOptionList) Equals(b Int64ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayOptionList) Equals(b UintArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayOptionList) Equals(b Uint8ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayOptionList) Equals(b Uint16ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayOptionList) Equals(b Uint32ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayOptionList) Equals(b Uint64ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayOptionList) Equals(b UintptrArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayOptionList) Equals(b ByteArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayOptionList) Equals(b RuneArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayOptionList) Equals(b Float32ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayOptionList) Equals(b Float64ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayOptionList) Equals(b Complex64ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayOptionList) Equals(b Complex128ArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayOptionList) Equals(b AnyArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayArrayOptionList) Equals(b BoolArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayArrayOptionList) Equals(b StringArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayArrayOptionList) Equals(b IntArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayArrayOptionList) Equals(b Int8ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayArrayOptionList) Equals(b Int16ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayArrayOptionList) Equals(b Int32ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayArrayOptionList) Equals(b Int64ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayArrayOptionList) Equals(b UintArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayArrayOptionList) Equals(b Uint8ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayArrayOptionList) Equals(b Uint16ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayArrayOptionList) Equals(b Uint32ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayArrayOptionList) Equals(b Uint64ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayArrayOptionList) Equals(b UintptrArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayArrayOptionList) Equals(b ByteArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayArrayOptionList) Equals(b RuneArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayArrayOptionList) Equals(b Float32ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayArrayOptionList) Equals(b Float64ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayArrayOptionList) Equals(b Complex64ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayArrayOptionList) Equals(b Complex128ArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayArrayOptionList) Equals(b AnyArrayArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionArrayOptionList) Equals(b BoolOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionArrayOptionList) Equals(b StringOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionArrayOptionList) Equals(b IntOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionArrayOptionList) Equals(b Int8OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionArrayOptionList) Equals(b Int16OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionArrayOptionList) Equals(b Int32OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionArrayOptionList) Equals(b Int64OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionArrayOptionList) Equals(b UintOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionArrayOptionList) Equals(b Uint8OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionArrayOptionList) Equals(b Uint16OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionArrayOptionList) Equals(b Uint32OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionArrayOptionList) Equals(b Uint64OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionArrayOptionList) Equals(b UintptrOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionArrayOptionList) Equals(b ByteOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionArrayOptionList) Equals(b RuneOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionArrayOptionList) Equals(b Float32OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionArrayOptionList) Equals(b Float64OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionArrayOptionList) Equals(b Complex64OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionArrayOptionList) Equals(b Complex128OptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionArrayOptionList) Equals(b AnyOptionArrayOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionArrayOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolListOptionList) Equals(b BoolListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringListOptionList) Equals(b StringListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntListOptionList) Equals(b IntListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ListOptionList) Equals(b Int8ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ListOptionList) Equals(b Int16ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ListOptionList) Equals(b Int32ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ListOptionList) Equals(b Int64ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintListOptionList) Equals(b UintListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ListOptionList) Equals(b Uint8ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ListOptionList) Equals(b Uint16ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ListOptionList) Equals(b Uint32ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ListOptionList) Equals(b Uint64ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrListOptionList) Equals(b UintptrListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteListOptionList) Equals(b ByteListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneListOptionList) Equals(b RuneListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ListOptionList) Equals(b Float32ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ListOptionList) Equals(b Float64ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ListOptionList) Equals(b Complex64ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ListOptionList) Equals(b Complex128ListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyListOptionList) Equals(b AnyListOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyListOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionOptionList) Equals(b BoolOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionOptionList) Equals(b StringOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionOptionList) Equals(b IntOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionOptionList) Equals(b Int8OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionOptionList) Equals(b Int16OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionOptionList) Equals(b Int32OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionOptionList) Equals(b Int64OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionOptionList) Equals(b UintOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionOptionList) Equals(b Uint8OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionOptionList) Equals(b Uint16OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionOptionList) Equals(b Uint32OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionOptionList) Equals(b Uint64OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionOptionList) Equals(b UintptrOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionOptionList) Equals(b ByteOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionOptionList) Equals(b RuneOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionOptionList) Equals(b Float32OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionOptionList) Equals(b Float64OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionOptionList) Equals(b Complex64OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionOptionList) Equals(b Complex128OptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionOptionList) Equals(b AnyOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayOptionOptionList) Equals(b BoolArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayOptionOptionList) Equals(b StringArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayOptionOptionList) Equals(b IntArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayOptionOptionList) Equals(b Int8ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayOptionOptionList) Equals(b Int16ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayOptionOptionList) Equals(b Int32ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayOptionOptionList) Equals(b Int64ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayOptionOptionList) Equals(b UintArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayOptionOptionList) Equals(b Uint8ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayOptionOptionList) Equals(b Uint16ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayOptionOptionList) Equals(b Uint32ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayOptionOptionList) Equals(b Uint64ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayOptionOptionList) Equals(b UintptrArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayOptionOptionList) Equals(b ByteArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayOptionOptionList) Equals(b RuneArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayOptionOptionList) Equals(b Float32ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayOptionOptionList) Equals(b Float64ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayOptionOptionList) Equals(b Complex64ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayOptionOptionList) Equals(b Complex128ArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayOptionOptionList) Equals(b AnyArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayArrayOptionOptionList) Equals(b BoolArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayArrayOptionOptionList) Equals(b StringArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayArrayOptionOptionList) Equals(b IntArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayArrayOptionOptionList) Equals(b Int8ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayArrayOptionOptionList) Equals(b Int16ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayArrayOptionOptionList) Equals(b Int32ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayArrayOptionOptionList) Equals(b Int64ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayArrayOptionOptionList) Equals(b UintArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayArrayOptionOptionList) Equals(b Uint8ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayArrayOptionOptionList) Equals(b Uint16ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayArrayOptionOptionList) Equals(b Uint32ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayArrayOptionOptionList) Equals(b Uint64ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayArrayOptionOptionList) Equals(b UintptrArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayArrayOptionOptionList) Equals(b ByteArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayArrayOptionOptionList) Equals(b RuneArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayArrayOptionOptionList) Equals(b Float32ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayArrayOptionOptionList) Equals(b Float64ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayArrayOptionOptionList) Equals(b Complex64ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayArrayOptionOptionList) Equals(b Complex128ArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayArrayOptionOptionList) Equals(b AnyArrayArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionArrayOptionOptionList) Equals(b BoolOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionArrayOptionOptionList) Equals(b StringOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionArrayOptionOptionList) Equals(b IntOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionArrayOptionOptionList) Equals(b Int8OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionArrayOptionOptionList) Equals(b Int16OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionArrayOptionOptionList) Equals(b Int32OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionArrayOptionOptionList) Equals(b Int64OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionArrayOptionOptionList) Equals(b UintOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionArrayOptionOptionList) Equals(b Uint8OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionArrayOptionOptionList) Equals(b Uint16OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionArrayOptionOptionList) Equals(b Uint32OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionArrayOptionOptionList) Equals(b Uint64OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionArrayOptionOptionList) Equals(b UintptrOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionArrayOptionOptionList) Equals(b ByteOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionArrayOptionOptionList) Equals(b RuneOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionArrayOptionOptionList) Equals(b Float32OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionArrayOptionOptionList) Equals(b Float64OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionArrayOptionOptionList) Equals(b Complex64OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionArrayOptionOptionList) Equals(b Complex128OptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionArrayOptionOptionList) Equals(b AnyOptionArrayOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionArrayOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolListOptionOptionList) Equals(b BoolListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringListOptionOptionList) Equals(b StringListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntListOptionOptionList) Equals(b IntListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ListOptionOptionList) Equals(b Int8ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ListOptionOptionList) Equals(b Int16ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ListOptionOptionList) Equals(b Int32ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ListOptionOptionList) Equals(b Int64ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintListOptionOptionList) Equals(b UintListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ListOptionOptionList) Equals(b Uint8ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ListOptionOptionList) Equals(b Uint16ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ListOptionOptionList) Equals(b Uint32ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ListOptionOptionList) Equals(b Uint64ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrListOptionOptionList) Equals(b UintptrListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteListOptionOptionList) Equals(b ByteListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneListOptionOptionList) Equals(b RuneListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ListOptionOptionList) Equals(b Float32ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ListOptionOptionList) Equals(b Float64ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ListOptionOptionList) Equals(b Complex64ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ListOptionOptionList) Equals(b Complex128ListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyListOptionOptionList) Equals(b AnyListOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyListOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionOptionOptionList) Equals(b BoolOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionOptionOptionList) Equals(b StringOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionOptionOptionList) Equals(b IntOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionOptionOptionList) Equals(b Int8OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionOptionOptionList) Equals(b Int16OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionOptionOptionList) Equals(b Int32OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionOptionOptionList) Equals(b Int64OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionOptionOptionList) Equals(b UintOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionOptionOptionList) Equals(b Uint8OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionOptionOptionList) Equals(b Uint16OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionOptionOptionList) Equals(b Uint32OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionOptionOptionList) Equals(b Uint64OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionOptionOptionList) Equals(b UintptrOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionOptionOptionList) Equals(b ByteOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionOptionOptionList) Equals(b RuneOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionOptionOptionList) Equals(b Float32OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionOptionOptionList) Equals(b Float64OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionOptionOptionList) Equals(b Complex64OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionOptionOptionList) Equals(b Complex128OptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionOptionOptionList) Equals(b AnyOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayOptionOptionOptionList) Equals(b BoolArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayOptionOptionOptionList) Equals(b StringArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayOptionOptionOptionList) Equals(b IntArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayOptionOptionOptionList) Equals(b Int8ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayOptionOptionOptionList) Equals(b Int16ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayOptionOptionOptionList) Equals(b Int32ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayOptionOptionOptionList) Equals(b Int64ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayOptionOptionOptionList) Equals(b UintArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayOptionOptionOptionList) Equals(b Uint8ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayOptionOptionOptionList) Equals(b Uint16ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayOptionOptionOptionList) Equals(b Uint32ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayOptionOptionOptionList) Equals(b Uint64ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayOptionOptionOptionList) Equals(b UintptrArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayOptionOptionOptionList) Equals(b ByteArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayOptionOptionOptionList) Equals(b RuneArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayOptionOptionOptionList) Equals(b Float32ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayOptionOptionOptionList) Equals(b Float64ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayOptionOptionOptionList) Equals(b Complex64ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayOptionOptionOptionList) Equals(b Complex128ArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayOptionOptionOptionList) Equals(b AnyArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayArrayOptionOptionOptionList) Equals(b BoolArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayArrayOptionOptionOptionList) Equals(b StringArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayArrayOptionOptionOptionList) Equals(b IntArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayArrayOptionOptionOptionList) Equals(b Int8ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayArrayOptionOptionOptionList) Equals(b Int16ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayArrayOptionOptionOptionList) Equals(b Int32ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayArrayOptionOptionOptionList) Equals(b Int64ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayArrayOptionOptionOptionList) Equals(b UintArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayArrayOptionOptionOptionList) Equals(b Uint8ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayArrayOptionOptionOptionList) Equals(b Uint16ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayArrayOptionOptionOptionList) Equals(b Uint32ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayArrayOptionOptionOptionList) Equals(b Uint64ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayArrayOptionOptionOptionList) Equals(b UintptrArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayArrayOptionOptionOptionList) Equals(b ByteArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayArrayOptionOptionOptionList) Equals(b RuneArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayArrayOptionOptionOptionList) Equals(b Float32ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayArrayOptionOptionOptionList) Equals(b Float64ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayArrayOptionOptionOptionList) Equals(b Complex64ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayArrayOptionOptionOptionList) Equals(b Complex128ArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayArrayOptionOptionOptionList) Equals(b AnyArrayArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionArrayOptionOptionOptionList) Equals(b BoolOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionArrayOptionOptionOptionList) Equals(b StringOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionArrayOptionOptionOptionList) Equals(b IntOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionArrayOptionOptionOptionList) Equals(b Int8OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionArrayOptionOptionOptionList) Equals(b Int16OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionArrayOptionOptionOptionList) Equals(b Int32OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionArrayOptionOptionOptionList) Equals(b Int64OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionArrayOptionOptionOptionList) Equals(b UintOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionArrayOptionOptionOptionList) Equals(b Uint8OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionArrayOptionOptionOptionList) Equals(b Uint16OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionArrayOptionOptionOptionList) Equals(b Uint32OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionArrayOptionOptionOptionList) Equals(b Uint64OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionArrayOptionOptionOptionList) Equals(b UintptrOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionArrayOptionOptionOptionList) Equals(b ByteOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionArrayOptionOptionOptionList) Equals(b RuneOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionArrayOptionOptionOptionList) Equals(b Float32OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionArrayOptionOptionOptionList) Equals(b Float64OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionArrayOptionOptionOptionList) Equals(b Complex64OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionArrayOptionOptionOptionList) Equals(b Complex128OptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionArrayOptionOptionOptionList) Equals(b AnyOptionArrayOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionArrayOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolListOptionOptionOptionList) Equals(b BoolListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringListOptionOptionOptionList) Equals(b StringListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntListOptionOptionOptionList) Equals(b IntListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ListOptionOptionOptionList) Equals(b Int8ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ListOptionOptionOptionList) Equals(b Int16ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ListOptionOptionOptionList) Equals(b Int32ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ListOptionOptionOptionList) Equals(b Int64ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintListOptionOptionOptionList) Equals(b UintListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ListOptionOptionOptionList) Equals(b Uint8ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ListOptionOptionOptionList) Equals(b Uint16ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ListOptionOptionOptionList) Equals(b Uint32ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ListOptionOptionOptionList) Equals(b Uint64ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrListOptionOptionOptionList) Equals(b UintptrListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteListOptionOptionOptionList) Equals(b ByteListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneListOptionOptionOptionList) Equals(b RuneListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ListOptionOptionOptionList) Equals(b Float32ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ListOptionOptionOptionList) Equals(b Float64ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ListOptionOptionOptionList) Equals(b Complex64ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ListOptionOptionOptionList) Equals(b Complex128ListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyListOptionOptionOptionList) Equals(b AnyListOptionOptionOptionList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyListOptionOptionOptionEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayList) Equals(b BoolArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayList) Equals(b StringArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayList) Equals(b IntArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayList) Equals(b Int8ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayList) Equals(b Int16ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayList) Equals(b Int32ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayList) Equals(b Int64ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayList) Equals(b UintArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayList) Equals(b Uint8ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayList) Equals(b Uint16ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayList) Equals(b Uint32ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayList) Equals(b Uint64ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayList) Equals(b UintptrArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayList) Equals(b ByteArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayList) Equals(b RuneArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayList) Equals(b Float32ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayList) Equals(b Float64ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayList) Equals(b Complex64ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayList) Equals(b Complex128ArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayList) Equals(b AnyArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolArrayArrayList) Equals(b BoolArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringArrayArrayList) Equals(b StringArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntArrayArrayList) Equals(b IntArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ArrayArrayList) Equals(b Int8ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ArrayArrayList) Equals(b Int16ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ArrayArrayList) Equals(b Int32ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ArrayArrayList) Equals(b Int64ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintArrayArrayList) Equals(b UintArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ArrayArrayList) Equals(b Uint8ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ArrayArrayList) Equals(b Uint16ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ArrayArrayList) Equals(b Uint32ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ArrayArrayList) Equals(b Uint64ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrArrayArrayList) Equals(b UintptrArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteArrayArrayList) Equals(b ByteArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneArrayArrayList) Equals(b RuneArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ArrayArrayList) Equals(b Float32ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ArrayArrayList) Equals(b Float64ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ArrayArrayList) Equals(b Complex64ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ArrayArrayList) Equals(b Complex128ArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyArrayArrayList) Equals(b AnyArrayArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyArrayArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolOptionArrayList) Equals(b BoolOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringOptionArrayList) Equals(b StringOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntOptionArrayList) Equals(b IntOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8OptionArrayList) Equals(b Int8OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16OptionArrayList) Equals(b Int16OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32OptionArrayList) Equals(b Int32OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64OptionArrayList) Equals(b Int64OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintOptionArrayList) Equals(b UintOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8OptionArrayList) Equals(b Uint8OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16OptionArrayList) Equals(b Uint16OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32OptionArrayList) Equals(b Uint32OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64OptionArrayList) Equals(b Uint64OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrOptionArrayList) Equals(b UintptrOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteOptionArrayList) Equals(b ByteOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneOptionArrayList) Equals(b RuneOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32OptionArrayList) Equals(b Float32OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64OptionArrayList) Equals(b Float64OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64OptionArrayList) Equals(b Complex64OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128OptionArrayList) Equals(b Complex128OptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128OptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyOptionArrayList) Equals(b AnyOptionArrayList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyOptionArrayEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a BoolListList) Equals(b BoolListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !BoolListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a StringListList) Equals(b StringListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !StringListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a IntListList) Equals(b IntListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !IntListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int8ListList) Equals(b Int8ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int8ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int16ListList) Equals(b Int16ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int16ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int32ListList) Equals(b Int32ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int32ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Int64ListList) Equals(b Int64ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Int64ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintListList) Equals(b UintListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint8ListList) Equals(b Uint8ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint8ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint16ListList) Equals(b Uint16ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint16ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint32ListList) Equals(b Uint32ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint32ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Uint64ListList) Equals(b Uint64ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Uint64ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a UintptrListList) Equals(b UintptrListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !UintptrListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a ByteListList) Equals(b ByteListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !ByteListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a RuneListList) Equals(b RuneListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !RuneListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float32ListList) Equals(b Float32ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float32ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Float64ListList) Equals(b Float64ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Float64ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex64ListList) Equals(b Complex64ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex64ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a Complex128ListList) Equals(b Complex128ListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !Complex128ListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
func (a AnyListList) Equals(b AnyListList) bool {
	len1 := a.Size()
	len2 := b.Size()
	if len1 != len2 {
		return false
	}
	xs1 := a
	xs2 := b
	for xs1.NonEmpty() {
		if !AnyListEquals(*xs1.head, *xs2.head) {
			return false
		}
		xs1 = *xs1.tail
		xs2 = *xs2.tail
	}
	return true
}
