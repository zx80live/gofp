// bootstrap_list_reverse.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (l BoolList) Reverse() BoolList {
	acc := NilBoolList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringList) Reverse() StringList {
	acc := NilStringList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntList) Reverse() IntList {
	acc := NilIntList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8List) Reverse() Int8List {
	acc := NilInt8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16List) Reverse() Int16List {
	acc := NilInt16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32List) Reverse() Int32List {
	acc := NilInt32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64List) Reverse() Int64List {
	acc := NilInt64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintList) Reverse() UintList {
	acc := NilUintList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8List) Reverse() Uint8List {
	acc := NilUint8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16List) Reverse() Uint16List {
	acc := NilUint16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32List) Reverse() Uint32List {
	acc := NilUint32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64List) Reverse() Uint64List {
	acc := NilUint64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrList) Reverse() UintptrList {
	acc := NilUintptrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteList) Reverse() ByteList {
	acc := NilByteList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneList) Reverse() RuneList {
	acc := NilRuneList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32List) Reverse() Float32List {
	acc := NilFloat32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64List) Reverse() Float64List {
	acc := NilFloat64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64List) Reverse() Complex64List {
	acc := NilComplex64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128List) Reverse() Complex128List {
	acc := NilComplex128List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyList) Reverse() AnyList {
	acc := NilAnyList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionList) Reverse() BoolOptionList {
	acc := NilBoolOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionList) Reverse() StringOptionList {
	acc := NilStringOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionList) Reverse() IntOptionList {
	acc := NilIntOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionList) Reverse() Int8OptionList {
	acc := NilInt8OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionList) Reverse() Int16OptionList {
	acc := NilInt16OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionList) Reverse() Int32OptionList {
	acc := NilInt32OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionList) Reverse() Int64OptionList {
	acc := NilInt64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionList) Reverse() UintOptionList {
	acc := NilUintOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionList) Reverse() Uint8OptionList {
	acc := NilUint8OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionList) Reverse() Uint16OptionList {
	acc := NilUint16OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionList) Reverse() Uint32OptionList {
	acc := NilUint32OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionList) Reverse() Uint64OptionList {
	acc := NilUint64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionList) Reverse() UintptrOptionList {
	acc := NilUintptrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionList) Reverse() ByteOptionList {
	acc := NilByteOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionList) Reverse() RuneOptionList {
	acc := NilRuneOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionList) Reverse() Float32OptionList {
	acc := NilFloat32OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionList) Reverse() Float64OptionList {
	acc := NilFloat64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionList) Reverse() Complex64OptionList {
	acc := NilComplex64OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionList) Reverse() Complex128OptionList {
	acc := NilComplex128OptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionList) Reverse() AnyOptionList {
	acc := NilAnyOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrOptionList) Reverse() BoolArrOptionList {
	acc := NilBoolArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrOptionList) Reverse() StringArrOptionList {
	acc := NilStringArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrOptionList) Reverse() IntArrOptionList {
	acc := NilIntArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrOptionList) Reverse() Int8ArrOptionList {
	acc := NilInt8ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrOptionList) Reverse() Int16ArrOptionList {
	acc := NilInt16ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrOptionList) Reverse() Int32ArrOptionList {
	acc := NilInt32ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrOptionList) Reverse() Int64ArrOptionList {
	acc := NilInt64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrOptionList) Reverse() UintArrOptionList {
	acc := NilUintArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrOptionList) Reverse() Uint8ArrOptionList {
	acc := NilUint8ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrOptionList) Reverse() Uint16ArrOptionList {
	acc := NilUint16ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrOptionList) Reverse() Uint32ArrOptionList {
	acc := NilUint32ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrOptionList) Reverse() Uint64ArrOptionList {
	acc := NilUint64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrOptionList) Reverse() UintptrArrOptionList {
	acc := NilUintptrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrOptionList) Reverse() ByteArrOptionList {
	acc := NilByteArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrOptionList) Reverse() RuneArrOptionList {
	acc := NilRuneArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrOptionList) Reverse() Float32ArrOptionList {
	acc := NilFloat32ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrOptionList) Reverse() Float64ArrOptionList {
	acc := NilFloat64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrOptionList) Reverse() Complex64ArrOptionList {
	acc := NilComplex64ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrOptionList) Reverse() Complex128ArrOptionList {
	acc := NilComplex128ArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrOptionList) Reverse() AnyArrOptionList {
	acc := NilAnyArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrArrOptionList) Reverse() BoolArrArrOptionList {
	acc := NilBoolArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrArrOptionList) Reverse() StringArrArrOptionList {
	acc := NilStringArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrArrOptionList) Reverse() IntArrArrOptionList {
	acc := NilIntArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrArrOptionList) Reverse() Int8ArrArrOptionList {
	acc := NilInt8ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrArrOptionList) Reverse() Int16ArrArrOptionList {
	acc := NilInt16ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrArrOptionList) Reverse() Int32ArrArrOptionList {
	acc := NilInt32ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrArrOptionList) Reverse() Int64ArrArrOptionList {
	acc := NilInt64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrArrOptionList) Reverse() UintArrArrOptionList {
	acc := NilUintArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrArrOptionList) Reverse() Uint8ArrArrOptionList {
	acc := NilUint8ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrArrOptionList) Reverse() Uint16ArrArrOptionList {
	acc := NilUint16ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrArrOptionList) Reverse() Uint32ArrArrOptionList {
	acc := NilUint32ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrArrOptionList) Reverse() Uint64ArrArrOptionList {
	acc := NilUint64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrArrOptionList) Reverse() UintptrArrArrOptionList {
	acc := NilUintptrArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrArrOptionList) Reverse() ByteArrArrOptionList {
	acc := NilByteArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrArrOptionList) Reverse() RuneArrArrOptionList {
	acc := NilRuneArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrArrOptionList) Reverse() Float32ArrArrOptionList {
	acc := NilFloat32ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrArrOptionList) Reverse() Float64ArrArrOptionList {
	acc := NilFloat64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrArrOptionList) Reverse() Complex64ArrArrOptionList {
	acc := NilComplex64ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrArrOptionList) Reverse() Complex128ArrArrOptionList {
	acc := NilComplex128ArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrArrOptionList) Reverse() AnyArrArrOptionList {
	acc := NilAnyArrArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrOptionList) Reverse() BoolOptionArrOptionList {
	acc := NilBoolOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrOptionList) Reverse() StringOptionArrOptionList {
	acc := NilStringOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrOptionList) Reverse() IntOptionArrOptionList {
	acc := NilIntOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrOptionList) Reverse() Int8OptionArrOptionList {
	acc := NilInt8OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrOptionList) Reverse() Int16OptionArrOptionList {
	acc := NilInt16OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrOptionList) Reverse() Int32OptionArrOptionList {
	acc := NilInt32OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrOptionList) Reverse() Int64OptionArrOptionList {
	acc := NilInt64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrOptionList) Reverse() UintOptionArrOptionList {
	acc := NilUintOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrOptionList) Reverse() Uint8OptionArrOptionList {
	acc := NilUint8OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrOptionList) Reverse() Uint16OptionArrOptionList {
	acc := NilUint16OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrOptionList) Reverse() Uint32OptionArrOptionList {
	acc := NilUint32OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrOptionList) Reverse() Uint64OptionArrOptionList {
	acc := NilUint64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrOptionList) Reverse() UintptrOptionArrOptionList {
	acc := NilUintptrOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrOptionList) Reverse() ByteOptionArrOptionList {
	acc := NilByteOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrOptionList) Reverse() RuneOptionArrOptionList {
	acc := NilRuneOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrOptionList) Reverse() Float32OptionArrOptionList {
	acc := NilFloat32OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrOptionList) Reverse() Float64OptionArrOptionList {
	acc := NilFloat64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrOptionList) Reverse() Complex64OptionArrOptionList {
	acc := NilComplex64OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrOptionList) Reverse() Complex128OptionArrOptionList {
	acc := NilComplex128OptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrOptionList) Reverse() AnyOptionArrOptionList {
	acc := NilAnyOptionArrOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionList) Reverse() BoolListOptionList {
	acc := NilBoolListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionList) Reverse() StringListOptionList {
	acc := NilStringListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionList) Reverse() IntListOptionList {
	acc := NilIntListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionList) Reverse() Int8ListOptionList {
	acc := NilInt8ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionList) Reverse() Int16ListOptionList {
	acc := NilInt16ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionList) Reverse() Int32ListOptionList {
	acc := NilInt32ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionList) Reverse() Int64ListOptionList {
	acc := NilInt64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionList) Reverse() UintListOptionList {
	acc := NilUintListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionList) Reverse() Uint8ListOptionList {
	acc := NilUint8ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionList) Reverse() Uint16ListOptionList {
	acc := NilUint16ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionList) Reverse() Uint32ListOptionList {
	acc := NilUint32ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionList) Reverse() Uint64ListOptionList {
	acc := NilUint64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionList) Reverse() UintptrListOptionList {
	acc := NilUintptrListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionList) Reverse() ByteListOptionList {
	acc := NilByteListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionList) Reverse() RuneListOptionList {
	acc := NilRuneListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionList) Reverse() Float32ListOptionList {
	acc := NilFloat32ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionList) Reverse() Float64ListOptionList {
	acc := NilFloat64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionList) Reverse() Complex64ListOptionList {
	acc := NilComplex64ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionList) Reverse() Complex128ListOptionList {
	acc := NilComplex128ListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionList) Reverse() AnyListOptionList {
	acc := NilAnyListOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionOptionList) Reverse() BoolOptionOptionList {
	acc := NilBoolOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionOptionList) Reverse() StringOptionOptionList {
	acc := NilStringOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionOptionList) Reverse() IntOptionOptionList {
	acc := NilIntOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionOptionList) Reverse() Int8OptionOptionList {
	acc := NilInt8OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionOptionList) Reverse() Int16OptionOptionList {
	acc := NilInt16OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionOptionList) Reverse() Int32OptionOptionList {
	acc := NilInt32OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionOptionList) Reverse() Int64OptionOptionList {
	acc := NilInt64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionOptionList) Reverse() UintOptionOptionList {
	acc := NilUintOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionOptionList) Reverse() Uint8OptionOptionList {
	acc := NilUint8OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionOptionList) Reverse() Uint16OptionOptionList {
	acc := NilUint16OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionOptionList) Reverse() Uint32OptionOptionList {
	acc := NilUint32OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionOptionList) Reverse() Uint64OptionOptionList {
	acc := NilUint64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionOptionList) Reverse() UintptrOptionOptionList {
	acc := NilUintptrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionOptionList) Reverse() ByteOptionOptionList {
	acc := NilByteOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionOptionList) Reverse() RuneOptionOptionList {
	acc := NilRuneOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionOptionList) Reverse() Float32OptionOptionList {
	acc := NilFloat32OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionOptionList) Reverse() Float64OptionOptionList {
	acc := NilFloat64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionOptionList) Reverse() Complex64OptionOptionList {
	acc := NilComplex64OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionOptionList) Reverse() Complex128OptionOptionList {
	acc := NilComplex128OptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionOptionList) Reverse() AnyOptionOptionList {
	acc := NilAnyOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrOptionOptionList) Reverse() BoolArrOptionOptionList {
	acc := NilBoolArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrOptionOptionList) Reverse() StringArrOptionOptionList {
	acc := NilStringArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrOptionOptionList) Reverse() IntArrOptionOptionList {
	acc := NilIntArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrOptionOptionList) Reverse() Int8ArrOptionOptionList {
	acc := NilInt8ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrOptionOptionList) Reverse() Int16ArrOptionOptionList {
	acc := NilInt16ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrOptionOptionList) Reverse() Int32ArrOptionOptionList {
	acc := NilInt32ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrOptionOptionList) Reverse() Int64ArrOptionOptionList {
	acc := NilInt64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrOptionOptionList) Reverse() UintArrOptionOptionList {
	acc := NilUintArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrOptionOptionList) Reverse() Uint8ArrOptionOptionList {
	acc := NilUint8ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrOptionOptionList) Reverse() Uint16ArrOptionOptionList {
	acc := NilUint16ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrOptionOptionList) Reverse() Uint32ArrOptionOptionList {
	acc := NilUint32ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrOptionOptionList) Reverse() Uint64ArrOptionOptionList {
	acc := NilUint64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrOptionOptionList) Reverse() UintptrArrOptionOptionList {
	acc := NilUintptrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrOptionOptionList) Reverse() ByteArrOptionOptionList {
	acc := NilByteArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrOptionOptionList) Reverse() RuneArrOptionOptionList {
	acc := NilRuneArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrOptionOptionList) Reverse() Float32ArrOptionOptionList {
	acc := NilFloat32ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrOptionOptionList) Reverse() Float64ArrOptionOptionList {
	acc := NilFloat64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrOptionOptionList) Reverse() Complex64ArrOptionOptionList {
	acc := NilComplex64ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrOptionOptionList) Reverse() Complex128ArrOptionOptionList {
	acc := NilComplex128ArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrOptionOptionList) Reverse() AnyArrOptionOptionList {
	acc := NilAnyArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrArrOptionOptionList) Reverse() BoolArrArrOptionOptionList {
	acc := NilBoolArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrArrOptionOptionList) Reverse() StringArrArrOptionOptionList {
	acc := NilStringArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrArrOptionOptionList) Reverse() IntArrArrOptionOptionList {
	acc := NilIntArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrArrOptionOptionList) Reverse() Int8ArrArrOptionOptionList {
	acc := NilInt8ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrArrOptionOptionList) Reverse() Int16ArrArrOptionOptionList {
	acc := NilInt16ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrArrOptionOptionList) Reverse() Int32ArrArrOptionOptionList {
	acc := NilInt32ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrArrOptionOptionList) Reverse() Int64ArrArrOptionOptionList {
	acc := NilInt64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrArrOptionOptionList) Reverse() UintArrArrOptionOptionList {
	acc := NilUintArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrArrOptionOptionList) Reverse() Uint8ArrArrOptionOptionList {
	acc := NilUint8ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrArrOptionOptionList) Reverse() Uint16ArrArrOptionOptionList {
	acc := NilUint16ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrArrOptionOptionList) Reverse() Uint32ArrArrOptionOptionList {
	acc := NilUint32ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrArrOptionOptionList) Reverse() Uint64ArrArrOptionOptionList {
	acc := NilUint64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrArrOptionOptionList) Reverse() UintptrArrArrOptionOptionList {
	acc := NilUintptrArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrArrOptionOptionList) Reverse() ByteArrArrOptionOptionList {
	acc := NilByteArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrArrOptionOptionList) Reverse() RuneArrArrOptionOptionList {
	acc := NilRuneArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrArrOptionOptionList) Reverse() Float32ArrArrOptionOptionList {
	acc := NilFloat32ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrArrOptionOptionList) Reverse() Float64ArrArrOptionOptionList {
	acc := NilFloat64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrArrOptionOptionList) Reverse() Complex64ArrArrOptionOptionList {
	acc := NilComplex64ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrArrOptionOptionList) Reverse() Complex128ArrArrOptionOptionList {
	acc := NilComplex128ArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrArrOptionOptionList) Reverse() AnyArrArrOptionOptionList {
	acc := NilAnyArrArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrOptionOptionList) Reverse() BoolOptionArrOptionOptionList {
	acc := NilBoolOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrOptionOptionList) Reverse() StringOptionArrOptionOptionList {
	acc := NilStringOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrOptionOptionList) Reverse() IntOptionArrOptionOptionList {
	acc := NilIntOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrOptionOptionList) Reverse() Int8OptionArrOptionOptionList {
	acc := NilInt8OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrOptionOptionList) Reverse() Int16OptionArrOptionOptionList {
	acc := NilInt16OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrOptionOptionList) Reverse() Int32OptionArrOptionOptionList {
	acc := NilInt32OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrOptionOptionList) Reverse() Int64OptionArrOptionOptionList {
	acc := NilInt64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrOptionOptionList) Reverse() UintOptionArrOptionOptionList {
	acc := NilUintOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrOptionOptionList) Reverse() Uint8OptionArrOptionOptionList {
	acc := NilUint8OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrOptionOptionList) Reverse() Uint16OptionArrOptionOptionList {
	acc := NilUint16OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrOptionOptionList) Reverse() Uint32OptionArrOptionOptionList {
	acc := NilUint32OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrOptionOptionList) Reverse() Uint64OptionArrOptionOptionList {
	acc := NilUint64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrOptionOptionList) Reverse() UintptrOptionArrOptionOptionList {
	acc := NilUintptrOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrOptionOptionList) Reverse() ByteOptionArrOptionOptionList {
	acc := NilByteOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrOptionOptionList) Reverse() RuneOptionArrOptionOptionList {
	acc := NilRuneOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrOptionOptionList) Reverse() Float32OptionArrOptionOptionList {
	acc := NilFloat32OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrOptionOptionList) Reverse() Float64OptionArrOptionOptionList {
	acc := NilFloat64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrOptionOptionList) Reverse() Complex64OptionArrOptionOptionList {
	acc := NilComplex64OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrOptionOptionList) Reverse() Complex128OptionArrOptionOptionList {
	acc := NilComplex128OptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrOptionOptionList) Reverse() AnyOptionArrOptionOptionList {
	acc := NilAnyOptionArrOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionOptionList) Reverse() BoolListOptionOptionList {
	acc := NilBoolListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionOptionList) Reverse() StringListOptionOptionList {
	acc := NilStringListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionOptionList) Reverse() IntListOptionOptionList {
	acc := NilIntListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionOptionList) Reverse() Int8ListOptionOptionList {
	acc := NilInt8ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionOptionList) Reverse() Int16ListOptionOptionList {
	acc := NilInt16ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionOptionList) Reverse() Int32ListOptionOptionList {
	acc := NilInt32ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionOptionList) Reverse() Int64ListOptionOptionList {
	acc := NilInt64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionOptionList) Reverse() UintListOptionOptionList {
	acc := NilUintListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionOptionList) Reverse() Uint8ListOptionOptionList {
	acc := NilUint8ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionOptionList) Reverse() Uint16ListOptionOptionList {
	acc := NilUint16ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionOptionList) Reverse() Uint32ListOptionOptionList {
	acc := NilUint32ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionOptionList) Reverse() Uint64ListOptionOptionList {
	acc := NilUint64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionOptionList) Reverse() UintptrListOptionOptionList {
	acc := NilUintptrListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionOptionList) Reverse() ByteListOptionOptionList {
	acc := NilByteListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionOptionList) Reverse() RuneListOptionOptionList {
	acc := NilRuneListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionOptionList) Reverse() Float32ListOptionOptionList {
	acc := NilFloat32ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionOptionList) Reverse() Float64ListOptionOptionList {
	acc := NilFloat64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionOptionList) Reverse() Complex64ListOptionOptionList {
	acc := NilComplex64ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionOptionList) Reverse() Complex128ListOptionOptionList {
	acc := NilComplex128ListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionOptionList) Reverse() AnyListOptionOptionList {
	acc := NilAnyListOptionOptionList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrList) Reverse() BoolArrList {
	acc := NilBoolArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrList) Reverse() StringArrList {
	acc := NilStringArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrList) Reverse() IntArrList {
	acc := NilIntArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrList) Reverse() Int8ArrList {
	acc := NilInt8ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrList) Reverse() Int16ArrList {
	acc := NilInt16ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrList) Reverse() Int32ArrList {
	acc := NilInt32ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrList) Reverse() Int64ArrList {
	acc := NilInt64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrList) Reverse() UintArrList {
	acc := NilUintArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrList) Reverse() Uint8ArrList {
	acc := NilUint8ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrList) Reverse() Uint16ArrList {
	acc := NilUint16ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrList) Reverse() Uint32ArrList {
	acc := NilUint32ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrList) Reverse() Uint64ArrList {
	acc := NilUint64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrList) Reverse() UintptrArrList {
	acc := NilUintptrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrList) Reverse() ByteArrList {
	acc := NilByteArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrList) Reverse() RuneArrList {
	acc := NilRuneArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrList) Reverse() Float32ArrList {
	acc := NilFloat32ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrList) Reverse() Float64ArrList {
	acc := NilFloat64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrList) Reverse() Complex64ArrList {
	acc := NilComplex64ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrList) Reverse() Complex128ArrList {
	acc := NilComplex128ArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrList) Reverse() AnyArrList {
	acc := NilAnyArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrArrList) Reverse() BoolArrArrList {
	acc := NilBoolArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrArrList) Reverse() StringArrArrList {
	acc := NilStringArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrArrList) Reverse() IntArrArrList {
	acc := NilIntArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrArrList) Reverse() Int8ArrArrList {
	acc := NilInt8ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrArrList) Reverse() Int16ArrArrList {
	acc := NilInt16ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrArrList) Reverse() Int32ArrArrList {
	acc := NilInt32ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrArrList) Reverse() Int64ArrArrList {
	acc := NilInt64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrArrList) Reverse() UintArrArrList {
	acc := NilUintArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrArrList) Reverse() Uint8ArrArrList {
	acc := NilUint8ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrArrList) Reverse() Uint16ArrArrList {
	acc := NilUint16ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrArrList) Reverse() Uint32ArrArrList {
	acc := NilUint32ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrArrList) Reverse() Uint64ArrArrList {
	acc := NilUint64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrArrList) Reverse() UintptrArrArrList {
	acc := NilUintptrArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrArrList) Reverse() ByteArrArrList {
	acc := NilByteArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrArrList) Reverse() RuneArrArrList {
	acc := NilRuneArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrArrList) Reverse() Float32ArrArrList {
	acc := NilFloat32ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrArrList) Reverse() Float64ArrArrList {
	acc := NilFloat64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrArrList) Reverse() Complex64ArrArrList {
	acc := NilComplex64ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrArrList) Reverse() Complex128ArrArrList {
	acc := NilComplex128ArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrArrList) Reverse() AnyArrArrList {
	acc := NilAnyArrArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrList) Reverse() BoolOptionArrList {
	acc := NilBoolOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrList) Reverse() StringOptionArrList {
	acc := NilStringOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrList) Reverse() IntOptionArrList {
	acc := NilIntOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrList) Reverse() Int8OptionArrList {
	acc := NilInt8OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrList) Reverse() Int16OptionArrList {
	acc := NilInt16OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrList) Reverse() Int32OptionArrList {
	acc := NilInt32OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrList) Reverse() Int64OptionArrList {
	acc := NilInt64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrList) Reverse() UintOptionArrList {
	acc := NilUintOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrList) Reverse() Uint8OptionArrList {
	acc := NilUint8OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrList) Reverse() Uint16OptionArrList {
	acc := NilUint16OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrList) Reverse() Uint32OptionArrList {
	acc := NilUint32OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrList) Reverse() Uint64OptionArrList {
	acc := NilUint64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrList) Reverse() UintptrOptionArrList {
	acc := NilUintptrOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrList) Reverse() ByteOptionArrList {
	acc := NilByteOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrList) Reverse() RuneOptionArrList {
	acc := NilRuneOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrList) Reverse() Float32OptionArrList {
	acc := NilFloat32OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrList) Reverse() Float64OptionArrList {
	acc := NilFloat64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrList) Reverse() Complex64OptionArrList {
	acc := NilComplex64OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrList) Reverse() Complex128OptionArrList {
	acc := NilComplex128OptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrList) Reverse() AnyOptionArrList {
	acc := NilAnyOptionArrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListList) Reverse() BoolListList {
	acc := NilBoolListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListList) Reverse() StringListList {
	acc := NilStringListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListList) Reverse() IntListList {
	acc := NilIntListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListList) Reverse() Int8ListList {
	acc := NilInt8ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListList) Reverse() Int16ListList {
	acc := NilInt16ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListList) Reverse() Int32ListList {
	acc := NilInt32ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListList) Reverse() Int64ListList {
	acc := NilInt64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListList) Reverse() UintListList {
	acc := NilUintListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListList) Reverse() Uint8ListList {
	acc := NilUint8ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListList) Reverse() Uint16ListList {
	acc := NilUint16ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListList) Reverse() Uint32ListList {
	acc := NilUint32ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListList) Reverse() Uint64ListList {
	acc := NilUint64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListList) Reverse() UintptrListList {
	acc := NilUintptrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListList) Reverse() ByteListList {
	acc := NilByteListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListList) Reverse() RuneListList {
	acc := NilRuneListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListList) Reverse() Float32ListList {
	acc := NilFloat32ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListList) Reverse() Float64ListList {
	acc := NilFloat64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListList) Reverse() Complex64ListList {
	acc := NilComplex64ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListList) Reverse() Complex128ListList {
	acc := NilComplex128ListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListList) Reverse() AnyListList {
	acc := NilAnyListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionListList) Reverse() BoolOptionListList {
	acc := NilBoolOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionListList) Reverse() StringOptionListList {
	acc := NilStringOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionListList) Reverse() IntOptionListList {
	acc := NilIntOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionListList) Reverse() Int8OptionListList {
	acc := NilInt8OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionListList) Reverse() Int16OptionListList {
	acc := NilInt16OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionListList) Reverse() Int32OptionListList {
	acc := NilInt32OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionListList) Reverse() Int64OptionListList {
	acc := NilInt64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionListList) Reverse() UintOptionListList {
	acc := NilUintOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionListList) Reverse() Uint8OptionListList {
	acc := NilUint8OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionListList) Reverse() Uint16OptionListList {
	acc := NilUint16OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionListList) Reverse() Uint32OptionListList {
	acc := NilUint32OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionListList) Reverse() Uint64OptionListList {
	acc := NilUint64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionListList) Reverse() UintptrOptionListList {
	acc := NilUintptrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionListList) Reverse() ByteOptionListList {
	acc := NilByteOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionListList) Reverse() RuneOptionListList {
	acc := NilRuneOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionListList) Reverse() Float32OptionListList {
	acc := NilFloat32OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionListList) Reverse() Float64OptionListList {
	acc := NilFloat64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionListList) Reverse() Complex64OptionListList {
	acc := NilComplex64OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionListList) Reverse() Complex128OptionListList {
	acc := NilComplex128OptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionListList) Reverse() AnyOptionListList {
	acc := NilAnyOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrOptionListList) Reverse() BoolArrOptionListList {
	acc := NilBoolArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrOptionListList) Reverse() StringArrOptionListList {
	acc := NilStringArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrOptionListList) Reverse() IntArrOptionListList {
	acc := NilIntArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrOptionListList) Reverse() Int8ArrOptionListList {
	acc := NilInt8ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrOptionListList) Reverse() Int16ArrOptionListList {
	acc := NilInt16ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrOptionListList) Reverse() Int32ArrOptionListList {
	acc := NilInt32ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrOptionListList) Reverse() Int64ArrOptionListList {
	acc := NilInt64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrOptionListList) Reverse() UintArrOptionListList {
	acc := NilUintArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrOptionListList) Reverse() Uint8ArrOptionListList {
	acc := NilUint8ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrOptionListList) Reverse() Uint16ArrOptionListList {
	acc := NilUint16ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrOptionListList) Reverse() Uint32ArrOptionListList {
	acc := NilUint32ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrOptionListList) Reverse() Uint64ArrOptionListList {
	acc := NilUint64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrOptionListList) Reverse() UintptrArrOptionListList {
	acc := NilUintptrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrOptionListList) Reverse() ByteArrOptionListList {
	acc := NilByteArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrOptionListList) Reverse() RuneArrOptionListList {
	acc := NilRuneArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrOptionListList) Reverse() Float32ArrOptionListList {
	acc := NilFloat32ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrOptionListList) Reverse() Float64ArrOptionListList {
	acc := NilFloat64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrOptionListList) Reverse() Complex64ArrOptionListList {
	acc := NilComplex64ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrOptionListList) Reverse() Complex128ArrOptionListList {
	acc := NilComplex128ArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrOptionListList) Reverse() AnyArrOptionListList {
	acc := NilAnyArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrArrOptionListList) Reverse() BoolArrArrOptionListList {
	acc := NilBoolArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrArrOptionListList) Reverse() StringArrArrOptionListList {
	acc := NilStringArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrArrOptionListList) Reverse() IntArrArrOptionListList {
	acc := NilIntArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrArrOptionListList) Reverse() Int8ArrArrOptionListList {
	acc := NilInt8ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrArrOptionListList) Reverse() Int16ArrArrOptionListList {
	acc := NilInt16ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrArrOptionListList) Reverse() Int32ArrArrOptionListList {
	acc := NilInt32ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrArrOptionListList) Reverse() Int64ArrArrOptionListList {
	acc := NilInt64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrArrOptionListList) Reverse() UintArrArrOptionListList {
	acc := NilUintArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrArrOptionListList) Reverse() Uint8ArrArrOptionListList {
	acc := NilUint8ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrArrOptionListList) Reverse() Uint16ArrArrOptionListList {
	acc := NilUint16ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrArrOptionListList) Reverse() Uint32ArrArrOptionListList {
	acc := NilUint32ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrArrOptionListList) Reverse() Uint64ArrArrOptionListList {
	acc := NilUint64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrArrOptionListList) Reverse() UintptrArrArrOptionListList {
	acc := NilUintptrArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrArrOptionListList) Reverse() ByteArrArrOptionListList {
	acc := NilByteArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrArrOptionListList) Reverse() RuneArrArrOptionListList {
	acc := NilRuneArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrArrOptionListList) Reverse() Float32ArrArrOptionListList {
	acc := NilFloat32ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrArrOptionListList) Reverse() Float64ArrArrOptionListList {
	acc := NilFloat64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrArrOptionListList) Reverse() Complex64ArrArrOptionListList {
	acc := NilComplex64ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrArrOptionListList) Reverse() Complex128ArrArrOptionListList {
	acc := NilComplex128ArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrArrOptionListList) Reverse() AnyArrArrOptionListList {
	acc := NilAnyArrArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrOptionListList) Reverse() BoolOptionArrOptionListList {
	acc := NilBoolOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrOptionListList) Reverse() StringOptionArrOptionListList {
	acc := NilStringOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrOptionListList) Reverse() IntOptionArrOptionListList {
	acc := NilIntOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrOptionListList) Reverse() Int8OptionArrOptionListList {
	acc := NilInt8OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrOptionListList) Reverse() Int16OptionArrOptionListList {
	acc := NilInt16OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrOptionListList) Reverse() Int32OptionArrOptionListList {
	acc := NilInt32OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrOptionListList) Reverse() Int64OptionArrOptionListList {
	acc := NilInt64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrOptionListList) Reverse() UintOptionArrOptionListList {
	acc := NilUintOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrOptionListList) Reverse() Uint8OptionArrOptionListList {
	acc := NilUint8OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrOptionListList) Reverse() Uint16OptionArrOptionListList {
	acc := NilUint16OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrOptionListList) Reverse() Uint32OptionArrOptionListList {
	acc := NilUint32OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrOptionListList) Reverse() Uint64OptionArrOptionListList {
	acc := NilUint64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrOptionListList) Reverse() UintptrOptionArrOptionListList {
	acc := NilUintptrOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrOptionListList) Reverse() ByteOptionArrOptionListList {
	acc := NilByteOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrOptionListList) Reverse() RuneOptionArrOptionListList {
	acc := NilRuneOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrOptionListList) Reverse() Float32OptionArrOptionListList {
	acc := NilFloat32OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrOptionListList) Reverse() Float64OptionArrOptionListList {
	acc := NilFloat64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrOptionListList) Reverse() Complex64OptionArrOptionListList {
	acc := NilComplex64OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrOptionListList) Reverse() Complex128OptionArrOptionListList {
	acc := NilComplex128OptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrOptionListList) Reverse() AnyOptionArrOptionListList {
	acc := NilAnyOptionArrOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionListList) Reverse() BoolListOptionListList {
	acc := NilBoolListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionListList) Reverse() StringListOptionListList {
	acc := NilStringListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionListList) Reverse() IntListOptionListList {
	acc := NilIntListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionListList) Reverse() Int8ListOptionListList {
	acc := NilInt8ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionListList) Reverse() Int16ListOptionListList {
	acc := NilInt16ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionListList) Reverse() Int32ListOptionListList {
	acc := NilInt32ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionListList) Reverse() Int64ListOptionListList {
	acc := NilInt64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionListList) Reverse() UintListOptionListList {
	acc := NilUintListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionListList) Reverse() Uint8ListOptionListList {
	acc := NilUint8ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionListList) Reverse() Uint16ListOptionListList {
	acc := NilUint16ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionListList) Reverse() Uint32ListOptionListList {
	acc := NilUint32ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionListList) Reverse() Uint64ListOptionListList {
	acc := NilUint64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionListList) Reverse() UintptrListOptionListList {
	acc := NilUintptrListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionListList) Reverse() ByteListOptionListList {
	acc := NilByteListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionListList) Reverse() RuneListOptionListList {
	acc := NilRuneListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionListList) Reverse() Float32ListOptionListList {
	acc := NilFloat32ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionListList) Reverse() Float64ListOptionListList {
	acc := NilFloat64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionListList) Reverse() Complex64ListOptionListList {
	acc := NilComplex64ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionListList) Reverse() Complex128ListOptionListList {
	acc := NilComplex128ListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionListList) Reverse() AnyListOptionListList {
	acc := NilAnyListOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionOptionListList) Reverse() BoolOptionOptionListList {
	acc := NilBoolOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionOptionListList) Reverse() StringOptionOptionListList {
	acc := NilStringOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionOptionListList) Reverse() IntOptionOptionListList {
	acc := NilIntOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionOptionListList) Reverse() Int8OptionOptionListList {
	acc := NilInt8OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionOptionListList) Reverse() Int16OptionOptionListList {
	acc := NilInt16OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionOptionListList) Reverse() Int32OptionOptionListList {
	acc := NilInt32OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionOptionListList) Reverse() Int64OptionOptionListList {
	acc := NilInt64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionOptionListList) Reverse() UintOptionOptionListList {
	acc := NilUintOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionOptionListList) Reverse() Uint8OptionOptionListList {
	acc := NilUint8OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionOptionListList) Reverse() Uint16OptionOptionListList {
	acc := NilUint16OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionOptionListList) Reverse() Uint32OptionOptionListList {
	acc := NilUint32OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionOptionListList) Reverse() Uint64OptionOptionListList {
	acc := NilUint64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionOptionListList) Reverse() UintptrOptionOptionListList {
	acc := NilUintptrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionOptionListList) Reverse() ByteOptionOptionListList {
	acc := NilByteOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionOptionListList) Reverse() RuneOptionOptionListList {
	acc := NilRuneOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionOptionListList) Reverse() Float32OptionOptionListList {
	acc := NilFloat32OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionOptionListList) Reverse() Float64OptionOptionListList {
	acc := NilFloat64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionOptionListList) Reverse() Complex64OptionOptionListList {
	acc := NilComplex64OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionOptionListList) Reverse() Complex128OptionOptionListList {
	acc := NilComplex128OptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionOptionListList) Reverse() AnyOptionOptionListList {
	acc := NilAnyOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrOptionOptionListList) Reverse() BoolArrOptionOptionListList {
	acc := NilBoolArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrOptionOptionListList) Reverse() StringArrOptionOptionListList {
	acc := NilStringArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrOptionOptionListList) Reverse() IntArrOptionOptionListList {
	acc := NilIntArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrOptionOptionListList) Reverse() Int8ArrOptionOptionListList {
	acc := NilInt8ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrOptionOptionListList) Reverse() Int16ArrOptionOptionListList {
	acc := NilInt16ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrOptionOptionListList) Reverse() Int32ArrOptionOptionListList {
	acc := NilInt32ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrOptionOptionListList) Reverse() Int64ArrOptionOptionListList {
	acc := NilInt64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrOptionOptionListList) Reverse() UintArrOptionOptionListList {
	acc := NilUintArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrOptionOptionListList) Reverse() Uint8ArrOptionOptionListList {
	acc := NilUint8ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrOptionOptionListList) Reverse() Uint16ArrOptionOptionListList {
	acc := NilUint16ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrOptionOptionListList) Reverse() Uint32ArrOptionOptionListList {
	acc := NilUint32ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrOptionOptionListList) Reverse() Uint64ArrOptionOptionListList {
	acc := NilUint64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrOptionOptionListList) Reverse() UintptrArrOptionOptionListList {
	acc := NilUintptrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrOptionOptionListList) Reverse() ByteArrOptionOptionListList {
	acc := NilByteArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrOptionOptionListList) Reverse() RuneArrOptionOptionListList {
	acc := NilRuneArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrOptionOptionListList) Reverse() Float32ArrOptionOptionListList {
	acc := NilFloat32ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrOptionOptionListList) Reverse() Float64ArrOptionOptionListList {
	acc := NilFloat64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrOptionOptionListList) Reverse() Complex64ArrOptionOptionListList {
	acc := NilComplex64ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrOptionOptionListList) Reverse() Complex128ArrOptionOptionListList {
	acc := NilComplex128ArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrOptionOptionListList) Reverse() AnyArrOptionOptionListList {
	acc := NilAnyArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrArrOptionOptionListList) Reverse() BoolArrArrOptionOptionListList {
	acc := NilBoolArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrArrOptionOptionListList) Reverse() StringArrArrOptionOptionListList {
	acc := NilStringArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrArrOptionOptionListList) Reverse() IntArrArrOptionOptionListList {
	acc := NilIntArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrArrOptionOptionListList) Reverse() Int8ArrArrOptionOptionListList {
	acc := NilInt8ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrArrOptionOptionListList) Reverse() Int16ArrArrOptionOptionListList {
	acc := NilInt16ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrArrOptionOptionListList) Reverse() Int32ArrArrOptionOptionListList {
	acc := NilInt32ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrArrOptionOptionListList) Reverse() Int64ArrArrOptionOptionListList {
	acc := NilInt64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrArrOptionOptionListList) Reverse() UintArrArrOptionOptionListList {
	acc := NilUintArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrArrOptionOptionListList) Reverse() Uint8ArrArrOptionOptionListList {
	acc := NilUint8ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrArrOptionOptionListList) Reverse() Uint16ArrArrOptionOptionListList {
	acc := NilUint16ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrArrOptionOptionListList) Reverse() Uint32ArrArrOptionOptionListList {
	acc := NilUint32ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrArrOptionOptionListList) Reverse() Uint64ArrArrOptionOptionListList {
	acc := NilUint64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrArrOptionOptionListList) Reverse() UintptrArrArrOptionOptionListList {
	acc := NilUintptrArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrArrOptionOptionListList) Reverse() ByteArrArrOptionOptionListList {
	acc := NilByteArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrArrOptionOptionListList) Reverse() RuneArrArrOptionOptionListList {
	acc := NilRuneArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrArrOptionOptionListList) Reverse() Float32ArrArrOptionOptionListList {
	acc := NilFloat32ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrArrOptionOptionListList) Reverse() Float64ArrArrOptionOptionListList {
	acc := NilFloat64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrArrOptionOptionListList) Reverse() Complex64ArrArrOptionOptionListList {
	acc := NilComplex64ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrArrOptionOptionListList) Reverse() Complex128ArrArrOptionOptionListList {
	acc := NilComplex128ArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrArrOptionOptionListList) Reverse() AnyArrArrOptionOptionListList {
	acc := NilAnyArrArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrOptionOptionListList) Reverse() BoolOptionArrOptionOptionListList {
	acc := NilBoolOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrOptionOptionListList) Reverse() StringOptionArrOptionOptionListList {
	acc := NilStringOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrOptionOptionListList) Reverse() IntOptionArrOptionOptionListList {
	acc := NilIntOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrOptionOptionListList) Reverse() Int8OptionArrOptionOptionListList {
	acc := NilInt8OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrOptionOptionListList) Reverse() Int16OptionArrOptionOptionListList {
	acc := NilInt16OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrOptionOptionListList) Reverse() Int32OptionArrOptionOptionListList {
	acc := NilInt32OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrOptionOptionListList) Reverse() Int64OptionArrOptionOptionListList {
	acc := NilInt64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrOptionOptionListList) Reverse() UintOptionArrOptionOptionListList {
	acc := NilUintOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrOptionOptionListList) Reverse() Uint8OptionArrOptionOptionListList {
	acc := NilUint8OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrOptionOptionListList) Reverse() Uint16OptionArrOptionOptionListList {
	acc := NilUint16OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrOptionOptionListList) Reverse() Uint32OptionArrOptionOptionListList {
	acc := NilUint32OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrOptionOptionListList) Reverse() Uint64OptionArrOptionOptionListList {
	acc := NilUint64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrOptionOptionListList) Reverse() UintptrOptionArrOptionOptionListList {
	acc := NilUintptrOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrOptionOptionListList) Reverse() ByteOptionArrOptionOptionListList {
	acc := NilByteOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrOptionOptionListList) Reverse() RuneOptionArrOptionOptionListList {
	acc := NilRuneOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrOptionOptionListList) Reverse() Float32OptionArrOptionOptionListList {
	acc := NilFloat32OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrOptionOptionListList) Reverse() Float64OptionArrOptionOptionListList {
	acc := NilFloat64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrOptionOptionListList) Reverse() Complex64OptionArrOptionOptionListList {
	acc := NilComplex64OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrOptionOptionListList) Reverse() Complex128OptionArrOptionOptionListList {
	acc := NilComplex128OptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrOptionOptionListList) Reverse() AnyOptionArrOptionOptionListList {
	acc := NilAnyOptionArrOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionOptionListList) Reverse() BoolListOptionOptionListList {
	acc := NilBoolListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionOptionListList) Reverse() StringListOptionOptionListList {
	acc := NilStringListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionOptionListList) Reverse() IntListOptionOptionListList {
	acc := NilIntListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionOptionListList) Reverse() Int8ListOptionOptionListList {
	acc := NilInt8ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionOptionListList) Reverse() Int16ListOptionOptionListList {
	acc := NilInt16ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionOptionListList) Reverse() Int32ListOptionOptionListList {
	acc := NilInt32ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionOptionListList) Reverse() Int64ListOptionOptionListList {
	acc := NilInt64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionOptionListList) Reverse() UintListOptionOptionListList {
	acc := NilUintListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionOptionListList) Reverse() Uint8ListOptionOptionListList {
	acc := NilUint8ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionOptionListList) Reverse() Uint16ListOptionOptionListList {
	acc := NilUint16ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionOptionListList) Reverse() Uint32ListOptionOptionListList {
	acc := NilUint32ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionOptionListList) Reverse() Uint64ListOptionOptionListList {
	acc := NilUint64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionOptionListList) Reverse() UintptrListOptionOptionListList {
	acc := NilUintptrListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionOptionListList) Reverse() ByteListOptionOptionListList {
	acc := NilByteListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionOptionListList) Reverse() RuneListOptionOptionListList {
	acc := NilRuneListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionOptionListList) Reverse() Float32ListOptionOptionListList {
	acc := NilFloat32ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionOptionListList) Reverse() Float64ListOptionOptionListList {
	acc := NilFloat64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionOptionListList) Reverse() Complex64ListOptionOptionListList {
	acc := NilComplex64ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionOptionListList) Reverse() Complex128ListOptionOptionListList {
	acc := NilComplex128ListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionOptionListList) Reverse() AnyListOptionOptionListList {
	acc := NilAnyListOptionOptionListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrListList) Reverse() BoolArrListList {
	acc := NilBoolArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrListList) Reverse() StringArrListList {
	acc := NilStringArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrListList) Reverse() IntArrListList {
	acc := NilIntArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrListList) Reverse() Int8ArrListList {
	acc := NilInt8ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrListList) Reverse() Int16ArrListList {
	acc := NilInt16ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrListList) Reverse() Int32ArrListList {
	acc := NilInt32ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrListList) Reverse() Int64ArrListList {
	acc := NilInt64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrListList) Reverse() UintArrListList {
	acc := NilUintArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrListList) Reverse() Uint8ArrListList {
	acc := NilUint8ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrListList) Reverse() Uint16ArrListList {
	acc := NilUint16ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrListList) Reverse() Uint32ArrListList {
	acc := NilUint32ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrListList) Reverse() Uint64ArrListList {
	acc := NilUint64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrListList) Reverse() UintptrArrListList {
	acc := NilUintptrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrListList) Reverse() ByteArrListList {
	acc := NilByteArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrListList) Reverse() RuneArrListList {
	acc := NilRuneArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrListList) Reverse() Float32ArrListList {
	acc := NilFloat32ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrListList) Reverse() Float64ArrListList {
	acc := NilFloat64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrListList) Reverse() Complex64ArrListList {
	acc := NilComplex64ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrListList) Reverse() Complex128ArrListList {
	acc := NilComplex128ArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrListList) Reverse() AnyArrListList {
	acc := NilAnyArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrArrListList) Reverse() BoolArrArrListList {
	acc := NilBoolArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrArrListList) Reverse() StringArrArrListList {
	acc := NilStringArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrArrListList) Reverse() IntArrArrListList {
	acc := NilIntArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrArrListList) Reverse() Int8ArrArrListList {
	acc := NilInt8ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrArrListList) Reverse() Int16ArrArrListList {
	acc := NilInt16ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrArrListList) Reverse() Int32ArrArrListList {
	acc := NilInt32ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrArrListList) Reverse() Int64ArrArrListList {
	acc := NilInt64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrArrListList) Reverse() UintArrArrListList {
	acc := NilUintArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrArrListList) Reverse() Uint8ArrArrListList {
	acc := NilUint8ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrArrListList) Reverse() Uint16ArrArrListList {
	acc := NilUint16ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrArrListList) Reverse() Uint32ArrArrListList {
	acc := NilUint32ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrArrListList) Reverse() Uint64ArrArrListList {
	acc := NilUint64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrArrListList) Reverse() UintptrArrArrListList {
	acc := NilUintptrArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrArrListList) Reverse() ByteArrArrListList {
	acc := NilByteArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrArrListList) Reverse() RuneArrArrListList {
	acc := NilRuneArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrArrListList) Reverse() Float32ArrArrListList {
	acc := NilFloat32ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrArrListList) Reverse() Float64ArrArrListList {
	acc := NilFloat64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrArrListList) Reverse() Complex64ArrArrListList {
	acc := NilComplex64ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrArrListList) Reverse() Complex128ArrArrListList {
	acc := NilComplex128ArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrArrListList) Reverse() AnyArrArrListList {
	acc := NilAnyArrArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrListList) Reverse() BoolOptionArrListList {
	acc := NilBoolOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrListList) Reverse() StringOptionArrListList {
	acc := NilStringOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrListList) Reverse() IntOptionArrListList {
	acc := NilIntOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrListList) Reverse() Int8OptionArrListList {
	acc := NilInt8OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrListList) Reverse() Int16OptionArrListList {
	acc := NilInt16OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrListList) Reverse() Int32OptionArrListList {
	acc := NilInt32OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrListList) Reverse() Int64OptionArrListList {
	acc := NilInt64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrListList) Reverse() UintOptionArrListList {
	acc := NilUintOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrListList) Reverse() Uint8OptionArrListList {
	acc := NilUint8OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrListList) Reverse() Uint16OptionArrListList {
	acc := NilUint16OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrListList) Reverse() Uint32OptionArrListList {
	acc := NilUint32OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrListList) Reverse() Uint64OptionArrListList {
	acc := NilUint64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrListList) Reverse() UintptrOptionArrListList {
	acc := NilUintptrOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrListList) Reverse() ByteOptionArrListList {
	acc := NilByteOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrListList) Reverse() RuneOptionArrListList {
	acc := NilRuneOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrListList) Reverse() Float32OptionArrListList {
	acc := NilFloat32OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrListList) Reverse() Float64OptionArrListList {
	acc := NilFloat64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrListList) Reverse() Complex64OptionArrListList {
	acc := NilComplex64OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrListList) Reverse() Complex128OptionArrListList {
	acc := NilComplex128OptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrListList) Reverse() AnyOptionArrListList {
	acc := NilAnyOptionArrListList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
