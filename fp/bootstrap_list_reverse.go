// bootstrap_list_reverse.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (l BoolList) Reverse() BoolList {
	acc := NilBool
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringList) Reverse() StringList {
	acc := NilString
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntList) Reverse() IntList {
	acc := NilInt
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8List) Reverse() Int8List {
	acc := NilInt8
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16List) Reverse() Int16List {
	acc := NilInt16
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32List) Reverse() Int32List {
	acc := NilInt32
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64List) Reverse() Int64List {
	acc := NilInt64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintList) Reverse() UintList {
	acc := NilUint
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8List) Reverse() Uint8List {
	acc := NilUint8
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16List) Reverse() Uint16List {
	acc := NilUint16
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32List) Reverse() Uint32List {
	acc := NilUint32
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64List) Reverse() Uint64List {
	acc := NilUint64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrList) Reverse() UintptrList {
	acc := NilUintptr
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteList) Reverse() ByteList {
	acc := NilByte
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneList) Reverse() RuneList {
	acc := NilRune
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32List) Reverse() Float32List {
	acc := NilFloat32
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64List) Reverse() Float64List {
	acc := NilFloat64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64List) Reverse() Complex64List {
	acc := NilComplex64
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128List) Reverse() Complex128List {
	acc := NilComplex128
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyList) Reverse() AnyList {
	acc := NilAny
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionList) Reverse() BoolOptionList {
	acc := NilBoolOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionList) Reverse() StringOptionList {
	acc := NilStringOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionList) Reverse() IntOptionList {
	acc := NilIntOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionList) Reverse() Int8OptionList {
	acc := NilInt8Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionList) Reverse() Int16OptionList {
	acc := NilInt16Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionList) Reverse() Int32OptionList {
	acc := NilInt32Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionList) Reverse() Int64OptionList {
	acc := NilInt64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionList) Reverse() UintOptionList {
	acc := NilUintOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionList) Reverse() Uint8OptionList {
	acc := NilUint8Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionList) Reverse() Uint16OptionList {
	acc := NilUint16Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionList) Reverse() Uint32OptionList {
	acc := NilUint32Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionList) Reverse() Uint64OptionList {
	acc := NilUint64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionList) Reverse() UintptrOptionList {
	acc := NilUintptrOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionList) Reverse() ByteOptionList {
	acc := NilByteOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionList) Reverse() RuneOptionList {
	acc := NilRuneOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionList) Reverse() Float32OptionList {
	acc := NilFloat32Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionList) Reverse() Float64OptionList {
	acc := NilFloat64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionList) Reverse() Complex64OptionList {
	acc := NilComplex64Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionList) Reverse() Complex128OptionList {
	acc := NilComplex128Option
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionList) Reverse() AnyOptionList {
	acc := NilAnyOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayOptionList) Reverse() BoolArrayOptionList {
	acc := NilBoolArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayOptionList) Reverse() StringArrayOptionList {
	acc := NilStringArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayOptionList) Reverse() IntArrayOptionList {
	acc := NilIntArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayOptionList) Reverse() Int8ArrayOptionList {
	acc := NilInt8ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayOptionList) Reverse() Int16ArrayOptionList {
	acc := NilInt16ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayOptionList) Reverse() Int32ArrayOptionList {
	acc := NilInt32ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayOptionList) Reverse() Int64ArrayOptionList {
	acc := NilInt64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayOptionList) Reverse() UintArrayOptionList {
	acc := NilUintArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayOptionList) Reverse() Uint8ArrayOptionList {
	acc := NilUint8ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayOptionList) Reverse() Uint16ArrayOptionList {
	acc := NilUint16ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayOptionList) Reverse() Uint32ArrayOptionList {
	acc := NilUint32ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayOptionList) Reverse() Uint64ArrayOptionList {
	acc := NilUint64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayOptionList) Reverse() UintptrArrayOptionList {
	acc := NilUintptrArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayOptionList) Reverse() ByteArrayOptionList {
	acc := NilByteArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayOptionList) Reverse() RuneArrayOptionList {
	acc := NilRuneArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayOptionList) Reverse() Float32ArrayOptionList {
	acc := NilFloat32ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayOptionList) Reverse() Float64ArrayOptionList {
	acc := NilFloat64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayOptionList) Reverse() Complex64ArrayOptionList {
	acc := NilComplex64ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayOptionList) Reverse() Complex128ArrayOptionList {
	acc := NilComplex128ArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayOptionList) Reverse() AnyArrayOptionList {
	acc := NilAnyArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayArrayOptionList) Reverse() BoolArrayArrayOptionList {
	acc := NilBoolArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayArrayOptionList) Reverse() StringArrayArrayOptionList {
	acc := NilStringArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayArrayOptionList) Reverse() IntArrayArrayOptionList {
	acc := NilIntArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayArrayOptionList) Reverse() Int8ArrayArrayOptionList {
	acc := NilInt8ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayArrayOptionList) Reverse() Int16ArrayArrayOptionList {
	acc := NilInt16ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayArrayOptionList) Reverse() Int32ArrayArrayOptionList {
	acc := NilInt32ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayArrayOptionList) Reverse() Int64ArrayArrayOptionList {
	acc := NilInt64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayArrayOptionList) Reverse() UintArrayArrayOptionList {
	acc := NilUintArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayArrayOptionList) Reverse() Uint8ArrayArrayOptionList {
	acc := NilUint8ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayArrayOptionList) Reverse() Uint16ArrayArrayOptionList {
	acc := NilUint16ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayArrayOptionList) Reverse() Uint32ArrayArrayOptionList {
	acc := NilUint32ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayArrayOptionList) Reverse() Uint64ArrayArrayOptionList {
	acc := NilUint64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayArrayOptionList) Reverse() UintptrArrayArrayOptionList {
	acc := NilUintptrArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayArrayOptionList) Reverse() ByteArrayArrayOptionList {
	acc := NilByteArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayArrayOptionList) Reverse() RuneArrayArrayOptionList {
	acc := NilRuneArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayArrayOptionList) Reverse() Float32ArrayArrayOptionList {
	acc := NilFloat32ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayArrayOptionList) Reverse() Float64ArrayArrayOptionList {
	acc := NilFloat64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayArrayOptionList) Reverse() Complex64ArrayArrayOptionList {
	acc := NilComplex64ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayArrayOptionList) Reverse() Complex128ArrayArrayOptionList {
	acc := NilComplex128ArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayArrayOptionList) Reverse() AnyArrayArrayOptionList {
	acc := NilAnyArrayArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrayOptionList) Reverse() BoolOptionArrayOptionList {
	acc := NilBoolOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrayOptionList) Reverse() StringOptionArrayOptionList {
	acc := NilStringOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrayOptionList) Reverse() IntOptionArrayOptionList {
	acc := NilIntOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrayOptionList) Reverse() Int8OptionArrayOptionList {
	acc := NilInt8OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrayOptionList) Reverse() Int16OptionArrayOptionList {
	acc := NilInt16OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrayOptionList) Reverse() Int32OptionArrayOptionList {
	acc := NilInt32OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrayOptionList) Reverse() Int64OptionArrayOptionList {
	acc := NilInt64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrayOptionList) Reverse() UintOptionArrayOptionList {
	acc := NilUintOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrayOptionList) Reverse() Uint8OptionArrayOptionList {
	acc := NilUint8OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrayOptionList) Reverse() Uint16OptionArrayOptionList {
	acc := NilUint16OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrayOptionList) Reverse() Uint32OptionArrayOptionList {
	acc := NilUint32OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrayOptionList) Reverse() Uint64OptionArrayOptionList {
	acc := NilUint64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrayOptionList) Reverse() UintptrOptionArrayOptionList {
	acc := NilUintptrOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrayOptionList) Reverse() ByteOptionArrayOptionList {
	acc := NilByteOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrayOptionList) Reverse() RuneOptionArrayOptionList {
	acc := NilRuneOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrayOptionList) Reverse() Float32OptionArrayOptionList {
	acc := NilFloat32OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrayOptionList) Reverse() Float64OptionArrayOptionList {
	acc := NilFloat64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrayOptionList) Reverse() Complex64OptionArrayOptionList {
	acc := NilComplex64OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrayOptionList) Reverse() Complex128OptionArrayOptionList {
	acc := NilComplex128OptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrayOptionList) Reverse() AnyOptionArrayOptionList {
	acc := NilAnyOptionArrayOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionList) Reverse() BoolListOptionList {
	acc := NilBoolListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionList) Reverse() StringListOptionList {
	acc := NilStringListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionList) Reverse() IntListOptionList {
	acc := NilIntListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionList) Reverse() Int8ListOptionList {
	acc := NilInt8ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionList) Reverse() Int16ListOptionList {
	acc := NilInt16ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionList) Reverse() Int32ListOptionList {
	acc := NilInt32ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionList) Reverse() Int64ListOptionList {
	acc := NilInt64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionList) Reverse() UintListOptionList {
	acc := NilUintListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionList) Reverse() Uint8ListOptionList {
	acc := NilUint8ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionList) Reverse() Uint16ListOptionList {
	acc := NilUint16ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionList) Reverse() Uint32ListOptionList {
	acc := NilUint32ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionList) Reverse() Uint64ListOptionList {
	acc := NilUint64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionList) Reverse() UintptrListOptionList {
	acc := NilUintptrListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionList) Reverse() ByteListOptionList {
	acc := NilByteListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionList) Reverse() RuneListOptionList {
	acc := NilRuneListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionList) Reverse() Float32ListOptionList {
	acc := NilFloat32ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionList) Reverse() Float64ListOptionList {
	acc := NilFloat64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionList) Reverse() Complex64ListOptionList {
	acc := NilComplex64ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionList) Reverse() Complex128ListOptionList {
	acc := NilComplex128ListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionList) Reverse() AnyListOptionList {
	acc := NilAnyListOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionOptionList) Reverse() BoolOptionOptionList {
	acc := NilBoolOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionOptionList) Reverse() StringOptionOptionList {
	acc := NilStringOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionOptionList) Reverse() IntOptionOptionList {
	acc := NilIntOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionOptionList) Reverse() Int8OptionOptionList {
	acc := NilInt8OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionOptionList) Reverse() Int16OptionOptionList {
	acc := NilInt16OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionOptionList) Reverse() Int32OptionOptionList {
	acc := NilInt32OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionOptionList) Reverse() Int64OptionOptionList {
	acc := NilInt64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionOptionList) Reverse() UintOptionOptionList {
	acc := NilUintOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionOptionList) Reverse() Uint8OptionOptionList {
	acc := NilUint8OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionOptionList) Reverse() Uint16OptionOptionList {
	acc := NilUint16OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionOptionList) Reverse() Uint32OptionOptionList {
	acc := NilUint32OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionOptionList) Reverse() Uint64OptionOptionList {
	acc := NilUint64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionOptionList) Reverse() UintptrOptionOptionList {
	acc := NilUintptrOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionOptionList) Reverse() ByteOptionOptionList {
	acc := NilByteOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionOptionList) Reverse() RuneOptionOptionList {
	acc := NilRuneOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionOptionList) Reverse() Float32OptionOptionList {
	acc := NilFloat32OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionOptionList) Reverse() Float64OptionOptionList {
	acc := NilFloat64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionOptionList) Reverse() Complex64OptionOptionList {
	acc := NilComplex64OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionOptionList) Reverse() Complex128OptionOptionList {
	acc := NilComplex128OptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionOptionList) Reverse() AnyOptionOptionList {
	acc := NilAnyOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayOptionOptionList) Reverse() BoolArrayOptionOptionList {
	acc := NilBoolArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayOptionOptionList) Reverse() StringArrayOptionOptionList {
	acc := NilStringArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayOptionOptionList) Reverse() IntArrayOptionOptionList {
	acc := NilIntArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayOptionOptionList) Reverse() Int8ArrayOptionOptionList {
	acc := NilInt8ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayOptionOptionList) Reverse() Int16ArrayOptionOptionList {
	acc := NilInt16ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayOptionOptionList) Reverse() Int32ArrayOptionOptionList {
	acc := NilInt32ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayOptionOptionList) Reverse() Int64ArrayOptionOptionList {
	acc := NilInt64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayOptionOptionList) Reverse() UintArrayOptionOptionList {
	acc := NilUintArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayOptionOptionList) Reverse() Uint8ArrayOptionOptionList {
	acc := NilUint8ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayOptionOptionList) Reverse() Uint16ArrayOptionOptionList {
	acc := NilUint16ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayOptionOptionList) Reverse() Uint32ArrayOptionOptionList {
	acc := NilUint32ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayOptionOptionList) Reverse() Uint64ArrayOptionOptionList {
	acc := NilUint64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayOptionOptionList) Reverse() UintptrArrayOptionOptionList {
	acc := NilUintptrArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayOptionOptionList) Reverse() ByteArrayOptionOptionList {
	acc := NilByteArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayOptionOptionList) Reverse() RuneArrayOptionOptionList {
	acc := NilRuneArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayOptionOptionList) Reverse() Float32ArrayOptionOptionList {
	acc := NilFloat32ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayOptionOptionList) Reverse() Float64ArrayOptionOptionList {
	acc := NilFloat64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayOptionOptionList) Reverse() Complex64ArrayOptionOptionList {
	acc := NilComplex64ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayOptionOptionList) Reverse() Complex128ArrayOptionOptionList {
	acc := NilComplex128ArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayOptionOptionList) Reverse() AnyArrayOptionOptionList {
	acc := NilAnyArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayArrayOptionOptionList) Reverse() BoolArrayArrayOptionOptionList {
	acc := NilBoolArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayArrayOptionOptionList) Reverse() StringArrayArrayOptionOptionList {
	acc := NilStringArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayArrayOptionOptionList) Reverse() IntArrayArrayOptionOptionList {
	acc := NilIntArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayArrayOptionOptionList) Reverse() Int8ArrayArrayOptionOptionList {
	acc := NilInt8ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayArrayOptionOptionList) Reverse() Int16ArrayArrayOptionOptionList {
	acc := NilInt16ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayArrayOptionOptionList) Reverse() Int32ArrayArrayOptionOptionList {
	acc := NilInt32ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayArrayOptionOptionList) Reverse() Int64ArrayArrayOptionOptionList {
	acc := NilInt64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayArrayOptionOptionList) Reverse() UintArrayArrayOptionOptionList {
	acc := NilUintArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayArrayOptionOptionList) Reverse() Uint8ArrayArrayOptionOptionList {
	acc := NilUint8ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayArrayOptionOptionList) Reverse() Uint16ArrayArrayOptionOptionList {
	acc := NilUint16ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayArrayOptionOptionList) Reverse() Uint32ArrayArrayOptionOptionList {
	acc := NilUint32ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayArrayOptionOptionList) Reverse() Uint64ArrayArrayOptionOptionList {
	acc := NilUint64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayArrayOptionOptionList) Reverse() UintptrArrayArrayOptionOptionList {
	acc := NilUintptrArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayArrayOptionOptionList) Reverse() ByteArrayArrayOptionOptionList {
	acc := NilByteArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayArrayOptionOptionList) Reverse() RuneArrayArrayOptionOptionList {
	acc := NilRuneArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayArrayOptionOptionList) Reverse() Float32ArrayArrayOptionOptionList {
	acc := NilFloat32ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayArrayOptionOptionList) Reverse() Float64ArrayArrayOptionOptionList {
	acc := NilFloat64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayArrayOptionOptionList) Reverse() Complex64ArrayArrayOptionOptionList {
	acc := NilComplex64ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayArrayOptionOptionList) Reverse() Complex128ArrayArrayOptionOptionList {
	acc := NilComplex128ArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayArrayOptionOptionList) Reverse() AnyArrayArrayOptionOptionList {
	acc := NilAnyArrayArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrayOptionOptionList) Reverse() BoolOptionArrayOptionOptionList {
	acc := NilBoolOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrayOptionOptionList) Reverse() StringOptionArrayOptionOptionList {
	acc := NilStringOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrayOptionOptionList) Reverse() IntOptionArrayOptionOptionList {
	acc := NilIntOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrayOptionOptionList) Reverse() Int8OptionArrayOptionOptionList {
	acc := NilInt8OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrayOptionOptionList) Reverse() Int16OptionArrayOptionOptionList {
	acc := NilInt16OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrayOptionOptionList) Reverse() Int32OptionArrayOptionOptionList {
	acc := NilInt32OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrayOptionOptionList) Reverse() Int64OptionArrayOptionOptionList {
	acc := NilInt64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrayOptionOptionList) Reverse() UintOptionArrayOptionOptionList {
	acc := NilUintOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrayOptionOptionList) Reverse() Uint8OptionArrayOptionOptionList {
	acc := NilUint8OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrayOptionOptionList) Reverse() Uint16OptionArrayOptionOptionList {
	acc := NilUint16OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrayOptionOptionList) Reverse() Uint32OptionArrayOptionOptionList {
	acc := NilUint32OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrayOptionOptionList) Reverse() Uint64OptionArrayOptionOptionList {
	acc := NilUint64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrayOptionOptionList) Reverse() UintptrOptionArrayOptionOptionList {
	acc := NilUintptrOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrayOptionOptionList) Reverse() ByteOptionArrayOptionOptionList {
	acc := NilByteOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrayOptionOptionList) Reverse() RuneOptionArrayOptionOptionList {
	acc := NilRuneOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrayOptionOptionList) Reverse() Float32OptionArrayOptionOptionList {
	acc := NilFloat32OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrayOptionOptionList) Reverse() Float64OptionArrayOptionOptionList {
	acc := NilFloat64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrayOptionOptionList) Reverse() Complex64OptionArrayOptionOptionList {
	acc := NilComplex64OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrayOptionOptionList) Reverse() Complex128OptionArrayOptionOptionList {
	acc := NilComplex128OptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrayOptionOptionList) Reverse() AnyOptionArrayOptionOptionList {
	acc := NilAnyOptionArrayOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionOptionList) Reverse() BoolListOptionOptionList {
	acc := NilBoolListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionOptionList) Reverse() StringListOptionOptionList {
	acc := NilStringListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionOptionList) Reverse() IntListOptionOptionList {
	acc := NilIntListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionOptionList) Reverse() Int8ListOptionOptionList {
	acc := NilInt8ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionOptionList) Reverse() Int16ListOptionOptionList {
	acc := NilInt16ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionOptionList) Reverse() Int32ListOptionOptionList {
	acc := NilInt32ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionOptionList) Reverse() Int64ListOptionOptionList {
	acc := NilInt64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionOptionList) Reverse() UintListOptionOptionList {
	acc := NilUintListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionOptionList) Reverse() Uint8ListOptionOptionList {
	acc := NilUint8ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionOptionList) Reverse() Uint16ListOptionOptionList {
	acc := NilUint16ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionOptionList) Reverse() Uint32ListOptionOptionList {
	acc := NilUint32ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionOptionList) Reverse() Uint64ListOptionOptionList {
	acc := NilUint64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionOptionList) Reverse() UintptrListOptionOptionList {
	acc := NilUintptrListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionOptionList) Reverse() ByteListOptionOptionList {
	acc := NilByteListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionOptionList) Reverse() RuneListOptionOptionList {
	acc := NilRuneListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionOptionList) Reverse() Float32ListOptionOptionList {
	acc := NilFloat32ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionOptionList) Reverse() Float64ListOptionOptionList {
	acc := NilFloat64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionOptionList) Reverse() Complex64ListOptionOptionList {
	acc := NilComplex64ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionOptionList) Reverse() Complex128ListOptionOptionList {
	acc := NilComplex128ListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionOptionList) Reverse() AnyListOptionOptionList {
	acc := NilAnyListOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionOptionOptionList) Reverse() BoolOptionOptionOptionList {
	acc := NilBoolOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionOptionOptionList) Reverse() StringOptionOptionOptionList {
	acc := NilStringOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionOptionOptionList) Reverse() IntOptionOptionOptionList {
	acc := NilIntOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionOptionOptionList) Reverse() Int8OptionOptionOptionList {
	acc := NilInt8OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionOptionOptionList) Reverse() Int16OptionOptionOptionList {
	acc := NilInt16OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionOptionOptionList) Reverse() Int32OptionOptionOptionList {
	acc := NilInt32OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionOptionOptionList) Reverse() Int64OptionOptionOptionList {
	acc := NilInt64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionOptionOptionList) Reverse() UintOptionOptionOptionList {
	acc := NilUintOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionOptionOptionList) Reverse() Uint8OptionOptionOptionList {
	acc := NilUint8OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionOptionOptionList) Reverse() Uint16OptionOptionOptionList {
	acc := NilUint16OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionOptionOptionList) Reverse() Uint32OptionOptionOptionList {
	acc := NilUint32OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionOptionOptionList) Reverse() Uint64OptionOptionOptionList {
	acc := NilUint64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionOptionOptionList) Reverse() UintptrOptionOptionOptionList {
	acc := NilUintptrOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionOptionOptionList) Reverse() ByteOptionOptionOptionList {
	acc := NilByteOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionOptionOptionList) Reverse() RuneOptionOptionOptionList {
	acc := NilRuneOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionOptionOptionList) Reverse() Float32OptionOptionOptionList {
	acc := NilFloat32OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionOptionOptionList) Reverse() Float64OptionOptionOptionList {
	acc := NilFloat64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionOptionOptionList) Reverse() Complex64OptionOptionOptionList {
	acc := NilComplex64OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionOptionOptionList) Reverse() Complex128OptionOptionOptionList {
	acc := NilComplex128OptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionOptionOptionList) Reverse() AnyOptionOptionOptionList {
	acc := NilAnyOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayOptionOptionOptionList) Reverse() BoolArrayOptionOptionOptionList {
	acc := NilBoolArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayOptionOptionOptionList) Reverse() StringArrayOptionOptionOptionList {
	acc := NilStringArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayOptionOptionOptionList) Reverse() IntArrayOptionOptionOptionList {
	acc := NilIntArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayOptionOptionOptionList) Reverse() Int8ArrayOptionOptionOptionList {
	acc := NilInt8ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayOptionOptionOptionList) Reverse() Int16ArrayOptionOptionOptionList {
	acc := NilInt16ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayOptionOptionOptionList) Reverse() Int32ArrayOptionOptionOptionList {
	acc := NilInt32ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayOptionOptionOptionList) Reverse() Int64ArrayOptionOptionOptionList {
	acc := NilInt64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayOptionOptionOptionList) Reverse() UintArrayOptionOptionOptionList {
	acc := NilUintArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayOptionOptionOptionList) Reverse() Uint8ArrayOptionOptionOptionList {
	acc := NilUint8ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayOptionOptionOptionList) Reverse() Uint16ArrayOptionOptionOptionList {
	acc := NilUint16ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayOptionOptionOptionList) Reverse() Uint32ArrayOptionOptionOptionList {
	acc := NilUint32ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayOptionOptionOptionList) Reverse() Uint64ArrayOptionOptionOptionList {
	acc := NilUint64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayOptionOptionOptionList) Reverse() UintptrArrayOptionOptionOptionList {
	acc := NilUintptrArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayOptionOptionOptionList) Reverse() ByteArrayOptionOptionOptionList {
	acc := NilByteArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayOptionOptionOptionList) Reverse() RuneArrayOptionOptionOptionList {
	acc := NilRuneArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayOptionOptionOptionList) Reverse() Float32ArrayOptionOptionOptionList {
	acc := NilFloat32ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayOptionOptionOptionList) Reverse() Float64ArrayOptionOptionOptionList {
	acc := NilFloat64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayOptionOptionOptionList) Reverse() Complex64ArrayOptionOptionOptionList {
	acc := NilComplex64ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayOptionOptionOptionList) Reverse() Complex128ArrayOptionOptionOptionList {
	acc := NilComplex128ArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayOptionOptionOptionList) Reverse() AnyArrayOptionOptionOptionList {
	acc := NilAnyArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayArrayOptionOptionOptionList) Reverse() BoolArrayArrayOptionOptionOptionList {
	acc := NilBoolArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayArrayOptionOptionOptionList) Reverse() StringArrayArrayOptionOptionOptionList {
	acc := NilStringArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayArrayOptionOptionOptionList) Reverse() IntArrayArrayOptionOptionOptionList {
	acc := NilIntArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayArrayOptionOptionOptionList) Reverse() Int8ArrayArrayOptionOptionOptionList {
	acc := NilInt8ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayArrayOptionOptionOptionList) Reverse() Int16ArrayArrayOptionOptionOptionList {
	acc := NilInt16ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayArrayOptionOptionOptionList) Reverse() Int32ArrayArrayOptionOptionOptionList {
	acc := NilInt32ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayArrayOptionOptionOptionList) Reverse() Int64ArrayArrayOptionOptionOptionList {
	acc := NilInt64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayArrayOptionOptionOptionList) Reverse() UintArrayArrayOptionOptionOptionList {
	acc := NilUintArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayArrayOptionOptionOptionList) Reverse() Uint8ArrayArrayOptionOptionOptionList {
	acc := NilUint8ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayArrayOptionOptionOptionList) Reverse() Uint16ArrayArrayOptionOptionOptionList {
	acc := NilUint16ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayArrayOptionOptionOptionList) Reverse() Uint32ArrayArrayOptionOptionOptionList {
	acc := NilUint32ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayArrayOptionOptionOptionList) Reverse() Uint64ArrayArrayOptionOptionOptionList {
	acc := NilUint64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayArrayOptionOptionOptionList) Reverse() UintptrArrayArrayOptionOptionOptionList {
	acc := NilUintptrArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayArrayOptionOptionOptionList) Reverse() ByteArrayArrayOptionOptionOptionList {
	acc := NilByteArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayArrayOptionOptionOptionList) Reverse() RuneArrayArrayOptionOptionOptionList {
	acc := NilRuneArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayArrayOptionOptionOptionList) Reverse() Float32ArrayArrayOptionOptionOptionList {
	acc := NilFloat32ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayArrayOptionOptionOptionList) Reverse() Float64ArrayArrayOptionOptionOptionList {
	acc := NilFloat64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayArrayOptionOptionOptionList) Reverse() Complex64ArrayArrayOptionOptionOptionList {
	acc := NilComplex64ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayArrayOptionOptionOptionList) Reverse() Complex128ArrayArrayOptionOptionOptionList {
	acc := NilComplex128ArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayArrayOptionOptionOptionList) Reverse() AnyArrayArrayOptionOptionOptionList {
	acc := NilAnyArrayArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrayOptionOptionOptionList) Reverse() BoolOptionArrayOptionOptionOptionList {
	acc := NilBoolOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrayOptionOptionOptionList) Reverse() StringOptionArrayOptionOptionOptionList {
	acc := NilStringOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrayOptionOptionOptionList) Reverse() IntOptionArrayOptionOptionOptionList {
	acc := NilIntOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrayOptionOptionOptionList) Reverse() Int8OptionArrayOptionOptionOptionList {
	acc := NilInt8OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrayOptionOptionOptionList) Reverse() Int16OptionArrayOptionOptionOptionList {
	acc := NilInt16OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrayOptionOptionOptionList) Reverse() Int32OptionArrayOptionOptionOptionList {
	acc := NilInt32OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrayOptionOptionOptionList) Reverse() Int64OptionArrayOptionOptionOptionList {
	acc := NilInt64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrayOptionOptionOptionList) Reverse() UintOptionArrayOptionOptionOptionList {
	acc := NilUintOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrayOptionOptionOptionList) Reverse() Uint8OptionArrayOptionOptionOptionList {
	acc := NilUint8OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrayOptionOptionOptionList) Reverse() Uint16OptionArrayOptionOptionOptionList {
	acc := NilUint16OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrayOptionOptionOptionList) Reverse() Uint32OptionArrayOptionOptionOptionList {
	acc := NilUint32OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrayOptionOptionOptionList) Reverse() Uint64OptionArrayOptionOptionOptionList {
	acc := NilUint64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrayOptionOptionOptionList) Reverse() UintptrOptionArrayOptionOptionOptionList {
	acc := NilUintptrOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrayOptionOptionOptionList) Reverse() ByteOptionArrayOptionOptionOptionList {
	acc := NilByteOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrayOptionOptionOptionList) Reverse() RuneOptionArrayOptionOptionOptionList {
	acc := NilRuneOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrayOptionOptionOptionList) Reverse() Float32OptionArrayOptionOptionOptionList {
	acc := NilFloat32OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrayOptionOptionOptionList) Reverse() Float64OptionArrayOptionOptionOptionList {
	acc := NilFloat64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrayOptionOptionOptionList) Reverse() Complex64OptionArrayOptionOptionOptionList {
	acc := NilComplex64OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrayOptionOptionOptionList) Reverse() Complex128OptionArrayOptionOptionOptionList {
	acc := NilComplex128OptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrayOptionOptionOptionList) Reverse() AnyOptionArrayOptionOptionOptionList {
	acc := NilAnyOptionArrayOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListOptionOptionOptionList) Reverse() BoolListOptionOptionOptionList {
	acc := NilBoolListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListOptionOptionOptionList) Reverse() StringListOptionOptionOptionList {
	acc := NilStringListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListOptionOptionOptionList) Reverse() IntListOptionOptionOptionList {
	acc := NilIntListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListOptionOptionOptionList) Reverse() Int8ListOptionOptionOptionList {
	acc := NilInt8ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListOptionOptionOptionList) Reverse() Int16ListOptionOptionOptionList {
	acc := NilInt16ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListOptionOptionOptionList) Reverse() Int32ListOptionOptionOptionList {
	acc := NilInt32ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListOptionOptionOptionList) Reverse() Int64ListOptionOptionOptionList {
	acc := NilInt64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListOptionOptionOptionList) Reverse() UintListOptionOptionOptionList {
	acc := NilUintListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListOptionOptionOptionList) Reverse() Uint8ListOptionOptionOptionList {
	acc := NilUint8ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListOptionOptionOptionList) Reverse() Uint16ListOptionOptionOptionList {
	acc := NilUint16ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListOptionOptionOptionList) Reverse() Uint32ListOptionOptionOptionList {
	acc := NilUint32ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListOptionOptionOptionList) Reverse() Uint64ListOptionOptionOptionList {
	acc := NilUint64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListOptionOptionOptionList) Reverse() UintptrListOptionOptionOptionList {
	acc := NilUintptrListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListOptionOptionOptionList) Reverse() ByteListOptionOptionOptionList {
	acc := NilByteListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListOptionOptionOptionList) Reverse() RuneListOptionOptionOptionList {
	acc := NilRuneListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListOptionOptionOptionList) Reverse() Float32ListOptionOptionOptionList {
	acc := NilFloat32ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListOptionOptionOptionList) Reverse() Float64ListOptionOptionOptionList {
	acc := NilFloat64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListOptionOptionOptionList) Reverse() Complex64ListOptionOptionOptionList {
	acc := NilComplex64ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListOptionOptionOptionList) Reverse() Complex128ListOptionOptionOptionList {
	acc := NilComplex128ListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListOptionOptionOptionList) Reverse() AnyListOptionOptionOptionList {
	acc := NilAnyListOptionOptionOption
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayList) Reverse() BoolArrayList {
	acc := NilBoolArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayList) Reverse() StringArrayList {
	acc := NilStringArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayList) Reverse() IntArrayList {
	acc := NilIntArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayList) Reverse() Int8ArrayList {
	acc := NilInt8Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayList) Reverse() Int16ArrayList {
	acc := NilInt16Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayList) Reverse() Int32ArrayList {
	acc := NilInt32Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayList) Reverse() Int64ArrayList {
	acc := NilInt64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayList) Reverse() UintArrayList {
	acc := NilUintArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayList) Reverse() Uint8ArrayList {
	acc := NilUint8Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayList) Reverse() Uint16ArrayList {
	acc := NilUint16Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayList) Reverse() Uint32ArrayList {
	acc := NilUint32Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayList) Reverse() Uint64ArrayList {
	acc := NilUint64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayList) Reverse() UintptrArrayList {
	acc := NilUintptrArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayList) Reverse() ByteArrayList {
	acc := NilByteArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayList) Reverse() RuneArrayList {
	acc := NilRuneArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayList) Reverse() Float32ArrayList {
	acc := NilFloat32Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayList) Reverse() Float64ArrayList {
	acc := NilFloat64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayList) Reverse() Complex64ArrayList {
	acc := NilComplex64Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayList) Reverse() Complex128ArrayList {
	acc := NilComplex128Array
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayList) Reverse() AnyArrayList {
	acc := NilAnyArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolArrayArrayList) Reverse() BoolArrayArrayList {
	acc := NilBoolArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringArrayArrayList) Reverse() StringArrayArrayList {
	acc := NilStringArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntArrayArrayList) Reverse() IntArrayArrayList {
	acc := NilIntArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ArrayArrayList) Reverse() Int8ArrayArrayList {
	acc := NilInt8ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ArrayArrayList) Reverse() Int16ArrayArrayList {
	acc := NilInt16ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ArrayArrayList) Reverse() Int32ArrayArrayList {
	acc := NilInt32ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ArrayArrayList) Reverse() Int64ArrayArrayList {
	acc := NilInt64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintArrayArrayList) Reverse() UintArrayArrayList {
	acc := NilUintArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ArrayArrayList) Reverse() Uint8ArrayArrayList {
	acc := NilUint8ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ArrayArrayList) Reverse() Uint16ArrayArrayList {
	acc := NilUint16ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ArrayArrayList) Reverse() Uint32ArrayArrayList {
	acc := NilUint32ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ArrayArrayList) Reverse() Uint64ArrayArrayList {
	acc := NilUint64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrArrayArrayList) Reverse() UintptrArrayArrayList {
	acc := NilUintptrArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteArrayArrayList) Reverse() ByteArrayArrayList {
	acc := NilByteArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneArrayArrayList) Reverse() RuneArrayArrayList {
	acc := NilRuneArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ArrayArrayList) Reverse() Float32ArrayArrayList {
	acc := NilFloat32ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ArrayArrayList) Reverse() Float64ArrayArrayList {
	acc := NilFloat64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ArrayArrayList) Reverse() Complex64ArrayArrayList {
	acc := NilComplex64ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ArrayArrayList) Reverse() Complex128ArrayArrayList {
	acc := NilComplex128ArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyArrayArrayList) Reverse() AnyArrayArrayList {
	acc := NilAnyArrayArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolOptionArrayList) Reverse() BoolOptionArrayList {
	acc := NilBoolOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringOptionArrayList) Reverse() StringOptionArrayList {
	acc := NilStringOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntOptionArrayList) Reverse() IntOptionArrayList {
	acc := NilIntOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8OptionArrayList) Reverse() Int8OptionArrayList {
	acc := NilInt8OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16OptionArrayList) Reverse() Int16OptionArrayList {
	acc := NilInt16OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32OptionArrayList) Reverse() Int32OptionArrayList {
	acc := NilInt32OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64OptionArrayList) Reverse() Int64OptionArrayList {
	acc := NilInt64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintOptionArrayList) Reverse() UintOptionArrayList {
	acc := NilUintOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8OptionArrayList) Reverse() Uint8OptionArrayList {
	acc := NilUint8OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16OptionArrayList) Reverse() Uint16OptionArrayList {
	acc := NilUint16OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32OptionArrayList) Reverse() Uint32OptionArrayList {
	acc := NilUint32OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64OptionArrayList) Reverse() Uint64OptionArrayList {
	acc := NilUint64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrOptionArrayList) Reverse() UintptrOptionArrayList {
	acc := NilUintptrOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteOptionArrayList) Reverse() ByteOptionArrayList {
	acc := NilByteOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneOptionArrayList) Reverse() RuneOptionArrayList {
	acc := NilRuneOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32OptionArrayList) Reverse() Float32OptionArrayList {
	acc := NilFloat32OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64OptionArrayList) Reverse() Float64OptionArrayList {
	acc := NilFloat64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64OptionArrayList) Reverse() Complex64OptionArrayList {
	acc := NilComplex64OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128OptionArrayList) Reverse() Complex128OptionArrayList {
	acc := NilComplex128OptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyOptionArrayList) Reverse() AnyOptionArrayList {
	acc := NilAnyOptionArray
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l BoolListList) Reverse() BoolListList {
	acc := NilBoolList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l StringListList) Reverse() StringListList {
	acc := NilStringList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l IntListList) Reverse() IntListList {
	acc := NilIntList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int8ListList) Reverse() Int8ListList {
	acc := NilInt8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int16ListList) Reverse() Int16ListList {
	acc := NilInt16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int32ListList) Reverse() Int32ListList {
	acc := NilInt32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Int64ListList) Reverse() Int64ListList {
	acc := NilInt64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintListList) Reverse() UintListList {
	acc := NilUintList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint8ListList) Reverse() Uint8ListList {
	acc := NilUint8List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint16ListList) Reverse() Uint16ListList {
	acc := NilUint16List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint32ListList) Reverse() Uint32ListList {
	acc := NilUint32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Uint64ListList) Reverse() Uint64ListList {
	acc := NilUint64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l UintptrListList) Reverse() UintptrListList {
	acc := NilUintptrList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l ByteListList) Reverse() ByteListList {
	acc := NilByteList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l RuneListList) Reverse() RuneListList {
	acc := NilRuneList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float32ListList) Reverse() Float32ListList {
	acc := NilFloat32List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Float64ListList) Reverse() Float64ListList {
	acc := NilFloat64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex64ListList) Reverse() Complex64ListList {
	acc := NilComplex64List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l Complex128ListList) Reverse() Complex128ListList {
	acc := NilComplex128List
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
func (l AnyListList) Reverse() AnyListList {
	acc := NilAnyList
	xs := l
	for xs.NonEmpty() {
		acc = acc.Cons(*xs.head)
		xs = *xs.tail
	}
	return acc
}
