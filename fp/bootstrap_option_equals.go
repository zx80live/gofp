// bootstrap_option_equals.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp


func (m1 BoolOption) Equals(m2 BoolOption) bool { return BoolOptionEquals(m1, m2) }
func (m1 StringOption) Equals(m2 StringOption) bool { return StringOptionEquals(m1, m2) }
func (m1 IntOption) Equals(m2 IntOption) bool { return IntOptionEquals(m1, m2) }
func (m1 Int8Option) Equals(m2 Int8Option) bool { return Int8OptionEquals(m1, m2) }
func (m1 Int16Option) Equals(m2 Int16Option) bool { return Int16OptionEquals(m1, m2) }
func (m1 Int32Option) Equals(m2 Int32Option) bool { return Int32OptionEquals(m1, m2) }
func (m1 Int64Option) Equals(m2 Int64Option) bool { return Int64OptionEquals(m1, m2) }
func (m1 UintOption) Equals(m2 UintOption) bool { return UintOptionEquals(m1, m2) }
func (m1 Uint8Option) Equals(m2 Uint8Option) bool { return Uint8OptionEquals(m1, m2) }
func (m1 Uint16Option) Equals(m2 Uint16Option) bool { return Uint16OptionEquals(m1, m2) }
func (m1 Uint32Option) Equals(m2 Uint32Option) bool { return Uint32OptionEquals(m1, m2) }
func (m1 Uint64Option) Equals(m2 Uint64Option) bool { return Uint64OptionEquals(m1, m2) }
func (m1 UintptrOption) Equals(m2 UintptrOption) bool { return UintptrOptionEquals(m1, m2) }
func (m1 ByteOption) Equals(m2 ByteOption) bool { return ByteOptionEquals(m1, m2) }
func (m1 RuneOption) Equals(m2 RuneOption) bool { return RuneOptionEquals(m1, m2) }
func (m1 Float32Option) Equals(m2 Float32Option) bool { return Float32OptionEquals(m1, m2) }
func (m1 Float64Option) Equals(m2 Float64Option) bool { return Float64OptionEquals(m1, m2) }
func (m1 Complex64Option) Equals(m2 Complex64Option) bool { return Complex64OptionEquals(m1, m2) }
func (m1 Complex128Option) Equals(m2 Complex128Option) bool { return Complex128OptionEquals(m1, m2) }
func (m1 AnyOption) Equals(m2 AnyOption) bool { return AnyOptionEquals(m1, m2) }
func (m1 BoolArrOption) Equals(m2 BoolArrOption) bool { return BoolArrOptionEquals(m1, m2) }
func (m1 StringArrOption) Equals(m2 StringArrOption) bool { return StringArrOptionEquals(m1, m2) }
func (m1 IntArrOption) Equals(m2 IntArrOption) bool { return IntArrOptionEquals(m1, m2) }
func (m1 Int8ArrOption) Equals(m2 Int8ArrOption) bool { return Int8ArrOptionEquals(m1, m2) }
func (m1 Int16ArrOption) Equals(m2 Int16ArrOption) bool { return Int16ArrOptionEquals(m1, m2) }
func (m1 Int32ArrOption) Equals(m2 Int32ArrOption) bool { return Int32ArrOptionEquals(m1, m2) }
func (m1 Int64ArrOption) Equals(m2 Int64ArrOption) bool { return Int64ArrOptionEquals(m1, m2) }
func (m1 UintArrOption) Equals(m2 UintArrOption) bool { return UintArrOptionEquals(m1, m2) }
func (m1 Uint8ArrOption) Equals(m2 Uint8ArrOption) bool { return Uint8ArrOptionEquals(m1, m2) }
func (m1 Uint16ArrOption) Equals(m2 Uint16ArrOption) bool { return Uint16ArrOptionEquals(m1, m2) }
func (m1 Uint32ArrOption) Equals(m2 Uint32ArrOption) bool { return Uint32ArrOptionEquals(m1, m2) }
func (m1 Uint64ArrOption) Equals(m2 Uint64ArrOption) bool { return Uint64ArrOptionEquals(m1, m2) }
func (m1 UintptrArrOption) Equals(m2 UintptrArrOption) bool { return UintptrArrOptionEquals(m1, m2) }
func (m1 ByteArrOption) Equals(m2 ByteArrOption) bool { return ByteArrOptionEquals(m1, m2) }
func (m1 RuneArrOption) Equals(m2 RuneArrOption) bool { return RuneArrOptionEquals(m1, m2) }
func (m1 Float32ArrOption) Equals(m2 Float32ArrOption) bool { return Float32ArrOptionEquals(m1, m2) }
func (m1 Float64ArrOption) Equals(m2 Float64ArrOption) bool { return Float64ArrOptionEquals(m1, m2) }
func (m1 Complex64ArrOption) Equals(m2 Complex64ArrOption) bool { return Complex64ArrOptionEquals(m1, m2) }
func (m1 Complex128ArrOption) Equals(m2 Complex128ArrOption) bool { return Complex128ArrOptionEquals(m1, m2) }
func (m1 AnyArrOption) Equals(m2 AnyArrOption) bool { return AnyArrOptionEquals(m1, m2) }
func (m1 BoolArrArrOption) Equals(m2 BoolArrArrOption) bool { return BoolArrArrOptionEquals(m1, m2) }
func (m1 StringArrArrOption) Equals(m2 StringArrArrOption) bool { return StringArrArrOptionEquals(m1, m2) }
func (m1 IntArrArrOption) Equals(m2 IntArrArrOption) bool { return IntArrArrOptionEquals(m1, m2) }
func (m1 Int8ArrArrOption) Equals(m2 Int8ArrArrOption) bool { return Int8ArrArrOptionEquals(m1, m2) }
func (m1 Int16ArrArrOption) Equals(m2 Int16ArrArrOption) bool { return Int16ArrArrOptionEquals(m1, m2) }
func (m1 Int32ArrArrOption) Equals(m2 Int32ArrArrOption) bool { return Int32ArrArrOptionEquals(m1, m2) }
func (m1 Int64ArrArrOption) Equals(m2 Int64ArrArrOption) bool { return Int64ArrArrOptionEquals(m1, m2) }
func (m1 UintArrArrOption) Equals(m2 UintArrArrOption) bool { return UintArrArrOptionEquals(m1, m2) }
func (m1 Uint8ArrArrOption) Equals(m2 Uint8ArrArrOption) bool { return Uint8ArrArrOptionEquals(m1, m2) }
func (m1 Uint16ArrArrOption) Equals(m2 Uint16ArrArrOption) bool { return Uint16ArrArrOptionEquals(m1, m2) }
func (m1 Uint32ArrArrOption) Equals(m2 Uint32ArrArrOption) bool { return Uint32ArrArrOptionEquals(m1, m2) }
func (m1 Uint64ArrArrOption) Equals(m2 Uint64ArrArrOption) bool { return Uint64ArrArrOptionEquals(m1, m2) }
func (m1 UintptrArrArrOption) Equals(m2 UintptrArrArrOption) bool { return UintptrArrArrOptionEquals(m1, m2) }
func (m1 ByteArrArrOption) Equals(m2 ByteArrArrOption) bool { return ByteArrArrOptionEquals(m1, m2) }
func (m1 RuneArrArrOption) Equals(m2 RuneArrArrOption) bool { return RuneArrArrOptionEquals(m1, m2) }
func (m1 Float32ArrArrOption) Equals(m2 Float32ArrArrOption) bool { return Float32ArrArrOptionEquals(m1, m2) }
func (m1 Float64ArrArrOption) Equals(m2 Float64ArrArrOption) bool { return Float64ArrArrOptionEquals(m1, m2) }
func (m1 Complex64ArrArrOption) Equals(m2 Complex64ArrArrOption) bool { return Complex64ArrArrOptionEquals(m1, m2) }
func (m1 Complex128ArrArrOption) Equals(m2 Complex128ArrArrOption) bool { return Complex128ArrArrOptionEquals(m1, m2) }
func (m1 AnyArrArrOption) Equals(m2 AnyArrArrOption) bool { return AnyArrArrOptionEquals(m1, m2) }
func (m1 BoolOptionArrOption) Equals(m2 BoolOptionArrOption) bool { return BoolOptionArrOptionEquals(m1, m2) }
func (m1 StringOptionArrOption) Equals(m2 StringOptionArrOption) bool { return StringOptionArrOptionEquals(m1, m2) }
func (m1 IntOptionArrOption) Equals(m2 IntOptionArrOption) bool { return IntOptionArrOptionEquals(m1, m2) }
func (m1 Int8OptionArrOption) Equals(m2 Int8OptionArrOption) bool { return Int8OptionArrOptionEquals(m1, m2) }
func (m1 Int16OptionArrOption) Equals(m2 Int16OptionArrOption) bool { return Int16OptionArrOptionEquals(m1, m2) }
func (m1 Int32OptionArrOption) Equals(m2 Int32OptionArrOption) bool { return Int32OptionArrOptionEquals(m1, m2) }
func (m1 Int64OptionArrOption) Equals(m2 Int64OptionArrOption) bool { return Int64OptionArrOptionEquals(m1, m2) }
func (m1 UintOptionArrOption) Equals(m2 UintOptionArrOption) bool { return UintOptionArrOptionEquals(m1, m2) }
func (m1 Uint8OptionArrOption) Equals(m2 Uint8OptionArrOption) bool { return Uint8OptionArrOptionEquals(m1, m2) }
func (m1 Uint16OptionArrOption) Equals(m2 Uint16OptionArrOption) bool { return Uint16OptionArrOptionEquals(m1, m2) }
func (m1 Uint32OptionArrOption) Equals(m2 Uint32OptionArrOption) bool { return Uint32OptionArrOptionEquals(m1, m2) }
func (m1 Uint64OptionArrOption) Equals(m2 Uint64OptionArrOption) bool { return Uint64OptionArrOptionEquals(m1, m2) }
func (m1 UintptrOptionArrOption) Equals(m2 UintptrOptionArrOption) bool { return UintptrOptionArrOptionEquals(m1, m2) }
func (m1 ByteOptionArrOption) Equals(m2 ByteOptionArrOption) bool { return ByteOptionArrOptionEquals(m1, m2) }
func (m1 RuneOptionArrOption) Equals(m2 RuneOptionArrOption) bool { return RuneOptionArrOptionEquals(m1, m2) }
func (m1 Float32OptionArrOption) Equals(m2 Float32OptionArrOption) bool { return Float32OptionArrOptionEquals(m1, m2) }
func (m1 Float64OptionArrOption) Equals(m2 Float64OptionArrOption) bool { return Float64OptionArrOptionEquals(m1, m2) }
func (m1 Complex64OptionArrOption) Equals(m2 Complex64OptionArrOption) bool { return Complex64OptionArrOptionEquals(m1, m2) }
func (m1 Complex128OptionArrOption) Equals(m2 Complex128OptionArrOption) bool { return Complex128OptionArrOptionEquals(m1, m2) }
func (m1 AnyOptionArrOption) Equals(m2 AnyOptionArrOption) bool { return AnyOptionArrOptionEquals(m1, m2) }
func (m1 BoolListOption) Equals(m2 BoolListOption) bool { return BoolListOptionEquals(m1, m2) }
func (m1 StringListOption) Equals(m2 StringListOption) bool { return StringListOptionEquals(m1, m2) }
func (m1 IntListOption) Equals(m2 IntListOption) bool { return IntListOptionEquals(m1, m2) }
func (m1 Int8ListOption) Equals(m2 Int8ListOption) bool { return Int8ListOptionEquals(m1, m2) }
func (m1 Int16ListOption) Equals(m2 Int16ListOption) bool { return Int16ListOptionEquals(m1, m2) }
func (m1 Int32ListOption) Equals(m2 Int32ListOption) bool { return Int32ListOptionEquals(m1, m2) }
func (m1 Int64ListOption) Equals(m2 Int64ListOption) bool { return Int64ListOptionEquals(m1, m2) }
func (m1 UintListOption) Equals(m2 UintListOption) bool { return UintListOptionEquals(m1, m2) }
func (m1 Uint8ListOption) Equals(m2 Uint8ListOption) bool { return Uint8ListOptionEquals(m1, m2) }
func (m1 Uint16ListOption) Equals(m2 Uint16ListOption) bool { return Uint16ListOptionEquals(m1, m2) }
func (m1 Uint32ListOption) Equals(m2 Uint32ListOption) bool { return Uint32ListOptionEquals(m1, m2) }
func (m1 Uint64ListOption) Equals(m2 Uint64ListOption) bool { return Uint64ListOptionEquals(m1, m2) }
func (m1 UintptrListOption) Equals(m2 UintptrListOption) bool { return UintptrListOptionEquals(m1, m2) }
func (m1 ByteListOption) Equals(m2 ByteListOption) bool { return ByteListOptionEquals(m1, m2) }
func (m1 RuneListOption) Equals(m2 RuneListOption) bool { return RuneListOptionEquals(m1, m2) }
func (m1 Float32ListOption) Equals(m2 Float32ListOption) bool { return Float32ListOptionEquals(m1, m2) }
func (m1 Float64ListOption) Equals(m2 Float64ListOption) bool { return Float64ListOptionEquals(m1, m2) }
func (m1 Complex64ListOption) Equals(m2 Complex64ListOption) bool { return Complex64ListOptionEquals(m1, m2) }
func (m1 Complex128ListOption) Equals(m2 Complex128ListOption) bool { return Complex128ListOptionEquals(m1, m2) }
func (m1 AnyListOption) Equals(m2 AnyListOption) bool { return AnyListOptionEquals(m1, m2) }
func (m1 BoolOptionOption) Equals(m2 BoolOptionOption) bool { return BoolOptionOptionEquals(m1, m2) }
func (m1 StringOptionOption) Equals(m2 StringOptionOption) bool { return StringOptionOptionEquals(m1, m2) }
func (m1 IntOptionOption) Equals(m2 IntOptionOption) bool { return IntOptionOptionEquals(m1, m2) }
func (m1 Int8OptionOption) Equals(m2 Int8OptionOption) bool { return Int8OptionOptionEquals(m1, m2) }
func (m1 Int16OptionOption) Equals(m2 Int16OptionOption) bool { return Int16OptionOptionEquals(m1, m2) }
func (m1 Int32OptionOption) Equals(m2 Int32OptionOption) bool { return Int32OptionOptionEquals(m1, m2) }
func (m1 Int64OptionOption) Equals(m2 Int64OptionOption) bool { return Int64OptionOptionEquals(m1, m2) }
func (m1 UintOptionOption) Equals(m2 UintOptionOption) bool { return UintOptionOptionEquals(m1, m2) }
func (m1 Uint8OptionOption) Equals(m2 Uint8OptionOption) bool { return Uint8OptionOptionEquals(m1, m2) }
func (m1 Uint16OptionOption) Equals(m2 Uint16OptionOption) bool { return Uint16OptionOptionEquals(m1, m2) }
func (m1 Uint32OptionOption) Equals(m2 Uint32OptionOption) bool { return Uint32OptionOptionEquals(m1, m2) }
func (m1 Uint64OptionOption) Equals(m2 Uint64OptionOption) bool { return Uint64OptionOptionEquals(m1, m2) }
func (m1 UintptrOptionOption) Equals(m2 UintptrOptionOption) bool { return UintptrOptionOptionEquals(m1, m2) }
func (m1 ByteOptionOption) Equals(m2 ByteOptionOption) bool { return ByteOptionOptionEquals(m1, m2) }
func (m1 RuneOptionOption) Equals(m2 RuneOptionOption) bool { return RuneOptionOptionEquals(m1, m2) }
func (m1 Float32OptionOption) Equals(m2 Float32OptionOption) bool { return Float32OptionOptionEquals(m1, m2) }
func (m1 Float64OptionOption) Equals(m2 Float64OptionOption) bool { return Float64OptionOptionEquals(m1, m2) }
func (m1 Complex64OptionOption) Equals(m2 Complex64OptionOption) bool { return Complex64OptionOptionEquals(m1, m2) }
func (m1 Complex128OptionOption) Equals(m2 Complex128OptionOption) bool { return Complex128OptionOptionEquals(m1, m2) }
func (m1 AnyOptionOption) Equals(m2 AnyOptionOption) bool { return AnyOptionOptionEquals(m1, m2) }
func (m1 BoolArrOptionOption) Equals(m2 BoolArrOptionOption) bool { return BoolArrOptionOptionEquals(m1, m2) }
func (m1 StringArrOptionOption) Equals(m2 StringArrOptionOption) bool { return StringArrOptionOptionEquals(m1, m2) }
func (m1 IntArrOptionOption) Equals(m2 IntArrOptionOption) bool { return IntArrOptionOptionEquals(m1, m2) }
func (m1 Int8ArrOptionOption) Equals(m2 Int8ArrOptionOption) bool { return Int8ArrOptionOptionEquals(m1, m2) }
func (m1 Int16ArrOptionOption) Equals(m2 Int16ArrOptionOption) bool { return Int16ArrOptionOptionEquals(m1, m2) }
func (m1 Int32ArrOptionOption) Equals(m2 Int32ArrOptionOption) bool { return Int32ArrOptionOptionEquals(m1, m2) }
func (m1 Int64ArrOptionOption) Equals(m2 Int64ArrOptionOption) bool { return Int64ArrOptionOptionEquals(m1, m2) }
func (m1 UintArrOptionOption) Equals(m2 UintArrOptionOption) bool { return UintArrOptionOptionEquals(m1, m2) }
func (m1 Uint8ArrOptionOption) Equals(m2 Uint8ArrOptionOption) bool { return Uint8ArrOptionOptionEquals(m1, m2) }
func (m1 Uint16ArrOptionOption) Equals(m2 Uint16ArrOptionOption) bool { return Uint16ArrOptionOptionEquals(m1, m2) }
func (m1 Uint32ArrOptionOption) Equals(m2 Uint32ArrOptionOption) bool { return Uint32ArrOptionOptionEquals(m1, m2) }
func (m1 Uint64ArrOptionOption) Equals(m2 Uint64ArrOptionOption) bool { return Uint64ArrOptionOptionEquals(m1, m2) }
func (m1 UintptrArrOptionOption) Equals(m2 UintptrArrOptionOption) bool { return UintptrArrOptionOptionEquals(m1, m2) }
func (m1 ByteArrOptionOption) Equals(m2 ByteArrOptionOption) bool { return ByteArrOptionOptionEquals(m1, m2) }
func (m1 RuneArrOptionOption) Equals(m2 RuneArrOptionOption) bool { return RuneArrOptionOptionEquals(m1, m2) }
func (m1 Float32ArrOptionOption) Equals(m2 Float32ArrOptionOption) bool { return Float32ArrOptionOptionEquals(m1, m2) }
func (m1 Float64ArrOptionOption) Equals(m2 Float64ArrOptionOption) bool { return Float64ArrOptionOptionEquals(m1, m2) }
func (m1 Complex64ArrOptionOption) Equals(m2 Complex64ArrOptionOption) bool { return Complex64ArrOptionOptionEquals(m1, m2) }
func (m1 Complex128ArrOptionOption) Equals(m2 Complex128ArrOptionOption) bool { return Complex128ArrOptionOptionEquals(m1, m2) }
func (m1 AnyArrOptionOption) Equals(m2 AnyArrOptionOption) bool { return AnyArrOptionOptionEquals(m1, m2) }
func (m1 BoolArrArrOptionOption) Equals(m2 BoolArrArrOptionOption) bool { return BoolArrArrOptionOptionEquals(m1, m2) }
func (m1 StringArrArrOptionOption) Equals(m2 StringArrArrOptionOption) bool { return StringArrArrOptionOptionEquals(m1, m2) }
func (m1 IntArrArrOptionOption) Equals(m2 IntArrArrOptionOption) bool { return IntArrArrOptionOptionEquals(m1, m2) }
func (m1 Int8ArrArrOptionOption) Equals(m2 Int8ArrArrOptionOption) bool { return Int8ArrArrOptionOptionEquals(m1, m2) }
func (m1 Int16ArrArrOptionOption) Equals(m2 Int16ArrArrOptionOption) bool { return Int16ArrArrOptionOptionEquals(m1, m2) }
func (m1 Int32ArrArrOptionOption) Equals(m2 Int32ArrArrOptionOption) bool { return Int32ArrArrOptionOptionEquals(m1, m2) }
func (m1 Int64ArrArrOptionOption) Equals(m2 Int64ArrArrOptionOption) bool { return Int64ArrArrOptionOptionEquals(m1, m2) }
func (m1 UintArrArrOptionOption) Equals(m2 UintArrArrOptionOption) bool { return UintArrArrOptionOptionEquals(m1, m2) }
func (m1 Uint8ArrArrOptionOption) Equals(m2 Uint8ArrArrOptionOption) bool { return Uint8ArrArrOptionOptionEquals(m1, m2) }
func (m1 Uint16ArrArrOptionOption) Equals(m2 Uint16ArrArrOptionOption) bool { return Uint16ArrArrOptionOptionEquals(m1, m2) }
func (m1 Uint32ArrArrOptionOption) Equals(m2 Uint32ArrArrOptionOption) bool { return Uint32ArrArrOptionOptionEquals(m1, m2) }
func (m1 Uint64ArrArrOptionOption) Equals(m2 Uint64ArrArrOptionOption) bool { return Uint64ArrArrOptionOptionEquals(m1, m2) }
func (m1 UintptrArrArrOptionOption) Equals(m2 UintptrArrArrOptionOption) bool { return UintptrArrArrOptionOptionEquals(m1, m2) }
func (m1 ByteArrArrOptionOption) Equals(m2 ByteArrArrOptionOption) bool { return ByteArrArrOptionOptionEquals(m1, m2) }
func (m1 RuneArrArrOptionOption) Equals(m2 RuneArrArrOptionOption) bool { return RuneArrArrOptionOptionEquals(m1, m2) }
func (m1 Float32ArrArrOptionOption) Equals(m2 Float32ArrArrOptionOption) bool { return Float32ArrArrOptionOptionEquals(m1, m2) }
func (m1 Float64ArrArrOptionOption) Equals(m2 Float64ArrArrOptionOption) bool { return Float64ArrArrOptionOptionEquals(m1, m2) }
func (m1 Complex64ArrArrOptionOption) Equals(m2 Complex64ArrArrOptionOption) bool { return Complex64ArrArrOptionOptionEquals(m1, m2) }
func (m1 Complex128ArrArrOptionOption) Equals(m2 Complex128ArrArrOptionOption) bool { return Complex128ArrArrOptionOptionEquals(m1, m2) }
func (m1 AnyArrArrOptionOption) Equals(m2 AnyArrArrOptionOption) bool { return AnyArrArrOptionOptionEquals(m1, m2) }
func (m1 BoolOptionArrOptionOption) Equals(m2 BoolOptionArrOptionOption) bool { return BoolOptionArrOptionOptionEquals(m1, m2) }
func (m1 StringOptionArrOptionOption) Equals(m2 StringOptionArrOptionOption) bool { return StringOptionArrOptionOptionEquals(m1, m2) }
func (m1 IntOptionArrOptionOption) Equals(m2 IntOptionArrOptionOption) bool { return IntOptionArrOptionOptionEquals(m1, m2) }
func (m1 Int8OptionArrOptionOption) Equals(m2 Int8OptionArrOptionOption) bool { return Int8OptionArrOptionOptionEquals(m1, m2) }
func (m1 Int16OptionArrOptionOption) Equals(m2 Int16OptionArrOptionOption) bool { return Int16OptionArrOptionOptionEquals(m1, m2) }
func (m1 Int32OptionArrOptionOption) Equals(m2 Int32OptionArrOptionOption) bool { return Int32OptionArrOptionOptionEquals(m1, m2) }
func (m1 Int64OptionArrOptionOption) Equals(m2 Int64OptionArrOptionOption) bool { return Int64OptionArrOptionOptionEquals(m1, m2) }
func (m1 UintOptionArrOptionOption) Equals(m2 UintOptionArrOptionOption) bool { return UintOptionArrOptionOptionEquals(m1, m2) }
func (m1 Uint8OptionArrOptionOption) Equals(m2 Uint8OptionArrOptionOption) bool { return Uint8OptionArrOptionOptionEquals(m1, m2) }
func (m1 Uint16OptionArrOptionOption) Equals(m2 Uint16OptionArrOptionOption) bool { return Uint16OptionArrOptionOptionEquals(m1, m2) }
func (m1 Uint32OptionArrOptionOption) Equals(m2 Uint32OptionArrOptionOption) bool { return Uint32OptionArrOptionOptionEquals(m1, m2) }
func (m1 Uint64OptionArrOptionOption) Equals(m2 Uint64OptionArrOptionOption) bool { return Uint64OptionArrOptionOptionEquals(m1, m2) }
func (m1 UintptrOptionArrOptionOption) Equals(m2 UintptrOptionArrOptionOption) bool { return UintptrOptionArrOptionOptionEquals(m1, m2) }
func (m1 ByteOptionArrOptionOption) Equals(m2 ByteOptionArrOptionOption) bool { return ByteOptionArrOptionOptionEquals(m1, m2) }
func (m1 RuneOptionArrOptionOption) Equals(m2 RuneOptionArrOptionOption) bool { return RuneOptionArrOptionOptionEquals(m1, m2) }
func (m1 Float32OptionArrOptionOption) Equals(m2 Float32OptionArrOptionOption) bool { return Float32OptionArrOptionOptionEquals(m1, m2) }
func (m1 Float64OptionArrOptionOption) Equals(m2 Float64OptionArrOptionOption) bool { return Float64OptionArrOptionOptionEquals(m1, m2) }
func (m1 Complex64OptionArrOptionOption) Equals(m2 Complex64OptionArrOptionOption) bool { return Complex64OptionArrOptionOptionEquals(m1, m2) }
func (m1 Complex128OptionArrOptionOption) Equals(m2 Complex128OptionArrOptionOption) bool { return Complex128OptionArrOptionOptionEquals(m1, m2) }
func (m1 AnyOptionArrOptionOption) Equals(m2 AnyOptionArrOptionOption) bool { return AnyOptionArrOptionOptionEquals(m1, m2) }
func (m1 BoolListOptionOption) Equals(m2 BoolListOptionOption) bool { return BoolListOptionOptionEquals(m1, m2) }
func (m1 StringListOptionOption) Equals(m2 StringListOptionOption) bool { return StringListOptionOptionEquals(m1, m2) }
func (m1 IntListOptionOption) Equals(m2 IntListOptionOption) bool { return IntListOptionOptionEquals(m1, m2) }
func (m1 Int8ListOptionOption) Equals(m2 Int8ListOptionOption) bool { return Int8ListOptionOptionEquals(m1, m2) }
func (m1 Int16ListOptionOption) Equals(m2 Int16ListOptionOption) bool { return Int16ListOptionOptionEquals(m1, m2) }
func (m1 Int32ListOptionOption) Equals(m2 Int32ListOptionOption) bool { return Int32ListOptionOptionEquals(m1, m2) }
func (m1 Int64ListOptionOption) Equals(m2 Int64ListOptionOption) bool { return Int64ListOptionOptionEquals(m1, m2) }
func (m1 UintListOptionOption) Equals(m2 UintListOptionOption) bool { return UintListOptionOptionEquals(m1, m2) }
func (m1 Uint8ListOptionOption) Equals(m2 Uint8ListOptionOption) bool { return Uint8ListOptionOptionEquals(m1, m2) }
func (m1 Uint16ListOptionOption) Equals(m2 Uint16ListOptionOption) bool { return Uint16ListOptionOptionEquals(m1, m2) }
func (m1 Uint32ListOptionOption) Equals(m2 Uint32ListOptionOption) bool { return Uint32ListOptionOptionEquals(m1, m2) }
func (m1 Uint64ListOptionOption) Equals(m2 Uint64ListOptionOption) bool { return Uint64ListOptionOptionEquals(m1, m2) }
func (m1 UintptrListOptionOption) Equals(m2 UintptrListOptionOption) bool { return UintptrListOptionOptionEquals(m1, m2) }
func (m1 ByteListOptionOption) Equals(m2 ByteListOptionOption) bool { return ByteListOptionOptionEquals(m1, m2) }
func (m1 RuneListOptionOption) Equals(m2 RuneListOptionOption) bool { return RuneListOptionOptionEquals(m1, m2) }
func (m1 Float32ListOptionOption) Equals(m2 Float32ListOptionOption) bool { return Float32ListOptionOptionEquals(m1, m2) }
func (m1 Float64ListOptionOption) Equals(m2 Float64ListOptionOption) bool { return Float64ListOptionOptionEquals(m1, m2) }
func (m1 Complex64ListOptionOption) Equals(m2 Complex64ListOptionOption) bool { return Complex64ListOptionOptionEquals(m1, m2) }
func (m1 Complex128ListOptionOption) Equals(m2 Complex128ListOptionOption) bool { return Complex128ListOptionOptionEquals(m1, m2) }
func (m1 AnyListOptionOption) Equals(m2 AnyListOptionOption) bool { return AnyListOptionOptionEquals(m1, m2) }