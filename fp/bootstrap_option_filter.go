// bootstrap_option_filter.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (m BoolOption) Filter(p BoolPredicate) BoolOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBool
	}
}
func (m StringOption) Filter(p StringPredicate) StringOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneString
	}
}
func (m IntOption) Filter(p IntPredicate) IntOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt
	}
}
func (m Int8Option) Filter(p Int8Predicate) Int8Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8
	}
}
func (m Int16Option) Filter(p Int16Predicate) Int16Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16
	}
}
func (m Int32Option) Filter(p Int32Predicate) Int32Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32
	}
}
func (m Int64Option) Filter(p Int64Predicate) Int64Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64
	}
}
func (m UintOption) Filter(p UintPredicate) UintOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint
	}
}
func (m Uint8Option) Filter(p Uint8Predicate) Uint8Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8
	}
}
func (m Uint16Option) Filter(p Uint16Predicate) Uint16Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16
	}
}
func (m Uint32Option) Filter(p Uint32Predicate) Uint32Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32
	}
}
func (m Uint64Option) Filter(p Uint64Predicate) Uint64Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64
	}
}
func (m UintptrOption) Filter(p UintptrPredicate) UintptrOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptr
	}
}
func (m ByteOption) Filter(p BytePredicate) ByteOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByte
	}
}
func (m RuneOption) Filter(p RunePredicate) RuneOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRune
	}
}
func (m Float32Option) Filter(p Float32Predicate) Float32Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32
	}
}
func (m Float64Option) Filter(p Float64Predicate) Float64Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64
	}
}
func (m Complex64Option) Filter(p Complex64Predicate) Complex64Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64
	}
}
func (m Complex128Option) Filter(p Complex128Predicate) Complex128Option {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128
	}
}
func (m AnyOption) Filter(p AnyPredicate) AnyOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAny
	}
}
func (m BoolArrayOption) Filter(p BoolArrayPredicate) BoolArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolArray
	}
}
func (m StringArrayOption) Filter(p StringArrayPredicate) StringArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringArray
	}
}
func (m IntArrayOption) Filter(p IntArrayPredicate) IntArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntArray
	}
}
func (m Int8ArrayOption) Filter(p Int8ArrayPredicate) Int8ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8Array
	}
}
func (m Int16ArrayOption) Filter(p Int16ArrayPredicate) Int16ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16Array
	}
}
func (m Int32ArrayOption) Filter(p Int32ArrayPredicate) Int32ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32Array
	}
}
func (m Int64ArrayOption) Filter(p Int64ArrayPredicate) Int64ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64Array
	}
}
func (m UintArrayOption) Filter(p UintArrayPredicate) UintArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintArray
	}
}
func (m Uint8ArrayOption) Filter(p Uint8ArrayPredicate) Uint8ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8Array
	}
}
func (m Uint16ArrayOption) Filter(p Uint16ArrayPredicate) Uint16ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16Array
	}
}
func (m Uint32ArrayOption) Filter(p Uint32ArrayPredicate) Uint32ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32Array
	}
}
func (m Uint64ArrayOption) Filter(p Uint64ArrayPredicate) Uint64ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64Array
	}
}
func (m UintptrArrayOption) Filter(p UintptrArrayPredicate) UintptrArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrArray
	}
}
func (m ByteArrayOption) Filter(p ByteArrayPredicate) ByteArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteArray
	}
}
func (m RuneArrayOption) Filter(p RuneArrayPredicate) RuneArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneArray
	}
}
func (m Float32ArrayOption) Filter(p Float32ArrayPredicate) Float32ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32Array
	}
}
func (m Float64ArrayOption) Filter(p Float64ArrayPredicate) Float64ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64Array
	}
}
func (m Complex64ArrayOption) Filter(p Complex64ArrayPredicate) Complex64ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64Array
	}
}
func (m Complex128ArrayOption) Filter(p Complex128ArrayPredicate) Complex128ArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128Array
	}
}
func (m AnyArrayOption) Filter(p AnyArrayPredicate) AnyArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyArray
	}
}
func (m BoolArrayArrayOption) Filter(p BoolArrayArrayPredicate) BoolArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolArrayArray
	}
}
func (m StringArrayArrayOption) Filter(p StringArrayArrayPredicate) StringArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringArrayArray
	}
}
func (m IntArrayArrayOption) Filter(p IntArrayArrayPredicate) IntArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntArrayArray
	}
}
func (m Int8ArrayArrayOption) Filter(p Int8ArrayArrayPredicate) Int8ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ArrayArray
	}
}
func (m Int16ArrayArrayOption) Filter(p Int16ArrayArrayPredicate) Int16ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ArrayArray
	}
}
func (m Int32ArrayArrayOption) Filter(p Int32ArrayArrayPredicate) Int32ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ArrayArray
	}
}
func (m Int64ArrayArrayOption) Filter(p Int64ArrayArrayPredicate) Int64ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ArrayArray
	}
}
func (m UintArrayArrayOption) Filter(p UintArrayArrayPredicate) UintArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintArrayArray
	}
}
func (m Uint8ArrayArrayOption) Filter(p Uint8ArrayArrayPredicate) Uint8ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ArrayArray
	}
}
func (m Uint16ArrayArrayOption) Filter(p Uint16ArrayArrayPredicate) Uint16ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ArrayArray
	}
}
func (m Uint32ArrayArrayOption) Filter(p Uint32ArrayArrayPredicate) Uint32ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ArrayArray
	}
}
func (m Uint64ArrayArrayOption) Filter(p Uint64ArrayArrayPredicate) Uint64ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ArrayArray
	}
}
func (m UintptrArrayArrayOption) Filter(p UintptrArrayArrayPredicate) UintptrArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrArrayArray
	}
}
func (m ByteArrayArrayOption) Filter(p ByteArrayArrayPredicate) ByteArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteArrayArray
	}
}
func (m RuneArrayArrayOption) Filter(p RuneArrayArrayPredicate) RuneArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneArrayArray
	}
}
func (m Float32ArrayArrayOption) Filter(p Float32ArrayArrayPredicate) Float32ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ArrayArray
	}
}
func (m Float64ArrayArrayOption) Filter(p Float64ArrayArrayPredicate) Float64ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ArrayArray
	}
}
func (m Complex64ArrayArrayOption) Filter(p Complex64ArrayArrayPredicate) Complex64ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ArrayArray
	}
}
func (m Complex128ArrayArrayOption) Filter(p Complex128ArrayArrayPredicate) Complex128ArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ArrayArray
	}
}
func (m AnyArrayArrayOption) Filter(p AnyArrayArrayPredicate) AnyArrayArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyArrayArray
	}
}
func (m BoolOptionArrayOption) Filter(p BoolOptionArrayPredicate) BoolOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolOptionArray
	}
}
func (m StringOptionArrayOption) Filter(p StringOptionArrayPredicate) StringOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringOptionArray
	}
}
func (m IntOptionArrayOption) Filter(p IntOptionArrayPredicate) IntOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntOptionArray
	}
}
func (m Int8OptionArrayOption) Filter(p Int8OptionArrayPredicate) Int8OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8OptionArray
	}
}
func (m Int16OptionArrayOption) Filter(p Int16OptionArrayPredicate) Int16OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16OptionArray
	}
}
func (m Int32OptionArrayOption) Filter(p Int32OptionArrayPredicate) Int32OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32OptionArray
	}
}
func (m Int64OptionArrayOption) Filter(p Int64OptionArrayPredicate) Int64OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64OptionArray
	}
}
func (m UintOptionArrayOption) Filter(p UintOptionArrayPredicate) UintOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintOptionArray
	}
}
func (m Uint8OptionArrayOption) Filter(p Uint8OptionArrayPredicate) Uint8OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8OptionArray
	}
}
func (m Uint16OptionArrayOption) Filter(p Uint16OptionArrayPredicate) Uint16OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16OptionArray
	}
}
func (m Uint32OptionArrayOption) Filter(p Uint32OptionArrayPredicate) Uint32OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32OptionArray
	}
}
func (m Uint64OptionArrayOption) Filter(p Uint64OptionArrayPredicate) Uint64OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64OptionArray
	}
}
func (m UintptrOptionArrayOption) Filter(p UintptrOptionArrayPredicate) UintptrOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrOptionArray
	}
}
func (m ByteOptionArrayOption) Filter(p ByteOptionArrayPredicate) ByteOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteOptionArray
	}
}
func (m RuneOptionArrayOption) Filter(p RuneOptionArrayPredicate) RuneOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneOptionArray
	}
}
func (m Float32OptionArrayOption) Filter(p Float32OptionArrayPredicate) Float32OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32OptionArray
	}
}
func (m Float64OptionArrayOption) Filter(p Float64OptionArrayPredicate) Float64OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64OptionArray
	}
}
func (m Complex64OptionArrayOption) Filter(p Complex64OptionArrayPredicate) Complex64OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64OptionArray
	}
}
func (m Complex128OptionArrayOption) Filter(p Complex128OptionArrayPredicate) Complex128OptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128OptionArray
	}
}
func (m AnyOptionArrayOption) Filter(p AnyOptionArrayPredicate) AnyOptionArrayOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyOptionArray
	}
}
func (m BoolListOption) Filter(p BoolListPredicate) BoolListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolList
	}
}
func (m StringListOption) Filter(p StringListPredicate) StringListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringList
	}
}
func (m IntListOption) Filter(p IntListPredicate) IntListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntList
	}
}
func (m Int8ListOption) Filter(p Int8ListPredicate) Int8ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8List
	}
}
func (m Int16ListOption) Filter(p Int16ListPredicate) Int16ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16List
	}
}
func (m Int32ListOption) Filter(p Int32ListPredicate) Int32ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32List
	}
}
func (m Int64ListOption) Filter(p Int64ListPredicate) Int64ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64List
	}
}
func (m UintListOption) Filter(p UintListPredicate) UintListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintList
	}
}
func (m Uint8ListOption) Filter(p Uint8ListPredicate) Uint8ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8List
	}
}
func (m Uint16ListOption) Filter(p Uint16ListPredicate) Uint16ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16List
	}
}
func (m Uint32ListOption) Filter(p Uint32ListPredicate) Uint32ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32List
	}
}
func (m Uint64ListOption) Filter(p Uint64ListPredicate) Uint64ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64List
	}
}
func (m UintptrListOption) Filter(p UintptrListPredicate) UintptrListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrList
	}
}
func (m ByteListOption) Filter(p ByteListPredicate) ByteListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteList
	}
}
func (m RuneListOption) Filter(p RuneListPredicate) RuneListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneList
	}
}
func (m Float32ListOption) Filter(p Float32ListPredicate) Float32ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32List
	}
}
func (m Float64ListOption) Filter(p Float64ListPredicate) Float64ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64List
	}
}
func (m Complex64ListOption) Filter(p Complex64ListPredicate) Complex64ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64List
	}
}
func (m Complex128ListOption) Filter(p Complex128ListPredicate) Complex128ListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128List
	}
}
func (m AnyListOption) Filter(p AnyListPredicate) AnyListOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyList
	}
}
func (m BoolOptionOption) Filter(p BoolOptionPredicate) BoolOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolOption
	}
}
func (m StringOptionOption) Filter(p StringOptionPredicate) StringOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringOption
	}
}
func (m IntOptionOption) Filter(p IntOptionPredicate) IntOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntOption
	}
}
func (m Int8OptionOption) Filter(p Int8OptionPredicate) Int8OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8Option
	}
}
func (m Int16OptionOption) Filter(p Int16OptionPredicate) Int16OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16Option
	}
}
func (m Int32OptionOption) Filter(p Int32OptionPredicate) Int32OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32Option
	}
}
func (m Int64OptionOption) Filter(p Int64OptionPredicate) Int64OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64Option
	}
}
func (m UintOptionOption) Filter(p UintOptionPredicate) UintOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintOption
	}
}
func (m Uint8OptionOption) Filter(p Uint8OptionPredicate) Uint8OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8Option
	}
}
func (m Uint16OptionOption) Filter(p Uint16OptionPredicate) Uint16OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16Option
	}
}
func (m Uint32OptionOption) Filter(p Uint32OptionPredicate) Uint32OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32Option
	}
}
func (m Uint64OptionOption) Filter(p Uint64OptionPredicate) Uint64OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64Option
	}
}
func (m UintptrOptionOption) Filter(p UintptrOptionPredicate) UintptrOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrOption
	}
}
func (m ByteOptionOption) Filter(p ByteOptionPredicate) ByteOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteOption
	}
}
func (m RuneOptionOption) Filter(p RuneOptionPredicate) RuneOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneOption
	}
}
func (m Float32OptionOption) Filter(p Float32OptionPredicate) Float32OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32Option
	}
}
func (m Float64OptionOption) Filter(p Float64OptionPredicate) Float64OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64Option
	}
}
func (m Complex64OptionOption) Filter(p Complex64OptionPredicate) Complex64OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64Option
	}
}
func (m Complex128OptionOption) Filter(p Complex128OptionPredicate) Complex128OptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128Option
	}
}
func (m AnyOptionOption) Filter(p AnyOptionPredicate) AnyOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyOption
	}
}
func (m BoolArrayOptionOption) Filter(p BoolArrayOptionPredicate) BoolArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolArrayOption
	}
}
func (m StringArrayOptionOption) Filter(p StringArrayOptionPredicate) StringArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringArrayOption
	}
}
func (m IntArrayOptionOption) Filter(p IntArrayOptionPredicate) IntArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntArrayOption
	}
}
func (m Int8ArrayOptionOption) Filter(p Int8ArrayOptionPredicate) Int8ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ArrayOption
	}
}
func (m Int16ArrayOptionOption) Filter(p Int16ArrayOptionPredicate) Int16ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ArrayOption
	}
}
func (m Int32ArrayOptionOption) Filter(p Int32ArrayOptionPredicate) Int32ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ArrayOption
	}
}
func (m Int64ArrayOptionOption) Filter(p Int64ArrayOptionPredicate) Int64ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ArrayOption
	}
}
func (m UintArrayOptionOption) Filter(p UintArrayOptionPredicate) UintArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintArrayOption
	}
}
func (m Uint8ArrayOptionOption) Filter(p Uint8ArrayOptionPredicate) Uint8ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ArrayOption
	}
}
func (m Uint16ArrayOptionOption) Filter(p Uint16ArrayOptionPredicate) Uint16ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ArrayOption
	}
}
func (m Uint32ArrayOptionOption) Filter(p Uint32ArrayOptionPredicate) Uint32ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ArrayOption
	}
}
func (m Uint64ArrayOptionOption) Filter(p Uint64ArrayOptionPredicate) Uint64ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ArrayOption
	}
}
func (m UintptrArrayOptionOption) Filter(p UintptrArrayOptionPredicate) UintptrArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrArrayOption
	}
}
func (m ByteArrayOptionOption) Filter(p ByteArrayOptionPredicate) ByteArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteArrayOption
	}
}
func (m RuneArrayOptionOption) Filter(p RuneArrayOptionPredicate) RuneArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneArrayOption
	}
}
func (m Float32ArrayOptionOption) Filter(p Float32ArrayOptionPredicate) Float32ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ArrayOption
	}
}
func (m Float64ArrayOptionOption) Filter(p Float64ArrayOptionPredicate) Float64ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ArrayOption
	}
}
func (m Complex64ArrayOptionOption) Filter(p Complex64ArrayOptionPredicate) Complex64ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ArrayOption
	}
}
func (m Complex128ArrayOptionOption) Filter(p Complex128ArrayOptionPredicate) Complex128ArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ArrayOption
	}
}
func (m AnyArrayOptionOption) Filter(p AnyArrayOptionPredicate) AnyArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyArrayOption
	}
}
func (m BoolArrayArrayOptionOption) Filter(p BoolArrayArrayOptionPredicate) BoolArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolArrayArrayOption
	}
}
func (m StringArrayArrayOptionOption) Filter(p StringArrayArrayOptionPredicate) StringArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringArrayArrayOption
	}
}
func (m IntArrayArrayOptionOption) Filter(p IntArrayArrayOptionPredicate) IntArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntArrayArrayOption
	}
}
func (m Int8ArrayArrayOptionOption) Filter(p Int8ArrayArrayOptionPredicate) Int8ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ArrayArrayOption
	}
}
func (m Int16ArrayArrayOptionOption) Filter(p Int16ArrayArrayOptionPredicate) Int16ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ArrayArrayOption
	}
}
func (m Int32ArrayArrayOptionOption) Filter(p Int32ArrayArrayOptionPredicate) Int32ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ArrayArrayOption
	}
}
func (m Int64ArrayArrayOptionOption) Filter(p Int64ArrayArrayOptionPredicate) Int64ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ArrayArrayOption
	}
}
func (m UintArrayArrayOptionOption) Filter(p UintArrayArrayOptionPredicate) UintArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintArrayArrayOption
	}
}
func (m Uint8ArrayArrayOptionOption) Filter(p Uint8ArrayArrayOptionPredicate) Uint8ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ArrayArrayOption
	}
}
func (m Uint16ArrayArrayOptionOption) Filter(p Uint16ArrayArrayOptionPredicate) Uint16ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ArrayArrayOption
	}
}
func (m Uint32ArrayArrayOptionOption) Filter(p Uint32ArrayArrayOptionPredicate) Uint32ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ArrayArrayOption
	}
}
func (m Uint64ArrayArrayOptionOption) Filter(p Uint64ArrayArrayOptionPredicate) Uint64ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ArrayArrayOption
	}
}
func (m UintptrArrayArrayOptionOption) Filter(p UintptrArrayArrayOptionPredicate) UintptrArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrArrayArrayOption
	}
}
func (m ByteArrayArrayOptionOption) Filter(p ByteArrayArrayOptionPredicate) ByteArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteArrayArrayOption
	}
}
func (m RuneArrayArrayOptionOption) Filter(p RuneArrayArrayOptionPredicate) RuneArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneArrayArrayOption
	}
}
func (m Float32ArrayArrayOptionOption) Filter(p Float32ArrayArrayOptionPredicate) Float32ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ArrayArrayOption
	}
}
func (m Float64ArrayArrayOptionOption) Filter(p Float64ArrayArrayOptionPredicate) Float64ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ArrayArrayOption
	}
}
func (m Complex64ArrayArrayOptionOption) Filter(p Complex64ArrayArrayOptionPredicate) Complex64ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ArrayArrayOption
	}
}
func (m Complex128ArrayArrayOptionOption) Filter(p Complex128ArrayArrayOptionPredicate) Complex128ArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ArrayArrayOption
	}
}
func (m AnyArrayArrayOptionOption) Filter(p AnyArrayArrayOptionPredicate) AnyArrayArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyArrayArrayOption
	}
}
func (m BoolOptionArrayOptionOption) Filter(p BoolOptionArrayOptionPredicate) BoolOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolOptionArrayOption
	}
}
func (m StringOptionArrayOptionOption) Filter(p StringOptionArrayOptionPredicate) StringOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringOptionArrayOption
	}
}
func (m IntOptionArrayOptionOption) Filter(p IntOptionArrayOptionPredicate) IntOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntOptionArrayOption
	}
}
func (m Int8OptionArrayOptionOption) Filter(p Int8OptionArrayOptionPredicate) Int8OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8OptionArrayOption
	}
}
func (m Int16OptionArrayOptionOption) Filter(p Int16OptionArrayOptionPredicate) Int16OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16OptionArrayOption
	}
}
func (m Int32OptionArrayOptionOption) Filter(p Int32OptionArrayOptionPredicate) Int32OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32OptionArrayOption
	}
}
func (m Int64OptionArrayOptionOption) Filter(p Int64OptionArrayOptionPredicate) Int64OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64OptionArrayOption
	}
}
func (m UintOptionArrayOptionOption) Filter(p UintOptionArrayOptionPredicate) UintOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintOptionArrayOption
	}
}
func (m Uint8OptionArrayOptionOption) Filter(p Uint8OptionArrayOptionPredicate) Uint8OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8OptionArrayOption
	}
}
func (m Uint16OptionArrayOptionOption) Filter(p Uint16OptionArrayOptionPredicate) Uint16OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16OptionArrayOption
	}
}
func (m Uint32OptionArrayOptionOption) Filter(p Uint32OptionArrayOptionPredicate) Uint32OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32OptionArrayOption
	}
}
func (m Uint64OptionArrayOptionOption) Filter(p Uint64OptionArrayOptionPredicate) Uint64OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64OptionArrayOption
	}
}
func (m UintptrOptionArrayOptionOption) Filter(p UintptrOptionArrayOptionPredicate) UintptrOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrOptionArrayOption
	}
}
func (m ByteOptionArrayOptionOption) Filter(p ByteOptionArrayOptionPredicate) ByteOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteOptionArrayOption
	}
}
func (m RuneOptionArrayOptionOption) Filter(p RuneOptionArrayOptionPredicate) RuneOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneOptionArrayOption
	}
}
func (m Float32OptionArrayOptionOption) Filter(p Float32OptionArrayOptionPredicate) Float32OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32OptionArrayOption
	}
}
func (m Float64OptionArrayOptionOption) Filter(p Float64OptionArrayOptionPredicate) Float64OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64OptionArrayOption
	}
}
func (m Complex64OptionArrayOptionOption) Filter(p Complex64OptionArrayOptionPredicate) Complex64OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64OptionArrayOption
	}
}
func (m Complex128OptionArrayOptionOption) Filter(p Complex128OptionArrayOptionPredicate) Complex128OptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128OptionArrayOption
	}
}
func (m AnyOptionArrayOptionOption) Filter(p AnyOptionArrayOptionPredicate) AnyOptionArrayOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyOptionArrayOption
	}
}
func (m BoolListOptionOption) Filter(p BoolListOptionPredicate) BoolListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolListOption
	}
}
func (m StringListOptionOption) Filter(p StringListOptionPredicate) StringListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringListOption
	}
}
func (m IntListOptionOption) Filter(p IntListOptionPredicate) IntListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntListOption
	}
}
func (m Int8ListOptionOption) Filter(p Int8ListOptionPredicate) Int8ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ListOption
	}
}
func (m Int16ListOptionOption) Filter(p Int16ListOptionPredicate) Int16ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ListOption
	}
}
func (m Int32ListOptionOption) Filter(p Int32ListOptionPredicate) Int32ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ListOption
	}
}
func (m Int64ListOptionOption) Filter(p Int64ListOptionPredicate) Int64ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ListOption
	}
}
func (m UintListOptionOption) Filter(p UintListOptionPredicate) UintListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintListOption
	}
}
func (m Uint8ListOptionOption) Filter(p Uint8ListOptionPredicate) Uint8ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ListOption
	}
}
func (m Uint16ListOptionOption) Filter(p Uint16ListOptionPredicate) Uint16ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ListOption
	}
}
func (m Uint32ListOptionOption) Filter(p Uint32ListOptionPredicate) Uint32ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ListOption
	}
}
func (m Uint64ListOptionOption) Filter(p Uint64ListOptionPredicate) Uint64ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ListOption
	}
}
func (m UintptrListOptionOption) Filter(p UintptrListOptionPredicate) UintptrListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrListOption
	}
}
func (m ByteListOptionOption) Filter(p ByteListOptionPredicate) ByteListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteListOption
	}
}
func (m RuneListOptionOption) Filter(p RuneListOptionPredicate) RuneListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneListOption
	}
}
func (m Float32ListOptionOption) Filter(p Float32ListOptionPredicate) Float32ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ListOption
	}
}
func (m Float64ListOptionOption) Filter(p Float64ListOptionPredicate) Float64ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ListOption
	}
}
func (m Complex64ListOptionOption) Filter(p Complex64ListOptionPredicate) Complex64ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ListOption
	}
}
func (m Complex128ListOptionOption) Filter(p Complex128ListOptionPredicate) Complex128ListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ListOption
	}
}
func (m AnyListOptionOption) Filter(p AnyListOptionPredicate) AnyListOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyListOption
	}
}
func (m BoolOptionOptionOption) Filter(p BoolOptionOptionPredicate) BoolOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolOptionOption
	}
}
func (m StringOptionOptionOption) Filter(p StringOptionOptionPredicate) StringOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringOptionOption
	}
}
func (m IntOptionOptionOption) Filter(p IntOptionOptionPredicate) IntOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntOptionOption
	}
}
func (m Int8OptionOptionOption) Filter(p Int8OptionOptionPredicate) Int8OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8OptionOption
	}
}
func (m Int16OptionOptionOption) Filter(p Int16OptionOptionPredicate) Int16OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16OptionOption
	}
}
func (m Int32OptionOptionOption) Filter(p Int32OptionOptionPredicate) Int32OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32OptionOption
	}
}
func (m Int64OptionOptionOption) Filter(p Int64OptionOptionPredicate) Int64OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64OptionOption
	}
}
func (m UintOptionOptionOption) Filter(p UintOptionOptionPredicate) UintOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintOptionOption
	}
}
func (m Uint8OptionOptionOption) Filter(p Uint8OptionOptionPredicate) Uint8OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8OptionOption
	}
}
func (m Uint16OptionOptionOption) Filter(p Uint16OptionOptionPredicate) Uint16OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16OptionOption
	}
}
func (m Uint32OptionOptionOption) Filter(p Uint32OptionOptionPredicate) Uint32OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32OptionOption
	}
}
func (m Uint64OptionOptionOption) Filter(p Uint64OptionOptionPredicate) Uint64OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64OptionOption
	}
}
func (m UintptrOptionOptionOption) Filter(p UintptrOptionOptionPredicate) UintptrOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrOptionOption
	}
}
func (m ByteOptionOptionOption) Filter(p ByteOptionOptionPredicate) ByteOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteOptionOption
	}
}
func (m RuneOptionOptionOption) Filter(p RuneOptionOptionPredicate) RuneOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneOptionOption
	}
}
func (m Float32OptionOptionOption) Filter(p Float32OptionOptionPredicate) Float32OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32OptionOption
	}
}
func (m Float64OptionOptionOption) Filter(p Float64OptionOptionPredicate) Float64OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64OptionOption
	}
}
func (m Complex64OptionOptionOption) Filter(p Complex64OptionOptionPredicate) Complex64OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64OptionOption
	}
}
func (m Complex128OptionOptionOption) Filter(p Complex128OptionOptionPredicate) Complex128OptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128OptionOption
	}
}
func (m AnyOptionOptionOption) Filter(p AnyOptionOptionPredicate) AnyOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyOptionOption
	}
}
func (m BoolArrayOptionOptionOption) Filter(p BoolArrayOptionOptionPredicate) BoolArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolArrayOptionOption
	}
}
func (m StringArrayOptionOptionOption) Filter(p StringArrayOptionOptionPredicate) StringArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringArrayOptionOption
	}
}
func (m IntArrayOptionOptionOption) Filter(p IntArrayOptionOptionPredicate) IntArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntArrayOptionOption
	}
}
func (m Int8ArrayOptionOptionOption) Filter(p Int8ArrayOptionOptionPredicate) Int8ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ArrayOptionOption
	}
}
func (m Int16ArrayOptionOptionOption) Filter(p Int16ArrayOptionOptionPredicate) Int16ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ArrayOptionOption
	}
}
func (m Int32ArrayOptionOptionOption) Filter(p Int32ArrayOptionOptionPredicate) Int32ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ArrayOptionOption
	}
}
func (m Int64ArrayOptionOptionOption) Filter(p Int64ArrayOptionOptionPredicate) Int64ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ArrayOptionOption
	}
}
func (m UintArrayOptionOptionOption) Filter(p UintArrayOptionOptionPredicate) UintArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintArrayOptionOption
	}
}
func (m Uint8ArrayOptionOptionOption) Filter(p Uint8ArrayOptionOptionPredicate) Uint8ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ArrayOptionOption
	}
}
func (m Uint16ArrayOptionOptionOption) Filter(p Uint16ArrayOptionOptionPredicate) Uint16ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ArrayOptionOption
	}
}
func (m Uint32ArrayOptionOptionOption) Filter(p Uint32ArrayOptionOptionPredicate) Uint32ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ArrayOptionOption
	}
}
func (m Uint64ArrayOptionOptionOption) Filter(p Uint64ArrayOptionOptionPredicate) Uint64ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ArrayOptionOption
	}
}
func (m UintptrArrayOptionOptionOption) Filter(p UintptrArrayOptionOptionPredicate) UintptrArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrArrayOptionOption
	}
}
func (m ByteArrayOptionOptionOption) Filter(p ByteArrayOptionOptionPredicate) ByteArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteArrayOptionOption
	}
}
func (m RuneArrayOptionOptionOption) Filter(p RuneArrayOptionOptionPredicate) RuneArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneArrayOptionOption
	}
}
func (m Float32ArrayOptionOptionOption) Filter(p Float32ArrayOptionOptionPredicate) Float32ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ArrayOptionOption
	}
}
func (m Float64ArrayOptionOptionOption) Filter(p Float64ArrayOptionOptionPredicate) Float64ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ArrayOptionOption
	}
}
func (m Complex64ArrayOptionOptionOption) Filter(p Complex64ArrayOptionOptionPredicate) Complex64ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ArrayOptionOption
	}
}
func (m Complex128ArrayOptionOptionOption) Filter(p Complex128ArrayOptionOptionPredicate) Complex128ArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ArrayOptionOption
	}
}
func (m AnyArrayOptionOptionOption) Filter(p AnyArrayOptionOptionPredicate) AnyArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyArrayOptionOption
	}
}
func (m BoolArrayArrayOptionOptionOption) Filter(p BoolArrayArrayOptionOptionPredicate) BoolArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolArrayArrayOptionOption
	}
}
func (m StringArrayArrayOptionOptionOption) Filter(p StringArrayArrayOptionOptionPredicate) StringArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringArrayArrayOptionOption
	}
}
func (m IntArrayArrayOptionOptionOption) Filter(p IntArrayArrayOptionOptionPredicate) IntArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntArrayArrayOptionOption
	}
}
func (m Int8ArrayArrayOptionOptionOption) Filter(p Int8ArrayArrayOptionOptionPredicate) Int8ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ArrayArrayOptionOption
	}
}
func (m Int16ArrayArrayOptionOptionOption) Filter(p Int16ArrayArrayOptionOptionPredicate) Int16ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ArrayArrayOptionOption
	}
}
func (m Int32ArrayArrayOptionOptionOption) Filter(p Int32ArrayArrayOptionOptionPredicate) Int32ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ArrayArrayOptionOption
	}
}
func (m Int64ArrayArrayOptionOptionOption) Filter(p Int64ArrayArrayOptionOptionPredicate) Int64ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ArrayArrayOptionOption
	}
}
func (m UintArrayArrayOptionOptionOption) Filter(p UintArrayArrayOptionOptionPredicate) UintArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintArrayArrayOptionOption
	}
}
func (m Uint8ArrayArrayOptionOptionOption) Filter(p Uint8ArrayArrayOptionOptionPredicate) Uint8ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ArrayArrayOptionOption
	}
}
func (m Uint16ArrayArrayOptionOptionOption) Filter(p Uint16ArrayArrayOptionOptionPredicate) Uint16ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ArrayArrayOptionOption
	}
}
func (m Uint32ArrayArrayOptionOptionOption) Filter(p Uint32ArrayArrayOptionOptionPredicate) Uint32ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ArrayArrayOptionOption
	}
}
func (m Uint64ArrayArrayOptionOptionOption) Filter(p Uint64ArrayArrayOptionOptionPredicate) Uint64ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ArrayArrayOptionOption
	}
}
func (m UintptrArrayArrayOptionOptionOption) Filter(p UintptrArrayArrayOptionOptionPredicate) UintptrArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrArrayArrayOptionOption
	}
}
func (m ByteArrayArrayOptionOptionOption) Filter(p ByteArrayArrayOptionOptionPredicate) ByteArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteArrayArrayOptionOption
	}
}
func (m RuneArrayArrayOptionOptionOption) Filter(p RuneArrayArrayOptionOptionPredicate) RuneArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneArrayArrayOptionOption
	}
}
func (m Float32ArrayArrayOptionOptionOption) Filter(p Float32ArrayArrayOptionOptionPredicate) Float32ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ArrayArrayOptionOption
	}
}
func (m Float64ArrayArrayOptionOptionOption) Filter(p Float64ArrayArrayOptionOptionPredicate) Float64ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ArrayArrayOptionOption
	}
}
func (m Complex64ArrayArrayOptionOptionOption) Filter(p Complex64ArrayArrayOptionOptionPredicate) Complex64ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ArrayArrayOptionOption
	}
}
func (m Complex128ArrayArrayOptionOptionOption) Filter(p Complex128ArrayArrayOptionOptionPredicate) Complex128ArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ArrayArrayOptionOption
	}
}
func (m AnyArrayArrayOptionOptionOption) Filter(p AnyArrayArrayOptionOptionPredicate) AnyArrayArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyArrayArrayOptionOption
	}
}
func (m BoolOptionArrayOptionOptionOption) Filter(p BoolOptionArrayOptionOptionPredicate) BoolOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolOptionArrayOptionOption
	}
}
func (m StringOptionArrayOptionOptionOption) Filter(p StringOptionArrayOptionOptionPredicate) StringOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringOptionArrayOptionOption
	}
}
func (m IntOptionArrayOptionOptionOption) Filter(p IntOptionArrayOptionOptionPredicate) IntOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntOptionArrayOptionOption
	}
}
func (m Int8OptionArrayOptionOptionOption) Filter(p Int8OptionArrayOptionOptionPredicate) Int8OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8OptionArrayOptionOption
	}
}
func (m Int16OptionArrayOptionOptionOption) Filter(p Int16OptionArrayOptionOptionPredicate) Int16OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16OptionArrayOptionOption
	}
}
func (m Int32OptionArrayOptionOptionOption) Filter(p Int32OptionArrayOptionOptionPredicate) Int32OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32OptionArrayOptionOption
	}
}
func (m Int64OptionArrayOptionOptionOption) Filter(p Int64OptionArrayOptionOptionPredicate) Int64OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64OptionArrayOptionOption
	}
}
func (m UintOptionArrayOptionOptionOption) Filter(p UintOptionArrayOptionOptionPredicate) UintOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintOptionArrayOptionOption
	}
}
func (m Uint8OptionArrayOptionOptionOption) Filter(p Uint8OptionArrayOptionOptionPredicate) Uint8OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8OptionArrayOptionOption
	}
}
func (m Uint16OptionArrayOptionOptionOption) Filter(p Uint16OptionArrayOptionOptionPredicate) Uint16OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16OptionArrayOptionOption
	}
}
func (m Uint32OptionArrayOptionOptionOption) Filter(p Uint32OptionArrayOptionOptionPredicate) Uint32OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32OptionArrayOptionOption
	}
}
func (m Uint64OptionArrayOptionOptionOption) Filter(p Uint64OptionArrayOptionOptionPredicate) Uint64OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64OptionArrayOptionOption
	}
}
func (m UintptrOptionArrayOptionOptionOption) Filter(p UintptrOptionArrayOptionOptionPredicate) UintptrOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrOptionArrayOptionOption
	}
}
func (m ByteOptionArrayOptionOptionOption) Filter(p ByteOptionArrayOptionOptionPredicate) ByteOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteOptionArrayOptionOption
	}
}
func (m RuneOptionArrayOptionOptionOption) Filter(p RuneOptionArrayOptionOptionPredicate) RuneOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneOptionArrayOptionOption
	}
}
func (m Float32OptionArrayOptionOptionOption) Filter(p Float32OptionArrayOptionOptionPredicate) Float32OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32OptionArrayOptionOption
	}
}
func (m Float64OptionArrayOptionOptionOption) Filter(p Float64OptionArrayOptionOptionPredicate) Float64OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64OptionArrayOptionOption
	}
}
func (m Complex64OptionArrayOptionOptionOption) Filter(p Complex64OptionArrayOptionOptionPredicate) Complex64OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64OptionArrayOptionOption
	}
}
func (m Complex128OptionArrayOptionOptionOption) Filter(p Complex128OptionArrayOptionOptionPredicate) Complex128OptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128OptionArrayOptionOption
	}
}
func (m AnyOptionArrayOptionOptionOption) Filter(p AnyOptionArrayOptionOptionPredicate) AnyOptionArrayOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyOptionArrayOptionOption
	}
}
func (m BoolListOptionOptionOption) Filter(p BoolListOptionOptionPredicate) BoolListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneBoolListOptionOption
	}
}
func (m StringListOptionOptionOption) Filter(p StringListOptionOptionPredicate) StringListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneStringListOptionOption
	}
}
func (m IntListOptionOptionOption) Filter(p IntListOptionOptionPredicate) IntListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneIntListOptionOption
	}
}
func (m Int8ListOptionOptionOption) Filter(p Int8ListOptionOptionPredicate) Int8ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt8ListOptionOption
	}
}
func (m Int16ListOptionOptionOption) Filter(p Int16ListOptionOptionPredicate) Int16ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt16ListOptionOption
	}
}
func (m Int32ListOptionOptionOption) Filter(p Int32ListOptionOptionPredicate) Int32ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt32ListOptionOption
	}
}
func (m Int64ListOptionOptionOption) Filter(p Int64ListOptionOptionPredicate) Int64ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneInt64ListOptionOption
	}
}
func (m UintListOptionOptionOption) Filter(p UintListOptionOptionPredicate) UintListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintListOptionOption
	}
}
func (m Uint8ListOptionOptionOption) Filter(p Uint8ListOptionOptionPredicate) Uint8ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint8ListOptionOption
	}
}
func (m Uint16ListOptionOptionOption) Filter(p Uint16ListOptionOptionPredicate) Uint16ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint16ListOptionOption
	}
}
func (m Uint32ListOptionOptionOption) Filter(p Uint32ListOptionOptionPredicate) Uint32ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint32ListOptionOption
	}
}
func (m Uint64ListOptionOptionOption) Filter(p Uint64ListOptionOptionPredicate) Uint64ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUint64ListOptionOption
	}
}
func (m UintptrListOptionOptionOption) Filter(p UintptrListOptionOptionPredicate) UintptrListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneUintptrListOptionOption
	}
}
func (m ByteListOptionOptionOption) Filter(p ByteListOptionOptionPredicate) ByteListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneByteListOptionOption
	}
}
func (m RuneListOptionOptionOption) Filter(p RuneListOptionOptionPredicate) RuneListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneRuneListOptionOption
	}
}
func (m Float32ListOptionOptionOption) Filter(p Float32ListOptionOptionPredicate) Float32ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat32ListOptionOption
	}
}
func (m Float64ListOptionOptionOption) Filter(p Float64ListOptionOptionPredicate) Float64ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneFloat64ListOptionOption
	}
}
func (m Complex64ListOptionOptionOption) Filter(p Complex64ListOptionOptionPredicate) Complex64ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex64ListOptionOption
	}
}
func (m Complex128ListOptionOptionOption) Filter(p Complex128ListOptionOptionPredicate) Complex128ListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneComplex128ListOptionOption
	}
}
func (m AnyListOptionOptionOption) Filter(p AnyListOptionOptionPredicate) AnyListOptionOptionOption {
	if m.IsDefined() && p(*m.value) {
		return m
	} else {
		return NoneAnyListOptionOption
	}
}
