// bootstrap_option_map.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp


func (m BoolOption) MapBool(f func(bool) bool) BoolOption { return MapBoolToBoolOption(m, f) }
func (m BoolOption) MapString(f func(bool) string) StringOption { return MapStringToBoolOption(m, f) }
func (m BoolOption) MapInt(f func(bool) int) IntOption { return MapIntToBoolOption(m, f) }
func (m BoolOption) MapInt8(f func(bool) int8) Int8Option { return MapInt8ToBoolOption(m, f) }
func (m BoolOption) MapInt16(f func(bool) int16) Int16Option { return MapInt16ToBoolOption(m, f) }
func (m BoolOption) MapInt32(f func(bool) int32) Int32Option { return MapInt32ToBoolOption(m, f) }
func (m BoolOption) MapInt64(f func(bool) int64) Int64Option { return MapInt64ToBoolOption(m, f) }
func (m BoolOption) MapUint(f func(bool) uint) UintOption { return MapUintToBoolOption(m, f) }
func (m BoolOption) MapUint8(f func(bool) uint8) Uint8Option { return MapUint8ToBoolOption(m, f) }
func (m BoolOption) MapUint16(f func(bool) uint16) Uint16Option { return MapUint16ToBoolOption(m, f) }
func (m BoolOption) MapUint32(f func(bool) uint32) Uint32Option { return MapUint32ToBoolOption(m, f) }
func (m BoolOption) MapUint64(f func(bool) uint64) Uint64Option { return MapUint64ToBoolOption(m, f) }
func (m BoolOption) MapUintptr(f func(bool) uintptr) UintptrOption { return MapUintptrToBoolOption(m, f) }
func (m BoolOption) MapByte(f func(bool) byte) ByteOption { return MapByteToBoolOption(m, f) }
func (m BoolOption) MapRune(f func(bool) rune) RuneOption { return MapRuneToBoolOption(m, f) }
func (m BoolOption) MapFloat32(f func(bool) float32) Float32Option { return MapFloat32ToBoolOption(m, f) }
func (m BoolOption) MapFloat64(f func(bool) float64) Float64Option { return MapFloat64ToBoolOption(m, f) }
func (m BoolOption) MapComplex64(f func(bool) complex64) Complex64Option { return MapComplex64ToBoolOption(m, f) }
func (m BoolOption) MapComplex128(f func(bool) complex128) Complex128Option { return MapComplex128ToBoolOption(m, f) }
func (m BoolOption) MapAny(f func(bool) Any) AnyOption { return MapAnyToBoolOption(m, f) }
func (m BoolOption) MapBoolOption(f func(bool) BoolOption) BoolOptionOption { return MapBoolOptionToBoolOption(m, f) }
func (m BoolOption) MapStringOption(f func(bool) StringOption) StringOptionOption { return MapStringOptionToBoolOption(m, f) }
func (m BoolOption) MapIntOption(f func(bool) IntOption) IntOptionOption { return MapIntOptionToBoolOption(m, f) }
func (m BoolOption) MapInt8Option(f func(bool) Int8Option) Int8OptionOption { return MapInt8OptionToBoolOption(m, f) }
func (m BoolOption) MapInt16Option(f func(bool) Int16Option) Int16OptionOption { return MapInt16OptionToBoolOption(m, f) }
func (m BoolOption) MapInt32Option(f func(bool) Int32Option) Int32OptionOption { return MapInt32OptionToBoolOption(m, f) }
func (m BoolOption) MapInt64Option(f func(bool) Int64Option) Int64OptionOption { return MapInt64OptionToBoolOption(m, f) }
func (m BoolOption) MapUintOption(f func(bool) UintOption) UintOptionOption { return MapUintOptionToBoolOption(m, f) }
func (m BoolOption) MapUint8Option(f func(bool) Uint8Option) Uint8OptionOption { return MapUint8OptionToBoolOption(m, f) }
func (m BoolOption) MapUint16Option(f func(bool) Uint16Option) Uint16OptionOption { return MapUint16OptionToBoolOption(m, f) }
func (m BoolOption) MapUint32Option(f func(bool) Uint32Option) Uint32OptionOption { return MapUint32OptionToBoolOption(m, f) }
func (m BoolOption) MapUint64Option(f func(bool) Uint64Option) Uint64OptionOption { return MapUint64OptionToBoolOption(m, f) }
func (m BoolOption) MapUintptrOption(f func(bool) UintptrOption) UintptrOptionOption { return MapUintptrOptionToBoolOption(m, f) }
func (m BoolOption) MapByteOption(f func(bool) ByteOption) ByteOptionOption { return MapByteOptionToBoolOption(m, f) }
func (m BoolOption) MapRuneOption(f func(bool) RuneOption) RuneOptionOption { return MapRuneOptionToBoolOption(m, f) }
func (m BoolOption) MapFloat32Option(f func(bool) Float32Option) Float32OptionOption { return MapFloat32OptionToBoolOption(m, f) }
func (m BoolOption) MapFloat64Option(f func(bool) Float64Option) Float64OptionOption { return MapFloat64OptionToBoolOption(m, f) }
func (m BoolOption) MapComplex64Option(f func(bool) Complex64Option) Complex64OptionOption { return MapComplex64OptionToBoolOption(m, f) }
func (m BoolOption) MapComplex128Option(f func(bool) Complex128Option) Complex128OptionOption { return MapComplex128OptionToBoolOption(m, f) }
func (m BoolOption) MapAnyOption(f func(bool) AnyOption) AnyOptionOption { return MapAnyOptionToBoolOption(m, f) }
func (m BoolOption) MapBoolArr(f func(bool) []bool) BoolArrOption { return MapBoolArrToBoolOption(m, f) }
func (m BoolOption) MapStringArr(f func(bool) []string) StringArrOption { return MapStringArrToBoolOption(m, f) }
func (m BoolOption) MapIntArr(f func(bool) []int) IntArrOption { return MapIntArrToBoolOption(m, f) }
func (m BoolOption) MapInt8Arr(f func(bool) []int8) Int8ArrOption { return MapInt8ArrToBoolOption(m, f) }
func (m BoolOption) MapInt16Arr(f func(bool) []int16) Int16ArrOption { return MapInt16ArrToBoolOption(m, f) }
func (m BoolOption) MapInt32Arr(f func(bool) []int32) Int32ArrOption { return MapInt32ArrToBoolOption(m, f) }
func (m BoolOption) MapInt64Arr(f func(bool) []int64) Int64ArrOption { return MapInt64ArrToBoolOption(m, f) }
func (m BoolOption) MapUintArr(f func(bool) []uint) UintArrOption { return MapUintArrToBoolOption(m, f) }
func (m BoolOption) MapUint8Arr(f func(bool) []uint8) Uint8ArrOption { return MapUint8ArrToBoolOption(m, f) }
func (m BoolOption) MapUint16Arr(f func(bool) []uint16) Uint16ArrOption { return MapUint16ArrToBoolOption(m, f) }
func (m BoolOption) MapUint32Arr(f func(bool) []uint32) Uint32ArrOption { return MapUint32ArrToBoolOption(m, f) }
func (m BoolOption) MapUint64Arr(f func(bool) []uint64) Uint64ArrOption { return MapUint64ArrToBoolOption(m, f) }
func (m BoolOption) MapUintptrArr(f func(bool) []uintptr) UintptrArrOption { return MapUintptrArrToBoolOption(m, f) }
func (m BoolOption) MapByteArr(f func(bool) []byte) ByteArrOption { return MapByteArrToBoolOption(m, f) }
func (m BoolOption) MapRuneArr(f func(bool) []rune) RuneArrOption { return MapRuneArrToBoolOption(m, f) }
func (m BoolOption) MapFloat32Arr(f func(bool) []float32) Float32ArrOption { return MapFloat32ArrToBoolOption(m, f) }
func (m BoolOption) MapFloat64Arr(f func(bool) []float64) Float64ArrOption { return MapFloat64ArrToBoolOption(m, f) }
func (m BoolOption) MapComplex64Arr(f func(bool) []complex64) Complex64ArrOption { return MapComplex64ArrToBoolOption(m, f) }
func (m BoolOption) MapComplex128Arr(f func(bool) []complex128) Complex128ArrOption { return MapComplex128ArrToBoolOption(m, f) }
func (m BoolOption) MapAnyArr(f func(bool) []Any) AnyArrOption { return MapAnyArrToBoolOption(m, f) }
func (m BoolOption) MapBoolList(f func(bool) BoolList) BoolListOption { return MapBoolListToBoolOption(m, f) }
func (m BoolOption) MapStringList(f func(bool) StringList) StringListOption { return MapStringListToBoolOption(m, f) }
func (m BoolOption) MapIntList(f func(bool) IntList) IntListOption { return MapIntListToBoolOption(m, f) }
func (m BoolOption) MapInt8List(f func(bool) Int8List) Int8ListOption { return MapInt8ListToBoolOption(m, f) }
func (m BoolOption) MapInt16List(f func(bool) Int16List) Int16ListOption { return MapInt16ListToBoolOption(m, f) }
func (m BoolOption) MapInt32List(f func(bool) Int32List) Int32ListOption { return MapInt32ListToBoolOption(m, f) }
func (m BoolOption) MapInt64List(f func(bool) Int64List) Int64ListOption { return MapInt64ListToBoolOption(m, f) }
func (m BoolOption) MapUintList(f func(bool) UintList) UintListOption { return MapUintListToBoolOption(m, f) }
func (m BoolOption) MapUint8List(f func(bool) Uint8List) Uint8ListOption { return MapUint8ListToBoolOption(m, f) }
func (m BoolOption) MapUint16List(f func(bool) Uint16List) Uint16ListOption { return MapUint16ListToBoolOption(m, f) }
func (m BoolOption) MapUint32List(f func(bool) Uint32List) Uint32ListOption { return MapUint32ListToBoolOption(m, f) }
func (m BoolOption) MapUint64List(f func(bool) Uint64List) Uint64ListOption { return MapUint64ListToBoolOption(m, f) }
func (m BoolOption) MapUintptrList(f func(bool) UintptrList) UintptrListOption { return MapUintptrListToBoolOption(m, f) }
func (m BoolOption) MapByteList(f func(bool) ByteList) ByteListOption { return MapByteListToBoolOption(m, f) }
func (m BoolOption) MapRuneList(f func(bool) RuneList) RuneListOption { return MapRuneListToBoolOption(m, f) }
func (m BoolOption) MapFloat32List(f func(bool) Float32List) Float32ListOption { return MapFloat32ListToBoolOption(m, f) }
func (m BoolOption) MapFloat64List(f func(bool) Float64List) Float64ListOption { return MapFloat64ListToBoolOption(m, f) }
func (m BoolOption) MapComplex64List(f func(bool) Complex64List) Complex64ListOption { return MapComplex64ListToBoolOption(m, f) }
func (m BoolOption) MapComplex128List(f func(bool) Complex128List) Complex128ListOption { return MapComplex128ListToBoolOption(m, f) }
func (m BoolOption) MapAnyList(f func(bool) AnyList) AnyListOption { return MapAnyListToBoolOption(m, f) }
func (m StringOption) MapBool(f func(string) bool) BoolOption { return MapBoolToStringOption(m, f) }
func (m StringOption) MapString(f func(string) string) StringOption { return MapStringToStringOption(m, f) }
func (m StringOption) MapInt(f func(string) int) IntOption { return MapIntToStringOption(m, f) }
func (m StringOption) MapInt8(f func(string) int8) Int8Option { return MapInt8ToStringOption(m, f) }
func (m StringOption) MapInt16(f func(string) int16) Int16Option { return MapInt16ToStringOption(m, f) }
func (m StringOption) MapInt32(f func(string) int32) Int32Option { return MapInt32ToStringOption(m, f) }
func (m StringOption) MapInt64(f func(string) int64) Int64Option { return MapInt64ToStringOption(m, f) }
func (m StringOption) MapUint(f func(string) uint) UintOption { return MapUintToStringOption(m, f) }
func (m StringOption) MapUint8(f func(string) uint8) Uint8Option { return MapUint8ToStringOption(m, f) }
func (m StringOption) MapUint16(f func(string) uint16) Uint16Option { return MapUint16ToStringOption(m, f) }
func (m StringOption) MapUint32(f func(string) uint32) Uint32Option { return MapUint32ToStringOption(m, f) }
func (m StringOption) MapUint64(f func(string) uint64) Uint64Option { return MapUint64ToStringOption(m, f) }
func (m StringOption) MapUintptr(f func(string) uintptr) UintptrOption { return MapUintptrToStringOption(m, f) }
func (m StringOption) MapByte(f func(string) byte) ByteOption { return MapByteToStringOption(m, f) }
func (m StringOption) MapRune(f func(string) rune) RuneOption { return MapRuneToStringOption(m, f) }
func (m StringOption) MapFloat32(f func(string) float32) Float32Option { return MapFloat32ToStringOption(m, f) }
func (m StringOption) MapFloat64(f func(string) float64) Float64Option { return MapFloat64ToStringOption(m, f) }
func (m StringOption) MapComplex64(f func(string) complex64) Complex64Option { return MapComplex64ToStringOption(m, f) }
func (m StringOption) MapComplex128(f func(string) complex128) Complex128Option { return MapComplex128ToStringOption(m, f) }
func (m StringOption) MapAny(f func(string) Any) AnyOption { return MapAnyToStringOption(m, f) }
func (m StringOption) MapBoolOption(f func(string) BoolOption) BoolOptionOption { return MapBoolOptionToStringOption(m, f) }
func (m StringOption) MapStringOption(f func(string) StringOption) StringOptionOption { return MapStringOptionToStringOption(m, f) }
func (m StringOption) MapIntOption(f func(string) IntOption) IntOptionOption { return MapIntOptionToStringOption(m, f) }
func (m StringOption) MapInt8Option(f func(string) Int8Option) Int8OptionOption { return MapInt8OptionToStringOption(m, f) }
func (m StringOption) MapInt16Option(f func(string) Int16Option) Int16OptionOption { return MapInt16OptionToStringOption(m, f) }
func (m StringOption) MapInt32Option(f func(string) Int32Option) Int32OptionOption { return MapInt32OptionToStringOption(m, f) }
func (m StringOption) MapInt64Option(f func(string) Int64Option) Int64OptionOption { return MapInt64OptionToStringOption(m, f) }
func (m StringOption) MapUintOption(f func(string) UintOption) UintOptionOption { return MapUintOptionToStringOption(m, f) }
func (m StringOption) MapUint8Option(f func(string) Uint8Option) Uint8OptionOption { return MapUint8OptionToStringOption(m, f) }
func (m StringOption) MapUint16Option(f func(string) Uint16Option) Uint16OptionOption { return MapUint16OptionToStringOption(m, f) }
func (m StringOption) MapUint32Option(f func(string) Uint32Option) Uint32OptionOption { return MapUint32OptionToStringOption(m, f) }
func (m StringOption) MapUint64Option(f func(string) Uint64Option) Uint64OptionOption { return MapUint64OptionToStringOption(m, f) }
func (m StringOption) MapUintptrOption(f func(string) UintptrOption) UintptrOptionOption { return MapUintptrOptionToStringOption(m, f) }
func (m StringOption) MapByteOption(f func(string) ByteOption) ByteOptionOption { return MapByteOptionToStringOption(m, f) }
func (m StringOption) MapRuneOption(f func(string) RuneOption) RuneOptionOption { return MapRuneOptionToStringOption(m, f) }
func (m StringOption) MapFloat32Option(f func(string) Float32Option) Float32OptionOption { return MapFloat32OptionToStringOption(m, f) }
func (m StringOption) MapFloat64Option(f func(string) Float64Option) Float64OptionOption { return MapFloat64OptionToStringOption(m, f) }
func (m StringOption) MapComplex64Option(f func(string) Complex64Option) Complex64OptionOption { return MapComplex64OptionToStringOption(m, f) }
func (m StringOption) MapComplex128Option(f func(string) Complex128Option) Complex128OptionOption { return MapComplex128OptionToStringOption(m, f) }
func (m StringOption) MapAnyOption(f func(string) AnyOption) AnyOptionOption { return MapAnyOptionToStringOption(m, f) }
func (m StringOption) MapBoolArr(f func(string) []bool) BoolArrOption { return MapBoolArrToStringOption(m, f) }
func (m StringOption) MapStringArr(f func(string) []string) StringArrOption { return MapStringArrToStringOption(m, f) }
func (m StringOption) MapIntArr(f func(string) []int) IntArrOption { return MapIntArrToStringOption(m, f) }
func (m StringOption) MapInt8Arr(f func(string) []int8) Int8ArrOption { return MapInt8ArrToStringOption(m, f) }
func (m StringOption) MapInt16Arr(f func(string) []int16) Int16ArrOption { return MapInt16ArrToStringOption(m, f) }
func (m StringOption) MapInt32Arr(f func(string) []int32) Int32ArrOption { return MapInt32ArrToStringOption(m, f) }
func (m StringOption) MapInt64Arr(f func(string) []int64) Int64ArrOption { return MapInt64ArrToStringOption(m, f) }
func (m StringOption) MapUintArr(f func(string) []uint) UintArrOption { return MapUintArrToStringOption(m, f) }
func (m StringOption) MapUint8Arr(f func(string) []uint8) Uint8ArrOption { return MapUint8ArrToStringOption(m, f) }
func (m StringOption) MapUint16Arr(f func(string) []uint16) Uint16ArrOption { return MapUint16ArrToStringOption(m, f) }
func (m StringOption) MapUint32Arr(f func(string) []uint32) Uint32ArrOption { return MapUint32ArrToStringOption(m, f) }
func (m StringOption) MapUint64Arr(f func(string) []uint64) Uint64ArrOption { return MapUint64ArrToStringOption(m, f) }
func (m StringOption) MapUintptrArr(f func(string) []uintptr) UintptrArrOption { return MapUintptrArrToStringOption(m, f) }
func (m StringOption) MapByteArr(f func(string) []byte) ByteArrOption { return MapByteArrToStringOption(m, f) }
func (m StringOption) MapRuneArr(f func(string) []rune) RuneArrOption { return MapRuneArrToStringOption(m, f) }
func (m StringOption) MapFloat32Arr(f func(string) []float32) Float32ArrOption { return MapFloat32ArrToStringOption(m, f) }
func (m StringOption) MapFloat64Arr(f func(string) []float64) Float64ArrOption { return MapFloat64ArrToStringOption(m, f) }
func (m StringOption) MapComplex64Arr(f func(string) []complex64) Complex64ArrOption { return MapComplex64ArrToStringOption(m, f) }
func (m StringOption) MapComplex128Arr(f func(string) []complex128) Complex128ArrOption { return MapComplex128ArrToStringOption(m, f) }
func (m StringOption) MapAnyArr(f func(string) []Any) AnyArrOption { return MapAnyArrToStringOption(m, f) }
func (m StringOption) MapBoolList(f func(string) BoolList) BoolListOption { return MapBoolListToStringOption(m, f) }
func (m StringOption) MapStringList(f func(string) StringList) StringListOption { return MapStringListToStringOption(m, f) }
func (m StringOption) MapIntList(f func(string) IntList) IntListOption { return MapIntListToStringOption(m, f) }
func (m StringOption) MapInt8List(f func(string) Int8List) Int8ListOption { return MapInt8ListToStringOption(m, f) }
func (m StringOption) MapInt16List(f func(string) Int16List) Int16ListOption { return MapInt16ListToStringOption(m, f) }
func (m StringOption) MapInt32List(f func(string) Int32List) Int32ListOption { return MapInt32ListToStringOption(m, f) }
func (m StringOption) MapInt64List(f func(string) Int64List) Int64ListOption { return MapInt64ListToStringOption(m, f) }
func (m StringOption) MapUintList(f func(string) UintList) UintListOption { return MapUintListToStringOption(m, f) }
func (m StringOption) MapUint8List(f func(string) Uint8List) Uint8ListOption { return MapUint8ListToStringOption(m, f) }
func (m StringOption) MapUint16List(f func(string) Uint16List) Uint16ListOption { return MapUint16ListToStringOption(m, f) }
func (m StringOption) MapUint32List(f func(string) Uint32List) Uint32ListOption { return MapUint32ListToStringOption(m, f) }
func (m StringOption) MapUint64List(f func(string) Uint64List) Uint64ListOption { return MapUint64ListToStringOption(m, f) }
func (m StringOption) MapUintptrList(f func(string) UintptrList) UintptrListOption { return MapUintptrListToStringOption(m, f) }
func (m StringOption) MapByteList(f func(string) ByteList) ByteListOption { return MapByteListToStringOption(m, f) }
func (m StringOption) MapRuneList(f func(string) RuneList) RuneListOption { return MapRuneListToStringOption(m, f) }
func (m StringOption) MapFloat32List(f func(string) Float32List) Float32ListOption { return MapFloat32ListToStringOption(m, f) }
func (m StringOption) MapFloat64List(f func(string) Float64List) Float64ListOption { return MapFloat64ListToStringOption(m, f) }
func (m StringOption) MapComplex64List(f func(string) Complex64List) Complex64ListOption { return MapComplex64ListToStringOption(m, f) }
func (m StringOption) MapComplex128List(f func(string) Complex128List) Complex128ListOption { return MapComplex128ListToStringOption(m, f) }
func (m StringOption) MapAnyList(f func(string) AnyList) AnyListOption { return MapAnyListToStringOption(m, f) }
func (m IntOption) MapBool(f func(int) bool) BoolOption { return MapBoolToIntOption(m, f) }
func (m IntOption) MapString(f func(int) string) StringOption { return MapStringToIntOption(m, f) }
func (m IntOption) MapInt(f func(int) int) IntOption { return MapIntToIntOption(m, f) }
func (m IntOption) MapInt8(f func(int) int8) Int8Option { return MapInt8ToIntOption(m, f) }
func (m IntOption) MapInt16(f func(int) int16) Int16Option { return MapInt16ToIntOption(m, f) }
func (m IntOption) MapInt32(f func(int) int32) Int32Option { return MapInt32ToIntOption(m, f) }
func (m IntOption) MapInt64(f func(int) int64) Int64Option { return MapInt64ToIntOption(m, f) }
func (m IntOption) MapUint(f func(int) uint) UintOption { return MapUintToIntOption(m, f) }
func (m IntOption) MapUint8(f func(int) uint8) Uint8Option { return MapUint8ToIntOption(m, f) }
func (m IntOption) MapUint16(f func(int) uint16) Uint16Option { return MapUint16ToIntOption(m, f) }
func (m IntOption) MapUint32(f func(int) uint32) Uint32Option { return MapUint32ToIntOption(m, f) }
func (m IntOption) MapUint64(f func(int) uint64) Uint64Option { return MapUint64ToIntOption(m, f) }
func (m IntOption) MapUintptr(f func(int) uintptr) UintptrOption { return MapUintptrToIntOption(m, f) }
func (m IntOption) MapByte(f func(int) byte) ByteOption { return MapByteToIntOption(m, f) }
func (m IntOption) MapRune(f func(int) rune) RuneOption { return MapRuneToIntOption(m, f) }
func (m IntOption) MapFloat32(f func(int) float32) Float32Option { return MapFloat32ToIntOption(m, f) }
func (m IntOption) MapFloat64(f func(int) float64) Float64Option { return MapFloat64ToIntOption(m, f) }
func (m IntOption) MapComplex64(f func(int) complex64) Complex64Option { return MapComplex64ToIntOption(m, f) }
func (m IntOption) MapComplex128(f func(int) complex128) Complex128Option { return MapComplex128ToIntOption(m, f) }
func (m IntOption) MapAny(f func(int) Any) AnyOption { return MapAnyToIntOption(m, f) }
func (m IntOption) MapBoolOption(f func(int) BoolOption) BoolOptionOption { return MapBoolOptionToIntOption(m, f) }
func (m IntOption) MapStringOption(f func(int) StringOption) StringOptionOption { return MapStringOptionToIntOption(m, f) }
func (m IntOption) MapIntOption(f func(int) IntOption) IntOptionOption { return MapIntOptionToIntOption(m, f) }
func (m IntOption) MapInt8Option(f func(int) Int8Option) Int8OptionOption { return MapInt8OptionToIntOption(m, f) }
func (m IntOption) MapInt16Option(f func(int) Int16Option) Int16OptionOption { return MapInt16OptionToIntOption(m, f) }
func (m IntOption) MapInt32Option(f func(int) Int32Option) Int32OptionOption { return MapInt32OptionToIntOption(m, f) }
func (m IntOption) MapInt64Option(f func(int) Int64Option) Int64OptionOption { return MapInt64OptionToIntOption(m, f) }
func (m IntOption) MapUintOption(f func(int) UintOption) UintOptionOption { return MapUintOptionToIntOption(m, f) }
func (m IntOption) MapUint8Option(f func(int) Uint8Option) Uint8OptionOption { return MapUint8OptionToIntOption(m, f) }
func (m IntOption) MapUint16Option(f func(int) Uint16Option) Uint16OptionOption { return MapUint16OptionToIntOption(m, f) }
func (m IntOption) MapUint32Option(f func(int) Uint32Option) Uint32OptionOption { return MapUint32OptionToIntOption(m, f) }
func (m IntOption) MapUint64Option(f func(int) Uint64Option) Uint64OptionOption { return MapUint64OptionToIntOption(m, f) }
func (m IntOption) MapUintptrOption(f func(int) UintptrOption) UintptrOptionOption { return MapUintptrOptionToIntOption(m, f) }
func (m IntOption) MapByteOption(f func(int) ByteOption) ByteOptionOption { return MapByteOptionToIntOption(m, f) }
func (m IntOption) MapRuneOption(f func(int) RuneOption) RuneOptionOption { return MapRuneOptionToIntOption(m, f) }
func (m IntOption) MapFloat32Option(f func(int) Float32Option) Float32OptionOption { return MapFloat32OptionToIntOption(m, f) }
func (m IntOption) MapFloat64Option(f func(int) Float64Option) Float64OptionOption { return MapFloat64OptionToIntOption(m, f) }
func (m IntOption) MapComplex64Option(f func(int) Complex64Option) Complex64OptionOption { return MapComplex64OptionToIntOption(m, f) }
func (m IntOption) MapComplex128Option(f func(int) Complex128Option) Complex128OptionOption { return MapComplex128OptionToIntOption(m, f) }
func (m IntOption) MapAnyOption(f func(int) AnyOption) AnyOptionOption { return MapAnyOptionToIntOption(m, f) }
func (m IntOption) MapBoolArr(f func(int) []bool) BoolArrOption { return MapBoolArrToIntOption(m, f) }
func (m IntOption) MapStringArr(f func(int) []string) StringArrOption { return MapStringArrToIntOption(m, f) }
func (m IntOption) MapIntArr(f func(int) []int) IntArrOption { return MapIntArrToIntOption(m, f) }
func (m IntOption) MapInt8Arr(f func(int) []int8) Int8ArrOption { return MapInt8ArrToIntOption(m, f) }
func (m IntOption) MapInt16Arr(f func(int) []int16) Int16ArrOption { return MapInt16ArrToIntOption(m, f) }
func (m IntOption) MapInt32Arr(f func(int) []int32) Int32ArrOption { return MapInt32ArrToIntOption(m, f) }
func (m IntOption) MapInt64Arr(f func(int) []int64) Int64ArrOption { return MapInt64ArrToIntOption(m, f) }
func (m IntOption) MapUintArr(f func(int) []uint) UintArrOption { return MapUintArrToIntOption(m, f) }
func (m IntOption) MapUint8Arr(f func(int) []uint8) Uint8ArrOption { return MapUint8ArrToIntOption(m, f) }
func (m IntOption) MapUint16Arr(f func(int) []uint16) Uint16ArrOption { return MapUint16ArrToIntOption(m, f) }
func (m IntOption) MapUint32Arr(f func(int) []uint32) Uint32ArrOption { return MapUint32ArrToIntOption(m, f) }
func (m IntOption) MapUint64Arr(f func(int) []uint64) Uint64ArrOption { return MapUint64ArrToIntOption(m, f) }
func (m IntOption) MapUintptrArr(f func(int) []uintptr) UintptrArrOption { return MapUintptrArrToIntOption(m, f) }
func (m IntOption) MapByteArr(f func(int) []byte) ByteArrOption { return MapByteArrToIntOption(m, f) }
func (m IntOption) MapRuneArr(f func(int) []rune) RuneArrOption { return MapRuneArrToIntOption(m, f) }
func (m IntOption) MapFloat32Arr(f func(int) []float32) Float32ArrOption { return MapFloat32ArrToIntOption(m, f) }
func (m IntOption) MapFloat64Arr(f func(int) []float64) Float64ArrOption { return MapFloat64ArrToIntOption(m, f) }
func (m IntOption) MapComplex64Arr(f func(int) []complex64) Complex64ArrOption { return MapComplex64ArrToIntOption(m, f) }
func (m IntOption) MapComplex128Arr(f func(int) []complex128) Complex128ArrOption { return MapComplex128ArrToIntOption(m, f) }
func (m IntOption) MapAnyArr(f func(int) []Any) AnyArrOption { return MapAnyArrToIntOption(m, f) }
func (m IntOption) MapBoolList(f func(int) BoolList) BoolListOption { return MapBoolListToIntOption(m, f) }
func (m IntOption) MapStringList(f func(int) StringList) StringListOption { return MapStringListToIntOption(m, f) }
func (m IntOption) MapIntList(f func(int) IntList) IntListOption { return MapIntListToIntOption(m, f) }
func (m IntOption) MapInt8List(f func(int) Int8List) Int8ListOption { return MapInt8ListToIntOption(m, f) }
func (m IntOption) MapInt16List(f func(int) Int16List) Int16ListOption { return MapInt16ListToIntOption(m, f) }
func (m IntOption) MapInt32List(f func(int) Int32List) Int32ListOption { return MapInt32ListToIntOption(m, f) }
func (m IntOption) MapInt64List(f func(int) Int64List) Int64ListOption { return MapInt64ListToIntOption(m, f) }
func (m IntOption) MapUintList(f func(int) UintList) UintListOption { return MapUintListToIntOption(m, f) }
func (m IntOption) MapUint8List(f func(int) Uint8List) Uint8ListOption { return MapUint8ListToIntOption(m, f) }
func (m IntOption) MapUint16List(f func(int) Uint16List) Uint16ListOption { return MapUint16ListToIntOption(m, f) }
func (m IntOption) MapUint32List(f func(int) Uint32List) Uint32ListOption { return MapUint32ListToIntOption(m, f) }
func (m IntOption) MapUint64List(f func(int) Uint64List) Uint64ListOption { return MapUint64ListToIntOption(m, f) }
func (m IntOption) MapUintptrList(f func(int) UintptrList) UintptrListOption { return MapUintptrListToIntOption(m, f) }
func (m IntOption) MapByteList(f func(int) ByteList) ByteListOption { return MapByteListToIntOption(m, f) }
func (m IntOption) MapRuneList(f func(int) RuneList) RuneListOption { return MapRuneListToIntOption(m, f) }
func (m IntOption) MapFloat32List(f func(int) Float32List) Float32ListOption { return MapFloat32ListToIntOption(m, f) }
func (m IntOption) MapFloat64List(f func(int) Float64List) Float64ListOption { return MapFloat64ListToIntOption(m, f) }
func (m IntOption) MapComplex64List(f func(int) Complex64List) Complex64ListOption { return MapComplex64ListToIntOption(m, f) }
func (m IntOption) MapComplex128List(f func(int) Complex128List) Complex128ListOption { return MapComplex128ListToIntOption(m, f) }
func (m IntOption) MapAnyList(f func(int) AnyList) AnyListOption { return MapAnyListToIntOption(m, f) }
func (m Int8Option) MapBool(f func(int8) bool) BoolOption { return MapBoolToInt8Option(m, f) }
func (m Int8Option) MapString(f func(int8) string) StringOption { return MapStringToInt8Option(m, f) }
func (m Int8Option) MapInt(f func(int8) int) IntOption { return MapIntToInt8Option(m, f) }
func (m Int8Option) MapInt8(f func(int8) int8) Int8Option { return MapInt8ToInt8Option(m, f) }
func (m Int8Option) MapInt16(f func(int8) int16) Int16Option { return MapInt16ToInt8Option(m, f) }
func (m Int8Option) MapInt32(f func(int8) int32) Int32Option { return MapInt32ToInt8Option(m, f) }
func (m Int8Option) MapInt64(f func(int8) int64) Int64Option { return MapInt64ToInt8Option(m, f) }
func (m Int8Option) MapUint(f func(int8) uint) UintOption { return MapUintToInt8Option(m, f) }
func (m Int8Option) MapUint8(f func(int8) uint8) Uint8Option { return MapUint8ToInt8Option(m, f) }
func (m Int8Option) MapUint16(f func(int8) uint16) Uint16Option { return MapUint16ToInt8Option(m, f) }
func (m Int8Option) MapUint32(f func(int8) uint32) Uint32Option { return MapUint32ToInt8Option(m, f) }
func (m Int8Option) MapUint64(f func(int8) uint64) Uint64Option { return MapUint64ToInt8Option(m, f) }
func (m Int8Option) MapUintptr(f func(int8) uintptr) UintptrOption { return MapUintptrToInt8Option(m, f) }
func (m Int8Option) MapByte(f func(int8) byte) ByteOption { return MapByteToInt8Option(m, f) }
func (m Int8Option) MapRune(f func(int8) rune) RuneOption { return MapRuneToInt8Option(m, f) }
func (m Int8Option) MapFloat32(f func(int8) float32) Float32Option { return MapFloat32ToInt8Option(m, f) }
func (m Int8Option) MapFloat64(f func(int8) float64) Float64Option { return MapFloat64ToInt8Option(m, f) }
func (m Int8Option) MapComplex64(f func(int8) complex64) Complex64Option { return MapComplex64ToInt8Option(m, f) }
func (m Int8Option) MapComplex128(f func(int8) complex128) Complex128Option { return MapComplex128ToInt8Option(m, f) }
func (m Int8Option) MapAny(f func(int8) Any) AnyOption { return MapAnyToInt8Option(m, f) }
func (m Int8Option) MapBoolOption(f func(int8) BoolOption) BoolOptionOption { return MapBoolOptionToInt8Option(m, f) }
func (m Int8Option) MapStringOption(f func(int8) StringOption) StringOptionOption { return MapStringOptionToInt8Option(m, f) }
func (m Int8Option) MapIntOption(f func(int8) IntOption) IntOptionOption { return MapIntOptionToInt8Option(m, f) }
func (m Int8Option) MapInt8Option(f func(int8) Int8Option) Int8OptionOption { return MapInt8OptionToInt8Option(m, f) }
func (m Int8Option) MapInt16Option(f func(int8) Int16Option) Int16OptionOption { return MapInt16OptionToInt8Option(m, f) }
func (m Int8Option) MapInt32Option(f func(int8) Int32Option) Int32OptionOption { return MapInt32OptionToInt8Option(m, f) }
func (m Int8Option) MapInt64Option(f func(int8) Int64Option) Int64OptionOption { return MapInt64OptionToInt8Option(m, f) }
func (m Int8Option) MapUintOption(f func(int8) UintOption) UintOptionOption { return MapUintOptionToInt8Option(m, f) }
func (m Int8Option) MapUint8Option(f func(int8) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt8Option(m, f) }
func (m Int8Option) MapUint16Option(f func(int8) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt8Option(m, f) }
func (m Int8Option) MapUint32Option(f func(int8) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt8Option(m, f) }
func (m Int8Option) MapUint64Option(f func(int8) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt8Option(m, f) }
func (m Int8Option) MapUintptrOption(f func(int8) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt8Option(m, f) }
func (m Int8Option) MapByteOption(f func(int8) ByteOption) ByteOptionOption { return MapByteOptionToInt8Option(m, f) }
func (m Int8Option) MapRuneOption(f func(int8) RuneOption) RuneOptionOption { return MapRuneOptionToInt8Option(m, f) }
func (m Int8Option) MapFloat32Option(f func(int8) Float32Option) Float32OptionOption { return MapFloat32OptionToInt8Option(m, f) }
func (m Int8Option) MapFloat64Option(f func(int8) Float64Option) Float64OptionOption { return MapFloat64OptionToInt8Option(m, f) }
func (m Int8Option) MapComplex64Option(f func(int8) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt8Option(m, f) }
func (m Int8Option) MapComplex128Option(f func(int8) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt8Option(m, f) }
func (m Int8Option) MapAnyOption(f func(int8) AnyOption) AnyOptionOption { return MapAnyOptionToInt8Option(m, f) }
func (m Int8Option) MapBoolArr(f func(int8) []bool) BoolArrOption { return MapBoolArrToInt8Option(m, f) }
func (m Int8Option) MapStringArr(f func(int8) []string) StringArrOption { return MapStringArrToInt8Option(m, f) }
func (m Int8Option) MapIntArr(f func(int8) []int) IntArrOption { return MapIntArrToInt8Option(m, f) }
func (m Int8Option) MapInt8Arr(f func(int8) []int8) Int8ArrOption { return MapInt8ArrToInt8Option(m, f) }
func (m Int8Option) MapInt16Arr(f func(int8) []int16) Int16ArrOption { return MapInt16ArrToInt8Option(m, f) }
func (m Int8Option) MapInt32Arr(f func(int8) []int32) Int32ArrOption { return MapInt32ArrToInt8Option(m, f) }
func (m Int8Option) MapInt64Arr(f func(int8) []int64) Int64ArrOption { return MapInt64ArrToInt8Option(m, f) }
func (m Int8Option) MapUintArr(f func(int8) []uint) UintArrOption { return MapUintArrToInt8Option(m, f) }
func (m Int8Option) MapUint8Arr(f func(int8) []uint8) Uint8ArrOption { return MapUint8ArrToInt8Option(m, f) }
func (m Int8Option) MapUint16Arr(f func(int8) []uint16) Uint16ArrOption { return MapUint16ArrToInt8Option(m, f) }
func (m Int8Option) MapUint32Arr(f func(int8) []uint32) Uint32ArrOption { return MapUint32ArrToInt8Option(m, f) }
func (m Int8Option) MapUint64Arr(f func(int8) []uint64) Uint64ArrOption { return MapUint64ArrToInt8Option(m, f) }
func (m Int8Option) MapUintptrArr(f func(int8) []uintptr) UintptrArrOption { return MapUintptrArrToInt8Option(m, f) }
func (m Int8Option) MapByteArr(f func(int8) []byte) ByteArrOption { return MapByteArrToInt8Option(m, f) }
func (m Int8Option) MapRuneArr(f func(int8) []rune) RuneArrOption { return MapRuneArrToInt8Option(m, f) }
func (m Int8Option) MapFloat32Arr(f func(int8) []float32) Float32ArrOption { return MapFloat32ArrToInt8Option(m, f) }
func (m Int8Option) MapFloat64Arr(f func(int8) []float64) Float64ArrOption { return MapFloat64ArrToInt8Option(m, f) }
func (m Int8Option) MapComplex64Arr(f func(int8) []complex64) Complex64ArrOption { return MapComplex64ArrToInt8Option(m, f) }
func (m Int8Option) MapComplex128Arr(f func(int8) []complex128) Complex128ArrOption { return MapComplex128ArrToInt8Option(m, f) }
func (m Int8Option) MapAnyArr(f func(int8) []Any) AnyArrOption { return MapAnyArrToInt8Option(m, f) }
func (m Int8Option) MapBoolList(f func(int8) BoolList) BoolListOption { return MapBoolListToInt8Option(m, f) }
func (m Int8Option) MapStringList(f func(int8) StringList) StringListOption { return MapStringListToInt8Option(m, f) }
func (m Int8Option) MapIntList(f func(int8) IntList) IntListOption { return MapIntListToInt8Option(m, f) }
func (m Int8Option) MapInt8List(f func(int8) Int8List) Int8ListOption { return MapInt8ListToInt8Option(m, f) }
func (m Int8Option) MapInt16List(f func(int8) Int16List) Int16ListOption { return MapInt16ListToInt8Option(m, f) }
func (m Int8Option) MapInt32List(f func(int8) Int32List) Int32ListOption { return MapInt32ListToInt8Option(m, f) }
func (m Int8Option) MapInt64List(f func(int8) Int64List) Int64ListOption { return MapInt64ListToInt8Option(m, f) }
func (m Int8Option) MapUintList(f func(int8) UintList) UintListOption { return MapUintListToInt8Option(m, f) }
func (m Int8Option) MapUint8List(f func(int8) Uint8List) Uint8ListOption { return MapUint8ListToInt8Option(m, f) }
func (m Int8Option) MapUint16List(f func(int8) Uint16List) Uint16ListOption { return MapUint16ListToInt8Option(m, f) }
func (m Int8Option) MapUint32List(f func(int8) Uint32List) Uint32ListOption { return MapUint32ListToInt8Option(m, f) }
func (m Int8Option) MapUint64List(f func(int8) Uint64List) Uint64ListOption { return MapUint64ListToInt8Option(m, f) }
func (m Int8Option) MapUintptrList(f func(int8) UintptrList) UintptrListOption { return MapUintptrListToInt8Option(m, f) }
func (m Int8Option) MapByteList(f func(int8) ByteList) ByteListOption { return MapByteListToInt8Option(m, f) }
func (m Int8Option) MapRuneList(f func(int8) RuneList) RuneListOption { return MapRuneListToInt8Option(m, f) }
func (m Int8Option) MapFloat32List(f func(int8) Float32List) Float32ListOption { return MapFloat32ListToInt8Option(m, f) }
func (m Int8Option) MapFloat64List(f func(int8) Float64List) Float64ListOption { return MapFloat64ListToInt8Option(m, f) }
func (m Int8Option) MapComplex64List(f func(int8) Complex64List) Complex64ListOption { return MapComplex64ListToInt8Option(m, f) }
func (m Int8Option) MapComplex128List(f func(int8) Complex128List) Complex128ListOption { return MapComplex128ListToInt8Option(m, f) }
func (m Int8Option) MapAnyList(f func(int8) AnyList) AnyListOption { return MapAnyListToInt8Option(m, f) }
func (m Int16Option) MapBool(f func(int16) bool) BoolOption { return MapBoolToInt16Option(m, f) }
func (m Int16Option) MapString(f func(int16) string) StringOption { return MapStringToInt16Option(m, f) }
func (m Int16Option) MapInt(f func(int16) int) IntOption { return MapIntToInt16Option(m, f) }
func (m Int16Option) MapInt8(f func(int16) int8) Int8Option { return MapInt8ToInt16Option(m, f) }
func (m Int16Option) MapInt16(f func(int16) int16) Int16Option { return MapInt16ToInt16Option(m, f) }
func (m Int16Option) MapInt32(f func(int16) int32) Int32Option { return MapInt32ToInt16Option(m, f) }
func (m Int16Option) MapInt64(f func(int16) int64) Int64Option { return MapInt64ToInt16Option(m, f) }
func (m Int16Option) MapUint(f func(int16) uint) UintOption { return MapUintToInt16Option(m, f) }
func (m Int16Option) MapUint8(f func(int16) uint8) Uint8Option { return MapUint8ToInt16Option(m, f) }
func (m Int16Option) MapUint16(f func(int16) uint16) Uint16Option { return MapUint16ToInt16Option(m, f) }
func (m Int16Option) MapUint32(f func(int16) uint32) Uint32Option { return MapUint32ToInt16Option(m, f) }
func (m Int16Option) MapUint64(f func(int16) uint64) Uint64Option { return MapUint64ToInt16Option(m, f) }
func (m Int16Option) MapUintptr(f func(int16) uintptr) UintptrOption { return MapUintptrToInt16Option(m, f) }
func (m Int16Option) MapByte(f func(int16) byte) ByteOption { return MapByteToInt16Option(m, f) }
func (m Int16Option) MapRune(f func(int16) rune) RuneOption { return MapRuneToInt16Option(m, f) }
func (m Int16Option) MapFloat32(f func(int16) float32) Float32Option { return MapFloat32ToInt16Option(m, f) }
func (m Int16Option) MapFloat64(f func(int16) float64) Float64Option { return MapFloat64ToInt16Option(m, f) }
func (m Int16Option) MapComplex64(f func(int16) complex64) Complex64Option { return MapComplex64ToInt16Option(m, f) }
func (m Int16Option) MapComplex128(f func(int16) complex128) Complex128Option { return MapComplex128ToInt16Option(m, f) }
func (m Int16Option) MapAny(f func(int16) Any) AnyOption { return MapAnyToInt16Option(m, f) }
func (m Int16Option) MapBoolOption(f func(int16) BoolOption) BoolOptionOption { return MapBoolOptionToInt16Option(m, f) }
func (m Int16Option) MapStringOption(f func(int16) StringOption) StringOptionOption { return MapStringOptionToInt16Option(m, f) }
func (m Int16Option) MapIntOption(f func(int16) IntOption) IntOptionOption { return MapIntOptionToInt16Option(m, f) }
func (m Int16Option) MapInt8Option(f func(int16) Int8Option) Int8OptionOption { return MapInt8OptionToInt16Option(m, f) }
func (m Int16Option) MapInt16Option(f func(int16) Int16Option) Int16OptionOption { return MapInt16OptionToInt16Option(m, f) }
func (m Int16Option) MapInt32Option(f func(int16) Int32Option) Int32OptionOption { return MapInt32OptionToInt16Option(m, f) }
func (m Int16Option) MapInt64Option(f func(int16) Int64Option) Int64OptionOption { return MapInt64OptionToInt16Option(m, f) }
func (m Int16Option) MapUintOption(f func(int16) UintOption) UintOptionOption { return MapUintOptionToInt16Option(m, f) }
func (m Int16Option) MapUint8Option(f func(int16) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt16Option(m, f) }
func (m Int16Option) MapUint16Option(f func(int16) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt16Option(m, f) }
func (m Int16Option) MapUint32Option(f func(int16) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt16Option(m, f) }
func (m Int16Option) MapUint64Option(f func(int16) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt16Option(m, f) }
func (m Int16Option) MapUintptrOption(f func(int16) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt16Option(m, f) }
func (m Int16Option) MapByteOption(f func(int16) ByteOption) ByteOptionOption { return MapByteOptionToInt16Option(m, f) }
func (m Int16Option) MapRuneOption(f func(int16) RuneOption) RuneOptionOption { return MapRuneOptionToInt16Option(m, f) }
func (m Int16Option) MapFloat32Option(f func(int16) Float32Option) Float32OptionOption { return MapFloat32OptionToInt16Option(m, f) }
func (m Int16Option) MapFloat64Option(f func(int16) Float64Option) Float64OptionOption { return MapFloat64OptionToInt16Option(m, f) }
func (m Int16Option) MapComplex64Option(f func(int16) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt16Option(m, f) }
func (m Int16Option) MapComplex128Option(f func(int16) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt16Option(m, f) }
func (m Int16Option) MapAnyOption(f func(int16) AnyOption) AnyOptionOption { return MapAnyOptionToInt16Option(m, f) }
func (m Int16Option) MapBoolArr(f func(int16) []bool) BoolArrOption { return MapBoolArrToInt16Option(m, f) }
func (m Int16Option) MapStringArr(f func(int16) []string) StringArrOption { return MapStringArrToInt16Option(m, f) }
func (m Int16Option) MapIntArr(f func(int16) []int) IntArrOption { return MapIntArrToInt16Option(m, f) }
func (m Int16Option) MapInt8Arr(f func(int16) []int8) Int8ArrOption { return MapInt8ArrToInt16Option(m, f) }
func (m Int16Option) MapInt16Arr(f func(int16) []int16) Int16ArrOption { return MapInt16ArrToInt16Option(m, f) }
func (m Int16Option) MapInt32Arr(f func(int16) []int32) Int32ArrOption { return MapInt32ArrToInt16Option(m, f) }
func (m Int16Option) MapInt64Arr(f func(int16) []int64) Int64ArrOption { return MapInt64ArrToInt16Option(m, f) }
func (m Int16Option) MapUintArr(f func(int16) []uint) UintArrOption { return MapUintArrToInt16Option(m, f) }
func (m Int16Option) MapUint8Arr(f func(int16) []uint8) Uint8ArrOption { return MapUint8ArrToInt16Option(m, f) }
func (m Int16Option) MapUint16Arr(f func(int16) []uint16) Uint16ArrOption { return MapUint16ArrToInt16Option(m, f) }
func (m Int16Option) MapUint32Arr(f func(int16) []uint32) Uint32ArrOption { return MapUint32ArrToInt16Option(m, f) }
func (m Int16Option) MapUint64Arr(f func(int16) []uint64) Uint64ArrOption { return MapUint64ArrToInt16Option(m, f) }
func (m Int16Option) MapUintptrArr(f func(int16) []uintptr) UintptrArrOption { return MapUintptrArrToInt16Option(m, f) }
func (m Int16Option) MapByteArr(f func(int16) []byte) ByteArrOption { return MapByteArrToInt16Option(m, f) }
func (m Int16Option) MapRuneArr(f func(int16) []rune) RuneArrOption { return MapRuneArrToInt16Option(m, f) }
func (m Int16Option) MapFloat32Arr(f func(int16) []float32) Float32ArrOption { return MapFloat32ArrToInt16Option(m, f) }
func (m Int16Option) MapFloat64Arr(f func(int16) []float64) Float64ArrOption { return MapFloat64ArrToInt16Option(m, f) }
func (m Int16Option) MapComplex64Arr(f func(int16) []complex64) Complex64ArrOption { return MapComplex64ArrToInt16Option(m, f) }
func (m Int16Option) MapComplex128Arr(f func(int16) []complex128) Complex128ArrOption { return MapComplex128ArrToInt16Option(m, f) }
func (m Int16Option) MapAnyArr(f func(int16) []Any) AnyArrOption { return MapAnyArrToInt16Option(m, f) }
func (m Int16Option) MapBoolList(f func(int16) BoolList) BoolListOption { return MapBoolListToInt16Option(m, f) }
func (m Int16Option) MapStringList(f func(int16) StringList) StringListOption { return MapStringListToInt16Option(m, f) }
func (m Int16Option) MapIntList(f func(int16) IntList) IntListOption { return MapIntListToInt16Option(m, f) }
func (m Int16Option) MapInt8List(f func(int16) Int8List) Int8ListOption { return MapInt8ListToInt16Option(m, f) }
func (m Int16Option) MapInt16List(f func(int16) Int16List) Int16ListOption { return MapInt16ListToInt16Option(m, f) }
func (m Int16Option) MapInt32List(f func(int16) Int32List) Int32ListOption { return MapInt32ListToInt16Option(m, f) }
func (m Int16Option) MapInt64List(f func(int16) Int64List) Int64ListOption { return MapInt64ListToInt16Option(m, f) }
func (m Int16Option) MapUintList(f func(int16) UintList) UintListOption { return MapUintListToInt16Option(m, f) }
func (m Int16Option) MapUint8List(f func(int16) Uint8List) Uint8ListOption { return MapUint8ListToInt16Option(m, f) }
func (m Int16Option) MapUint16List(f func(int16) Uint16List) Uint16ListOption { return MapUint16ListToInt16Option(m, f) }
func (m Int16Option) MapUint32List(f func(int16) Uint32List) Uint32ListOption { return MapUint32ListToInt16Option(m, f) }
func (m Int16Option) MapUint64List(f func(int16) Uint64List) Uint64ListOption { return MapUint64ListToInt16Option(m, f) }
func (m Int16Option) MapUintptrList(f func(int16) UintptrList) UintptrListOption { return MapUintptrListToInt16Option(m, f) }
func (m Int16Option) MapByteList(f func(int16) ByteList) ByteListOption { return MapByteListToInt16Option(m, f) }
func (m Int16Option) MapRuneList(f func(int16) RuneList) RuneListOption { return MapRuneListToInt16Option(m, f) }
func (m Int16Option) MapFloat32List(f func(int16) Float32List) Float32ListOption { return MapFloat32ListToInt16Option(m, f) }
func (m Int16Option) MapFloat64List(f func(int16) Float64List) Float64ListOption { return MapFloat64ListToInt16Option(m, f) }
func (m Int16Option) MapComplex64List(f func(int16) Complex64List) Complex64ListOption { return MapComplex64ListToInt16Option(m, f) }
func (m Int16Option) MapComplex128List(f func(int16) Complex128List) Complex128ListOption { return MapComplex128ListToInt16Option(m, f) }
func (m Int16Option) MapAnyList(f func(int16) AnyList) AnyListOption { return MapAnyListToInt16Option(m, f) }
func (m Int32Option) MapBool(f func(int32) bool) BoolOption { return MapBoolToInt32Option(m, f) }
func (m Int32Option) MapString(f func(int32) string) StringOption { return MapStringToInt32Option(m, f) }
func (m Int32Option) MapInt(f func(int32) int) IntOption { return MapIntToInt32Option(m, f) }
func (m Int32Option) MapInt8(f func(int32) int8) Int8Option { return MapInt8ToInt32Option(m, f) }
func (m Int32Option) MapInt16(f func(int32) int16) Int16Option { return MapInt16ToInt32Option(m, f) }
func (m Int32Option) MapInt32(f func(int32) int32) Int32Option { return MapInt32ToInt32Option(m, f) }
func (m Int32Option) MapInt64(f func(int32) int64) Int64Option { return MapInt64ToInt32Option(m, f) }
func (m Int32Option) MapUint(f func(int32) uint) UintOption { return MapUintToInt32Option(m, f) }
func (m Int32Option) MapUint8(f func(int32) uint8) Uint8Option { return MapUint8ToInt32Option(m, f) }
func (m Int32Option) MapUint16(f func(int32) uint16) Uint16Option { return MapUint16ToInt32Option(m, f) }
func (m Int32Option) MapUint32(f func(int32) uint32) Uint32Option { return MapUint32ToInt32Option(m, f) }
func (m Int32Option) MapUint64(f func(int32) uint64) Uint64Option { return MapUint64ToInt32Option(m, f) }
func (m Int32Option) MapUintptr(f func(int32) uintptr) UintptrOption { return MapUintptrToInt32Option(m, f) }
func (m Int32Option) MapByte(f func(int32) byte) ByteOption { return MapByteToInt32Option(m, f) }
func (m Int32Option) MapRune(f func(int32) rune) RuneOption { return MapRuneToInt32Option(m, f) }
func (m Int32Option) MapFloat32(f func(int32) float32) Float32Option { return MapFloat32ToInt32Option(m, f) }
func (m Int32Option) MapFloat64(f func(int32) float64) Float64Option { return MapFloat64ToInt32Option(m, f) }
func (m Int32Option) MapComplex64(f func(int32) complex64) Complex64Option { return MapComplex64ToInt32Option(m, f) }
func (m Int32Option) MapComplex128(f func(int32) complex128) Complex128Option { return MapComplex128ToInt32Option(m, f) }
func (m Int32Option) MapAny(f func(int32) Any) AnyOption { return MapAnyToInt32Option(m, f) }
func (m Int32Option) MapBoolOption(f func(int32) BoolOption) BoolOptionOption { return MapBoolOptionToInt32Option(m, f) }
func (m Int32Option) MapStringOption(f func(int32) StringOption) StringOptionOption { return MapStringOptionToInt32Option(m, f) }
func (m Int32Option) MapIntOption(f func(int32) IntOption) IntOptionOption { return MapIntOptionToInt32Option(m, f) }
func (m Int32Option) MapInt8Option(f func(int32) Int8Option) Int8OptionOption { return MapInt8OptionToInt32Option(m, f) }
func (m Int32Option) MapInt16Option(f func(int32) Int16Option) Int16OptionOption { return MapInt16OptionToInt32Option(m, f) }
func (m Int32Option) MapInt32Option(f func(int32) Int32Option) Int32OptionOption { return MapInt32OptionToInt32Option(m, f) }
func (m Int32Option) MapInt64Option(f func(int32) Int64Option) Int64OptionOption { return MapInt64OptionToInt32Option(m, f) }
func (m Int32Option) MapUintOption(f func(int32) UintOption) UintOptionOption { return MapUintOptionToInt32Option(m, f) }
func (m Int32Option) MapUint8Option(f func(int32) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt32Option(m, f) }
func (m Int32Option) MapUint16Option(f func(int32) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt32Option(m, f) }
func (m Int32Option) MapUint32Option(f func(int32) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt32Option(m, f) }
func (m Int32Option) MapUint64Option(f func(int32) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt32Option(m, f) }
func (m Int32Option) MapUintptrOption(f func(int32) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt32Option(m, f) }
func (m Int32Option) MapByteOption(f func(int32) ByteOption) ByteOptionOption { return MapByteOptionToInt32Option(m, f) }
func (m Int32Option) MapRuneOption(f func(int32) RuneOption) RuneOptionOption { return MapRuneOptionToInt32Option(m, f) }
func (m Int32Option) MapFloat32Option(f func(int32) Float32Option) Float32OptionOption { return MapFloat32OptionToInt32Option(m, f) }
func (m Int32Option) MapFloat64Option(f func(int32) Float64Option) Float64OptionOption { return MapFloat64OptionToInt32Option(m, f) }
func (m Int32Option) MapComplex64Option(f func(int32) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt32Option(m, f) }
func (m Int32Option) MapComplex128Option(f func(int32) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt32Option(m, f) }
func (m Int32Option) MapAnyOption(f func(int32) AnyOption) AnyOptionOption { return MapAnyOptionToInt32Option(m, f) }
func (m Int32Option) MapBoolArr(f func(int32) []bool) BoolArrOption { return MapBoolArrToInt32Option(m, f) }
func (m Int32Option) MapStringArr(f func(int32) []string) StringArrOption { return MapStringArrToInt32Option(m, f) }
func (m Int32Option) MapIntArr(f func(int32) []int) IntArrOption { return MapIntArrToInt32Option(m, f) }
func (m Int32Option) MapInt8Arr(f func(int32) []int8) Int8ArrOption { return MapInt8ArrToInt32Option(m, f) }
func (m Int32Option) MapInt16Arr(f func(int32) []int16) Int16ArrOption { return MapInt16ArrToInt32Option(m, f) }
func (m Int32Option) MapInt32Arr(f func(int32) []int32) Int32ArrOption { return MapInt32ArrToInt32Option(m, f) }
func (m Int32Option) MapInt64Arr(f func(int32) []int64) Int64ArrOption { return MapInt64ArrToInt32Option(m, f) }
func (m Int32Option) MapUintArr(f func(int32) []uint) UintArrOption { return MapUintArrToInt32Option(m, f) }
func (m Int32Option) MapUint8Arr(f func(int32) []uint8) Uint8ArrOption { return MapUint8ArrToInt32Option(m, f) }
func (m Int32Option) MapUint16Arr(f func(int32) []uint16) Uint16ArrOption { return MapUint16ArrToInt32Option(m, f) }
func (m Int32Option) MapUint32Arr(f func(int32) []uint32) Uint32ArrOption { return MapUint32ArrToInt32Option(m, f) }
func (m Int32Option) MapUint64Arr(f func(int32) []uint64) Uint64ArrOption { return MapUint64ArrToInt32Option(m, f) }
func (m Int32Option) MapUintptrArr(f func(int32) []uintptr) UintptrArrOption { return MapUintptrArrToInt32Option(m, f) }
func (m Int32Option) MapByteArr(f func(int32) []byte) ByteArrOption { return MapByteArrToInt32Option(m, f) }
func (m Int32Option) MapRuneArr(f func(int32) []rune) RuneArrOption { return MapRuneArrToInt32Option(m, f) }
func (m Int32Option) MapFloat32Arr(f func(int32) []float32) Float32ArrOption { return MapFloat32ArrToInt32Option(m, f) }
func (m Int32Option) MapFloat64Arr(f func(int32) []float64) Float64ArrOption { return MapFloat64ArrToInt32Option(m, f) }
func (m Int32Option) MapComplex64Arr(f func(int32) []complex64) Complex64ArrOption { return MapComplex64ArrToInt32Option(m, f) }
func (m Int32Option) MapComplex128Arr(f func(int32) []complex128) Complex128ArrOption { return MapComplex128ArrToInt32Option(m, f) }
func (m Int32Option) MapAnyArr(f func(int32) []Any) AnyArrOption { return MapAnyArrToInt32Option(m, f) }
func (m Int32Option) MapBoolList(f func(int32) BoolList) BoolListOption { return MapBoolListToInt32Option(m, f) }
func (m Int32Option) MapStringList(f func(int32) StringList) StringListOption { return MapStringListToInt32Option(m, f) }
func (m Int32Option) MapIntList(f func(int32) IntList) IntListOption { return MapIntListToInt32Option(m, f) }
func (m Int32Option) MapInt8List(f func(int32) Int8List) Int8ListOption { return MapInt8ListToInt32Option(m, f) }
func (m Int32Option) MapInt16List(f func(int32) Int16List) Int16ListOption { return MapInt16ListToInt32Option(m, f) }
func (m Int32Option) MapInt32List(f func(int32) Int32List) Int32ListOption { return MapInt32ListToInt32Option(m, f) }
func (m Int32Option) MapInt64List(f func(int32) Int64List) Int64ListOption { return MapInt64ListToInt32Option(m, f) }
func (m Int32Option) MapUintList(f func(int32) UintList) UintListOption { return MapUintListToInt32Option(m, f) }
func (m Int32Option) MapUint8List(f func(int32) Uint8List) Uint8ListOption { return MapUint8ListToInt32Option(m, f) }
func (m Int32Option) MapUint16List(f func(int32) Uint16List) Uint16ListOption { return MapUint16ListToInt32Option(m, f) }
func (m Int32Option) MapUint32List(f func(int32) Uint32List) Uint32ListOption { return MapUint32ListToInt32Option(m, f) }
func (m Int32Option) MapUint64List(f func(int32) Uint64List) Uint64ListOption { return MapUint64ListToInt32Option(m, f) }
func (m Int32Option) MapUintptrList(f func(int32) UintptrList) UintptrListOption { return MapUintptrListToInt32Option(m, f) }
func (m Int32Option) MapByteList(f func(int32) ByteList) ByteListOption { return MapByteListToInt32Option(m, f) }
func (m Int32Option) MapRuneList(f func(int32) RuneList) RuneListOption { return MapRuneListToInt32Option(m, f) }
func (m Int32Option) MapFloat32List(f func(int32) Float32List) Float32ListOption { return MapFloat32ListToInt32Option(m, f) }
func (m Int32Option) MapFloat64List(f func(int32) Float64List) Float64ListOption { return MapFloat64ListToInt32Option(m, f) }
func (m Int32Option) MapComplex64List(f func(int32) Complex64List) Complex64ListOption { return MapComplex64ListToInt32Option(m, f) }
func (m Int32Option) MapComplex128List(f func(int32) Complex128List) Complex128ListOption { return MapComplex128ListToInt32Option(m, f) }
func (m Int32Option) MapAnyList(f func(int32) AnyList) AnyListOption { return MapAnyListToInt32Option(m, f) }
func (m Int64Option) MapBool(f func(int64) bool) BoolOption { return MapBoolToInt64Option(m, f) }
func (m Int64Option) MapString(f func(int64) string) StringOption { return MapStringToInt64Option(m, f) }
func (m Int64Option) MapInt(f func(int64) int) IntOption { return MapIntToInt64Option(m, f) }
func (m Int64Option) MapInt8(f func(int64) int8) Int8Option { return MapInt8ToInt64Option(m, f) }
func (m Int64Option) MapInt16(f func(int64) int16) Int16Option { return MapInt16ToInt64Option(m, f) }
func (m Int64Option) MapInt32(f func(int64) int32) Int32Option { return MapInt32ToInt64Option(m, f) }
func (m Int64Option) MapInt64(f func(int64) int64) Int64Option { return MapInt64ToInt64Option(m, f) }
func (m Int64Option) MapUint(f func(int64) uint) UintOption { return MapUintToInt64Option(m, f) }
func (m Int64Option) MapUint8(f func(int64) uint8) Uint8Option { return MapUint8ToInt64Option(m, f) }
func (m Int64Option) MapUint16(f func(int64) uint16) Uint16Option { return MapUint16ToInt64Option(m, f) }
func (m Int64Option) MapUint32(f func(int64) uint32) Uint32Option { return MapUint32ToInt64Option(m, f) }
func (m Int64Option) MapUint64(f func(int64) uint64) Uint64Option { return MapUint64ToInt64Option(m, f) }
func (m Int64Option) MapUintptr(f func(int64) uintptr) UintptrOption { return MapUintptrToInt64Option(m, f) }
func (m Int64Option) MapByte(f func(int64) byte) ByteOption { return MapByteToInt64Option(m, f) }
func (m Int64Option) MapRune(f func(int64) rune) RuneOption { return MapRuneToInt64Option(m, f) }
func (m Int64Option) MapFloat32(f func(int64) float32) Float32Option { return MapFloat32ToInt64Option(m, f) }
func (m Int64Option) MapFloat64(f func(int64) float64) Float64Option { return MapFloat64ToInt64Option(m, f) }
func (m Int64Option) MapComplex64(f func(int64) complex64) Complex64Option { return MapComplex64ToInt64Option(m, f) }
func (m Int64Option) MapComplex128(f func(int64) complex128) Complex128Option { return MapComplex128ToInt64Option(m, f) }
func (m Int64Option) MapAny(f func(int64) Any) AnyOption { return MapAnyToInt64Option(m, f) }
func (m Int64Option) MapBoolOption(f func(int64) BoolOption) BoolOptionOption { return MapBoolOptionToInt64Option(m, f) }
func (m Int64Option) MapStringOption(f func(int64) StringOption) StringOptionOption { return MapStringOptionToInt64Option(m, f) }
func (m Int64Option) MapIntOption(f func(int64) IntOption) IntOptionOption { return MapIntOptionToInt64Option(m, f) }
func (m Int64Option) MapInt8Option(f func(int64) Int8Option) Int8OptionOption { return MapInt8OptionToInt64Option(m, f) }
func (m Int64Option) MapInt16Option(f func(int64) Int16Option) Int16OptionOption { return MapInt16OptionToInt64Option(m, f) }
func (m Int64Option) MapInt32Option(f func(int64) Int32Option) Int32OptionOption { return MapInt32OptionToInt64Option(m, f) }
func (m Int64Option) MapInt64Option(f func(int64) Int64Option) Int64OptionOption { return MapInt64OptionToInt64Option(m, f) }
func (m Int64Option) MapUintOption(f func(int64) UintOption) UintOptionOption { return MapUintOptionToInt64Option(m, f) }
func (m Int64Option) MapUint8Option(f func(int64) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt64Option(m, f) }
func (m Int64Option) MapUint16Option(f func(int64) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt64Option(m, f) }
func (m Int64Option) MapUint32Option(f func(int64) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt64Option(m, f) }
func (m Int64Option) MapUint64Option(f func(int64) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt64Option(m, f) }
func (m Int64Option) MapUintptrOption(f func(int64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt64Option(m, f) }
func (m Int64Option) MapByteOption(f func(int64) ByteOption) ByteOptionOption { return MapByteOptionToInt64Option(m, f) }
func (m Int64Option) MapRuneOption(f func(int64) RuneOption) RuneOptionOption { return MapRuneOptionToInt64Option(m, f) }
func (m Int64Option) MapFloat32Option(f func(int64) Float32Option) Float32OptionOption { return MapFloat32OptionToInt64Option(m, f) }
func (m Int64Option) MapFloat64Option(f func(int64) Float64Option) Float64OptionOption { return MapFloat64OptionToInt64Option(m, f) }
func (m Int64Option) MapComplex64Option(f func(int64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt64Option(m, f) }
func (m Int64Option) MapComplex128Option(f func(int64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt64Option(m, f) }
func (m Int64Option) MapAnyOption(f func(int64) AnyOption) AnyOptionOption { return MapAnyOptionToInt64Option(m, f) }
func (m Int64Option) MapBoolArr(f func(int64) []bool) BoolArrOption { return MapBoolArrToInt64Option(m, f) }
func (m Int64Option) MapStringArr(f func(int64) []string) StringArrOption { return MapStringArrToInt64Option(m, f) }
func (m Int64Option) MapIntArr(f func(int64) []int) IntArrOption { return MapIntArrToInt64Option(m, f) }
func (m Int64Option) MapInt8Arr(f func(int64) []int8) Int8ArrOption { return MapInt8ArrToInt64Option(m, f) }
func (m Int64Option) MapInt16Arr(f func(int64) []int16) Int16ArrOption { return MapInt16ArrToInt64Option(m, f) }
func (m Int64Option) MapInt32Arr(f func(int64) []int32) Int32ArrOption { return MapInt32ArrToInt64Option(m, f) }
func (m Int64Option) MapInt64Arr(f func(int64) []int64) Int64ArrOption { return MapInt64ArrToInt64Option(m, f) }
func (m Int64Option) MapUintArr(f func(int64) []uint) UintArrOption { return MapUintArrToInt64Option(m, f) }
func (m Int64Option) MapUint8Arr(f func(int64) []uint8) Uint8ArrOption { return MapUint8ArrToInt64Option(m, f) }
func (m Int64Option) MapUint16Arr(f func(int64) []uint16) Uint16ArrOption { return MapUint16ArrToInt64Option(m, f) }
func (m Int64Option) MapUint32Arr(f func(int64) []uint32) Uint32ArrOption { return MapUint32ArrToInt64Option(m, f) }
func (m Int64Option) MapUint64Arr(f func(int64) []uint64) Uint64ArrOption { return MapUint64ArrToInt64Option(m, f) }
func (m Int64Option) MapUintptrArr(f func(int64) []uintptr) UintptrArrOption { return MapUintptrArrToInt64Option(m, f) }
func (m Int64Option) MapByteArr(f func(int64) []byte) ByteArrOption { return MapByteArrToInt64Option(m, f) }
func (m Int64Option) MapRuneArr(f func(int64) []rune) RuneArrOption { return MapRuneArrToInt64Option(m, f) }
func (m Int64Option) MapFloat32Arr(f func(int64) []float32) Float32ArrOption { return MapFloat32ArrToInt64Option(m, f) }
func (m Int64Option) MapFloat64Arr(f func(int64) []float64) Float64ArrOption { return MapFloat64ArrToInt64Option(m, f) }
func (m Int64Option) MapComplex64Arr(f func(int64) []complex64) Complex64ArrOption { return MapComplex64ArrToInt64Option(m, f) }
func (m Int64Option) MapComplex128Arr(f func(int64) []complex128) Complex128ArrOption { return MapComplex128ArrToInt64Option(m, f) }
func (m Int64Option) MapAnyArr(f func(int64) []Any) AnyArrOption { return MapAnyArrToInt64Option(m, f) }
func (m Int64Option) MapBoolList(f func(int64) BoolList) BoolListOption { return MapBoolListToInt64Option(m, f) }
func (m Int64Option) MapStringList(f func(int64) StringList) StringListOption { return MapStringListToInt64Option(m, f) }
func (m Int64Option) MapIntList(f func(int64) IntList) IntListOption { return MapIntListToInt64Option(m, f) }
func (m Int64Option) MapInt8List(f func(int64) Int8List) Int8ListOption { return MapInt8ListToInt64Option(m, f) }
func (m Int64Option) MapInt16List(f func(int64) Int16List) Int16ListOption { return MapInt16ListToInt64Option(m, f) }
func (m Int64Option) MapInt32List(f func(int64) Int32List) Int32ListOption { return MapInt32ListToInt64Option(m, f) }
func (m Int64Option) MapInt64List(f func(int64) Int64List) Int64ListOption { return MapInt64ListToInt64Option(m, f) }
func (m Int64Option) MapUintList(f func(int64) UintList) UintListOption { return MapUintListToInt64Option(m, f) }
func (m Int64Option) MapUint8List(f func(int64) Uint8List) Uint8ListOption { return MapUint8ListToInt64Option(m, f) }
func (m Int64Option) MapUint16List(f func(int64) Uint16List) Uint16ListOption { return MapUint16ListToInt64Option(m, f) }
func (m Int64Option) MapUint32List(f func(int64) Uint32List) Uint32ListOption { return MapUint32ListToInt64Option(m, f) }
func (m Int64Option) MapUint64List(f func(int64) Uint64List) Uint64ListOption { return MapUint64ListToInt64Option(m, f) }
func (m Int64Option) MapUintptrList(f func(int64) UintptrList) UintptrListOption { return MapUintptrListToInt64Option(m, f) }
func (m Int64Option) MapByteList(f func(int64) ByteList) ByteListOption { return MapByteListToInt64Option(m, f) }
func (m Int64Option) MapRuneList(f func(int64) RuneList) RuneListOption { return MapRuneListToInt64Option(m, f) }
func (m Int64Option) MapFloat32List(f func(int64) Float32List) Float32ListOption { return MapFloat32ListToInt64Option(m, f) }
func (m Int64Option) MapFloat64List(f func(int64) Float64List) Float64ListOption { return MapFloat64ListToInt64Option(m, f) }
func (m Int64Option) MapComplex64List(f func(int64) Complex64List) Complex64ListOption { return MapComplex64ListToInt64Option(m, f) }
func (m Int64Option) MapComplex128List(f func(int64) Complex128List) Complex128ListOption { return MapComplex128ListToInt64Option(m, f) }
func (m Int64Option) MapAnyList(f func(int64) AnyList) AnyListOption { return MapAnyListToInt64Option(m, f) }
func (m UintOption) MapBool(f func(uint) bool) BoolOption { return MapBoolToUintOption(m, f) }
func (m UintOption) MapString(f func(uint) string) StringOption { return MapStringToUintOption(m, f) }
func (m UintOption) MapInt(f func(uint) int) IntOption { return MapIntToUintOption(m, f) }
func (m UintOption) MapInt8(f func(uint) int8) Int8Option { return MapInt8ToUintOption(m, f) }
func (m UintOption) MapInt16(f func(uint) int16) Int16Option { return MapInt16ToUintOption(m, f) }
func (m UintOption) MapInt32(f func(uint) int32) Int32Option { return MapInt32ToUintOption(m, f) }
func (m UintOption) MapInt64(f func(uint) int64) Int64Option { return MapInt64ToUintOption(m, f) }
func (m UintOption) MapUint(f func(uint) uint) UintOption { return MapUintToUintOption(m, f) }
func (m UintOption) MapUint8(f func(uint) uint8) Uint8Option { return MapUint8ToUintOption(m, f) }
func (m UintOption) MapUint16(f func(uint) uint16) Uint16Option { return MapUint16ToUintOption(m, f) }
func (m UintOption) MapUint32(f func(uint) uint32) Uint32Option { return MapUint32ToUintOption(m, f) }
func (m UintOption) MapUint64(f func(uint) uint64) Uint64Option { return MapUint64ToUintOption(m, f) }
func (m UintOption) MapUintptr(f func(uint) uintptr) UintptrOption { return MapUintptrToUintOption(m, f) }
func (m UintOption) MapByte(f func(uint) byte) ByteOption { return MapByteToUintOption(m, f) }
func (m UintOption) MapRune(f func(uint) rune) RuneOption { return MapRuneToUintOption(m, f) }
func (m UintOption) MapFloat32(f func(uint) float32) Float32Option { return MapFloat32ToUintOption(m, f) }
func (m UintOption) MapFloat64(f func(uint) float64) Float64Option { return MapFloat64ToUintOption(m, f) }
func (m UintOption) MapComplex64(f func(uint) complex64) Complex64Option { return MapComplex64ToUintOption(m, f) }
func (m UintOption) MapComplex128(f func(uint) complex128) Complex128Option { return MapComplex128ToUintOption(m, f) }
func (m UintOption) MapAny(f func(uint) Any) AnyOption { return MapAnyToUintOption(m, f) }
func (m UintOption) MapBoolOption(f func(uint) BoolOption) BoolOptionOption { return MapBoolOptionToUintOption(m, f) }
func (m UintOption) MapStringOption(f func(uint) StringOption) StringOptionOption { return MapStringOptionToUintOption(m, f) }
func (m UintOption) MapIntOption(f func(uint) IntOption) IntOptionOption { return MapIntOptionToUintOption(m, f) }
func (m UintOption) MapInt8Option(f func(uint) Int8Option) Int8OptionOption { return MapInt8OptionToUintOption(m, f) }
func (m UintOption) MapInt16Option(f func(uint) Int16Option) Int16OptionOption { return MapInt16OptionToUintOption(m, f) }
func (m UintOption) MapInt32Option(f func(uint) Int32Option) Int32OptionOption { return MapInt32OptionToUintOption(m, f) }
func (m UintOption) MapInt64Option(f func(uint) Int64Option) Int64OptionOption { return MapInt64OptionToUintOption(m, f) }
func (m UintOption) MapUintOption(f func(uint) UintOption) UintOptionOption { return MapUintOptionToUintOption(m, f) }
func (m UintOption) MapUint8Option(f func(uint) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintOption(m, f) }
func (m UintOption) MapUint16Option(f func(uint) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintOption(m, f) }
func (m UintOption) MapUint32Option(f func(uint) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintOption(m, f) }
func (m UintOption) MapUint64Option(f func(uint) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintOption(m, f) }
func (m UintOption) MapUintptrOption(f func(uint) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintOption(m, f) }
func (m UintOption) MapByteOption(f func(uint) ByteOption) ByteOptionOption { return MapByteOptionToUintOption(m, f) }
func (m UintOption) MapRuneOption(f func(uint) RuneOption) RuneOptionOption { return MapRuneOptionToUintOption(m, f) }
func (m UintOption) MapFloat32Option(f func(uint) Float32Option) Float32OptionOption { return MapFloat32OptionToUintOption(m, f) }
func (m UintOption) MapFloat64Option(f func(uint) Float64Option) Float64OptionOption { return MapFloat64OptionToUintOption(m, f) }
func (m UintOption) MapComplex64Option(f func(uint) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintOption(m, f) }
func (m UintOption) MapComplex128Option(f func(uint) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintOption(m, f) }
func (m UintOption) MapAnyOption(f func(uint) AnyOption) AnyOptionOption { return MapAnyOptionToUintOption(m, f) }
func (m UintOption) MapBoolArr(f func(uint) []bool) BoolArrOption { return MapBoolArrToUintOption(m, f) }
func (m UintOption) MapStringArr(f func(uint) []string) StringArrOption { return MapStringArrToUintOption(m, f) }
func (m UintOption) MapIntArr(f func(uint) []int) IntArrOption { return MapIntArrToUintOption(m, f) }
func (m UintOption) MapInt8Arr(f func(uint) []int8) Int8ArrOption { return MapInt8ArrToUintOption(m, f) }
func (m UintOption) MapInt16Arr(f func(uint) []int16) Int16ArrOption { return MapInt16ArrToUintOption(m, f) }
func (m UintOption) MapInt32Arr(f func(uint) []int32) Int32ArrOption { return MapInt32ArrToUintOption(m, f) }
func (m UintOption) MapInt64Arr(f func(uint) []int64) Int64ArrOption { return MapInt64ArrToUintOption(m, f) }
func (m UintOption) MapUintArr(f func(uint) []uint) UintArrOption { return MapUintArrToUintOption(m, f) }
func (m UintOption) MapUint8Arr(f func(uint) []uint8) Uint8ArrOption { return MapUint8ArrToUintOption(m, f) }
func (m UintOption) MapUint16Arr(f func(uint) []uint16) Uint16ArrOption { return MapUint16ArrToUintOption(m, f) }
func (m UintOption) MapUint32Arr(f func(uint) []uint32) Uint32ArrOption { return MapUint32ArrToUintOption(m, f) }
func (m UintOption) MapUint64Arr(f func(uint) []uint64) Uint64ArrOption { return MapUint64ArrToUintOption(m, f) }
func (m UintOption) MapUintptrArr(f func(uint) []uintptr) UintptrArrOption { return MapUintptrArrToUintOption(m, f) }
func (m UintOption) MapByteArr(f func(uint) []byte) ByteArrOption { return MapByteArrToUintOption(m, f) }
func (m UintOption) MapRuneArr(f func(uint) []rune) RuneArrOption { return MapRuneArrToUintOption(m, f) }
func (m UintOption) MapFloat32Arr(f func(uint) []float32) Float32ArrOption { return MapFloat32ArrToUintOption(m, f) }
func (m UintOption) MapFloat64Arr(f func(uint) []float64) Float64ArrOption { return MapFloat64ArrToUintOption(m, f) }
func (m UintOption) MapComplex64Arr(f func(uint) []complex64) Complex64ArrOption { return MapComplex64ArrToUintOption(m, f) }
func (m UintOption) MapComplex128Arr(f func(uint) []complex128) Complex128ArrOption { return MapComplex128ArrToUintOption(m, f) }
func (m UintOption) MapAnyArr(f func(uint) []Any) AnyArrOption { return MapAnyArrToUintOption(m, f) }
func (m UintOption) MapBoolList(f func(uint) BoolList) BoolListOption { return MapBoolListToUintOption(m, f) }
func (m UintOption) MapStringList(f func(uint) StringList) StringListOption { return MapStringListToUintOption(m, f) }
func (m UintOption) MapIntList(f func(uint) IntList) IntListOption { return MapIntListToUintOption(m, f) }
func (m UintOption) MapInt8List(f func(uint) Int8List) Int8ListOption { return MapInt8ListToUintOption(m, f) }
func (m UintOption) MapInt16List(f func(uint) Int16List) Int16ListOption { return MapInt16ListToUintOption(m, f) }
func (m UintOption) MapInt32List(f func(uint) Int32List) Int32ListOption { return MapInt32ListToUintOption(m, f) }
func (m UintOption) MapInt64List(f func(uint) Int64List) Int64ListOption { return MapInt64ListToUintOption(m, f) }
func (m UintOption) MapUintList(f func(uint) UintList) UintListOption { return MapUintListToUintOption(m, f) }
func (m UintOption) MapUint8List(f func(uint) Uint8List) Uint8ListOption { return MapUint8ListToUintOption(m, f) }
func (m UintOption) MapUint16List(f func(uint) Uint16List) Uint16ListOption { return MapUint16ListToUintOption(m, f) }
func (m UintOption) MapUint32List(f func(uint) Uint32List) Uint32ListOption { return MapUint32ListToUintOption(m, f) }
func (m UintOption) MapUint64List(f func(uint) Uint64List) Uint64ListOption { return MapUint64ListToUintOption(m, f) }
func (m UintOption) MapUintptrList(f func(uint) UintptrList) UintptrListOption { return MapUintptrListToUintOption(m, f) }
func (m UintOption) MapByteList(f func(uint) ByteList) ByteListOption { return MapByteListToUintOption(m, f) }
func (m UintOption) MapRuneList(f func(uint) RuneList) RuneListOption { return MapRuneListToUintOption(m, f) }
func (m UintOption) MapFloat32List(f func(uint) Float32List) Float32ListOption { return MapFloat32ListToUintOption(m, f) }
func (m UintOption) MapFloat64List(f func(uint) Float64List) Float64ListOption { return MapFloat64ListToUintOption(m, f) }
func (m UintOption) MapComplex64List(f func(uint) Complex64List) Complex64ListOption { return MapComplex64ListToUintOption(m, f) }
func (m UintOption) MapComplex128List(f func(uint) Complex128List) Complex128ListOption { return MapComplex128ListToUintOption(m, f) }
func (m UintOption) MapAnyList(f func(uint) AnyList) AnyListOption { return MapAnyListToUintOption(m, f) }
func (m Uint8Option) MapBool(f func(uint8) bool) BoolOption { return MapBoolToUint8Option(m, f) }
func (m Uint8Option) MapString(f func(uint8) string) StringOption { return MapStringToUint8Option(m, f) }
func (m Uint8Option) MapInt(f func(uint8) int) IntOption { return MapIntToUint8Option(m, f) }
func (m Uint8Option) MapInt8(f func(uint8) int8) Int8Option { return MapInt8ToUint8Option(m, f) }
func (m Uint8Option) MapInt16(f func(uint8) int16) Int16Option { return MapInt16ToUint8Option(m, f) }
func (m Uint8Option) MapInt32(f func(uint8) int32) Int32Option { return MapInt32ToUint8Option(m, f) }
func (m Uint8Option) MapInt64(f func(uint8) int64) Int64Option { return MapInt64ToUint8Option(m, f) }
func (m Uint8Option) MapUint(f func(uint8) uint) UintOption { return MapUintToUint8Option(m, f) }
func (m Uint8Option) MapUint8(f func(uint8) uint8) Uint8Option { return MapUint8ToUint8Option(m, f) }
func (m Uint8Option) MapUint16(f func(uint8) uint16) Uint16Option { return MapUint16ToUint8Option(m, f) }
func (m Uint8Option) MapUint32(f func(uint8) uint32) Uint32Option { return MapUint32ToUint8Option(m, f) }
func (m Uint8Option) MapUint64(f func(uint8) uint64) Uint64Option { return MapUint64ToUint8Option(m, f) }
func (m Uint8Option) MapUintptr(f func(uint8) uintptr) UintptrOption { return MapUintptrToUint8Option(m, f) }
func (m Uint8Option) MapByte(f func(uint8) byte) ByteOption { return MapByteToUint8Option(m, f) }
func (m Uint8Option) MapRune(f func(uint8) rune) RuneOption { return MapRuneToUint8Option(m, f) }
func (m Uint8Option) MapFloat32(f func(uint8) float32) Float32Option { return MapFloat32ToUint8Option(m, f) }
func (m Uint8Option) MapFloat64(f func(uint8) float64) Float64Option { return MapFloat64ToUint8Option(m, f) }
func (m Uint8Option) MapComplex64(f func(uint8) complex64) Complex64Option { return MapComplex64ToUint8Option(m, f) }
func (m Uint8Option) MapComplex128(f func(uint8) complex128) Complex128Option { return MapComplex128ToUint8Option(m, f) }
func (m Uint8Option) MapAny(f func(uint8) Any) AnyOption { return MapAnyToUint8Option(m, f) }
func (m Uint8Option) MapBoolOption(f func(uint8) BoolOption) BoolOptionOption { return MapBoolOptionToUint8Option(m, f) }
func (m Uint8Option) MapStringOption(f func(uint8) StringOption) StringOptionOption { return MapStringOptionToUint8Option(m, f) }
func (m Uint8Option) MapIntOption(f func(uint8) IntOption) IntOptionOption { return MapIntOptionToUint8Option(m, f) }
func (m Uint8Option) MapInt8Option(f func(uint8) Int8Option) Int8OptionOption { return MapInt8OptionToUint8Option(m, f) }
func (m Uint8Option) MapInt16Option(f func(uint8) Int16Option) Int16OptionOption { return MapInt16OptionToUint8Option(m, f) }
func (m Uint8Option) MapInt32Option(f func(uint8) Int32Option) Int32OptionOption { return MapInt32OptionToUint8Option(m, f) }
func (m Uint8Option) MapInt64Option(f func(uint8) Int64Option) Int64OptionOption { return MapInt64OptionToUint8Option(m, f) }
func (m Uint8Option) MapUintOption(f func(uint8) UintOption) UintOptionOption { return MapUintOptionToUint8Option(m, f) }
func (m Uint8Option) MapUint8Option(f func(uint8) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint8Option(m, f) }
func (m Uint8Option) MapUint16Option(f func(uint8) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint8Option(m, f) }
func (m Uint8Option) MapUint32Option(f func(uint8) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint8Option(m, f) }
func (m Uint8Option) MapUint64Option(f func(uint8) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint8Option(m, f) }
func (m Uint8Option) MapUintptrOption(f func(uint8) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint8Option(m, f) }
func (m Uint8Option) MapByteOption(f func(uint8) ByteOption) ByteOptionOption { return MapByteOptionToUint8Option(m, f) }
func (m Uint8Option) MapRuneOption(f func(uint8) RuneOption) RuneOptionOption { return MapRuneOptionToUint8Option(m, f) }
func (m Uint8Option) MapFloat32Option(f func(uint8) Float32Option) Float32OptionOption { return MapFloat32OptionToUint8Option(m, f) }
func (m Uint8Option) MapFloat64Option(f func(uint8) Float64Option) Float64OptionOption { return MapFloat64OptionToUint8Option(m, f) }
func (m Uint8Option) MapComplex64Option(f func(uint8) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint8Option(m, f) }
func (m Uint8Option) MapComplex128Option(f func(uint8) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint8Option(m, f) }
func (m Uint8Option) MapAnyOption(f func(uint8) AnyOption) AnyOptionOption { return MapAnyOptionToUint8Option(m, f) }
func (m Uint8Option) MapBoolArr(f func(uint8) []bool) BoolArrOption { return MapBoolArrToUint8Option(m, f) }
func (m Uint8Option) MapStringArr(f func(uint8) []string) StringArrOption { return MapStringArrToUint8Option(m, f) }
func (m Uint8Option) MapIntArr(f func(uint8) []int) IntArrOption { return MapIntArrToUint8Option(m, f) }
func (m Uint8Option) MapInt8Arr(f func(uint8) []int8) Int8ArrOption { return MapInt8ArrToUint8Option(m, f) }
func (m Uint8Option) MapInt16Arr(f func(uint8) []int16) Int16ArrOption { return MapInt16ArrToUint8Option(m, f) }
func (m Uint8Option) MapInt32Arr(f func(uint8) []int32) Int32ArrOption { return MapInt32ArrToUint8Option(m, f) }
func (m Uint8Option) MapInt64Arr(f func(uint8) []int64) Int64ArrOption { return MapInt64ArrToUint8Option(m, f) }
func (m Uint8Option) MapUintArr(f func(uint8) []uint) UintArrOption { return MapUintArrToUint8Option(m, f) }
func (m Uint8Option) MapUint8Arr(f func(uint8) []uint8) Uint8ArrOption { return MapUint8ArrToUint8Option(m, f) }
func (m Uint8Option) MapUint16Arr(f func(uint8) []uint16) Uint16ArrOption { return MapUint16ArrToUint8Option(m, f) }
func (m Uint8Option) MapUint32Arr(f func(uint8) []uint32) Uint32ArrOption { return MapUint32ArrToUint8Option(m, f) }
func (m Uint8Option) MapUint64Arr(f func(uint8) []uint64) Uint64ArrOption { return MapUint64ArrToUint8Option(m, f) }
func (m Uint8Option) MapUintptrArr(f func(uint8) []uintptr) UintptrArrOption { return MapUintptrArrToUint8Option(m, f) }
func (m Uint8Option) MapByteArr(f func(uint8) []byte) ByteArrOption { return MapByteArrToUint8Option(m, f) }
func (m Uint8Option) MapRuneArr(f func(uint8) []rune) RuneArrOption { return MapRuneArrToUint8Option(m, f) }
func (m Uint8Option) MapFloat32Arr(f func(uint8) []float32) Float32ArrOption { return MapFloat32ArrToUint8Option(m, f) }
func (m Uint8Option) MapFloat64Arr(f func(uint8) []float64) Float64ArrOption { return MapFloat64ArrToUint8Option(m, f) }
func (m Uint8Option) MapComplex64Arr(f func(uint8) []complex64) Complex64ArrOption { return MapComplex64ArrToUint8Option(m, f) }
func (m Uint8Option) MapComplex128Arr(f func(uint8) []complex128) Complex128ArrOption { return MapComplex128ArrToUint8Option(m, f) }
func (m Uint8Option) MapAnyArr(f func(uint8) []Any) AnyArrOption { return MapAnyArrToUint8Option(m, f) }
func (m Uint8Option) MapBoolList(f func(uint8) BoolList) BoolListOption { return MapBoolListToUint8Option(m, f) }
func (m Uint8Option) MapStringList(f func(uint8) StringList) StringListOption { return MapStringListToUint8Option(m, f) }
func (m Uint8Option) MapIntList(f func(uint8) IntList) IntListOption { return MapIntListToUint8Option(m, f) }
func (m Uint8Option) MapInt8List(f func(uint8) Int8List) Int8ListOption { return MapInt8ListToUint8Option(m, f) }
func (m Uint8Option) MapInt16List(f func(uint8) Int16List) Int16ListOption { return MapInt16ListToUint8Option(m, f) }
func (m Uint8Option) MapInt32List(f func(uint8) Int32List) Int32ListOption { return MapInt32ListToUint8Option(m, f) }
func (m Uint8Option) MapInt64List(f func(uint8) Int64List) Int64ListOption { return MapInt64ListToUint8Option(m, f) }
func (m Uint8Option) MapUintList(f func(uint8) UintList) UintListOption { return MapUintListToUint8Option(m, f) }
func (m Uint8Option) MapUint8List(f func(uint8) Uint8List) Uint8ListOption { return MapUint8ListToUint8Option(m, f) }
func (m Uint8Option) MapUint16List(f func(uint8) Uint16List) Uint16ListOption { return MapUint16ListToUint8Option(m, f) }
func (m Uint8Option) MapUint32List(f func(uint8) Uint32List) Uint32ListOption { return MapUint32ListToUint8Option(m, f) }
func (m Uint8Option) MapUint64List(f func(uint8) Uint64List) Uint64ListOption { return MapUint64ListToUint8Option(m, f) }
func (m Uint8Option) MapUintptrList(f func(uint8) UintptrList) UintptrListOption { return MapUintptrListToUint8Option(m, f) }
func (m Uint8Option) MapByteList(f func(uint8) ByteList) ByteListOption { return MapByteListToUint8Option(m, f) }
func (m Uint8Option) MapRuneList(f func(uint8) RuneList) RuneListOption { return MapRuneListToUint8Option(m, f) }
func (m Uint8Option) MapFloat32List(f func(uint8) Float32List) Float32ListOption { return MapFloat32ListToUint8Option(m, f) }
func (m Uint8Option) MapFloat64List(f func(uint8) Float64List) Float64ListOption { return MapFloat64ListToUint8Option(m, f) }
func (m Uint8Option) MapComplex64List(f func(uint8) Complex64List) Complex64ListOption { return MapComplex64ListToUint8Option(m, f) }
func (m Uint8Option) MapComplex128List(f func(uint8) Complex128List) Complex128ListOption { return MapComplex128ListToUint8Option(m, f) }
func (m Uint8Option) MapAnyList(f func(uint8) AnyList) AnyListOption { return MapAnyListToUint8Option(m, f) }
func (m Uint16Option) MapBool(f func(uint16) bool) BoolOption { return MapBoolToUint16Option(m, f) }
func (m Uint16Option) MapString(f func(uint16) string) StringOption { return MapStringToUint16Option(m, f) }
func (m Uint16Option) MapInt(f func(uint16) int) IntOption { return MapIntToUint16Option(m, f) }
func (m Uint16Option) MapInt8(f func(uint16) int8) Int8Option { return MapInt8ToUint16Option(m, f) }
func (m Uint16Option) MapInt16(f func(uint16) int16) Int16Option { return MapInt16ToUint16Option(m, f) }
func (m Uint16Option) MapInt32(f func(uint16) int32) Int32Option { return MapInt32ToUint16Option(m, f) }
func (m Uint16Option) MapInt64(f func(uint16) int64) Int64Option { return MapInt64ToUint16Option(m, f) }
func (m Uint16Option) MapUint(f func(uint16) uint) UintOption { return MapUintToUint16Option(m, f) }
func (m Uint16Option) MapUint8(f func(uint16) uint8) Uint8Option { return MapUint8ToUint16Option(m, f) }
func (m Uint16Option) MapUint16(f func(uint16) uint16) Uint16Option { return MapUint16ToUint16Option(m, f) }
func (m Uint16Option) MapUint32(f func(uint16) uint32) Uint32Option { return MapUint32ToUint16Option(m, f) }
func (m Uint16Option) MapUint64(f func(uint16) uint64) Uint64Option { return MapUint64ToUint16Option(m, f) }
func (m Uint16Option) MapUintptr(f func(uint16) uintptr) UintptrOption { return MapUintptrToUint16Option(m, f) }
func (m Uint16Option) MapByte(f func(uint16) byte) ByteOption { return MapByteToUint16Option(m, f) }
func (m Uint16Option) MapRune(f func(uint16) rune) RuneOption { return MapRuneToUint16Option(m, f) }
func (m Uint16Option) MapFloat32(f func(uint16) float32) Float32Option { return MapFloat32ToUint16Option(m, f) }
func (m Uint16Option) MapFloat64(f func(uint16) float64) Float64Option { return MapFloat64ToUint16Option(m, f) }
func (m Uint16Option) MapComplex64(f func(uint16) complex64) Complex64Option { return MapComplex64ToUint16Option(m, f) }
func (m Uint16Option) MapComplex128(f func(uint16) complex128) Complex128Option { return MapComplex128ToUint16Option(m, f) }
func (m Uint16Option) MapAny(f func(uint16) Any) AnyOption { return MapAnyToUint16Option(m, f) }
func (m Uint16Option) MapBoolOption(f func(uint16) BoolOption) BoolOptionOption { return MapBoolOptionToUint16Option(m, f) }
func (m Uint16Option) MapStringOption(f func(uint16) StringOption) StringOptionOption { return MapStringOptionToUint16Option(m, f) }
func (m Uint16Option) MapIntOption(f func(uint16) IntOption) IntOptionOption { return MapIntOptionToUint16Option(m, f) }
func (m Uint16Option) MapInt8Option(f func(uint16) Int8Option) Int8OptionOption { return MapInt8OptionToUint16Option(m, f) }
func (m Uint16Option) MapInt16Option(f func(uint16) Int16Option) Int16OptionOption { return MapInt16OptionToUint16Option(m, f) }
func (m Uint16Option) MapInt32Option(f func(uint16) Int32Option) Int32OptionOption { return MapInt32OptionToUint16Option(m, f) }
func (m Uint16Option) MapInt64Option(f func(uint16) Int64Option) Int64OptionOption { return MapInt64OptionToUint16Option(m, f) }
func (m Uint16Option) MapUintOption(f func(uint16) UintOption) UintOptionOption { return MapUintOptionToUint16Option(m, f) }
func (m Uint16Option) MapUint8Option(f func(uint16) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint16Option(m, f) }
func (m Uint16Option) MapUint16Option(f func(uint16) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint16Option(m, f) }
func (m Uint16Option) MapUint32Option(f func(uint16) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint16Option(m, f) }
func (m Uint16Option) MapUint64Option(f func(uint16) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint16Option(m, f) }
func (m Uint16Option) MapUintptrOption(f func(uint16) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint16Option(m, f) }
func (m Uint16Option) MapByteOption(f func(uint16) ByteOption) ByteOptionOption { return MapByteOptionToUint16Option(m, f) }
func (m Uint16Option) MapRuneOption(f func(uint16) RuneOption) RuneOptionOption { return MapRuneOptionToUint16Option(m, f) }
func (m Uint16Option) MapFloat32Option(f func(uint16) Float32Option) Float32OptionOption { return MapFloat32OptionToUint16Option(m, f) }
func (m Uint16Option) MapFloat64Option(f func(uint16) Float64Option) Float64OptionOption { return MapFloat64OptionToUint16Option(m, f) }
func (m Uint16Option) MapComplex64Option(f func(uint16) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint16Option(m, f) }
func (m Uint16Option) MapComplex128Option(f func(uint16) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint16Option(m, f) }
func (m Uint16Option) MapAnyOption(f func(uint16) AnyOption) AnyOptionOption { return MapAnyOptionToUint16Option(m, f) }
func (m Uint16Option) MapBoolArr(f func(uint16) []bool) BoolArrOption { return MapBoolArrToUint16Option(m, f) }
func (m Uint16Option) MapStringArr(f func(uint16) []string) StringArrOption { return MapStringArrToUint16Option(m, f) }
func (m Uint16Option) MapIntArr(f func(uint16) []int) IntArrOption { return MapIntArrToUint16Option(m, f) }
func (m Uint16Option) MapInt8Arr(f func(uint16) []int8) Int8ArrOption { return MapInt8ArrToUint16Option(m, f) }
func (m Uint16Option) MapInt16Arr(f func(uint16) []int16) Int16ArrOption { return MapInt16ArrToUint16Option(m, f) }
func (m Uint16Option) MapInt32Arr(f func(uint16) []int32) Int32ArrOption { return MapInt32ArrToUint16Option(m, f) }
func (m Uint16Option) MapInt64Arr(f func(uint16) []int64) Int64ArrOption { return MapInt64ArrToUint16Option(m, f) }
func (m Uint16Option) MapUintArr(f func(uint16) []uint) UintArrOption { return MapUintArrToUint16Option(m, f) }
func (m Uint16Option) MapUint8Arr(f func(uint16) []uint8) Uint8ArrOption { return MapUint8ArrToUint16Option(m, f) }
func (m Uint16Option) MapUint16Arr(f func(uint16) []uint16) Uint16ArrOption { return MapUint16ArrToUint16Option(m, f) }
func (m Uint16Option) MapUint32Arr(f func(uint16) []uint32) Uint32ArrOption { return MapUint32ArrToUint16Option(m, f) }
func (m Uint16Option) MapUint64Arr(f func(uint16) []uint64) Uint64ArrOption { return MapUint64ArrToUint16Option(m, f) }
func (m Uint16Option) MapUintptrArr(f func(uint16) []uintptr) UintptrArrOption { return MapUintptrArrToUint16Option(m, f) }
func (m Uint16Option) MapByteArr(f func(uint16) []byte) ByteArrOption { return MapByteArrToUint16Option(m, f) }
func (m Uint16Option) MapRuneArr(f func(uint16) []rune) RuneArrOption { return MapRuneArrToUint16Option(m, f) }
func (m Uint16Option) MapFloat32Arr(f func(uint16) []float32) Float32ArrOption { return MapFloat32ArrToUint16Option(m, f) }
func (m Uint16Option) MapFloat64Arr(f func(uint16) []float64) Float64ArrOption { return MapFloat64ArrToUint16Option(m, f) }
func (m Uint16Option) MapComplex64Arr(f func(uint16) []complex64) Complex64ArrOption { return MapComplex64ArrToUint16Option(m, f) }
func (m Uint16Option) MapComplex128Arr(f func(uint16) []complex128) Complex128ArrOption { return MapComplex128ArrToUint16Option(m, f) }
func (m Uint16Option) MapAnyArr(f func(uint16) []Any) AnyArrOption { return MapAnyArrToUint16Option(m, f) }
func (m Uint16Option) MapBoolList(f func(uint16) BoolList) BoolListOption { return MapBoolListToUint16Option(m, f) }
func (m Uint16Option) MapStringList(f func(uint16) StringList) StringListOption { return MapStringListToUint16Option(m, f) }
func (m Uint16Option) MapIntList(f func(uint16) IntList) IntListOption { return MapIntListToUint16Option(m, f) }
func (m Uint16Option) MapInt8List(f func(uint16) Int8List) Int8ListOption { return MapInt8ListToUint16Option(m, f) }
func (m Uint16Option) MapInt16List(f func(uint16) Int16List) Int16ListOption { return MapInt16ListToUint16Option(m, f) }
func (m Uint16Option) MapInt32List(f func(uint16) Int32List) Int32ListOption { return MapInt32ListToUint16Option(m, f) }
func (m Uint16Option) MapInt64List(f func(uint16) Int64List) Int64ListOption { return MapInt64ListToUint16Option(m, f) }
func (m Uint16Option) MapUintList(f func(uint16) UintList) UintListOption { return MapUintListToUint16Option(m, f) }
func (m Uint16Option) MapUint8List(f func(uint16) Uint8List) Uint8ListOption { return MapUint8ListToUint16Option(m, f) }
func (m Uint16Option) MapUint16List(f func(uint16) Uint16List) Uint16ListOption { return MapUint16ListToUint16Option(m, f) }
func (m Uint16Option) MapUint32List(f func(uint16) Uint32List) Uint32ListOption { return MapUint32ListToUint16Option(m, f) }
func (m Uint16Option) MapUint64List(f func(uint16) Uint64List) Uint64ListOption { return MapUint64ListToUint16Option(m, f) }
func (m Uint16Option) MapUintptrList(f func(uint16) UintptrList) UintptrListOption { return MapUintptrListToUint16Option(m, f) }
func (m Uint16Option) MapByteList(f func(uint16) ByteList) ByteListOption { return MapByteListToUint16Option(m, f) }
func (m Uint16Option) MapRuneList(f func(uint16) RuneList) RuneListOption { return MapRuneListToUint16Option(m, f) }
func (m Uint16Option) MapFloat32List(f func(uint16) Float32List) Float32ListOption { return MapFloat32ListToUint16Option(m, f) }
func (m Uint16Option) MapFloat64List(f func(uint16) Float64List) Float64ListOption { return MapFloat64ListToUint16Option(m, f) }
func (m Uint16Option) MapComplex64List(f func(uint16) Complex64List) Complex64ListOption { return MapComplex64ListToUint16Option(m, f) }
func (m Uint16Option) MapComplex128List(f func(uint16) Complex128List) Complex128ListOption { return MapComplex128ListToUint16Option(m, f) }
func (m Uint16Option) MapAnyList(f func(uint16) AnyList) AnyListOption { return MapAnyListToUint16Option(m, f) }
func (m Uint32Option) MapBool(f func(uint32) bool) BoolOption { return MapBoolToUint32Option(m, f) }
func (m Uint32Option) MapString(f func(uint32) string) StringOption { return MapStringToUint32Option(m, f) }
func (m Uint32Option) MapInt(f func(uint32) int) IntOption { return MapIntToUint32Option(m, f) }
func (m Uint32Option) MapInt8(f func(uint32) int8) Int8Option { return MapInt8ToUint32Option(m, f) }
func (m Uint32Option) MapInt16(f func(uint32) int16) Int16Option { return MapInt16ToUint32Option(m, f) }
func (m Uint32Option) MapInt32(f func(uint32) int32) Int32Option { return MapInt32ToUint32Option(m, f) }
func (m Uint32Option) MapInt64(f func(uint32) int64) Int64Option { return MapInt64ToUint32Option(m, f) }
func (m Uint32Option) MapUint(f func(uint32) uint) UintOption { return MapUintToUint32Option(m, f) }
func (m Uint32Option) MapUint8(f func(uint32) uint8) Uint8Option { return MapUint8ToUint32Option(m, f) }
func (m Uint32Option) MapUint16(f func(uint32) uint16) Uint16Option { return MapUint16ToUint32Option(m, f) }
func (m Uint32Option) MapUint32(f func(uint32) uint32) Uint32Option { return MapUint32ToUint32Option(m, f) }
func (m Uint32Option) MapUint64(f func(uint32) uint64) Uint64Option { return MapUint64ToUint32Option(m, f) }
func (m Uint32Option) MapUintptr(f func(uint32) uintptr) UintptrOption { return MapUintptrToUint32Option(m, f) }
func (m Uint32Option) MapByte(f func(uint32) byte) ByteOption { return MapByteToUint32Option(m, f) }
func (m Uint32Option) MapRune(f func(uint32) rune) RuneOption { return MapRuneToUint32Option(m, f) }
func (m Uint32Option) MapFloat32(f func(uint32) float32) Float32Option { return MapFloat32ToUint32Option(m, f) }
func (m Uint32Option) MapFloat64(f func(uint32) float64) Float64Option { return MapFloat64ToUint32Option(m, f) }
func (m Uint32Option) MapComplex64(f func(uint32) complex64) Complex64Option { return MapComplex64ToUint32Option(m, f) }
func (m Uint32Option) MapComplex128(f func(uint32) complex128) Complex128Option { return MapComplex128ToUint32Option(m, f) }
func (m Uint32Option) MapAny(f func(uint32) Any) AnyOption { return MapAnyToUint32Option(m, f) }
func (m Uint32Option) MapBoolOption(f func(uint32) BoolOption) BoolOptionOption { return MapBoolOptionToUint32Option(m, f) }
func (m Uint32Option) MapStringOption(f func(uint32) StringOption) StringOptionOption { return MapStringOptionToUint32Option(m, f) }
func (m Uint32Option) MapIntOption(f func(uint32) IntOption) IntOptionOption { return MapIntOptionToUint32Option(m, f) }
func (m Uint32Option) MapInt8Option(f func(uint32) Int8Option) Int8OptionOption { return MapInt8OptionToUint32Option(m, f) }
func (m Uint32Option) MapInt16Option(f func(uint32) Int16Option) Int16OptionOption { return MapInt16OptionToUint32Option(m, f) }
func (m Uint32Option) MapInt32Option(f func(uint32) Int32Option) Int32OptionOption { return MapInt32OptionToUint32Option(m, f) }
func (m Uint32Option) MapInt64Option(f func(uint32) Int64Option) Int64OptionOption { return MapInt64OptionToUint32Option(m, f) }
func (m Uint32Option) MapUintOption(f func(uint32) UintOption) UintOptionOption { return MapUintOptionToUint32Option(m, f) }
func (m Uint32Option) MapUint8Option(f func(uint32) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint32Option(m, f) }
func (m Uint32Option) MapUint16Option(f func(uint32) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint32Option(m, f) }
func (m Uint32Option) MapUint32Option(f func(uint32) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint32Option(m, f) }
func (m Uint32Option) MapUint64Option(f func(uint32) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint32Option(m, f) }
func (m Uint32Option) MapUintptrOption(f func(uint32) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint32Option(m, f) }
func (m Uint32Option) MapByteOption(f func(uint32) ByteOption) ByteOptionOption { return MapByteOptionToUint32Option(m, f) }
func (m Uint32Option) MapRuneOption(f func(uint32) RuneOption) RuneOptionOption { return MapRuneOptionToUint32Option(m, f) }
func (m Uint32Option) MapFloat32Option(f func(uint32) Float32Option) Float32OptionOption { return MapFloat32OptionToUint32Option(m, f) }
func (m Uint32Option) MapFloat64Option(f func(uint32) Float64Option) Float64OptionOption { return MapFloat64OptionToUint32Option(m, f) }
func (m Uint32Option) MapComplex64Option(f func(uint32) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint32Option(m, f) }
func (m Uint32Option) MapComplex128Option(f func(uint32) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint32Option(m, f) }
func (m Uint32Option) MapAnyOption(f func(uint32) AnyOption) AnyOptionOption { return MapAnyOptionToUint32Option(m, f) }
func (m Uint32Option) MapBoolArr(f func(uint32) []bool) BoolArrOption { return MapBoolArrToUint32Option(m, f) }
func (m Uint32Option) MapStringArr(f func(uint32) []string) StringArrOption { return MapStringArrToUint32Option(m, f) }
func (m Uint32Option) MapIntArr(f func(uint32) []int) IntArrOption { return MapIntArrToUint32Option(m, f) }
func (m Uint32Option) MapInt8Arr(f func(uint32) []int8) Int8ArrOption { return MapInt8ArrToUint32Option(m, f) }
func (m Uint32Option) MapInt16Arr(f func(uint32) []int16) Int16ArrOption { return MapInt16ArrToUint32Option(m, f) }
func (m Uint32Option) MapInt32Arr(f func(uint32) []int32) Int32ArrOption { return MapInt32ArrToUint32Option(m, f) }
func (m Uint32Option) MapInt64Arr(f func(uint32) []int64) Int64ArrOption { return MapInt64ArrToUint32Option(m, f) }
func (m Uint32Option) MapUintArr(f func(uint32) []uint) UintArrOption { return MapUintArrToUint32Option(m, f) }
func (m Uint32Option) MapUint8Arr(f func(uint32) []uint8) Uint8ArrOption { return MapUint8ArrToUint32Option(m, f) }
func (m Uint32Option) MapUint16Arr(f func(uint32) []uint16) Uint16ArrOption { return MapUint16ArrToUint32Option(m, f) }
func (m Uint32Option) MapUint32Arr(f func(uint32) []uint32) Uint32ArrOption { return MapUint32ArrToUint32Option(m, f) }
func (m Uint32Option) MapUint64Arr(f func(uint32) []uint64) Uint64ArrOption { return MapUint64ArrToUint32Option(m, f) }
func (m Uint32Option) MapUintptrArr(f func(uint32) []uintptr) UintptrArrOption { return MapUintptrArrToUint32Option(m, f) }
func (m Uint32Option) MapByteArr(f func(uint32) []byte) ByteArrOption { return MapByteArrToUint32Option(m, f) }
func (m Uint32Option) MapRuneArr(f func(uint32) []rune) RuneArrOption { return MapRuneArrToUint32Option(m, f) }
func (m Uint32Option) MapFloat32Arr(f func(uint32) []float32) Float32ArrOption { return MapFloat32ArrToUint32Option(m, f) }
func (m Uint32Option) MapFloat64Arr(f func(uint32) []float64) Float64ArrOption { return MapFloat64ArrToUint32Option(m, f) }
func (m Uint32Option) MapComplex64Arr(f func(uint32) []complex64) Complex64ArrOption { return MapComplex64ArrToUint32Option(m, f) }
func (m Uint32Option) MapComplex128Arr(f func(uint32) []complex128) Complex128ArrOption { return MapComplex128ArrToUint32Option(m, f) }
func (m Uint32Option) MapAnyArr(f func(uint32) []Any) AnyArrOption { return MapAnyArrToUint32Option(m, f) }
func (m Uint32Option) MapBoolList(f func(uint32) BoolList) BoolListOption { return MapBoolListToUint32Option(m, f) }
func (m Uint32Option) MapStringList(f func(uint32) StringList) StringListOption { return MapStringListToUint32Option(m, f) }
func (m Uint32Option) MapIntList(f func(uint32) IntList) IntListOption { return MapIntListToUint32Option(m, f) }
func (m Uint32Option) MapInt8List(f func(uint32) Int8List) Int8ListOption { return MapInt8ListToUint32Option(m, f) }
func (m Uint32Option) MapInt16List(f func(uint32) Int16List) Int16ListOption { return MapInt16ListToUint32Option(m, f) }
func (m Uint32Option) MapInt32List(f func(uint32) Int32List) Int32ListOption { return MapInt32ListToUint32Option(m, f) }
func (m Uint32Option) MapInt64List(f func(uint32) Int64List) Int64ListOption { return MapInt64ListToUint32Option(m, f) }
func (m Uint32Option) MapUintList(f func(uint32) UintList) UintListOption { return MapUintListToUint32Option(m, f) }
func (m Uint32Option) MapUint8List(f func(uint32) Uint8List) Uint8ListOption { return MapUint8ListToUint32Option(m, f) }
func (m Uint32Option) MapUint16List(f func(uint32) Uint16List) Uint16ListOption { return MapUint16ListToUint32Option(m, f) }
func (m Uint32Option) MapUint32List(f func(uint32) Uint32List) Uint32ListOption { return MapUint32ListToUint32Option(m, f) }
func (m Uint32Option) MapUint64List(f func(uint32) Uint64List) Uint64ListOption { return MapUint64ListToUint32Option(m, f) }
func (m Uint32Option) MapUintptrList(f func(uint32) UintptrList) UintptrListOption { return MapUintptrListToUint32Option(m, f) }
func (m Uint32Option) MapByteList(f func(uint32) ByteList) ByteListOption { return MapByteListToUint32Option(m, f) }
func (m Uint32Option) MapRuneList(f func(uint32) RuneList) RuneListOption { return MapRuneListToUint32Option(m, f) }
func (m Uint32Option) MapFloat32List(f func(uint32) Float32List) Float32ListOption { return MapFloat32ListToUint32Option(m, f) }
func (m Uint32Option) MapFloat64List(f func(uint32) Float64List) Float64ListOption { return MapFloat64ListToUint32Option(m, f) }
func (m Uint32Option) MapComplex64List(f func(uint32) Complex64List) Complex64ListOption { return MapComplex64ListToUint32Option(m, f) }
func (m Uint32Option) MapComplex128List(f func(uint32) Complex128List) Complex128ListOption { return MapComplex128ListToUint32Option(m, f) }
func (m Uint32Option) MapAnyList(f func(uint32) AnyList) AnyListOption { return MapAnyListToUint32Option(m, f) }
func (m Uint64Option) MapBool(f func(uint64) bool) BoolOption { return MapBoolToUint64Option(m, f) }
func (m Uint64Option) MapString(f func(uint64) string) StringOption { return MapStringToUint64Option(m, f) }
func (m Uint64Option) MapInt(f func(uint64) int) IntOption { return MapIntToUint64Option(m, f) }
func (m Uint64Option) MapInt8(f func(uint64) int8) Int8Option { return MapInt8ToUint64Option(m, f) }
func (m Uint64Option) MapInt16(f func(uint64) int16) Int16Option { return MapInt16ToUint64Option(m, f) }
func (m Uint64Option) MapInt32(f func(uint64) int32) Int32Option { return MapInt32ToUint64Option(m, f) }
func (m Uint64Option) MapInt64(f func(uint64) int64) Int64Option { return MapInt64ToUint64Option(m, f) }
func (m Uint64Option) MapUint(f func(uint64) uint) UintOption { return MapUintToUint64Option(m, f) }
func (m Uint64Option) MapUint8(f func(uint64) uint8) Uint8Option { return MapUint8ToUint64Option(m, f) }
func (m Uint64Option) MapUint16(f func(uint64) uint16) Uint16Option { return MapUint16ToUint64Option(m, f) }
func (m Uint64Option) MapUint32(f func(uint64) uint32) Uint32Option { return MapUint32ToUint64Option(m, f) }
func (m Uint64Option) MapUint64(f func(uint64) uint64) Uint64Option { return MapUint64ToUint64Option(m, f) }
func (m Uint64Option) MapUintptr(f func(uint64) uintptr) UintptrOption { return MapUintptrToUint64Option(m, f) }
func (m Uint64Option) MapByte(f func(uint64) byte) ByteOption { return MapByteToUint64Option(m, f) }
func (m Uint64Option) MapRune(f func(uint64) rune) RuneOption { return MapRuneToUint64Option(m, f) }
func (m Uint64Option) MapFloat32(f func(uint64) float32) Float32Option { return MapFloat32ToUint64Option(m, f) }
func (m Uint64Option) MapFloat64(f func(uint64) float64) Float64Option { return MapFloat64ToUint64Option(m, f) }
func (m Uint64Option) MapComplex64(f func(uint64) complex64) Complex64Option { return MapComplex64ToUint64Option(m, f) }
func (m Uint64Option) MapComplex128(f func(uint64) complex128) Complex128Option { return MapComplex128ToUint64Option(m, f) }
func (m Uint64Option) MapAny(f func(uint64) Any) AnyOption { return MapAnyToUint64Option(m, f) }
func (m Uint64Option) MapBoolOption(f func(uint64) BoolOption) BoolOptionOption { return MapBoolOptionToUint64Option(m, f) }
func (m Uint64Option) MapStringOption(f func(uint64) StringOption) StringOptionOption { return MapStringOptionToUint64Option(m, f) }
func (m Uint64Option) MapIntOption(f func(uint64) IntOption) IntOptionOption { return MapIntOptionToUint64Option(m, f) }
func (m Uint64Option) MapInt8Option(f func(uint64) Int8Option) Int8OptionOption { return MapInt8OptionToUint64Option(m, f) }
func (m Uint64Option) MapInt16Option(f func(uint64) Int16Option) Int16OptionOption { return MapInt16OptionToUint64Option(m, f) }
func (m Uint64Option) MapInt32Option(f func(uint64) Int32Option) Int32OptionOption { return MapInt32OptionToUint64Option(m, f) }
func (m Uint64Option) MapInt64Option(f func(uint64) Int64Option) Int64OptionOption { return MapInt64OptionToUint64Option(m, f) }
func (m Uint64Option) MapUintOption(f func(uint64) UintOption) UintOptionOption { return MapUintOptionToUint64Option(m, f) }
func (m Uint64Option) MapUint8Option(f func(uint64) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint64Option(m, f) }
func (m Uint64Option) MapUint16Option(f func(uint64) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint64Option(m, f) }
func (m Uint64Option) MapUint32Option(f func(uint64) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint64Option(m, f) }
func (m Uint64Option) MapUint64Option(f func(uint64) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint64Option(m, f) }
func (m Uint64Option) MapUintptrOption(f func(uint64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint64Option(m, f) }
func (m Uint64Option) MapByteOption(f func(uint64) ByteOption) ByteOptionOption { return MapByteOptionToUint64Option(m, f) }
func (m Uint64Option) MapRuneOption(f func(uint64) RuneOption) RuneOptionOption { return MapRuneOptionToUint64Option(m, f) }
func (m Uint64Option) MapFloat32Option(f func(uint64) Float32Option) Float32OptionOption { return MapFloat32OptionToUint64Option(m, f) }
func (m Uint64Option) MapFloat64Option(f func(uint64) Float64Option) Float64OptionOption { return MapFloat64OptionToUint64Option(m, f) }
func (m Uint64Option) MapComplex64Option(f func(uint64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint64Option(m, f) }
func (m Uint64Option) MapComplex128Option(f func(uint64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint64Option(m, f) }
func (m Uint64Option) MapAnyOption(f func(uint64) AnyOption) AnyOptionOption { return MapAnyOptionToUint64Option(m, f) }
func (m Uint64Option) MapBoolArr(f func(uint64) []bool) BoolArrOption { return MapBoolArrToUint64Option(m, f) }
func (m Uint64Option) MapStringArr(f func(uint64) []string) StringArrOption { return MapStringArrToUint64Option(m, f) }
func (m Uint64Option) MapIntArr(f func(uint64) []int) IntArrOption { return MapIntArrToUint64Option(m, f) }
func (m Uint64Option) MapInt8Arr(f func(uint64) []int8) Int8ArrOption { return MapInt8ArrToUint64Option(m, f) }
func (m Uint64Option) MapInt16Arr(f func(uint64) []int16) Int16ArrOption { return MapInt16ArrToUint64Option(m, f) }
func (m Uint64Option) MapInt32Arr(f func(uint64) []int32) Int32ArrOption { return MapInt32ArrToUint64Option(m, f) }
func (m Uint64Option) MapInt64Arr(f func(uint64) []int64) Int64ArrOption { return MapInt64ArrToUint64Option(m, f) }
func (m Uint64Option) MapUintArr(f func(uint64) []uint) UintArrOption { return MapUintArrToUint64Option(m, f) }
func (m Uint64Option) MapUint8Arr(f func(uint64) []uint8) Uint8ArrOption { return MapUint8ArrToUint64Option(m, f) }
func (m Uint64Option) MapUint16Arr(f func(uint64) []uint16) Uint16ArrOption { return MapUint16ArrToUint64Option(m, f) }
func (m Uint64Option) MapUint32Arr(f func(uint64) []uint32) Uint32ArrOption { return MapUint32ArrToUint64Option(m, f) }
func (m Uint64Option) MapUint64Arr(f func(uint64) []uint64) Uint64ArrOption { return MapUint64ArrToUint64Option(m, f) }
func (m Uint64Option) MapUintptrArr(f func(uint64) []uintptr) UintptrArrOption { return MapUintptrArrToUint64Option(m, f) }
func (m Uint64Option) MapByteArr(f func(uint64) []byte) ByteArrOption { return MapByteArrToUint64Option(m, f) }
func (m Uint64Option) MapRuneArr(f func(uint64) []rune) RuneArrOption { return MapRuneArrToUint64Option(m, f) }
func (m Uint64Option) MapFloat32Arr(f func(uint64) []float32) Float32ArrOption { return MapFloat32ArrToUint64Option(m, f) }
func (m Uint64Option) MapFloat64Arr(f func(uint64) []float64) Float64ArrOption { return MapFloat64ArrToUint64Option(m, f) }
func (m Uint64Option) MapComplex64Arr(f func(uint64) []complex64) Complex64ArrOption { return MapComplex64ArrToUint64Option(m, f) }
func (m Uint64Option) MapComplex128Arr(f func(uint64) []complex128) Complex128ArrOption { return MapComplex128ArrToUint64Option(m, f) }
func (m Uint64Option) MapAnyArr(f func(uint64) []Any) AnyArrOption { return MapAnyArrToUint64Option(m, f) }
func (m Uint64Option) MapBoolList(f func(uint64) BoolList) BoolListOption { return MapBoolListToUint64Option(m, f) }
func (m Uint64Option) MapStringList(f func(uint64) StringList) StringListOption { return MapStringListToUint64Option(m, f) }
func (m Uint64Option) MapIntList(f func(uint64) IntList) IntListOption { return MapIntListToUint64Option(m, f) }
func (m Uint64Option) MapInt8List(f func(uint64) Int8List) Int8ListOption { return MapInt8ListToUint64Option(m, f) }
func (m Uint64Option) MapInt16List(f func(uint64) Int16List) Int16ListOption { return MapInt16ListToUint64Option(m, f) }
func (m Uint64Option) MapInt32List(f func(uint64) Int32List) Int32ListOption { return MapInt32ListToUint64Option(m, f) }
func (m Uint64Option) MapInt64List(f func(uint64) Int64List) Int64ListOption { return MapInt64ListToUint64Option(m, f) }
func (m Uint64Option) MapUintList(f func(uint64) UintList) UintListOption { return MapUintListToUint64Option(m, f) }
func (m Uint64Option) MapUint8List(f func(uint64) Uint8List) Uint8ListOption { return MapUint8ListToUint64Option(m, f) }
func (m Uint64Option) MapUint16List(f func(uint64) Uint16List) Uint16ListOption { return MapUint16ListToUint64Option(m, f) }
func (m Uint64Option) MapUint32List(f func(uint64) Uint32List) Uint32ListOption { return MapUint32ListToUint64Option(m, f) }
func (m Uint64Option) MapUint64List(f func(uint64) Uint64List) Uint64ListOption { return MapUint64ListToUint64Option(m, f) }
func (m Uint64Option) MapUintptrList(f func(uint64) UintptrList) UintptrListOption { return MapUintptrListToUint64Option(m, f) }
func (m Uint64Option) MapByteList(f func(uint64) ByteList) ByteListOption { return MapByteListToUint64Option(m, f) }
func (m Uint64Option) MapRuneList(f func(uint64) RuneList) RuneListOption { return MapRuneListToUint64Option(m, f) }
func (m Uint64Option) MapFloat32List(f func(uint64) Float32List) Float32ListOption { return MapFloat32ListToUint64Option(m, f) }
func (m Uint64Option) MapFloat64List(f func(uint64) Float64List) Float64ListOption { return MapFloat64ListToUint64Option(m, f) }
func (m Uint64Option) MapComplex64List(f func(uint64) Complex64List) Complex64ListOption { return MapComplex64ListToUint64Option(m, f) }
func (m Uint64Option) MapComplex128List(f func(uint64) Complex128List) Complex128ListOption { return MapComplex128ListToUint64Option(m, f) }
func (m Uint64Option) MapAnyList(f func(uint64) AnyList) AnyListOption { return MapAnyListToUint64Option(m, f) }
func (m UintptrOption) MapBool(f func(uintptr) bool) BoolOption { return MapBoolToUintptrOption(m, f) }
func (m UintptrOption) MapString(f func(uintptr) string) StringOption { return MapStringToUintptrOption(m, f) }
func (m UintptrOption) MapInt(f func(uintptr) int) IntOption { return MapIntToUintptrOption(m, f) }
func (m UintptrOption) MapInt8(f func(uintptr) int8) Int8Option { return MapInt8ToUintptrOption(m, f) }
func (m UintptrOption) MapInt16(f func(uintptr) int16) Int16Option { return MapInt16ToUintptrOption(m, f) }
func (m UintptrOption) MapInt32(f func(uintptr) int32) Int32Option { return MapInt32ToUintptrOption(m, f) }
func (m UintptrOption) MapInt64(f func(uintptr) int64) Int64Option { return MapInt64ToUintptrOption(m, f) }
func (m UintptrOption) MapUint(f func(uintptr) uint) UintOption { return MapUintToUintptrOption(m, f) }
func (m UintptrOption) MapUint8(f func(uintptr) uint8) Uint8Option { return MapUint8ToUintptrOption(m, f) }
func (m UintptrOption) MapUint16(f func(uintptr) uint16) Uint16Option { return MapUint16ToUintptrOption(m, f) }
func (m UintptrOption) MapUint32(f func(uintptr) uint32) Uint32Option { return MapUint32ToUintptrOption(m, f) }
func (m UintptrOption) MapUint64(f func(uintptr) uint64) Uint64Option { return MapUint64ToUintptrOption(m, f) }
func (m UintptrOption) MapUintptr(f func(uintptr) uintptr) UintptrOption { return MapUintptrToUintptrOption(m, f) }
func (m UintptrOption) MapByte(f func(uintptr) byte) ByteOption { return MapByteToUintptrOption(m, f) }
func (m UintptrOption) MapRune(f func(uintptr) rune) RuneOption { return MapRuneToUintptrOption(m, f) }
func (m UintptrOption) MapFloat32(f func(uintptr) float32) Float32Option { return MapFloat32ToUintptrOption(m, f) }
func (m UintptrOption) MapFloat64(f func(uintptr) float64) Float64Option { return MapFloat64ToUintptrOption(m, f) }
func (m UintptrOption) MapComplex64(f func(uintptr) complex64) Complex64Option { return MapComplex64ToUintptrOption(m, f) }
func (m UintptrOption) MapComplex128(f func(uintptr) complex128) Complex128Option { return MapComplex128ToUintptrOption(m, f) }
func (m UintptrOption) MapAny(f func(uintptr) Any) AnyOption { return MapAnyToUintptrOption(m, f) }
func (m UintptrOption) MapBoolOption(f func(uintptr) BoolOption) BoolOptionOption { return MapBoolOptionToUintptrOption(m, f) }
func (m UintptrOption) MapStringOption(f func(uintptr) StringOption) StringOptionOption { return MapStringOptionToUintptrOption(m, f) }
func (m UintptrOption) MapIntOption(f func(uintptr) IntOption) IntOptionOption { return MapIntOptionToUintptrOption(m, f) }
func (m UintptrOption) MapInt8Option(f func(uintptr) Int8Option) Int8OptionOption { return MapInt8OptionToUintptrOption(m, f) }
func (m UintptrOption) MapInt16Option(f func(uintptr) Int16Option) Int16OptionOption { return MapInt16OptionToUintptrOption(m, f) }
func (m UintptrOption) MapInt32Option(f func(uintptr) Int32Option) Int32OptionOption { return MapInt32OptionToUintptrOption(m, f) }
func (m UintptrOption) MapInt64Option(f func(uintptr) Int64Option) Int64OptionOption { return MapInt64OptionToUintptrOption(m, f) }
func (m UintptrOption) MapUintOption(f func(uintptr) UintOption) UintOptionOption { return MapUintOptionToUintptrOption(m, f) }
func (m UintptrOption) MapUint8Option(f func(uintptr) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintptrOption(m, f) }
func (m UintptrOption) MapUint16Option(f func(uintptr) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintptrOption(m, f) }
func (m UintptrOption) MapUint32Option(f func(uintptr) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintptrOption(m, f) }
func (m UintptrOption) MapUint64Option(f func(uintptr) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintptrOption(m, f) }
func (m UintptrOption) MapUintptrOption(f func(uintptr) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintptrOption(m, f) }
func (m UintptrOption) MapByteOption(f func(uintptr) ByteOption) ByteOptionOption { return MapByteOptionToUintptrOption(m, f) }
func (m UintptrOption) MapRuneOption(f func(uintptr) RuneOption) RuneOptionOption { return MapRuneOptionToUintptrOption(m, f) }
func (m UintptrOption) MapFloat32Option(f func(uintptr) Float32Option) Float32OptionOption { return MapFloat32OptionToUintptrOption(m, f) }
func (m UintptrOption) MapFloat64Option(f func(uintptr) Float64Option) Float64OptionOption { return MapFloat64OptionToUintptrOption(m, f) }
func (m UintptrOption) MapComplex64Option(f func(uintptr) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintptrOption(m, f) }
func (m UintptrOption) MapComplex128Option(f func(uintptr) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintptrOption(m, f) }
func (m UintptrOption) MapAnyOption(f func(uintptr) AnyOption) AnyOptionOption { return MapAnyOptionToUintptrOption(m, f) }
func (m UintptrOption) MapBoolArr(f func(uintptr) []bool) BoolArrOption { return MapBoolArrToUintptrOption(m, f) }
func (m UintptrOption) MapStringArr(f func(uintptr) []string) StringArrOption { return MapStringArrToUintptrOption(m, f) }
func (m UintptrOption) MapIntArr(f func(uintptr) []int) IntArrOption { return MapIntArrToUintptrOption(m, f) }
func (m UintptrOption) MapInt8Arr(f func(uintptr) []int8) Int8ArrOption { return MapInt8ArrToUintptrOption(m, f) }
func (m UintptrOption) MapInt16Arr(f func(uintptr) []int16) Int16ArrOption { return MapInt16ArrToUintptrOption(m, f) }
func (m UintptrOption) MapInt32Arr(f func(uintptr) []int32) Int32ArrOption { return MapInt32ArrToUintptrOption(m, f) }
func (m UintptrOption) MapInt64Arr(f func(uintptr) []int64) Int64ArrOption { return MapInt64ArrToUintptrOption(m, f) }
func (m UintptrOption) MapUintArr(f func(uintptr) []uint) UintArrOption { return MapUintArrToUintptrOption(m, f) }
func (m UintptrOption) MapUint8Arr(f func(uintptr) []uint8) Uint8ArrOption { return MapUint8ArrToUintptrOption(m, f) }
func (m UintptrOption) MapUint16Arr(f func(uintptr) []uint16) Uint16ArrOption { return MapUint16ArrToUintptrOption(m, f) }
func (m UintptrOption) MapUint32Arr(f func(uintptr) []uint32) Uint32ArrOption { return MapUint32ArrToUintptrOption(m, f) }
func (m UintptrOption) MapUint64Arr(f func(uintptr) []uint64) Uint64ArrOption { return MapUint64ArrToUintptrOption(m, f) }
func (m UintptrOption) MapUintptrArr(f func(uintptr) []uintptr) UintptrArrOption { return MapUintptrArrToUintptrOption(m, f) }
func (m UintptrOption) MapByteArr(f func(uintptr) []byte) ByteArrOption { return MapByteArrToUintptrOption(m, f) }
func (m UintptrOption) MapRuneArr(f func(uintptr) []rune) RuneArrOption { return MapRuneArrToUintptrOption(m, f) }
func (m UintptrOption) MapFloat32Arr(f func(uintptr) []float32) Float32ArrOption { return MapFloat32ArrToUintptrOption(m, f) }
func (m UintptrOption) MapFloat64Arr(f func(uintptr) []float64) Float64ArrOption { return MapFloat64ArrToUintptrOption(m, f) }
func (m UintptrOption) MapComplex64Arr(f func(uintptr) []complex64) Complex64ArrOption { return MapComplex64ArrToUintptrOption(m, f) }
func (m UintptrOption) MapComplex128Arr(f func(uintptr) []complex128) Complex128ArrOption { return MapComplex128ArrToUintptrOption(m, f) }
func (m UintptrOption) MapAnyArr(f func(uintptr) []Any) AnyArrOption { return MapAnyArrToUintptrOption(m, f) }
func (m UintptrOption) MapBoolList(f func(uintptr) BoolList) BoolListOption { return MapBoolListToUintptrOption(m, f) }
func (m UintptrOption) MapStringList(f func(uintptr) StringList) StringListOption { return MapStringListToUintptrOption(m, f) }
func (m UintptrOption) MapIntList(f func(uintptr) IntList) IntListOption { return MapIntListToUintptrOption(m, f) }
func (m UintptrOption) MapInt8List(f func(uintptr) Int8List) Int8ListOption { return MapInt8ListToUintptrOption(m, f) }
func (m UintptrOption) MapInt16List(f func(uintptr) Int16List) Int16ListOption { return MapInt16ListToUintptrOption(m, f) }
func (m UintptrOption) MapInt32List(f func(uintptr) Int32List) Int32ListOption { return MapInt32ListToUintptrOption(m, f) }
func (m UintptrOption) MapInt64List(f func(uintptr) Int64List) Int64ListOption { return MapInt64ListToUintptrOption(m, f) }
func (m UintptrOption) MapUintList(f func(uintptr) UintList) UintListOption { return MapUintListToUintptrOption(m, f) }
func (m UintptrOption) MapUint8List(f func(uintptr) Uint8List) Uint8ListOption { return MapUint8ListToUintptrOption(m, f) }
func (m UintptrOption) MapUint16List(f func(uintptr) Uint16List) Uint16ListOption { return MapUint16ListToUintptrOption(m, f) }
func (m UintptrOption) MapUint32List(f func(uintptr) Uint32List) Uint32ListOption { return MapUint32ListToUintptrOption(m, f) }
func (m UintptrOption) MapUint64List(f func(uintptr) Uint64List) Uint64ListOption { return MapUint64ListToUintptrOption(m, f) }
func (m UintptrOption) MapUintptrList(f func(uintptr) UintptrList) UintptrListOption { return MapUintptrListToUintptrOption(m, f) }
func (m UintptrOption) MapByteList(f func(uintptr) ByteList) ByteListOption { return MapByteListToUintptrOption(m, f) }
func (m UintptrOption) MapRuneList(f func(uintptr) RuneList) RuneListOption { return MapRuneListToUintptrOption(m, f) }
func (m UintptrOption) MapFloat32List(f func(uintptr) Float32List) Float32ListOption { return MapFloat32ListToUintptrOption(m, f) }
func (m UintptrOption) MapFloat64List(f func(uintptr) Float64List) Float64ListOption { return MapFloat64ListToUintptrOption(m, f) }
func (m UintptrOption) MapComplex64List(f func(uintptr) Complex64List) Complex64ListOption { return MapComplex64ListToUintptrOption(m, f) }
func (m UintptrOption) MapComplex128List(f func(uintptr) Complex128List) Complex128ListOption { return MapComplex128ListToUintptrOption(m, f) }
func (m UintptrOption) MapAnyList(f func(uintptr) AnyList) AnyListOption { return MapAnyListToUintptrOption(m, f) }
func (m ByteOption) MapBool(f func(byte) bool) BoolOption { return MapBoolToByteOption(m, f) }
func (m ByteOption) MapString(f func(byte) string) StringOption { return MapStringToByteOption(m, f) }
func (m ByteOption) MapInt(f func(byte) int) IntOption { return MapIntToByteOption(m, f) }
func (m ByteOption) MapInt8(f func(byte) int8) Int8Option { return MapInt8ToByteOption(m, f) }
func (m ByteOption) MapInt16(f func(byte) int16) Int16Option { return MapInt16ToByteOption(m, f) }
func (m ByteOption) MapInt32(f func(byte) int32) Int32Option { return MapInt32ToByteOption(m, f) }
func (m ByteOption) MapInt64(f func(byte) int64) Int64Option { return MapInt64ToByteOption(m, f) }
func (m ByteOption) MapUint(f func(byte) uint) UintOption { return MapUintToByteOption(m, f) }
func (m ByteOption) MapUint8(f func(byte) uint8) Uint8Option { return MapUint8ToByteOption(m, f) }
func (m ByteOption) MapUint16(f func(byte) uint16) Uint16Option { return MapUint16ToByteOption(m, f) }
func (m ByteOption) MapUint32(f func(byte) uint32) Uint32Option { return MapUint32ToByteOption(m, f) }
func (m ByteOption) MapUint64(f func(byte) uint64) Uint64Option { return MapUint64ToByteOption(m, f) }
func (m ByteOption) MapUintptr(f func(byte) uintptr) UintptrOption { return MapUintptrToByteOption(m, f) }
func (m ByteOption) MapByte(f func(byte) byte) ByteOption { return MapByteToByteOption(m, f) }
func (m ByteOption) MapRune(f func(byte) rune) RuneOption { return MapRuneToByteOption(m, f) }
func (m ByteOption) MapFloat32(f func(byte) float32) Float32Option { return MapFloat32ToByteOption(m, f) }
func (m ByteOption) MapFloat64(f func(byte) float64) Float64Option { return MapFloat64ToByteOption(m, f) }
func (m ByteOption) MapComplex64(f func(byte) complex64) Complex64Option { return MapComplex64ToByteOption(m, f) }
func (m ByteOption) MapComplex128(f func(byte) complex128) Complex128Option { return MapComplex128ToByteOption(m, f) }
func (m ByteOption) MapAny(f func(byte) Any) AnyOption { return MapAnyToByteOption(m, f) }
func (m ByteOption) MapBoolOption(f func(byte) BoolOption) BoolOptionOption { return MapBoolOptionToByteOption(m, f) }
func (m ByteOption) MapStringOption(f func(byte) StringOption) StringOptionOption { return MapStringOptionToByteOption(m, f) }
func (m ByteOption) MapIntOption(f func(byte) IntOption) IntOptionOption { return MapIntOptionToByteOption(m, f) }
func (m ByteOption) MapInt8Option(f func(byte) Int8Option) Int8OptionOption { return MapInt8OptionToByteOption(m, f) }
func (m ByteOption) MapInt16Option(f func(byte) Int16Option) Int16OptionOption { return MapInt16OptionToByteOption(m, f) }
func (m ByteOption) MapInt32Option(f func(byte) Int32Option) Int32OptionOption { return MapInt32OptionToByteOption(m, f) }
func (m ByteOption) MapInt64Option(f func(byte) Int64Option) Int64OptionOption { return MapInt64OptionToByteOption(m, f) }
func (m ByteOption) MapUintOption(f func(byte) UintOption) UintOptionOption { return MapUintOptionToByteOption(m, f) }
func (m ByteOption) MapUint8Option(f func(byte) Uint8Option) Uint8OptionOption { return MapUint8OptionToByteOption(m, f) }
func (m ByteOption) MapUint16Option(f func(byte) Uint16Option) Uint16OptionOption { return MapUint16OptionToByteOption(m, f) }
func (m ByteOption) MapUint32Option(f func(byte) Uint32Option) Uint32OptionOption { return MapUint32OptionToByteOption(m, f) }
func (m ByteOption) MapUint64Option(f func(byte) Uint64Option) Uint64OptionOption { return MapUint64OptionToByteOption(m, f) }
func (m ByteOption) MapUintptrOption(f func(byte) UintptrOption) UintptrOptionOption { return MapUintptrOptionToByteOption(m, f) }
func (m ByteOption) MapByteOption(f func(byte) ByteOption) ByteOptionOption { return MapByteOptionToByteOption(m, f) }
func (m ByteOption) MapRuneOption(f func(byte) RuneOption) RuneOptionOption { return MapRuneOptionToByteOption(m, f) }
func (m ByteOption) MapFloat32Option(f func(byte) Float32Option) Float32OptionOption { return MapFloat32OptionToByteOption(m, f) }
func (m ByteOption) MapFloat64Option(f func(byte) Float64Option) Float64OptionOption { return MapFloat64OptionToByteOption(m, f) }
func (m ByteOption) MapComplex64Option(f func(byte) Complex64Option) Complex64OptionOption { return MapComplex64OptionToByteOption(m, f) }
func (m ByteOption) MapComplex128Option(f func(byte) Complex128Option) Complex128OptionOption { return MapComplex128OptionToByteOption(m, f) }
func (m ByteOption) MapAnyOption(f func(byte) AnyOption) AnyOptionOption { return MapAnyOptionToByteOption(m, f) }
func (m ByteOption) MapBoolArr(f func(byte) []bool) BoolArrOption { return MapBoolArrToByteOption(m, f) }
func (m ByteOption) MapStringArr(f func(byte) []string) StringArrOption { return MapStringArrToByteOption(m, f) }
func (m ByteOption) MapIntArr(f func(byte) []int) IntArrOption { return MapIntArrToByteOption(m, f) }
func (m ByteOption) MapInt8Arr(f func(byte) []int8) Int8ArrOption { return MapInt8ArrToByteOption(m, f) }
func (m ByteOption) MapInt16Arr(f func(byte) []int16) Int16ArrOption { return MapInt16ArrToByteOption(m, f) }
func (m ByteOption) MapInt32Arr(f func(byte) []int32) Int32ArrOption { return MapInt32ArrToByteOption(m, f) }
func (m ByteOption) MapInt64Arr(f func(byte) []int64) Int64ArrOption { return MapInt64ArrToByteOption(m, f) }
func (m ByteOption) MapUintArr(f func(byte) []uint) UintArrOption { return MapUintArrToByteOption(m, f) }
func (m ByteOption) MapUint8Arr(f func(byte) []uint8) Uint8ArrOption { return MapUint8ArrToByteOption(m, f) }
func (m ByteOption) MapUint16Arr(f func(byte) []uint16) Uint16ArrOption { return MapUint16ArrToByteOption(m, f) }
func (m ByteOption) MapUint32Arr(f func(byte) []uint32) Uint32ArrOption { return MapUint32ArrToByteOption(m, f) }
func (m ByteOption) MapUint64Arr(f func(byte) []uint64) Uint64ArrOption { return MapUint64ArrToByteOption(m, f) }
func (m ByteOption) MapUintptrArr(f func(byte) []uintptr) UintptrArrOption { return MapUintptrArrToByteOption(m, f) }
func (m ByteOption) MapByteArr(f func(byte) []byte) ByteArrOption { return MapByteArrToByteOption(m, f) }
func (m ByteOption) MapRuneArr(f func(byte) []rune) RuneArrOption { return MapRuneArrToByteOption(m, f) }
func (m ByteOption) MapFloat32Arr(f func(byte) []float32) Float32ArrOption { return MapFloat32ArrToByteOption(m, f) }
func (m ByteOption) MapFloat64Arr(f func(byte) []float64) Float64ArrOption { return MapFloat64ArrToByteOption(m, f) }
func (m ByteOption) MapComplex64Arr(f func(byte) []complex64) Complex64ArrOption { return MapComplex64ArrToByteOption(m, f) }
func (m ByteOption) MapComplex128Arr(f func(byte) []complex128) Complex128ArrOption { return MapComplex128ArrToByteOption(m, f) }
func (m ByteOption) MapAnyArr(f func(byte) []Any) AnyArrOption { return MapAnyArrToByteOption(m, f) }
func (m ByteOption) MapBoolList(f func(byte) BoolList) BoolListOption { return MapBoolListToByteOption(m, f) }
func (m ByteOption) MapStringList(f func(byte) StringList) StringListOption { return MapStringListToByteOption(m, f) }
func (m ByteOption) MapIntList(f func(byte) IntList) IntListOption { return MapIntListToByteOption(m, f) }
func (m ByteOption) MapInt8List(f func(byte) Int8List) Int8ListOption { return MapInt8ListToByteOption(m, f) }
func (m ByteOption) MapInt16List(f func(byte) Int16List) Int16ListOption { return MapInt16ListToByteOption(m, f) }
func (m ByteOption) MapInt32List(f func(byte) Int32List) Int32ListOption { return MapInt32ListToByteOption(m, f) }
func (m ByteOption) MapInt64List(f func(byte) Int64List) Int64ListOption { return MapInt64ListToByteOption(m, f) }
func (m ByteOption) MapUintList(f func(byte) UintList) UintListOption { return MapUintListToByteOption(m, f) }
func (m ByteOption) MapUint8List(f func(byte) Uint8List) Uint8ListOption { return MapUint8ListToByteOption(m, f) }
func (m ByteOption) MapUint16List(f func(byte) Uint16List) Uint16ListOption { return MapUint16ListToByteOption(m, f) }
func (m ByteOption) MapUint32List(f func(byte) Uint32List) Uint32ListOption { return MapUint32ListToByteOption(m, f) }
func (m ByteOption) MapUint64List(f func(byte) Uint64List) Uint64ListOption { return MapUint64ListToByteOption(m, f) }
func (m ByteOption) MapUintptrList(f func(byte) UintptrList) UintptrListOption { return MapUintptrListToByteOption(m, f) }
func (m ByteOption) MapByteList(f func(byte) ByteList) ByteListOption { return MapByteListToByteOption(m, f) }
func (m ByteOption) MapRuneList(f func(byte) RuneList) RuneListOption { return MapRuneListToByteOption(m, f) }
func (m ByteOption) MapFloat32List(f func(byte) Float32List) Float32ListOption { return MapFloat32ListToByteOption(m, f) }
func (m ByteOption) MapFloat64List(f func(byte) Float64List) Float64ListOption { return MapFloat64ListToByteOption(m, f) }
func (m ByteOption) MapComplex64List(f func(byte) Complex64List) Complex64ListOption { return MapComplex64ListToByteOption(m, f) }
func (m ByteOption) MapComplex128List(f func(byte) Complex128List) Complex128ListOption { return MapComplex128ListToByteOption(m, f) }
func (m ByteOption) MapAnyList(f func(byte) AnyList) AnyListOption { return MapAnyListToByteOption(m, f) }
func (m RuneOption) MapBool(f func(rune) bool) BoolOption { return MapBoolToRuneOption(m, f) }
func (m RuneOption) MapString(f func(rune) string) StringOption { return MapStringToRuneOption(m, f) }
func (m RuneOption) MapInt(f func(rune) int) IntOption { return MapIntToRuneOption(m, f) }
func (m RuneOption) MapInt8(f func(rune) int8) Int8Option { return MapInt8ToRuneOption(m, f) }
func (m RuneOption) MapInt16(f func(rune) int16) Int16Option { return MapInt16ToRuneOption(m, f) }
func (m RuneOption) MapInt32(f func(rune) int32) Int32Option { return MapInt32ToRuneOption(m, f) }
func (m RuneOption) MapInt64(f func(rune) int64) Int64Option { return MapInt64ToRuneOption(m, f) }
func (m RuneOption) MapUint(f func(rune) uint) UintOption { return MapUintToRuneOption(m, f) }
func (m RuneOption) MapUint8(f func(rune) uint8) Uint8Option { return MapUint8ToRuneOption(m, f) }
func (m RuneOption) MapUint16(f func(rune) uint16) Uint16Option { return MapUint16ToRuneOption(m, f) }
func (m RuneOption) MapUint32(f func(rune) uint32) Uint32Option { return MapUint32ToRuneOption(m, f) }
func (m RuneOption) MapUint64(f func(rune) uint64) Uint64Option { return MapUint64ToRuneOption(m, f) }
func (m RuneOption) MapUintptr(f func(rune) uintptr) UintptrOption { return MapUintptrToRuneOption(m, f) }
func (m RuneOption) MapByte(f func(rune) byte) ByteOption { return MapByteToRuneOption(m, f) }
func (m RuneOption) MapRune(f func(rune) rune) RuneOption { return MapRuneToRuneOption(m, f) }
func (m RuneOption) MapFloat32(f func(rune) float32) Float32Option { return MapFloat32ToRuneOption(m, f) }
func (m RuneOption) MapFloat64(f func(rune) float64) Float64Option { return MapFloat64ToRuneOption(m, f) }
func (m RuneOption) MapComplex64(f func(rune) complex64) Complex64Option { return MapComplex64ToRuneOption(m, f) }
func (m RuneOption) MapComplex128(f func(rune) complex128) Complex128Option { return MapComplex128ToRuneOption(m, f) }
func (m RuneOption) MapAny(f func(rune) Any) AnyOption { return MapAnyToRuneOption(m, f) }
func (m RuneOption) MapBoolOption(f func(rune) BoolOption) BoolOptionOption { return MapBoolOptionToRuneOption(m, f) }
func (m RuneOption) MapStringOption(f func(rune) StringOption) StringOptionOption { return MapStringOptionToRuneOption(m, f) }
func (m RuneOption) MapIntOption(f func(rune) IntOption) IntOptionOption { return MapIntOptionToRuneOption(m, f) }
func (m RuneOption) MapInt8Option(f func(rune) Int8Option) Int8OptionOption { return MapInt8OptionToRuneOption(m, f) }
func (m RuneOption) MapInt16Option(f func(rune) Int16Option) Int16OptionOption { return MapInt16OptionToRuneOption(m, f) }
func (m RuneOption) MapInt32Option(f func(rune) Int32Option) Int32OptionOption { return MapInt32OptionToRuneOption(m, f) }
func (m RuneOption) MapInt64Option(f func(rune) Int64Option) Int64OptionOption { return MapInt64OptionToRuneOption(m, f) }
func (m RuneOption) MapUintOption(f func(rune) UintOption) UintOptionOption { return MapUintOptionToRuneOption(m, f) }
func (m RuneOption) MapUint8Option(f func(rune) Uint8Option) Uint8OptionOption { return MapUint8OptionToRuneOption(m, f) }
func (m RuneOption) MapUint16Option(f func(rune) Uint16Option) Uint16OptionOption { return MapUint16OptionToRuneOption(m, f) }
func (m RuneOption) MapUint32Option(f func(rune) Uint32Option) Uint32OptionOption { return MapUint32OptionToRuneOption(m, f) }
func (m RuneOption) MapUint64Option(f func(rune) Uint64Option) Uint64OptionOption { return MapUint64OptionToRuneOption(m, f) }
func (m RuneOption) MapUintptrOption(f func(rune) UintptrOption) UintptrOptionOption { return MapUintptrOptionToRuneOption(m, f) }
func (m RuneOption) MapByteOption(f func(rune) ByteOption) ByteOptionOption { return MapByteOptionToRuneOption(m, f) }
func (m RuneOption) MapRuneOption(f func(rune) RuneOption) RuneOptionOption { return MapRuneOptionToRuneOption(m, f) }
func (m RuneOption) MapFloat32Option(f func(rune) Float32Option) Float32OptionOption { return MapFloat32OptionToRuneOption(m, f) }
func (m RuneOption) MapFloat64Option(f func(rune) Float64Option) Float64OptionOption { return MapFloat64OptionToRuneOption(m, f) }
func (m RuneOption) MapComplex64Option(f func(rune) Complex64Option) Complex64OptionOption { return MapComplex64OptionToRuneOption(m, f) }
func (m RuneOption) MapComplex128Option(f func(rune) Complex128Option) Complex128OptionOption { return MapComplex128OptionToRuneOption(m, f) }
func (m RuneOption) MapAnyOption(f func(rune) AnyOption) AnyOptionOption { return MapAnyOptionToRuneOption(m, f) }
func (m RuneOption) MapBoolArr(f func(rune) []bool) BoolArrOption { return MapBoolArrToRuneOption(m, f) }
func (m RuneOption) MapStringArr(f func(rune) []string) StringArrOption { return MapStringArrToRuneOption(m, f) }
func (m RuneOption) MapIntArr(f func(rune) []int) IntArrOption { return MapIntArrToRuneOption(m, f) }
func (m RuneOption) MapInt8Arr(f func(rune) []int8) Int8ArrOption { return MapInt8ArrToRuneOption(m, f) }
func (m RuneOption) MapInt16Arr(f func(rune) []int16) Int16ArrOption { return MapInt16ArrToRuneOption(m, f) }
func (m RuneOption) MapInt32Arr(f func(rune) []int32) Int32ArrOption { return MapInt32ArrToRuneOption(m, f) }
func (m RuneOption) MapInt64Arr(f func(rune) []int64) Int64ArrOption { return MapInt64ArrToRuneOption(m, f) }
func (m RuneOption) MapUintArr(f func(rune) []uint) UintArrOption { return MapUintArrToRuneOption(m, f) }
func (m RuneOption) MapUint8Arr(f func(rune) []uint8) Uint8ArrOption { return MapUint8ArrToRuneOption(m, f) }
func (m RuneOption) MapUint16Arr(f func(rune) []uint16) Uint16ArrOption { return MapUint16ArrToRuneOption(m, f) }
func (m RuneOption) MapUint32Arr(f func(rune) []uint32) Uint32ArrOption { return MapUint32ArrToRuneOption(m, f) }
func (m RuneOption) MapUint64Arr(f func(rune) []uint64) Uint64ArrOption { return MapUint64ArrToRuneOption(m, f) }
func (m RuneOption) MapUintptrArr(f func(rune) []uintptr) UintptrArrOption { return MapUintptrArrToRuneOption(m, f) }
func (m RuneOption) MapByteArr(f func(rune) []byte) ByteArrOption { return MapByteArrToRuneOption(m, f) }
func (m RuneOption) MapRuneArr(f func(rune) []rune) RuneArrOption { return MapRuneArrToRuneOption(m, f) }
func (m RuneOption) MapFloat32Arr(f func(rune) []float32) Float32ArrOption { return MapFloat32ArrToRuneOption(m, f) }
func (m RuneOption) MapFloat64Arr(f func(rune) []float64) Float64ArrOption { return MapFloat64ArrToRuneOption(m, f) }
func (m RuneOption) MapComplex64Arr(f func(rune) []complex64) Complex64ArrOption { return MapComplex64ArrToRuneOption(m, f) }
func (m RuneOption) MapComplex128Arr(f func(rune) []complex128) Complex128ArrOption { return MapComplex128ArrToRuneOption(m, f) }
func (m RuneOption) MapAnyArr(f func(rune) []Any) AnyArrOption { return MapAnyArrToRuneOption(m, f) }
func (m RuneOption) MapBoolList(f func(rune) BoolList) BoolListOption { return MapBoolListToRuneOption(m, f) }
func (m RuneOption) MapStringList(f func(rune) StringList) StringListOption { return MapStringListToRuneOption(m, f) }
func (m RuneOption) MapIntList(f func(rune) IntList) IntListOption { return MapIntListToRuneOption(m, f) }
func (m RuneOption) MapInt8List(f func(rune) Int8List) Int8ListOption { return MapInt8ListToRuneOption(m, f) }
func (m RuneOption) MapInt16List(f func(rune) Int16List) Int16ListOption { return MapInt16ListToRuneOption(m, f) }
func (m RuneOption) MapInt32List(f func(rune) Int32List) Int32ListOption { return MapInt32ListToRuneOption(m, f) }
func (m RuneOption) MapInt64List(f func(rune) Int64List) Int64ListOption { return MapInt64ListToRuneOption(m, f) }
func (m RuneOption) MapUintList(f func(rune) UintList) UintListOption { return MapUintListToRuneOption(m, f) }
func (m RuneOption) MapUint8List(f func(rune) Uint8List) Uint8ListOption { return MapUint8ListToRuneOption(m, f) }
func (m RuneOption) MapUint16List(f func(rune) Uint16List) Uint16ListOption { return MapUint16ListToRuneOption(m, f) }
func (m RuneOption) MapUint32List(f func(rune) Uint32List) Uint32ListOption { return MapUint32ListToRuneOption(m, f) }
func (m RuneOption) MapUint64List(f func(rune) Uint64List) Uint64ListOption { return MapUint64ListToRuneOption(m, f) }
func (m RuneOption) MapUintptrList(f func(rune) UintptrList) UintptrListOption { return MapUintptrListToRuneOption(m, f) }
func (m RuneOption) MapByteList(f func(rune) ByteList) ByteListOption { return MapByteListToRuneOption(m, f) }
func (m RuneOption) MapRuneList(f func(rune) RuneList) RuneListOption { return MapRuneListToRuneOption(m, f) }
func (m RuneOption) MapFloat32List(f func(rune) Float32List) Float32ListOption { return MapFloat32ListToRuneOption(m, f) }
func (m RuneOption) MapFloat64List(f func(rune) Float64List) Float64ListOption { return MapFloat64ListToRuneOption(m, f) }
func (m RuneOption) MapComplex64List(f func(rune) Complex64List) Complex64ListOption { return MapComplex64ListToRuneOption(m, f) }
func (m RuneOption) MapComplex128List(f func(rune) Complex128List) Complex128ListOption { return MapComplex128ListToRuneOption(m, f) }
func (m RuneOption) MapAnyList(f func(rune) AnyList) AnyListOption { return MapAnyListToRuneOption(m, f) }
func (m Float32Option) MapBool(f func(float32) bool) BoolOption { return MapBoolToFloat32Option(m, f) }
func (m Float32Option) MapString(f func(float32) string) StringOption { return MapStringToFloat32Option(m, f) }
func (m Float32Option) MapInt(f func(float32) int) IntOption { return MapIntToFloat32Option(m, f) }
func (m Float32Option) MapInt8(f func(float32) int8) Int8Option { return MapInt8ToFloat32Option(m, f) }
func (m Float32Option) MapInt16(f func(float32) int16) Int16Option { return MapInt16ToFloat32Option(m, f) }
func (m Float32Option) MapInt32(f func(float32) int32) Int32Option { return MapInt32ToFloat32Option(m, f) }
func (m Float32Option) MapInt64(f func(float32) int64) Int64Option { return MapInt64ToFloat32Option(m, f) }
func (m Float32Option) MapUint(f func(float32) uint) UintOption { return MapUintToFloat32Option(m, f) }
func (m Float32Option) MapUint8(f func(float32) uint8) Uint8Option { return MapUint8ToFloat32Option(m, f) }
func (m Float32Option) MapUint16(f func(float32) uint16) Uint16Option { return MapUint16ToFloat32Option(m, f) }
func (m Float32Option) MapUint32(f func(float32) uint32) Uint32Option { return MapUint32ToFloat32Option(m, f) }
func (m Float32Option) MapUint64(f func(float32) uint64) Uint64Option { return MapUint64ToFloat32Option(m, f) }
func (m Float32Option) MapUintptr(f func(float32) uintptr) UintptrOption { return MapUintptrToFloat32Option(m, f) }
func (m Float32Option) MapByte(f func(float32) byte) ByteOption { return MapByteToFloat32Option(m, f) }
func (m Float32Option) MapRune(f func(float32) rune) RuneOption { return MapRuneToFloat32Option(m, f) }
func (m Float32Option) MapFloat32(f func(float32) float32) Float32Option { return MapFloat32ToFloat32Option(m, f) }
func (m Float32Option) MapFloat64(f func(float32) float64) Float64Option { return MapFloat64ToFloat32Option(m, f) }
func (m Float32Option) MapComplex64(f func(float32) complex64) Complex64Option { return MapComplex64ToFloat32Option(m, f) }
func (m Float32Option) MapComplex128(f func(float32) complex128) Complex128Option { return MapComplex128ToFloat32Option(m, f) }
func (m Float32Option) MapAny(f func(float32) Any) AnyOption { return MapAnyToFloat32Option(m, f) }
func (m Float32Option) MapBoolOption(f func(float32) BoolOption) BoolOptionOption { return MapBoolOptionToFloat32Option(m, f) }
func (m Float32Option) MapStringOption(f func(float32) StringOption) StringOptionOption { return MapStringOptionToFloat32Option(m, f) }
func (m Float32Option) MapIntOption(f func(float32) IntOption) IntOptionOption { return MapIntOptionToFloat32Option(m, f) }
func (m Float32Option) MapInt8Option(f func(float32) Int8Option) Int8OptionOption { return MapInt8OptionToFloat32Option(m, f) }
func (m Float32Option) MapInt16Option(f func(float32) Int16Option) Int16OptionOption { return MapInt16OptionToFloat32Option(m, f) }
func (m Float32Option) MapInt32Option(f func(float32) Int32Option) Int32OptionOption { return MapInt32OptionToFloat32Option(m, f) }
func (m Float32Option) MapInt64Option(f func(float32) Int64Option) Int64OptionOption { return MapInt64OptionToFloat32Option(m, f) }
func (m Float32Option) MapUintOption(f func(float32) UintOption) UintOptionOption { return MapUintOptionToFloat32Option(m, f) }
func (m Float32Option) MapUint8Option(f func(float32) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat32Option(m, f) }
func (m Float32Option) MapUint16Option(f func(float32) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat32Option(m, f) }
func (m Float32Option) MapUint32Option(f func(float32) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat32Option(m, f) }
func (m Float32Option) MapUint64Option(f func(float32) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat32Option(m, f) }
func (m Float32Option) MapUintptrOption(f func(float32) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat32Option(m, f) }
func (m Float32Option) MapByteOption(f func(float32) ByteOption) ByteOptionOption { return MapByteOptionToFloat32Option(m, f) }
func (m Float32Option) MapRuneOption(f func(float32) RuneOption) RuneOptionOption { return MapRuneOptionToFloat32Option(m, f) }
func (m Float32Option) MapFloat32Option(f func(float32) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat32Option(m, f) }
func (m Float32Option) MapFloat64Option(f func(float32) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat32Option(m, f) }
func (m Float32Option) MapComplex64Option(f func(float32) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat32Option(m, f) }
func (m Float32Option) MapComplex128Option(f func(float32) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat32Option(m, f) }
func (m Float32Option) MapAnyOption(f func(float32) AnyOption) AnyOptionOption { return MapAnyOptionToFloat32Option(m, f) }
func (m Float32Option) MapBoolArr(f func(float32) []bool) BoolArrOption { return MapBoolArrToFloat32Option(m, f) }
func (m Float32Option) MapStringArr(f func(float32) []string) StringArrOption { return MapStringArrToFloat32Option(m, f) }
func (m Float32Option) MapIntArr(f func(float32) []int) IntArrOption { return MapIntArrToFloat32Option(m, f) }
func (m Float32Option) MapInt8Arr(f func(float32) []int8) Int8ArrOption { return MapInt8ArrToFloat32Option(m, f) }
func (m Float32Option) MapInt16Arr(f func(float32) []int16) Int16ArrOption { return MapInt16ArrToFloat32Option(m, f) }
func (m Float32Option) MapInt32Arr(f func(float32) []int32) Int32ArrOption { return MapInt32ArrToFloat32Option(m, f) }
func (m Float32Option) MapInt64Arr(f func(float32) []int64) Int64ArrOption { return MapInt64ArrToFloat32Option(m, f) }
func (m Float32Option) MapUintArr(f func(float32) []uint) UintArrOption { return MapUintArrToFloat32Option(m, f) }
func (m Float32Option) MapUint8Arr(f func(float32) []uint8) Uint8ArrOption { return MapUint8ArrToFloat32Option(m, f) }
func (m Float32Option) MapUint16Arr(f func(float32) []uint16) Uint16ArrOption { return MapUint16ArrToFloat32Option(m, f) }
func (m Float32Option) MapUint32Arr(f func(float32) []uint32) Uint32ArrOption { return MapUint32ArrToFloat32Option(m, f) }
func (m Float32Option) MapUint64Arr(f func(float32) []uint64) Uint64ArrOption { return MapUint64ArrToFloat32Option(m, f) }
func (m Float32Option) MapUintptrArr(f func(float32) []uintptr) UintptrArrOption { return MapUintptrArrToFloat32Option(m, f) }
func (m Float32Option) MapByteArr(f func(float32) []byte) ByteArrOption { return MapByteArrToFloat32Option(m, f) }
func (m Float32Option) MapRuneArr(f func(float32) []rune) RuneArrOption { return MapRuneArrToFloat32Option(m, f) }
func (m Float32Option) MapFloat32Arr(f func(float32) []float32) Float32ArrOption { return MapFloat32ArrToFloat32Option(m, f) }
func (m Float32Option) MapFloat64Arr(f func(float32) []float64) Float64ArrOption { return MapFloat64ArrToFloat32Option(m, f) }
func (m Float32Option) MapComplex64Arr(f func(float32) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat32Option(m, f) }
func (m Float32Option) MapComplex128Arr(f func(float32) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat32Option(m, f) }
func (m Float32Option) MapAnyArr(f func(float32) []Any) AnyArrOption { return MapAnyArrToFloat32Option(m, f) }
func (m Float32Option) MapBoolList(f func(float32) BoolList) BoolListOption { return MapBoolListToFloat32Option(m, f) }
func (m Float32Option) MapStringList(f func(float32) StringList) StringListOption { return MapStringListToFloat32Option(m, f) }
func (m Float32Option) MapIntList(f func(float32) IntList) IntListOption { return MapIntListToFloat32Option(m, f) }
func (m Float32Option) MapInt8List(f func(float32) Int8List) Int8ListOption { return MapInt8ListToFloat32Option(m, f) }
func (m Float32Option) MapInt16List(f func(float32) Int16List) Int16ListOption { return MapInt16ListToFloat32Option(m, f) }
func (m Float32Option) MapInt32List(f func(float32) Int32List) Int32ListOption { return MapInt32ListToFloat32Option(m, f) }
func (m Float32Option) MapInt64List(f func(float32) Int64List) Int64ListOption { return MapInt64ListToFloat32Option(m, f) }
func (m Float32Option) MapUintList(f func(float32) UintList) UintListOption { return MapUintListToFloat32Option(m, f) }
func (m Float32Option) MapUint8List(f func(float32) Uint8List) Uint8ListOption { return MapUint8ListToFloat32Option(m, f) }
func (m Float32Option) MapUint16List(f func(float32) Uint16List) Uint16ListOption { return MapUint16ListToFloat32Option(m, f) }
func (m Float32Option) MapUint32List(f func(float32) Uint32List) Uint32ListOption { return MapUint32ListToFloat32Option(m, f) }
func (m Float32Option) MapUint64List(f func(float32) Uint64List) Uint64ListOption { return MapUint64ListToFloat32Option(m, f) }
func (m Float32Option) MapUintptrList(f func(float32) UintptrList) UintptrListOption { return MapUintptrListToFloat32Option(m, f) }
func (m Float32Option) MapByteList(f func(float32) ByteList) ByteListOption { return MapByteListToFloat32Option(m, f) }
func (m Float32Option) MapRuneList(f func(float32) RuneList) RuneListOption { return MapRuneListToFloat32Option(m, f) }
func (m Float32Option) MapFloat32List(f func(float32) Float32List) Float32ListOption { return MapFloat32ListToFloat32Option(m, f) }
func (m Float32Option) MapFloat64List(f func(float32) Float64List) Float64ListOption { return MapFloat64ListToFloat32Option(m, f) }
func (m Float32Option) MapComplex64List(f func(float32) Complex64List) Complex64ListOption { return MapComplex64ListToFloat32Option(m, f) }
func (m Float32Option) MapComplex128List(f func(float32) Complex128List) Complex128ListOption { return MapComplex128ListToFloat32Option(m, f) }
func (m Float32Option) MapAnyList(f func(float32) AnyList) AnyListOption { return MapAnyListToFloat32Option(m, f) }
func (m Float64Option) MapBool(f func(float64) bool) BoolOption { return MapBoolToFloat64Option(m, f) }
func (m Float64Option) MapString(f func(float64) string) StringOption { return MapStringToFloat64Option(m, f) }
func (m Float64Option) MapInt(f func(float64) int) IntOption { return MapIntToFloat64Option(m, f) }
func (m Float64Option) MapInt8(f func(float64) int8) Int8Option { return MapInt8ToFloat64Option(m, f) }
func (m Float64Option) MapInt16(f func(float64) int16) Int16Option { return MapInt16ToFloat64Option(m, f) }
func (m Float64Option) MapInt32(f func(float64) int32) Int32Option { return MapInt32ToFloat64Option(m, f) }
func (m Float64Option) MapInt64(f func(float64) int64) Int64Option { return MapInt64ToFloat64Option(m, f) }
func (m Float64Option) MapUint(f func(float64) uint) UintOption { return MapUintToFloat64Option(m, f) }
func (m Float64Option) MapUint8(f func(float64) uint8) Uint8Option { return MapUint8ToFloat64Option(m, f) }
func (m Float64Option) MapUint16(f func(float64) uint16) Uint16Option { return MapUint16ToFloat64Option(m, f) }
func (m Float64Option) MapUint32(f func(float64) uint32) Uint32Option { return MapUint32ToFloat64Option(m, f) }
func (m Float64Option) MapUint64(f func(float64) uint64) Uint64Option { return MapUint64ToFloat64Option(m, f) }
func (m Float64Option) MapUintptr(f func(float64) uintptr) UintptrOption { return MapUintptrToFloat64Option(m, f) }
func (m Float64Option) MapByte(f func(float64) byte) ByteOption { return MapByteToFloat64Option(m, f) }
func (m Float64Option) MapRune(f func(float64) rune) RuneOption { return MapRuneToFloat64Option(m, f) }
func (m Float64Option) MapFloat32(f func(float64) float32) Float32Option { return MapFloat32ToFloat64Option(m, f) }
func (m Float64Option) MapFloat64(f func(float64) float64) Float64Option { return MapFloat64ToFloat64Option(m, f) }
func (m Float64Option) MapComplex64(f func(float64) complex64) Complex64Option { return MapComplex64ToFloat64Option(m, f) }
func (m Float64Option) MapComplex128(f func(float64) complex128) Complex128Option { return MapComplex128ToFloat64Option(m, f) }
func (m Float64Option) MapAny(f func(float64) Any) AnyOption { return MapAnyToFloat64Option(m, f) }
func (m Float64Option) MapBoolOption(f func(float64) BoolOption) BoolOptionOption { return MapBoolOptionToFloat64Option(m, f) }
func (m Float64Option) MapStringOption(f func(float64) StringOption) StringOptionOption { return MapStringOptionToFloat64Option(m, f) }
func (m Float64Option) MapIntOption(f func(float64) IntOption) IntOptionOption { return MapIntOptionToFloat64Option(m, f) }
func (m Float64Option) MapInt8Option(f func(float64) Int8Option) Int8OptionOption { return MapInt8OptionToFloat64Option(m, f) }
func (m Float64Option) MapInt16Option(f func(float64) Int16Option) Int16OptionOption { return MapInt16OptionToFloat64Option(m, f) }
func (m Float64Option) MapInt32Option(f func(float64) Int32Option) Int32OptionOption { return MapInt32OptionToFloat64Option(m, f) }
func (m Float64Option) MapInt64Option(f func(float64) Int64Option) Int64OptionOption { return MapInt64OptionToFloat64Option(m, f) }
func (m Float64Option) MapUintOption(f func(float64) UintOption) UintOptionOption { return MapUintOptionToFloat64Option(m, f) }
func (m Float64Option) MapUint8Option(f func(float64) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat64Option(m, f) }
func (m Float64Option) MapUint16Option(f func(float64) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat64Option(m, f) }
func (m Float64Option) MapUint32Option(f func(float64) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat64Option(m, f) }
func (m Float64Option) MapUint64Option(f func(float64) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat64Option(m, f) }
func (m Float64Option) MapUintptrOption(f func(float64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat64Option(m, f) }
func (m Float64Option) MapByteOption(f func(float64) ByteOption) ByteOptionOption { return MapByteOptionToFloat64Option(m, f) }
func (m Float64Option) MapRuneOption(f func(float64) RuneOption) RuneOptionOption { return MapRuneOptionToFloat64Option(m, f) }
func (m Float64Option) MapFloat32Option(f func(float64) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat64Option(m, f) }
func (m Float64Option) MapFloat64Option(f func(float64) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat64Option(m, f) }
func (m Float64Option) MapComplex64Option(f func(float64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat64Option(m, f) }
func (m Float64Option) MapComplex128Option(f func(float64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat64Option(m, f) }
func (m Float64Option) MapAnyOption(f func(float64) AnyOption) AnyOptionOption { return MapAnyOptionToFloat64Option(m, f) }
func (m Float64Option) MapBoolArr(f func(float64) []bool) BoolArrOption { return MapBoolArrToFloat64Option(m, f) }
func (m Float64Option) MapStringArr(f func(float64) []string) StringArrOption { return MapStringArrToFloat64Option(m, f) }
func (m Float64Option) MapIntArr(f func(float64) []int) IntArrOption { return MapIntArrToFloat64Option(m, f) }
func (m Float64Option) MapInt8Arr(f func(float64) []int8) Int8ArrOption { return MapInt8ArrToFloat64Option(m, f) }
func (m Float64Option) MapInt16Arr(f func(float64) []int16) Int16ArrOption { return MapInt16ArrToFloat64Option(m, f) }
func (m Float64Option) MapInt32Arr(f func(float64) []int32) Int32ArrOption { return MapInt32ArrToFloat64Option(m, f) }
func (m Float64Option) MapInt64Arr(f func(float64) []int64) Int64ArrOption { return MapInt64ArrToFloat64Option(m, f) }
func (m Float64Option) MapUintArr(f func(float64) []uint) UintArrOption { return MapUintArrToFloat64Option(m, f) }
func (m Float64Option) MapUint8Arr(f func(float64) []uint8) Uint8ArrOption { return MapUint8ArrToFloat64Option(m, f) }
func (m Float64Option) MapUint16Arr(f func(float64) []uint16) Uint16ArrOption { return MapUint16ArrToFloat64Option(m, f) }
func (m Float64Option) MapUint32Arr(f func(float64) []uint32) Uint32ArrOption { return MapUint32ArrToFloat64Option(m, f) }
func (m Float64Option) MapUint64Arr(f func(float64) []uint64) Uint64ArrOption { return MapUint64ArrToFloat64Option(m, f) }
func (m Float64Option) MapUintptrArr(f func(float64) []uintptr) UintptrArrOption { return MapUintptrArrToFloat64Option(m, f) }
func (m Float64Option) MapByteArr(f func(float64) []byte) ByteArrOption { return MapByteArrToFloat64Option(m, f) }
func (m Float64Option) MapRuneArr(f func(float64) []rune) RuneArrOption { return MapRuneArrToFloat64Option(m, f) }
func (m Float64Option) MapFloat32Arr(f func(float64) []float32) Float32ArrOption { return MapFloat32ArrToFloat64Option(m, f) }
func (m Float64Option) MapFloat64Arr(f func(float64) []float64) Float64ArrOption { return MapFloat64ArrToFloat64Option(m, f) }
func (m Float64Option) MapComplex64Arr(f func(float64) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat64Option(m, f) }
func (m Float64Option) MapComplex128Arr(f func(float64) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat64Option(m, f) }
func (m Float64Option) MapAnyArr(f func(float64) []Any) AnyArrOption { return MapAnyArrToFloat64Option(m, f) }
func (m Float64Option) MapBoolList(f func(float64) BoolList) BoolListOption { return MapBoolListToFloat64Option(m, f) }
func (m Float64Option) MapStringList(f func(float64) StringList) StringListOption { return MapStringListToFloat64Option(m, f) }
func (m Float64Option) MapIntList(f func(float64) IntList) IntListOption { return MapIntListToFloat64Option(m, f) }
func (m Float64Option) MapInt8List(f func(float64) Int8List) Int8ListOption { return MapInt8ListToFloat64Option(m, f) }
func (m Float64Option) MapInt16List(f func(float64) Int16List) Int16ListOption { return MapInt16ListToFloat64Option(m, f) }
func (m Float64Option) MapInt32List(f func(float64) Int32List) Int32ListOption { return MapInt32ListToFloat64Option(m, f) }
func (m Float64Option) MapInt64List(f func(float64) Int64List) Int64ListOption { return MapInt64ListToFloat64Option(m, f) }
func (m Float64Option) MapUintList(f func(float64) UintList) UintListOption { return MapUintListToFloat64Option(m, f) }
func (m Float64Option) MapUint8List(f func(float64) Uint8List) Uint8ListOption { return MapUint8ListToFloat64Option(m, f) }
func (m Float64Option) MapUint16List(f func(float64) Uint16List) Uint16ListOption { return MapUint16ListToFloat64Option(m, f) }
func (m Float64Option) MapUint32List(f func(float64) Uint32List) Uint32ListOption { return MapUint32ListToFloat64Option(m, f) }
func (m Float64Option) MapUint64List(f func(float64) Uint64List) Uint64ListOption { return MapUint64ListToFloat64Option(m, f) }
func (m Float64Option) MapUintptrList(f func(float64) UintptrList) UintptrListOption { return MapUintptrListToFloat64Option(m, f) }
func (m Float64Option) MapByteList(f func(float64) ByteList) ByteListOption { return MapByteListToFloat64Option(m, f) }
func (m Float64Option) MapRuneList(f func(float64) RuneList) RuneListOption { return MapRuneListToFloat64Option(m, f) }
func (m Float64Option) MapFloat32List(f func(float64) Float32List) Float32ListOption { return MapFloat32ListToFloat64Option(m, f) }
func (m Float64Option) MapFloat64List(f func(float64) Float64List) Float64ListOption { return MapFloat64ListToFloat64Option(m, f) }
func (m Float64Option) MapComplex64List(f func(float64) Complex64List) Complex64ListOption { return MapComplex64ListToFloat64Option(m, f) }
func (m Float64Option) MapComplex128List(f func(float64) Complex128List) Complex128ListOption { return MapComplex128ListToFloat64Option(m, f) }
func (m Float64Option) MapAnyList(f func(float64) AnyList) AnyListOption { return MapAnyListToFloat64Option(m, f) }
func (m Complex64Option) MapBool(f func(complex64) bool) BoolOption { return MapBoolToComplex64Option(m, f) }
func (m Complex64Option) MapString(f func(complex64) string) StringOption { return MapStringToComplex64Option(m, f) }
func (m Complex64Option) MapInt(f func(complex64) int) IntOption { return MapIntToComplex64Option(m, f) }
func (m Complex64Option) MapInt8(f func(complex64) int8) Int8Option { return MapInt8ToComplex64Option(m, f) }
func (m Complex64Option) MapInt16(f func(complex64) int16) Int16Option { return MapInt16ToComplex64Option(m, f) }
func (m Complex64Option) MapInt32(f func(complex64) int32) Int32Option { return MapInt32ToComplex64Option(m, f) }
func (m Complex64Option) MapInt64(f func(complex64) int64) Int64Option { return MapInt64ToComplex64Option(m, f) }
func (m Complex64Option) MapUint(f func(complex64) uint) UintOption { return MapUintToComplex64Option(m, f) }
func (m Complex64Option) MapUint8(f func(complex64) uint8) Uint8Option { return MapUint8ToComplex64Option(m, f) }
func (m Complex64Option) MapUint16(f func(complex64) uint16) Uint16Option { return MapUint16ToComplex64Option(m, f) }
func (m Complex64Option) MapUint32(f func(complex64) uint32) Uint32Option { return MapUint32ToComplex64Option(m, f) }
func (m Complex64Option) MapUint64(f func(complex64) uint64) Uint64Option { return MapUint64ToComplex64Option(m, f) }
func (m Complex64Option) MapUintptr(f func(complex64) uintptr) UintptrOption { return MapUintptrToComplex64Option(m, f) }
func (m Complex64Option) MapByte(f func(complex64) byte) ByteOption { return MapByteToComplex64Option(m, f) }
func (m Complex64Option) MapRune(f func(complex64) rune) RuneOption { return MapRuneToComplex64Option(m, f) }
func (m Complex64Option) MapFloat32(f func(complex64) float32) Float32Option { return MapFloat32ToComplex64Option(m, f) }
func (m Complex64Option) MapFloat64(f func(complex64) float64) Float64Option { return MapFloat64ToComplex64Option(m, f) }
func (m Complex64Option) MapComplex64(f func(complex64) complex64) Complex64Option { return MapComplex64ToComplex64Option(m, f) }
func (m Complex64Option) MapComplex128(f func(complex64) complex128) Complex128Option { return MapComplex128ToComplex64Option(m, f) }
func (m Complex64Option) MapAny(f func(complex64) Any) AnyOption { return MapAnyToComplex64Option(m, f) }
func (m Complex64Option) MapBoolOption(f func(complex64) BoolOption) BoolOptionOption { return MapBoolOptionToComplex64Option(m, f) }
func (m Complex64Option) MapStringOption(f func(complex64) StringOption) StringOptionOption { return MapStringOptionToComplex64Option(m, f) }
func (m Complex64Option) MapIntOption(f func(complex64) IntOption) IntOptionOption { return MapIntOptionToComplex64Option(m, f) }
func (m Complex64Option) MapInt8Option(f func(complex64) Int8Option) Int8OptionOption { return MapInt8OptionToComplex64Option(m, f) }
func (m Complex64Option) MapInt16Option(f func(complex64) Int16Option) Int16OptionOption { return MapInt16OptionToComplex64Option(m, f) }
func (m Complex64Option) MapInt32Option(f func(complex64) Int32Option) Int32OptionOption { return MapInt32OptionToComplex64Option(m, f) }
func (m Complex64Option) MapInt64Option(f func(complex64) Int64Option) Int64OptionOption { return MapInt64OptionToComplex64Option(m, f) }
func (m Complex64Option) MapUintOption(f func(complex64) UintOption) UintOptionOption { return MapUintOptionToComplex64Option(m, f) }
func (m Complex64Option) MapUint8Option(f func(complex64) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex64Option(m, f) }
func (m Complex64Option) MapUint16Option(f func(complex64) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex64Option(m, f) }
func (m Complex64Option) MapUint32Option(f func(complex64) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex64Option(m, f) }
func (m Complex64Option) MapUint64Option(f func(complex64) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex64Option(m, f) }
func (m Complex64Option) MapUintptrOption(f func(complex64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex64Option(m, f) }
func (m Complex64Option) MapByteOption(f func(complex64) ByteOption) ByteOptionOption { return MapByteOptionToComplex64Option(m, f) }
func (m Complex64Option) MapRuneOption(f func(complex64) RuneOption) RuneOptionOption { return MapRuneOptionToComplex64Option(m, f) }
func (m Complex64Option) MapFloat32Option(f func(complex64) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex64Option(m, f) }
func (m Complex64Option) MapFloat64Option(f func(complex64) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex64Option(m, f) }
func (m Complex64Option) MapComplex64Option(f func(complex64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex64Option(m, f) }
func (m Complex64Option) MapComplex128Option(f func(complex64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex64Option(m, f) }
func (m Complex64Option) MapAnyOption(f func(complex64) AnyOption) AnyOptionOption { return MapAnyOptionToComplex64Option(m, f) }
func (m Complex64Option) MapBoolArr(f func(complex64) []bool) BoolArrOption { return MapBoolArrToComplex64Option(m, f) }
func (m Complex64Option) MapStringArr(f func(complex64) []string) StringArrOption { return MapStringArrToComplex64Option(m, f) }
func (m Complex64Option) MapIntArr(f func(complex64) []int) IntArrOption { return MapIntArrToComplex64Option(m, f) }
func (m Complex64Option) MapInt8Arr(f func(complex64) []int8) Int8ArrOption { return MapInt8ArrToComplex64Option(m, f) }
func (m Complex64Option) MapInt16Arr(f func(complex64) []int16) Int16ArrOption { return MapInt16ArrToComplex64Option(m, f) }
func (m Complex64Option) MapInt32Arr(f func(complex64) []int32) Int32ArrOption { return MapInt32ArrToComplex64Option(m, f) }
func (m Complex64Option) MapInt64Arr(f func(complex64) []int64) Int64ArrOption { return MapInt64ArrToComplex64Option(m, f) }
func (m Complex64Option) MapUintArr(f func(complex64) []uint) UintArrOption { return MapUintArrToComplex64Option(m, f) }
func (m Complex64Option) MapUint8Arr(f func(complex64) []uint8) Uint8ArrOption { return MapUint8ArrToComplex64Option(m, f) }
func (m Complex64Option) MapUint16Arr(f func(complex64) []uint16) Uint16ArrOption { return MapUint16ArrToComplex64Option(m, f) }
func (m Complex64Option) MapUint32Arr(f func(complex64) []uint32) Uint32ArrOption { return MapUint32ArrToComplex64Option(m, f) }
func (m Complex64Option) MapUint64Arr(f func(complex64) []uint64) Uint64ArrOption { return MapUint64ArrToComplex64Option(m, f) }
func (m Complex64Option) MapUintptrArr(f func(complex64) []uintptr) UintptrArrOption { return MapUintptrArrToComplex64Option(m, f) }
func (m Complex64Option) MapByteArr(f func(complex64) []byte) ByteArrOption { return MapByteArrToComplex64Option(m, f) }
func (m Complex64Option) MapRuneArr(f func(complex64) []rune) RuneArrOption { return MapRuneArrToComplex64Option(m, f) }
func (m Complex64Option) MapFloat32Arr(f func(complex64) []float32) Float32ArrOption { return MapFloat32ArrToComplex64Option(m, f) }
func (m Complex64Option) MapFloat64Arr(f func(complex64) []float64) Float64ArrOption { return MapFloat64ArrToComplex64Option(m, f) }
func (m Complex64Option) MapComplex64Arr(f func(complex64) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex64Option(m, f) }
func (m Complex64Option) MapComplex128Arr(f func(complex64) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex64Option(m, f) }
func (m Complex64Option) MapAnyArr(f func(complex64) []Any) AnyArrOption { return MapAnyArrToComplex64Option(m, f) }
func (m Complex64Option) MapBoolList(f func(complex64) BoolList) BoolListOption { return MapBoolListToComplex64Option(m, f) }
func (m Complex64Option) MapStringList(f func(complex64) StringList) StringListOption { return MapStringListToComplex64Option(m, f) }
func (m Complex64Option) MapIntList(f func(complex64) IntList) IntListOption { return MapIntListToComplex64Option(m, f) }
func (m Complex64Option) MapInt8List(f func(complex64) Int8List) Int8ListOption { return MapInt8ListToComplex64Option(m, f) }
func (m Complex64Option) MapInt16List(f func(complex64) Int16List) Int16ListOption { return MapInt16ListToComplex64Option(m, f) }
func (m Complex64Option) MapInt32List(f func(complex64) Int32List) Int32ListOption { return MapInt32ListToComplex64Option(m, f) }
func (m Complex64Option) MapInt64List(f func(complex64) Int64List) Int64ListOption { return MapInt64ListToComplex64Option(m, f) }
func (m Complex64Option) MapUintList(f func(complex64) UintList) UintListOption { return MapUintListToComplex64Option(m, f) }
func (m Complex64Option) MapUint8List(f func(complex64) Uint8List) Uint8ListOption { return MapUint8ListToComplex64Option(m, f) }
func (m Complex64Option) MapUint16List(f func(complex64) Uint16List) Uint16ListOption { return MapUint16ListToComplex64Option(m, f) }
func (m Complex64Option) MapUint32List(f func(complex64) Uint32List) Uint32ListOption { return MapUint32ListToComplex64Option(m, f) }
func (m Complex64Option) MapUint64List(f func(complex64) Uint64List) Uint64ListOption { return MapUint64ListToComplex64Option(m, f) }
func (m Complex64Option) MapUintptrList(f func(complex64) UintptrList) UintptrListOption { return MapUintptrListToComplex64Option(m, f) }
func (m Complex64Option) MapByteList(f func(complex64) ByteList) ByteListOption { return MapByteListToComplex64Option(m, f) }
func (m Complex64Option) MapRuneList(f func(complex64) RuneList) RuneListOption { return MapRuneListToComplex64Option(m, f) }
func (m Complex64Option) MapFloat32List(f func(complex64) Float32List) Float32ListOption { return MapFloat32ListToComplex64Option(m, f) }
func (m Complex64Option) MapFloat64List(f func(complex64) Float64List) Float64ListOption { return MapFloat64ListToComplex64Option(m, f) }
func (m Complex64Option) MapComplex64List(f func(complex64) Complex64List) Complex64ListOption { return MapComplex64ListToComplex64Option(m, f) }
func (m Complex64Option) MapComplex128List(f func(complex64) Complex128List) Complex128ListOption { return MapComplex128ListToComplex64Option(m, f) }
func (m Complex64Option) MapAnyList(f func(complex64) AnyList) AnyListOption { return MapAnyListToComplex64Option(m, f) }
func (m Complex128Option) MapBool(f func(complex128) bool) BoolOption { return MapBoolToComplex128Option(m, f) }
func (m Complex128Option) MapString(f func(complex128) string) StringOption { return MapStringToComplex128Option(m, f) }
func (m Complex128Option) MapInt(f func(complex128) int) IntOption { return MapIntToComplex128Option(m, f) }
func (m Complex128Option) MapInt8(f func(complex128) int8) Int8Option { return MapInt8ToComplex128Option(m, f) }
func (m Complex128Option) MapInt16(f func(complex128) int16) Int16Option { return MapInt16ToComplex128Option(m, f) }
func (m Complex128Option) MapInt32(f func(complex128) int32) Int32Option { return MapInt32ToComplex128Option(m, f) }
func (m Complex128Option) MapInt64(f func(complex128) int64) Int64Option { return MapInt64ToComplex128Option(m, f) }
func (m Complex128Option) MapUint(f func(complex128) uint) UintOption { return MapUintToComplex128Option(m, f) }
func (m Complex128Option) MapUint8(f func(complex128) uint8) Uint8Option { return MapUint8ToComplex128Option(m, f) }
func (m Complex128Option) MapUint16(f func(complex128) uint16) Uint16Option { return MapUint16ToComplex128Option(m, f) }
func (m Complex128Option) MapUint32(f func(complex128) uint32) Uint32Option { return MapUint32ToComplex128Option(m, f) }
func (m Complex128Option) MapUint64(f func(complex128) uint64) Uint64Option { return MapUint64ToComplex128Option(m, f) }
func (m Complex128Option) MapUintptr(f func(complex128) uintptr) UintptrOption { return MapUintptrToComplex128Option(m, f) }
func (m Complex128Option) MapByte(f func(complex128) byte) ByteOption { return MapByteToComplex128Option(m, f) }
func (m Complex128Option) MapRune(f func(complex128) rune) RuneOption { return MapRuneToComplex128Option(m, f) }
func (m Complex128Option) MapFloat32(f func(complex128) float32) Float32Option { return MapFloat32ToComplex128Option(m, f) }
func (m Complex128Option) MapFloat64(f func(complex128) float64) Float64Option { return MapFloat64ToComplex128Option(m, f) }
func (m Complex128Option) MapComplex64(f func(complex128) complex64) Complex64Option { return MapComplex64ToComplex128Option(m, f) }
func (m Complex128Option) MapComplex128(f func(complex128) complex128) Complex128Option { return MapComplex128ToComplex128Option(m, f) }
func (m Complex128Option) MapAny(f func(complex128) Any) AnyOption { return MapAnyToComplex128Option(m, f) }
func (m Complex128Option) MapBoolOption(f func(complex128) BoolOption) BoolOptionOption { return MapBoolOptionToComplex128Option(m, f) }
func (m Complex128Option) MapStringOption(f func(complex128) StringOption) StringOptionOption { return MapStringOptionToComplex128Option(m, f) }
func (m Complex128Option) MapIntOption(f func(complex128) IntOption) IntOptionOption { return MapIntOptionToComplex128Option(m, f) }
func (m Complex128Option) MapInt8Option(f func(complex128) Int8Option) Int8OptionOption { return MapInt8OptionToComplex128Option(m, f) }
func (m Complex128Option) MapInt16Option(f func(complex128) Int16Option) Int16OptionOption { return MapInt16OptionToComplex128Option(m, f) }
func (m Complex128Option) MapInt32Option(f func(complex128) Int32Option) Int32OptionOption { return MapInt32OptionToComplex128Option(m, f) }
func (m Complex128Option) MapInt64Option(f func(complex128) Int64Option) Int64OptionOption { return MapInt64OptionToComplex128Option(m, f) }
func (m Complex128Option) MapUintOption(f func(complex128) UintOption) UintOptionOption { return MapUintOptionToComplex128Option(m, f) }
func (m Complex128Option) MapUint8Option(f func(complex128) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex128Option(m, f) }
func (m Complex128Option) MapUint16Option(f func(complex128) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex128Option(m, f) }
func (m Complex128Option) MapUint32Option(f func(complex128) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex128Option(m, f) }
func (m Complex128Option) MapUint64Option(f func(complex128) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex128Option(m, f) }
func (m Complex128Option) MapUintptrOption(f func(complex128) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex128Option(m, f) }
func (m Complex128Option) MapByteOption(f func(complex128) ByteOption) ByteOptionOption { return MapByteOptionToComplex128Option(m, f) }
func (m Complex128Option) MapRuneOption(f func(complex128) RuneOption) RuneOptionOption { return MapRuneOptionToComplex128Option(m, f) }
func (m Complex128Option) MapFloat32Option(f func(complex128) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex128Option(m, f) }
func (m Complex128Option) MapFloat64Option(f func(complex128) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex128Option(m, f) }
func (m Complex128Option) MapComplex64Option(f func(complex128) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex128Option(m, f) }
func (m Complex128Option) MapComplex128Option(f func(complex128) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex128Option(m, f) }
func (m Complex128Option) MapAnyOption(f func(complex128) AnyOption) AnyOptionOption { return MapAnyOptionToComplex128Option(m, f) }
func (m Complex128Option) MapBoolArr(f func(complex128) []bool) BoolArrOption { return MapBoolArrToComplex128Option(m, f) }
func (m Complex128Option) MapStringArr(f func(complex128) []string) StringArrOption { return MapStringArrToComplex128Option(m, f) }
func (m Complex128Option) MapIntArr(f func(complex128) []int) IntArrOption { return MapIntArrToComplex128Option(m, f) }
func (m Complex128Option) MapInt8Arr(f func(complex128) []int8) Int8ArrOption { return MapInt8ArrToComplex128Option(m, f) }
func (m Complex128Option) MapInt16Arr(f func(complex128) []int16) Int16ArrOption { return MapInt16ArrToComplex128Option(m, f) }
func (m Complex128Option) MapInt32Arr(f func(complex128) []int32) Int32ArrOption { return MapInt32ArrToComplex128Option(m, f) }
func (m Complex128Option) MapInt64Arr(f func(complex128) []int64) Int64ArrOption { return MapInt64ArrToComplex128Option(m, f) }
func (m Complex128Option) MapUintArr(f func(complex128) []uint) UintArrOption { return MapUintArrToComplex128Option(m, f) }
func (m Complex128Option) MapUint8Arr(f func(complex128) []uint8) Uint8ArrOption { return MapUint8ArrToComplex128Option(m, f) }
func (m Complex128Option) MapUint16Arr(f func(complex128) []uint16) Uint16ArrOption { return MapUint16ArrToComplex128Option(m, f) }
func (m Complex128Option) MapUint32Arr(f func(complex128) []uint32) Uint32ArrOption { return MapUint32ArrToComplex128Option(m, f) }
func (m Complex128Option) MapUint64Arr(f func(complex128) []uint64) Uint64ArrOption { return MapUint64ArrToComplex128Option(m, f) }
func (m Complex128Option) MapUintptrArr(f func(complex128) []uintptr) UintptrArrOption { return MapUintptrArrToComplex128Option(m, f) }
func (m Complex128Option) MapByteArr(f func(complex128) []byte) ByteArrOption { return MapByteArrToComplex128Option(m, f) }
func (m Complex128Option) MapRuneArr(f func(complex128) []rune) RuneArrOption { return MapRuneArrToComplex128Option(m, f) }
func (m Complex128Option) MapFloat32Arr(f func(complex128) []float32) Float32ArrOption { return MapFloat32ArrToComplex128Option(m, f) }
func (m Complex128Option) MapFloat64Arr(f func(complex128) []float64) Float64ArrOption { return MapFloat64ArrToComplex128Option(m, f) }
func (m Complex128Option) MapComplex64Arr(f func(complex128) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex128Option(m, f) }
func (m Complex128Option) MapComplex128Arr(f func(complex128) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex128Option(m, f) }
func (m Complex128Option) MapAnyArr(f func(complex128) []Any) AnyArrOption { return MapAnyArrToComplex128Option(m, f) }
func (m Complex128Option) MapBoolList(f func(complex128) BoolList) BoolListOption { return MapBoolListToComplex128Option(m, f) }
func (m Complex128Option) MapStringList(f func(complex128) StringList) StringListOption { return MapStringListToComplex128Option(m, f) }
func (m Complex128Option) MapIntList(f func(complex128) IntList) IntListOption { return MapIntListToComplex128Option(m, f) }
func (m Complex128Option) MapInt8List(f func(complex128) Int8List) Int8ListOption { return MapInt8ListToComplex128Option(m, f) }
func (m Complex128Option) MapInt16List(f func(complex128) Int16List) Int16ListOption { return MapInt16ListToComplex128Option(m, f) }
func (m Complex128Option) MapInt32List(f func(complex128) Int32List) Int32ListOption { return MapInt32ListToComplex128Option(m, f) }
func (m Complex128Option) MapInt64List(f func(complex128) Int64List) Int64ListOption { return MapInt64ListToComplex128Option(m, f) }
func (m Complex128Option) MapUintList(f func(complex128) UintList) UintListOption { return MapUintListToComplex128Option(m, f) }
func (m Complex128Option) MapUint8List(f func(complex128) Uint8List) Uint8ListOption { return MapUint8ListToComplex128Option(m, f) }
func (m Complex128Option) MapUint16List(f func(complex128) Uint16List) Uint16ListOption { return MapUint16ListToComplex128Option(m, f) }
func (m Complex128Option) MapUint32List(f func(complex128) Uint32List) Uint32ListOption { return MapUint32ListToComplex128Option(m, f) }
func (m Complex128Option) MapUint64List(f func(complex128) Uint64List) Uint64ListOption { return MapUint64ListToComplex128Option(m, f) }
func (m Complex128Option) MapUintptrList(f func(complex128) UintptrList) UintptrListOption { return MapUintptrListToComplex128Option(m, f) }
func (m Complex128Option) MapByteList(f func(complex128) ByteList) ByteListOption { return MapByteListToComplex128Option(m, f) }
func (m Complex128Option) MapRuneList(f func(complex128) RuneList) RuneListOption { return MapRuneListToComplex128Option(m, f) }
func (m Complex128Option) MapFloat32List(f func(complex128) Float32List) Float32ListOption { return MapFloat32ListToComplex128Option(m, f) }
func (m Complex128Option) MapFloat64List(f func(complex128) Float64List) Float64ListOption { return MapFloat64ListToComplex128Option(m, f) }
func (m Complex128Option) MapComplex64List(f func(complex128) Complex64List) Complex64ListOption { return MapComplex64ListToComplex128Option(m, f) }
func (m Complex128Option) MapComplex128List(f func(complex128) Complex128List) Complex128ListOption { return MapComplex128ListToComplex128Option(m, f) }
func (m Complex128Option) MapAnyList(f func(complex128) AnyList) AnyListOption { return MapAnyListToComplex128Option(m, f) }
func (m AnyOption) MapBool(f func(Any) bool) BoolOption { return MapBoolToAnyOption(m, f) }
func (m AnyOption) MapString(f func(Any) string) StringOption { return MapStringToAnyOption(m, f) }
func (m AnyOption) MapInt(f func(Any) int) IntOption { return MapIntToAnyOption(m, f) }
func (m AnyOption) MapInt8(f func(Any) int8) Int8Option { return MapInt8ToAnyOption(m, f) }
func (m AnyOption) MapInt16(f func(Any) int16) Int16Option { return MapInt16ToAnyOption(m, f) }
func (m AnyOption) MapInt32(f func(Any) int32) Int32Option { return MapInt32ToAnyOption(m, f) }
func (m AnyOption) MapInt64(f func(Any) int64) Int64Option { return MapInt64ToAnyOption(m, f) }
func (m AnyOption) MapUint(f func(Any) uint) UintOption { return MapUintToAnyOption(m, f) }
func (m AnyOption) MapUint8(f func(Any) uint8) Uint8Option { return MapUint8ToAnyOption(m, f) }
func (m AnyOption) MapUint16(f func(Any) uint16) Uint16Option { return MapUint16ToAnyOption(m, f) }
func (m AnyOption) MapUint32(f func(Any) uint32) Uint32Option { return MapUint32ToAnyOption(m, f) }
func (m AnyOption) MapUint64(f func(Any) uint64) Uint64Option { return MapUint64ToAnyOption(m, f) }
func (m AnyOption) MapUintptr(f func(Any) uintptr) UintptrOption { return MapUintptrToAnyOption(m, f) }
func (m AnyOption) MapByte(f func(Any) byte) ByteOption { return MapByteToAnyOption(m, f) }
func (m AnyOption) MapRune(f func(Any) rune) RuneOption { return MapRuneToAnyOption(m, f) }
func (m AnyOption) MapFloat32(f func(Any) float32) Float32Option { return MapFloat32ToAnyOption(m, f) }
func (m AnyOption) MapFloat64(f func(Any) float64) Float64Option { return MapFloat64ToAnyOption(m, f) }
func (m AnyOption) MapComplex64(f func(Any) complex64) Complex64Option { return MapComplex64ToAnyOption(m, f) }
func (m AnyOption) MapComplex128(f func(Any) complex128) Complex128Option { return MapComplex128ToAnyOption(m, f) }
func (m AnyOption) MapAny(f func(Any) Any) AnyOption { return MapAnyToAnyOption(m, f) }
func (m AnyOption) MapBoolOption(f func(Any) BoolOption) BoolOptionOption { return MapBoolOptionToAnyOption(m, f) }
func (m AnyOption) MapStringOption(f func(Any) StringOption) StringOptionOption { return MapStringOptionToAnyOption(m, f) }
func (m AnyOption) MapIntOption(f func(Any) IntOption) IntOptionOption { return MapIntOptionToAnyOption(m, f) }
func (m AnyOption) MapInt8Option(f func(Any) Int8Option) Int8OptionOption { return MapInt8OptionToAnyOption(m, f) }
func (m AnyOption) MapInt16Option(f func(Any) Int16Option) Int16OptionOption { return MapInt16OptionToAnyOption(m, f) }
func (m AnyOption) MapInt32Option(f func(Any) Int32Option) Int32OptionOption { return MapInt32OptionToAnyOption(m, f) }
func (m AnyOption) MapInt64Option(f func(Any) Int64Option) Int64OptionOption { return MapInt64OptionToAnyOption(m, f) }
func (m AnyOption) MapUintOption(f func(Any) UintOption) UintOptionOption { return MapUintOptionToAnyOption(m, f) }
func (m AnyOption) MapUint8Option(f func(Any) Uint8Option) Uint8OptionOption { return MapUint8OptionToAnyOption(m, f) }
func (m AnyOption) MapUint16Option(f func(Any) Uint16Option) Uint16OptionOption { return MapUint16OptionToAnyOption(m, f) }
func (m AnyOption) MapUint32Option(f func(Any) Uint32Option) Uint32OptionOption { return MapUint32OptionToAnyOption(m, f) }
func (m AnyOption) MapUint64Option(f func(Any) Uint64Option) Uint64OptionOption { return MapUint64OptionToAnyOption(m, f) }
func (m AnyOption) MapUintptrOption(f func(Any) UintptrOption) UintptrOptionOption { return MapUintptrOptionToAnyOption(m, f) }
func (m AnyOption) MapByteOption(f func(Any) ByteOption) ByteOptionOption { return MapByteOptionToAnyOption(m, f) }
func (m AnyOption) MapRuneOption(f func(Any) RuneOption) RuneOptionOption { return MapRuneOptionToAnyOption(m, f) }
func (m AnyOption) MapFloat32Option(f func(Any) Float32Option) Float32OptionOption { return MapFloat32OptionToAnyOption(m, f) }
func (m AnyOption) MapFloat64Option(f func(Any) Float64Option) Float64OptionOption { return MapFloat64OptionToAnyOption(m, f) }
func (m AnyOption) MapComplex64Option(f func(Any) Complex64Option) Complex64OptionOption { return MapComplex64OptionToAnyOption(m, f) }
func (m AnyOption) MapComplex128Option(f func(Any) Complex128Option) Complex128OptionOption { return MapComplex128OptionToAnyOption(m, f) }
func (m AnyOption) MapAnyOption(f func(Any) AnyOption) AnyOptionOption { return MapAnyOptionToAnyOption(m, f) }
func (m AnyOption) MapBoolArr(f func(Any) []bool) BoolArrOption { return MapBoolArrToAnyOption(m, f) }
func (m AnyOption) MapStringArr(f func(Any) []string) StringArrOption { return MapStringArrToAnyOption(m, f) }
func (m AnyOption) MapIntArr(f func(Any) []int) IntArrOption { return MapIntArrToAnyOption(m, f) }
func (m AnyOption) MapInt8Arr(f func(Any) []int8) Int8ArrOption { return MapInt8ArrToAnyOption(m, f) }
func (m AnyOption) MapInt16Arr(f func(Any) []int16) Int16ArrOption { return MapInt16ArrToAnyOption(m, f) }
func (m AnyOption) MapInt32Arr(f func(Any) []int32) Int32ArrOption { return MapInt32ArrToAnyOption(m, f) }
func (m AnyOption) MapInt64Arr(f func(Any) []int64) Int64ArrOption { return MapInt64ArrToAnyOption(m, f) }
func (m AnyOption) MapUintArr(f func(Any) []uint) UintArrOption { return MapUintArrToAnyOption(m, f) }
func (m AnyOption) MapUint8Arr(f func(Any) []uint8) Uint8ArrOption { return MapUint8ArrToAnyOption(m, f) }
func (m AnyOption) MapUint16Arr(f func(Any) []uint16) Uint16ArrOption { return MapUint16ArrToAnyOption(m, f) }
func (m AnyOption) MapUint32Arr(f func(Any) []uint32) Uint32ArrOption { return MapUint32ArrToAnyOption(m, f) }
func (m AnyOption) MapUint64Arr(f func(Any) []uint64) Uint64ArrOption { return MapUint64ArrToAnyOption(m, f) }
func (m AnyOption) MapUintptrArr(f func(Any) []uintptr) UintptrArrOption { return MapUintptrArrToAnyOption(m, f) }
func (m AnyOption) MapByteArr(f func(Any) []byte) ByteArrOption { return MapByteArrToAnyOption(m, f) }
func (m AnyOption) MapRuneArr(f func(Any) []rune) RuneArrOption { return MapRuneArrToAnyOption(m, f) }
func (m AnyOption) MapFloat32Arr(f func(Any) []float32) Float32ArrOption { return MapFloat32ArrToAnyOption(m, f) }
func (m AnyOption) MapFloat64Arr(f func(Any) []float64) Float64ArrOption { return MapFloat64ArrToAnyOption(m, f) }
func (m AnyOption) MapComplex64Arr(f func(Any) []complex64) Complex64ArrOption { return MapComplex64ArrToAnyOption(m, f) }
func (m AnyOption) MapComplex128Arr(f func(Any) []complex128) Complex128ArrOption { return MapComplex128ArrToAnyOption(m, f) }
func (m AnyOption) MapAnyArr(f func(Any) []Any) AnyArrOption { return MapAnyArrToAnyOption(m, f) }
func (m AnyOption) MapBoolList(f func(Any) BoolList) BoolListOption { return MapBoolListToAnyOption(m, f) }
func (m AnyOption) MapStringList(f func(Any) StringList) StringListOption { return MapStringListToAnyOption(m, f) }
func (m AnyOption) MapIntList(f func(Any) IntList) IntListOption { return MapIntListToAnyOption(m, f) }
func (m AnyOption) MapInt8List(f func(Any) Int8List) Int8ListOption { return MapInt8ListToAnyOption(m, f) }
func (m AnyOption) MapInt16List(f func(Any) Int16List) Int16ListOption { return MapInt16ListToAnyOption(m, f) }
func (m AnyOption) MapInt32List(f func(Any) Int32List) Int32ListOption { return MapInt32ListToAnyOption(m, f) }
func (m AnyOption) MapInt64List(f func(Any) Int64List) Int64ListOption { return MapInt64ListToAnyOption(m, f) }
func (m AnyOption) MapUintList(f func(Any) UintList) UintListOption { return MapUintListToAnyOption(m, f) }
func (m AnyOption) MapUint8List(f func(Any) Uint8List) Uint8ListOption { return MapUint8ListToAnyOption(m, f) }
func (m AnyOption) MapUint16List(f func(Any) Uint16List) Uint16ListOption { return MapUint16ListToAnyOption(m, f) }
func (m AnyOption) MapUint32List(f func(Any) Uint32List) Uint32ListOption { return MapUint32ListToAnyOption(m, f) }
func (m AnyOption) MapUint64List(f func(Any) Uint64List) Uint64ListOption { return MapUint64ListToAnyOption(m, f) }
func (m AnyOption) MapUintptrList(f func(Any) UintptrList) UintptrListOption { return MapUintptrListToAnyOption(m, f) }
func (m AnyOption) MapByteList(f func(Any) ByteList) ByteListOption { return MapByteListToAnyOption(m, f) }
func (m AnyOption) MapRuneList(f func(Any) RuneList) RuneListOption { return MapRuneListToAnyOption(m, f) }
func (m AnyOption) MapFloat32List(f func(Any) Float32List) Float32ListOption { return MapFloat32ListToAnyOption(m, f) }
func (m AnyOption) MapFloat64List(f func(Any) Float64List) Float64ListOption { return MapFloat64ListToAnyOption(m, f) }
func (m AnyOption) MapComplex64List(f func(Any) Complex64List) Complex64ListOption { return MapComplex64ListToAnyOption(m, f) }
func (m AnyOption) MapComplex128List(f func(Any) Complex128List) Complex128ListOption { return MapComplex128ListToAnyOption(m, f) }
func (m AnyOption) MapAnyList(f func(Any) AnyList) AnyListOption { return MapAnyListToAnyOption(m, f) }
func (m BoolArrOption) MapBool(f func([]bool) bool) BoolOption { return MapBoolToBoolArrOption(m, f) }
func (m BoolArrOption) MapString(f func([]bool) string) StringOption { return MapStringToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt(f func([]bool) int) IntOption { return MapIntToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt8(f func([]bool) int8) Int8Option { return MapInt8ToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt16(f func([]bool) int16) Int16Option { return MapInt16ToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt32(f func([]bool) int32) Int32Option { return MapInt32ToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt64(f func([]bool) int64) Int64Option { return MapInt64ToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint(f func([]bool) uint) UintOption { return MapUintToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint8(f func([]bool) uint8) Uint8Option { return MapUint8ToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint16(f func([]bool) uint16) Uint16Option { return MapUint16ToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint32(f func([]bool) uint32) Uint32Option { return MapUint32ToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint64(f func([]bool) uint64) Uint64Option { return MapUint64ToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintptr(f func([]bool) uintptr) UintptrOption { return MapUintptrToBoolArrOption(m, f) }
func (m BoolArrOption) MapByte(f func([]bool) byte) ByteOption { return MapByteToBoolArrOption(m, f) }
func (m BoolArrOption) MapRune(f func([]bool) rune) RuneOption { return MapRuneToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat32(f func([]bool) float32) Float32Option { return MapFloat32ToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat64(f func([]bool) float64) Float64Option { return MapFloat64ToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex64(f func([]bool) complex64) Complex64Option { return MapComplex64ToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex128(f func([]bool) complex128) Complex128Option { return MapComplex128ToBoolArrOption(m, f) }
func (m BoolArrOption) MapAny(f func([]bool) Any) AnyOption { return MapAnyToBoolArrOption(m, f) }
func (m BoolArrOption) MapBoolOption(f func([]bool) BoolOption) BoolOptionOption { return MapBoolOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapStringOption(f func([]bool) StringOption) StringOptionOption { return MapStringOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapIntOption(f func([]bool) IntOption) IntOptionOption { return MapIntOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt8Option(f func([]bool) Int8Option) Int8OptionOption { return MapInt8OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt16Option(f func([]bool) Int16Option) Int16OptionOption { return MapInt16OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt32Option(f func([]bool) Int32Option) Int32OptionOption { return MapInt32OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt64Option(f func([]bool) Int64Option) Int64OptionOption { return MapInt64OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintOption(f func([]bool) UintOption) UintOptionOption { return MapUintOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint8Option(f func([]bool) Uint8Option) Uint8OptionOption { return MapUint8OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint16Option(f func([]bool) Uint16Option) Uint16OptionOption { return MapUint16OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint32Option(f func([]bool) Uint32Option) Uint32OptionOption { return MapUint32OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint64Option(f func([]bool) Uint64Option) Uint64OptionOption { return MapUint64OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintptrOption(f func([]bool) UintptrOption) UintptrOptionOption { return MapUintptrOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapByteOption(f func([]bool) ByteOption) ByteOptionOption { return MapByteOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapRuneOption(f func([]bool) RuneOption) RuneOptionOption { return MapRuneOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat32Option(f func([]bool) Float32Option) Float32OptionOption { return MapFloat32OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat64Option(f func([]bool) Float64Option) Float64OptionOption { return MapFloat64OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex64Option(f func([]bool) Complex64Option) Complex64OptionOption { return MapComplex64OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex128Option(f func([]bool) Complex128Option) Complex128OptionOption { return MapComplex128OptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapAnyOption(f func([]bool) AnyOption) AnyOptionOption { return MapAnyOptionToBoolArrOption(m, f) }
func (m BoolArrOption) MapBoolArr(f func([]bool) []bool) BoolArrOption { return MapBoolArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapStringArr(f func([]bool) []string) StringArrOption { return MapStringArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapIntArr(f func([]bool) []int) IntArrOption { return MapIntArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt8Arr(f func([]bool) []int8) Int8ArrOption { return MapInt8ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt16Arr(f func([]bool) []int16) Int16ArrOption { return MapInt16ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt32Arr(f func([]bool) []int32) Int32ArrOption { return MapInt32ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt64Arr(f func([]bool) []int64) Int64ArrOption { return MapInt64ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintArr(f func([]bool) []uint) UintArrOption { return MapUintArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint8Arr(f func([]bool) []uint8) Uint8ArrOption { return MapUint8ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint16Arr(f func([]bool) []uint16) Uint16ArrOption { return MapUint16ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint32Arr(f func([]bool) []uint32) Uint32ArrOption { return MapUint32ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint64Arr(f func([]bool) []uint64) Uint64ArrOption { return MapUint64ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintptrArr(f func([]bool) []uintptr) UintptrArrOption { return MapUintptrArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapByteArr(f func([]bool) []byte) ByteArrOption { return MapByteArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapRuneArr(f func([]bool) []rune) RuneArrOption { return MapRuneArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat32Arr(f func([]bool) []float32) Float32ArrOption { return MapFloat32ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat64Arr(f func([]bool) []float64) Float64ArrOption { return MapFloat64ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex64Arr(f func([]bool) []complex64) Complex64ArrOption { return MapComplex64ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex128Arr(f func([]bool) []complex128) Complex128ArrOption { return MapComplex128ArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapAnyArr(f func([]bool) []Any) AnyArrOption { return MapAnyArrToBoolArrOption(m, f) }
func (m BoolArrOption) MapBoolList(f func([]bool) BoolList) BoolListOption { return MapBoolListToBoolArrOption(m, f) }
func (m BoolArrOption) MapStringList(f func([]bool) StringList) StringListOption { return MapStringListToBoolArrOption(m, f) }
func (m BoolArrOption) MapIntList(f func([]bool) IntList) IntListOption { return MapIntListToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt8List(f func([]bool) Int8List) Int8ListOption { return MapInt8ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt16List(f func([]bool) Int16List) Int16ListOption { return MapInt16ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt32List(f func([]bool) Int32List) Int32ListOption { return MapInt32ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapInt64List(f func([]bool) Int64List) Int64ListOption { return MapInt64ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintList(f func([]bool) UintList) UintListOption { return MapUintListToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint8List(f func([]bool) Uint8List) Uint8ListOption { return MapUint8ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint16List(f func([]bool) Uint16List) Uint16ListOption { return MapUint16ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint32List(f func([]bool) Uint32List) Uint32ListOption { return MapUint32ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapUint64List(f func([]bool) Uint64List) Uint64ListOption { return MapUint64ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapUintptrList(f func([]bool) UintptrList) UintptrListOption { return MapUintptrListToBoolArrOption(m, f) }
func (m BoolArrOption) MapByteList(f func([]bool) ByteList) ByteListOption { return MapByteListToBoolArrOption(m, f) }
func (m BoolArrOption) MapRuneList(f func([]bool) RuneList) RuneListOption { return MapRuneListToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat32List(f func([]bool) Float32List) Float32ListOption { return MapFloat32ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapFloat64List(f func([]bool) Float64List) Float64ListOption { return MapFloat64ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex64List(f func([]bool) Complex64List) Complex64ListOption { return MapComplex64ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapComplex128List(f func([]bool) Complex128List) Complex128ListOption { return MapComplex128ListToBoolArrOption(m, f) }
func (m BoolArrOption) MapAnyList(f func([]bool) AnyList) AnyListOption { return MapAnyListToBoolArrOption(m, f) }
func (m StringArrOption) MapBool(f func([]string) bool) BoolOption { return MapBoolToStringArrOption(m, f) }
func (m StringArrOption) MapString(f func([]string) string) StringOption { return MapStringToStringArrOption(m, f) }
func (m StringArrOption) MapInt(f func([]string) int) IntOption { return MapIntToStringArrOption(m, f) }
func (m StringArrOption) MapInt8(f func([]string) int8) Int8Option { return MapInt8ToStringArrOption(m, f) }
func (m StringArrOption) MapInt16(f func([]string) int16) Int16Option { return MapInt16ToStringArrOption(m, f) }
func (m StringArrOption) MapInt32(f func([]string) int32) Int32Option { return MapInt32ToStringArrOption(m, f) }
func (m StringArrOption) MapInt64(f func([]string) int64) Int64Option { return MapInt64ToStringArrOption(m, f) }
func (m StringArrOption) MapUint(f func([]string) uint) UintOption { return MapUintToStringArrOption(m, f) }
func (m StringArrOption) MapUint8(f func([]string) uint8) Uint8Option { return MapUint8ToStringArrOption(m, f) }
func (m StringArrOption) MapUint16(f func([]string) uint16) Uint16Option { return MapUint16ToStringArrOption(m, f) }
func (m StringArrOption) MapUint32(f func([]string) uint32) Uint32Option { return MapUint32ToStringArrOption(m, f) }
func (m StringArrOption) MapUint64(f func([]string) uint64) Uint64Option { return MapUint64ToStringArrOption(m, f) }
func (m StringArrOption) MapUintptr(f func([]string) uintptr) UintptrOption { return MapUintptrToStringArrOption(m, f) }
func (m StringArrOption) MapByte(f func([]string) byte) ByteOption { return MapByteToStringArrOption(m, f) }
func (m StringArrOption) MapRune(f func([]string) rune) RuneOption { return MapRuneToStringArrOption(m, f) }
func (m StringArrOption) MapFloat32(f func([]string) float32) Float32Option { return MapFloat32ToStringArrOption(m, f) }
func (m StringArrOption) MapFloat64(f func([]string) float64) Float64Option { return MapFloat64ToStringArrOption(m, f) }
func (m StringArrOption) MapComplex64(f func([]string) complex64) Complex64Option { return MapComplex64ToStringArrOption(m, f) }
func (m StringArrOption) MapComplex128(f func([]string) complex128) Complex128Option { return MapComplex128ToStringArrOption(m, f) }
func (m StringArrOption) MapAny(f func([]string) Any) AnyOption { return MapAnyToStringArrOption(m, f) }
func (m StringArrOption) MapBoolOption(f func([]string) BoolOption) BoolOptionOption { return MapBoolOptionToStringArrOption(m, f) }
func (m StringArrOption) MapStringOption(f func([]string) StringOption) StringOptionOption { return MapStringOptionToStringArrOption(m, f) }
func (m StringArrOption) MapIntOption(f func([]string) IntOption) IntOptionOption { return MapIntOptionToStringArrOption(m, f) }
func (m StringArrOption) MapInt8Option(f func([]string) Int8Option) Int8OptionOption { return MapInt8OptionToStringArrOption(m, f) }
func (m StringArrOption) MapInt16Option(f func([]string) Int16Option) Int16OptionOption { return MapInt16OptionToStringArrOption(m, f) }
func (m StringArrOption) MapInt32Option(f func([]string) Int32Option) Int32OptionOption { return MapInt32OptionToStringArrOption(m, f) }
func (m StringArrOption) MapInt64Option(f func([]string) Int64Option) Int64OptionOption { return MapInt64OptionToStringArrOption(m, f) }
func (m StringArrOption) MapUintOption(f func([]string) UintOption) UintOptionOption { return MapUintOptionToStringArrOption(m, f) }
func (m StringArrOption) MapUint8Option(f func([]string) Uint8Option) Uint8OptionOption { return MapUint8OptionToStringArrOption(m, f) }
func (m StringArrOption) MapUint16Option(f func([]string) Uint16Option) Uint16OptionOption { return MapUint16OptionToStringArrOption(m, f) }
func (m StringArrOption) MapUint32Option(f func([]string) Uint32Option) Uint32OptionOption { return MapUint32OptionToStringArrOption(m, f) }
func (m StringArrOption) MapUint64Option(f func([]string) Uint64Option) Uint64OptionOption { return MapUint64OptionToStringArrOption(m, f) }
func (m StringArrOption) MapUintptrOption(f func([]string) UintptrOption) UintptrOptionOption { return MapUintptrOptionToStringArrOption(m, f) }
func (m StringArrOption) MapByteOption(f func([]string) ByteOption) ByteOptionOption { return MapByteOptionToStringArrOption(m, f) }
func (m StringArrOption) MapRuneOption(f func([]string) RuneOption) RuneOptionOption { return MapRuneOptionToStringArrOption(m, f) }
func (m StringArrOption) MapFloat32Option(f func([]string) Float32Option) Float32OptionOption { return MapFloat32OptionToStringArrOption(m, f) }
func (m StringArrOption) MapFloat64Option(f func([]string) Float64Option) Float64OptionOption { return MapFloat64OptionToStringArrOption(m, f) }
func (m StringArrOption) MapComplex64Option(f func([]string) Complex64Option) Complex64OptionOption { return MapComplex64OptionToStringArrOption(m, f) }
func (m StringArrOption) MapComplex128Option(f func([]string) Complex128Option) Complex128OptionOption { return MapComplex128OptionToStringArrOption(m, f) }
func (m StringArrOption) MapAnyOption(f func([]string) AnyOption) AnyOptionOption { return MapAnyOptionToStringArrOption(m, f) }
func (m StringArrOption) MapBoolArr(f func([]string) []bool) BoolArrOption { return MapBoolArrToStringArrOption(m, f) }
func (m StringArrOption) MapStringArr(f func([]string) []string) StringArrOption { return MapStringArrToStringArrOption(m, f) }
func (m StringArrOption) MapIntArr(f func([]string) []int) IntArrOption { return MapIntArrToStringArrOption(m, f) }
func (m StringArrOption) MapInt8Arr(f func([]string) []int8) Int8ArrOption { return MapInt8ArrToStringArrOption(m, f) }
func (m StringArrOption) MapInt16Arr(f func([]string) []int16) Int16ArrOption { return MapInt16ArrToStringArrOption(m, f) }
func (m StringArrOption) MapInt32Arr(f func([]string) []int32) Int32ArrOption { return MapInt32ArrToStringArrOption(m, f) }
func (m StringArrOption) MapInt64Arr(f func([]string) []int64) Int64ArrOption { return MapInt64ArrToStringArrOption(m, f) }
func (m StringArrOption) MapUintArr(f func([]string) []uint) UintArrOption { return MapUintArrToStringArrOption(m, f) }
func (m StringArrOption) MapUint8Arr(f func([]string) []uint8) Uint8ArrOption { return MapUint8ArrToStringArrOption(m, f) }
func (m StringArrOption) MapUint16Arr(f func([]string) []uint16) Uint16ArrOption { return MapUint16ArrToStringArrOption(m, f) }
func (m StringArrOption) MapUint32Arr(f func([]string) []uint32) Uint32ArrOption { return MapUint32ArrToStringArrOption(m, f) }
func (m StringArrOption) MapUint64Arr(f func([]string) []uint64) Uint64ArrOption { return MapUint64ArrToStringArrOption(m, f) }
func (m StringArrOption) MapUintptrArr(f func([]string) []uintptr) UintptrArrOption { return MapUintptrArrToStringArrOption(m, f) }
func (m StringArrOption) MapByteArr(f func([]string) []byte) ByteArrOption { return MapByteArrToStringArrOption(m, f) }
func (m StringArrOption) MapRuneArr(f func([]string) []rune) RuneArrOption { return MapRuneArrToStringArrOption(m, f) }
func (m StringArrOption) MapFloat32Arr(f func([]string) []float32) Float32ArrOption { return MapFloat32ArrToStringArrOption(m, f) }
func (m StringArrOption) MapFloat64Arr(f func([]string) []float64) Float64ArrOption { return MapFloat64ArrToStringArrOption(m, f) }
func (m StringArrOption) MapComplex64Arr(f func([]string) []complex64) Complex64ArrOption { return MapComplex64ArrToStringArrOption(m, f) }
func (m StringArrOption) MapComplex128Arr(f func([]string) []complex128) Complex128ArrOption { return MapComplex128ArrToStringArrOption(m, f) }
func (m StringArrOption) MapAnyArr(f func([]string) []Any) AnyArrOption { return MapAnyArrToStringArrOption(m, f) }
func (m StringArrOption) MapBoolList(f func([]string) BoolList) BoolListOption { return MapBoolListToStringArrOption(m, f) }
func (m StringArrOption) MapStringList(f func([]string) StringList) StringListOption { return MapStringListToStringArrOption(m, f) }
func (m StringArrOption) MapIntList(f func([]string) IntList) IntListOption { return MapIntListToStringArrOption(m, f) }
func (m StringArrOption) MapInt8List(f func([]string) Int8List) Int8ListOption { return MapInt8ListToStringArrOption(m, f) }
func (m StringArrOption) MapInt16List(f func([]string) Int16List) Int16ListOption { return MapInt16ListToStringArrOption(m, f) }
func (m StringArrOption) MapInt32List(f func([]string) Int32List) Int32ListOption { return MapInt32ListToStringArrOption(m, f) }
func (m StringArrOption) MapInt64List(f func([]string) Int64List) Int64ListOption { return MapInt64ListToStringArrOption(m, f) }
func (m StringArrOption) MapUintList(f func([]string) UintList) UintListOption { return MapUintListToStringArrOption(m, f) }
func (m StringArrOption) MapUint8List(f func([]string) Uint8List) Uint8ListOption { return MapUint8ListToStringArrOption(m, f) }
func (m StringArrOption) MapUint16List(f func([]string) Uint16List) Uint16ListOption { return MapUint16ListToStringArrOption(m, f) }
func (m StringArrOption) MapUint32List(f func([]string) Uint32List) Uint32ListOption { return MapUint32ListToStringArrOption(m, f) }
func (m StringArrOption) MapUint64List(f func([]string) Uint64List) Uint64ListOption { return MapUint64ListToStringArrOption(m, f) }
func (m StringArrOption) MapUintptrList(f func([]string) UintptrList) UintptrListOption { return MapUintptrListToStringArrOption(m, f) }
func (m StringArrOption) MapByteList(f func([]string) ByteList) ByteListOption { return MapByteListToStringArrOption(m, f) }
func (m StringArrOption) MapRuneList(f func([]string) RuneList) RuneListOption { return MapRuneListToStringArrOption(m, f) }
func (m StringArrOption) MapFloat32List(f func([]string) Float32List) Float32ListOption { return MapFloat32ListToStringArrOption(m, f) }
func (m StringArrOption) MapFloat64List(f func([]string) Float64List) Float64ListOption { return MapFloat64ListToStringArrOption(m, f) }
func (m StringArrOption) MapComplex64List(f func([]string) Complex64List) Complex64ListOption { return MapComplex64ListToStringArrOption(m, f) }
func (m StringArrOption) MapComplex128List(f func([]string) Complex128List) Complex128ListOption { return MapComplex128ListToStringArrOption(m, f) }
func (m StringArrOption) MapAnyList(f func([]string) AnyList) AnyListOption { return MapAnyListToStringArrOption(m, f) }
func (m IntArrOption) MapBool(f func([]int) bool) BoolOption { return MapBoolToIntArrOption(m, f) }
func (m IntArrOption) MapString(f func([]int) string) StringOption { return MapStringToIntArrOption(m, f) }
func (m IntArrOption) MapInt(f func([]int) int) IntOption { return MapIntToIntArrOption(m, f) }
func (m IntArrOption) MapInt8(f func([]int) int8) Int8Option { return MapInt8ToIntArrOption(m, f) }
func (m IntArrOption) MapInt16(f func([]int) int16) Int16Option { return MapInt16ToIntArrOption(m, f) }
func (m IntArrOption) MapInt32(f func([]int) int32) Int32Option { return MapInt32ToIntArrOption(m, f) }
func (m IntArrOption) MapInt64(f func([]int) int64) Int64Option { return MapInt64ToIntArrOption(m, f) }
func (m IntArrOption) MapUint(f func([]int) uint) UintOption { return MapUintToIntArrOption(m, f) }
func (m IntArrOption) MapUint8(f func([]int) uint8) Uint8Option { return MapUint8ToIntArrOption(m, f) }
func (m IntArrOption) MapUint16(f func([]int) uint16) Uint16Option { return MapUint16ToIntArrOption(m, f) }
func (m IntArrOption) MapUint32(f func([]int) uint32) Uint32Option { return MapUint32ToIntArrOption(m, f) }
func (m IntArrOption) MapUint64(f func([]int) uint64) Uint64Option { return MapUint64ToIntArrOption(m, f) }
func (m IntArrOption) MapUintptr(f func([]int) uintptr) UintptrOption { return MapUintptrToIntArrOption(m, f) }
func (m IntArrOption) MapByte(f func([]int) byte) ByteOption { return MapByteToIntArrOption(m, f) }
func (m IntArrOption) MapRune(f func([]int) rune) RuneOption { return MapRuneToIntArrOption(m, f) }
func (m IntArrOption) MapFloat32(f func([]int) float32) Float32Option { return MapFloat32ToIntArrOption(m, f) }
func (m IntArrOption) MapFloat64(f func([]int) float64) Float64Option { return MapFloat64ToIntArrOption(m, f) }
func (m IntArrOption) MapComplex64(f func([]int) complex64) Complex64Option { return MapComplex64ToIntArrOption(m, f) }
func (m IntArrOption) MapComplex128(f func([]int) complex128) Complex128Option { return MapComplex128ToIntArrOption(m, f) }
func (m IntArrOption) MapAny(f func([]int) Any) AnyOption { return MapAnyToIntArrOption(m, f) }
func (m IntArrOption) MapBoolOption(f func([]int) BoolOption) BoolOptionOption { return MapBoolOptionToIntArrOption(m, f) }
func (m IntArrOption) MapStringOption(f func([]int) StringOption) StringOptionOption { return MapStringOptionToIntArrOption(m, f) }
func (m IntArrOption) MapIntOption(f func([]int) IntOption) IntOptionOption { return MapIntOptionToIntArrOption(m, f) }
func (m IntArrOption) MapInt8Option(f func([]int) Int8Option) Int8OptionOption { return MapInt8OptionToIntArrOption(m, f) }
func (m IntArrOption) MapInt16Option(f func([]int) Int16Option) Int16OptionOption { return MapInt16OptionToIntArrOption(m, f) }
func (m IntArrOption) MapInt32Option(f func([]int) Int32Option) Int32OptionOption { return MapInt32OptionToIntArrOption(m, f) }
func (m IntArrOption) MapInt64Option(f func([]int) Int64Option) Int64OptionOption { return MapInt64OptionToIntArrOption(m, f) }
func (m IntArrOption) MapUintOption(f func([]int) UintOption) UintOptionOption { return MapUintOptionToIntArrOption(m, f) }
func (m IntArrOption) MapUint8Option(f func([]int) Uint8Option) Uint8OptionOption { return MapUint8OptionToIntArrOption(m, f) }
func (m IntArrOption) MapUint16Option(f func([]int) Uint16Option) Uint16OptionOption { return MapUint16OptionToIntArrOption(m, f) }
func (m IntArrOption) MapUint32Option(f func([]int) Uint32Option) Uint32OptionOption { return MapUint32OptionToIntArrOption(m, f) }
func (m IntArrOption) MapUint64Option(f func([]int) Uint64Option) Uint64OptionOption { return MapUint64OptionToIntArrOption(m, f) }
func (m IntArrOption) MapUintptrOption(f func([]int) UintptrOption) UintptrOptionOption { return MapUintptrOptionToIntArrOption(m, f) }
func (m IntArrOption) MapByteOption(f func([]int) ByteOption) ByteOptionOption { return MapByteOptionToIntArrOption(m, f) }
func (m IntArrOption) MapRuneOption(f func([]int) RuneOption) RuneOptionOption { return MapRuneOptionToIntArrOption(m, f) }
func (m IntArrOption) MapFloat32Option(f func([]int) Float32Option) Float32OptionOption { return MapFloat32OptionToIntArrOption(m, f) }
func (m IntArrOption) MapFloat64Option(f func([]int) Float64Option) Float64OptionOption { return MapFloat64OptionToIntArrOption(m, f) }
func (m IntArrOption) MapComplex64Option(f func([]int) Complex64Option) Complex64OptionOption { return MapComplex64OptionToIntArrOption(m, f) }
func (m IntArrOption) MapComplex128Option(f func([]int) Complex128Option) Complex128OptionOption { return MapComplex128OptionToIntArrOption(m, f) }
func (m IntArrOption) MapAnyOption(f func([]int) AnyOption) AnyOptionOption { return MapAnyOptionToIntArrOption(m, f) }
func (m IntArrOption) MapBoolArr(f func([]int) []bool) BoolArrOption { return MapBoolArrToIntArrOption(m, f) }
func (m IntArrOption) MapStringArr(f func([]int) []string) StringArrOption { return MapStringArrToIntArrOption(m, f) }
func (m IntArrOption) MapIntArr(f func([]int) []int) IntArrOption { return MapIntArrToIntArrOption(m, f) }
func (m IntArrOption) MapInt8Arr(f func([]int) []int8) Int8ArrOption { return MapInt8ArrToIntArrOption(m, f) }
func (m IntArrOption) MapInt16Arr(f func([]int) []int16) Int16ArrOption { return MapInt16ArrToIntArrOption(m, f) }
func (m IntArrOption) MapInt32Arr(f func([]int) []int32) Int32ArrOption { return MapInt32ArrToIntArrOption(m, f) }
func (m IntArrOption) MapInt64Arr(f func([]int) []int64) Int64ArrOption { return MapInt64ArrToIntArrOption(m, f) }
func (m IntArrOption) MapUintArr(f func([]int) []uint) UintArrOption { return MapUintArrToIntArrOption(m, f) }
func (m IntArrOption) MapUint8Arr(f func([]int) []uint8) Uint8ArrOption { return MapUint8ArrToIntArrOption(m, f) }
func (m IntArrOption) MapUint16Arr(f func([]int) []uint16) Uint16ArrOption { return MapUint16ArrToIntArrOption(m, f) }
func (m IntArrOption) MapUint32Arr(f func([]int) []uint32) Uint32ArrOption { return MapUint32ArrToIntArrOption(m, f) }
func (m IntArrOption) MapUint64Arr(f func([]int) []uint64) Uint64ArrOption { return MapUint64ArrToIntArrOption(m, f) }
func (m IntArrOption) MapUintptrArr(f func([]int) []uintptr) UintptrArrOption { return MapUintptrArrToIntArrOption(m, f) }
func (m IntArrOption) MapByteArr(f func([]int) []byte) ByteArrOption { return MapByteArrToIntArrOption(m, f) }
func (m IntArrOption) MapRuneArr(f func([]int) []rune) RuneArrOption { return MapRuneArrToIntArrOption(m, f) }
func (m IntArrOption) MapFloat32Arr(f func([]int) []float32) Float32ArrOption { return MapFloat32ArrToIntArrOption(m, f) }
func (m IntArrOption) MapFloat64Arr(f func([]int) []float64) Float64ArrOption { return MapFloat64ArrToIntArrOption(m, f) }
func (m IntArrOption) MapComplex64Arr(f func([]int) []complex64) Complex64ArrOption { return MapComplex64ArrToIntArrOption(m, f) }
func (m IntArrOption) MapComplex128Arr(f func([]int) []complex128) Complex128ArrOption { return MapComplex128ArrToIntArrOption(m, f) }
func (m IntArrOption) MapAnyArr(f func([]int) []Any) AnyArrOption { return MapAnyArrToIntArrOption(m, f) }
func (m IntArrOption) MapBoolList(f func([]int) BoolList) BoolListOption { return MapBoolListToIntArrOption(m, f) }
func (m IntArrOption) MapStringList(f func([]int) StringList) StringListOption { return MapStringListToIntArrOption(m, f) }
func (m IntArrOption) MapIntList(f func([]int) IntList) IntListOption { return MapIntListToIntArrOption(m, f) }
func (m IntArrOption) MapInt8List(f func([]int) Int8List) Int8ListOption { return MapInt8ListToIntArrOption(m, f) }
func (m IntArrOption) MapInt16List(f func([]int) Int16List) Int16ListOption { return MapInt16ListToIntArrOption(m, f) }
func (m IntArrOption) MapInt32List(f func([]int) Int32List) Int32ListOption { return MapInt32ListToIntArrOption(m, f) }
func (m IntArrOption) MapInt64List(f func([]int) Int64List) Int64ListOption { return MapInt64ListToIntArrOption(m, f) }
func (m IntArrOption) MapUintList(f func([]int) UintList) UintListOption { return MapUintListToIntArrOption(m, f) }
func (m IntArrOption) MapUint8List(f func([]int) Uint8List) Uint8ListOption { return MapUint8ListToIntArrOption(m, f) }
func (m IntArrOption) MapUint16List(f func([]int) Uint16List) Uint16ListOption { return MapUint16ListToIntArrOption(m, f) }
func (m IntArrOption) MapUint32List(f func([]int) Uint32List) Uint32ListOption { return MapUint32ListToIntArrOption(m, f) }
func (m IntArrOption) MapUint64List(f func([]int) Uint64List) Uint64ListOption { return MapUint64ListToIntArrOption(m, f) }
func (m IntArrOption) MapUintptrList(f func([]int) UintptrList) UintptrListOption { return MapUintptrListToIntArrOption(m, f) }
func (m IntArrOption) MapByteList(f func([]int) ByteList) ByteListOption { return MapByteListToIntArrOption(m, f) }
func (m IntArrOption) MapRuneList(f func([]int) RuneList) RuneListOption { return MapRuneListToIntArrOption(m, f) }
func (m IntArrOption) MapFloat32List(f func([]int) Float32List) Float32ListOption { return MapFloat32ListToIntArrOption(m, f) }
func (m IntArrOption) MapFloat64List(f func([]int) Float64List) Float64ListOption { return MapFloat64ListToIntArrOption(m, f) }
func (m IntArrOption) MapComplex64List(f func([]int) Complex64List) Complex64ListOption { return MapComplex64ListToIntArrOption(m, f) }
func (m IntArrOption) MapComplex128List(f func([]int) Complex128List) Complex128ListOption { return MapComplex128ListToIntArrOption(m, f) }
func (m IntArrOption) MapAnyList(f func([]int) AnyList) AnyListOption { return MapAnyListToIntArrOption(m, f) }
func (m Int8ArrOption) MapBool(f func([]int8) bool) BoolOption { return MapBoolToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapString(f func([]int8) string) StringOption { return MapStringToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt(f func([]int8) int) IntOption { return MapIntToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt8(f func([]int8) int8) Int8Option { return MapInt8ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt16(f func([]int8) int16) Int16Option { return MapInt16ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt32(f func([]int8) int32) Int32Option { return MapInt32ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt64(f func([]int8) int64) Int64Option { return MapInt64ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint(f func([]int8) uint) UintOption { return MapUintToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint8(f func([]int8) uint8) Uint8Option { return MapUint8ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint16(f func([]int8) uint16) Uint16Option { return MapUint16ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint32(f func([]int8) uint32) Uint32Option { return MapUint32ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint64(f func([]int8) uint64) Uint64Option { return MapUint64ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintptr(f func([]int8) uintptr) UintptrOption { return MapUintptrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapByte(f func([]int8) byte) ByteOption { return MapByteToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapRune(f func([]int8) rune) RuneOption { return MapRuneToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat32(f func([]int8) float32) Float32Option { return MapFloat32ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat64(f func([]int8) float64) Float64Option { return MapFloat64ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex64(f func([]int8) complex64) Complex64Option { return MapComplex64ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex128(f func([]int8) complex128) Complex128Option { return MapComplex128ToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapAny(f func([]int8) Any) AnyOption { return MapAnyToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapBoolOption(f func([]int8) BoolOption) BoolOptionOption { return MapBoolOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapStringOption(f func([]int8) StringOption) StringOptionOption { return MapStringOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapIntOption(f func([]int8) IntOption) IntOptionOption { return MapIntOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt8Option(f func([]int8) Int8Option) Int8OptionOption { return MapInt8OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt16Option(f func([]int8) Int16Option) Int16OptionOption { return MapInt16OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt32Option(f func([]int8) Int32Option) Int32OptionOption { return MapInt32OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt64Option(f func([]int8) Int64Option) Int64OptionOption { return MapInt64OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintOption(f func([]int8) UintOption) UintOptionOption { return MapUintOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint8Option(f func([]int8) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint16Option(f func([]int8) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint32Option(f func([]int8) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint64Option(f func([]int8) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintptrOption(f func([]int8) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapByteOption(f func([]int8) ByteOption) ByteOptionOption { return MapByteOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapRuneOption(f func([]int8) RuneOption) RuneOptionOption { return MapRuneOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat32Option(f func([]int8) Float32Option) Float32OptionOption { return MapFloat32OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat64Option(f func([]int8) Float64Option) Float64OptionOption { return MapFloat64OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex64Option(f func([]int8) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex128Option(f func([]int8) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapAnyOption(f func([]int8) AnyOption) AnyOptionOption { return MapAnyOptionToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapBoolArr(f func([]int8) []bool) BoolArrOption { return MapBoolArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapStringArr(f func([]int8) []string) StringArrOption { return MapStringArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapIntArr(f func([]int8) []int) IntArrOption { return MapIntArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt8Arr(f func([]int8) []int8) Int8ArrOption { return MapInt8ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt16Arr(f func([]int8) []int16) Int16ArrOption { return MapInt16ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt32Arr(f func([]int8) []int32) Int32ArrOption { return MapInt32ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt64Arr(f func([]int8) []int64) Int64ArrOption { return MapInt64ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintArr(f func([]int8) []uint) UintArrOption { return MapUintArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint8Arr(f func([]int8) []uint8) Uint8ArrOption { return MapUint8ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint16Arr(f func([]int8) []uint16) Uint16ArrOption { return MapUint16ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint32Arr(f func([]int8) []uint32) Uint32ArrOption { return MapUint32ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint64Arr(f func([]int8) []uint64) Uint64ArrOption { return MapUint64ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintptrArr(f func([]int8) []uintptr) UintptrArrOption { return MapUintptrArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapByteArr(f func([]int8) []byte) ByteArrOption { return MapByteArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapRuneArr(f func([]int8) []rune) RuneArrOption { return MapRuneArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat32Arr(f func([]int8) []float32) Float32ArrOption { return MapFloat32ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat64Arr(f func([]int8) []float64) Float64ArrOption { return MapFloat64ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex64Arr(f func([]int8) []complex64) Complex64ArrOption { return MapComplex64ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex128Arr(f func([]int8) []complex128) Complex128ArrOption { return MapComplex128ArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapAnyArr(f func([]int8) []Any) AnyArrOption { return MapAnyArrToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapBoolList(f func([]int8) BoolList) BoolListOption { return MapBoolListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapStringList(f func([]int8) StringList) StringListOption { return MapStringListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapIntList(f func([]int8) IntList) IntListOption { return MapIntListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt8List(f func([]int8) Int8List) Int8ListOption { return MapInt8ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt16List(f func([]int8) Int16List) Int16ListOption { return MapInt16ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt32List(f func([]int8) Int32List) Int32ListOption { return MapInt32ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapInt64List(f func([]int8) Int64List) Int64ListOption { return MapInt64ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintList(f func([]int8) UintList) UintListOption { return MapUintListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint8List(f func([]int8) Uint8List) Uint8ListOption { return MapUint8ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint16List(f func([]int8) Uint16List) Uint16ListOption { return MapUint16ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint32List(f func([]int8) Uint32List) Uint32ListOption { return MapUint32ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUint64List(f func([]int8) Uint64List) Uint64ListOption { return MapUint64ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapUintptrList(f func([]int8) UintptrList) UintptrListOption { return MapUintptrListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapByteList(f func([]int8) ByteList) ByteListOption { return MapByteListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapRuneList(f func([]int8) RuneList) RuneListOption { return MapRuneListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat32List(f func([]int8) Float32List) Float32ListOption { return MapFloat32ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapFloat64List(f func([]int8) Float64List) Float64ListOption { return MapFloat64ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex64List(f func([]int8) Complex64List) Complex64ListOption { return MapComplex64ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapComplex128List(f func([]int8) Complex128List) Complex128ListOption { return MapComplex128ListToInt8ArrOption(m, f) }
func (m Int8ArrOption) MapAnyList(f func([]int8) AnyList) AnyListOption { return MapAnyListToInt8ArrOption(m, f) }
func (m Int16ArrOption) MapBool(f func([]int16) bool) BoolOption { return MapBoolToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapString(f func([]int16) string) StringOption { return MapStringToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt(f func([]int16) int) IntOption { return MapIntToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt8(f func([]int16) int8) Int8Option { return MapInt8ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt16(f func([]int16) int16) Int16Option { return MapInt16ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt32(f func([]int16) int32) Int32Option { return MapInt32ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt64(f func([]int16) int64) Int64Option { return MapInt64ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint(f func([]int16) uint) UintOption { return MapUintToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint8(f func([]int16) uint8) Uint8Option { return MapUint8ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint16(f func([]int16) uint16) Uint16Option { return MapUint16ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint32(f func([]int16) uint32) Uint32Option { return MapUint32ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint64(f func([]int16) uint64) Uint64Option { return MapUint64ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintptr(f func([]int16) uintptr) UintptrOption { return MapUintptrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapByte(f func([]int16) byte) ByteOption { return MapByteToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapRune(f func([]int16) rune) RuneOption { return MapRuneToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat32(f func([]int16) float32) Float32Option { return MapFloat32ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat64(f func([]int16) float64) Float64Option { return MapFloat64ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex64(f func([]int16) complex64) Complex64Option { return MapComplex64ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex128(f func([]int16) complex128) Complex128Option { return MapComplex128ToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapAny(f func([]int16) Any) AnyOption { return MapAnyToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapBoolOption(f func([]int16) BoolOption) BoolOptionOption { return MapBoolOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapStringOption(f func([]int16) StringOption) StringOptionOption { return MapStringOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapIntOption(f func([]int16) IntOption) IntOptionOption { return MapIntOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt8Option(f func([]int16) Int8Option) Int8OptionOption { return MapInt8OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt16Option(f func([]int16) Int16Option) Int16OptionOption { return MapInt16OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt32Option(f func([]int16) Int32Option) Int32OptionOption { return MapInt32OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt64Option(f func([]int16) Int64Option) Int64OptionOption { return MapInt64OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintOption(f func([]int16) UintOption) UintOptionOption { return MapUintOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint8Option(f func([]int16) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint16Option(f func([]int16) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint32Option(f func([]int16) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint64Option(f func([]int16) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintptrOption(f func([]int16) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapByteOption(f func([]int16) ByteOption) ByteOptionOption { return MapByteOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapRuneOption(f func([]int16) RuneOption) RuneOptionOption { return MapRuneOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat32Option(f func([]int16) Float32Option) Float32OptionOption { return MapFloat32OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat64Option(f func([]int16) Float64Option) Float64OptionOption { return MapFloat64OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex64Option(f func([]int16) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex128Option(f func([]int16) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapAnyOption(f func([]int16) AnyOption) AnyOptionOption { return MapAnyOptionToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapBoolArr(f func([]int16) []bool) BoolArrOption { return MapBoolArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapStringArr(f func([]int16) []string) StringArrOption { return MapStringArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapIntArr(f func([]int16) []int) IntArrOption { return MapIntArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt8Arr(f func([]int16) []int8) Int8ArrOption { return MapInt8ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt16Arr(f func([]int16) []int16) Int16ArrOption { return MapInt16ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt32Arr(f func([]int16) []int32) Int32ArrOption { return MapInt32ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt64Arr(f func([]int16) []int64) Int64ArrOption { return MapInt64ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintArr(f func([]int16) []uint) UintArrOption { return MapUintArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint8Arr(f func([]int16) []uint8) Uint8ArrOption { return MapUint8ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint16Arr(f func([]int16) []uint16) Uint16ArrOption { return MapUint16ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint32Arr(f func([]int16) []uint32) Uint32ArrOption { return MapUint32ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint64Arr(f func([]int16) []uint64) Uint64ArrOption { return MapUint64ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintptrArr(f func([]int16) []uintptr) UintptrArrOption { return MapUintptrArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapByteArr(f func([]int16) []byte) ByteArrOption { return MapByteArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapRuneArr(f func([]int16) []rune) RuneArrOption { return MapRuneArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat32Arr(f func([]int16) []float32) Float32ArrOption { return MapFloat32ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat64Arr(f func([]int16) []float64) Float64ArrOption { return MapFloat64ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex64Arr(f func([]int16) []complex64) Complex64ArrOption { return MapComplex64ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex128Arr(f func([]int16) []complex128) Complex128ArrOption { return MapComplex128ArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapAnyArr(f func([]int16) []Any) AnyArrOption { return MapAnyArrToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapBoolList(f func([]int16) BoolList) BoolListOption { return MapBoolListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapStringList(f func([]int16) StringList) StringListOption { return MapStringListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapIntList(f func([]int16) IntList) IntListOption { return MapIntListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt8List(f func([]int16) Int8List) Int8ListOption { return MapInt8ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt16List(f func([]int16) Int16List) Int16ListOption { return MapInt16ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt32List(f func([]int16) Int32List) Int32ListOption { return MapInt32ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapInt64List(f func([]int16) Int64List) Int64ListOption { return MapInt64ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintList(f func([]int16) UintList) UintListOption { return MapUintListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint8List(f func([]int16) Uint8List) Uint8ListOption { return MapUint8ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint16List(f func([]int16) Uint16List) Uint16ListOption { return MapUint16ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint32List(f func([]int16) Uint32List) Uint32ListOption { return MapUint32ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUint64List(f func([]int16) Uint64List) Uint64ListOption { return MapUint64ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapUintptrList(f func([]int16) UintptrList) UintptrListOption { return MapUintptrListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapByteList(f func([]int16) ByteList) ByteListOption { return MapByteListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapRuneList(f func([]int16) RuneList) RuneListOption { return MapRuneListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat32List(f func([]int16) Float32List) Float32ListOption { return MapFloat32ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapFloat64List(f func([]int16) Float64List) Float64ListOption { return MapFloat64ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex64List(f func([]int16) Complex64List) Complex64ListOption { return MapComplex64ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapComplex128List(f func([]int16) Complex128List) Complex128ListOption { return MapComplex128ListToInt16ArrOption(m, f) }
func (m Int16ArrOption) MapAnyList(f func([]int16) AnyList) AnyListOption { return MapAnyListToInt16ArrOption(m, f) }
func (m Int32ArrOption) MapBool(f func([]int32) bool) BoolOption { return MapBoolToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapString(f func([]int32) string) StringOption { return MapStringToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt(f func([]int32) int) IntOption { return MapIntToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt8(f func([]int32) int8) Int8Option { return MapInt8ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt16(f func([]int32) int16) Int16Option { return MapInt16ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt32(f func([]int32) int32) Int32Option { return MapInt32ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt64(f func([]int32) int64) Int64Option { return MapInt64ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint(f func([]int32) uint) UintOption { return MapUintToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint8(f func([]int32) uint8) Uint8Option { return MapUint8ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint16(f func([]int32) uint16) Uint16Option { return MapUint16ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint32(f func([]int32) uint32) Uint32Option { return MapUint32ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint64(f func([]int32) uint64) Uint64Option { return MapUint64ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintptr(f func([]int32) uintptr) UintptrOption { return MapUintptrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapByte(f func([]int32) byte) ByteOption { return MapByteToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapRune(f func([]int32) rune) RuneOption { return MapRuneToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat32(f func([]int32) float32) Float32Option { return MapFloat32ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat64(f func([]int32) float64) Float64Option { return MapFloat64ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex64(f func([]int32) complex64) Complex64Option { return MapComplex64ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex128(f func([]int32) complex128) Complex128Option { return MapComplex128ToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapAny(f func([]int32) Any) AnyOption { return MapAnyToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapBoolOption(f func([]int32) BoolOption) BoolOptionOption { return MapBoolOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapStringOption(f func([]int32) StringOption) StringOptionOption { return MapStringOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapIntOption(f func([]int32) IntOption) IntOptionOption { return MapIntOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt8Option(f func([]int32) Int8Option) Int8OptionOption { return MapInt8OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt16Option(f func([]int32) Int16Option) Int16OptionOption { return MapInt16OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt32Option(f func([]int32) Int32Option) Int32OptionOption { return MapInt32OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt64Option(f func([]int32) Int64Option) Int64OptionOption { return MapInt64OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintOption(f func([]int32) UintOption) UintOptionOption { return MapUintOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint8Option(f func([]int32) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint16Option(f func([]int32) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint32Option(f func([]int32) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint64Option(f func([]int32) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintptrOption(f func([]int32) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapByteOption(f func([]int32) ByteOption) ByteOptionOption { return MapByteOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapRuneOption(f func([]int32) RuneOption) RuneOptionOption { return MapRuneOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat32Option(f func([]int32) Float32Option) Float32OptionOption { return MapFloat32OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat64Option(f func([]int32) Float64Option) Float64OptionOption { return MapFloat64OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex64Option(f func([]int32) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex128Option(f func([]int32) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapAnyOption(f func([]int32) AnyOption) AnyOptionOption { return MapAnyOptionToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapBoolArr(f func([]int32) []bool) BoolArrOption { return MapBoolArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapStringArr(f func([]int32) []string) StringArrOption { return MapStringArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapIntArr(f func([]int32) []int) IntArrOption { return MapIntArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt8Arr(f func([]int32) []int8) Int8ArrOption { return MapInt8ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt16Arr(f func([]int32) []int16) Int16ArrOption { return MapInt16ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt32Arr(f func([]int32) []int32) Int32ArrOption { return MapInt32ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt64Arr(f func([]int32) []int64) Int64ArrOption { return MapInt64ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintArr(f func([]int32) []uint) UintArrOption { return MapUintArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint8Arr(f func([]int32) []uint8) Uint8ArrOption { return MapUint8ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint16Arr(f func([]int32) []uint16) Uint16ArrOption { return MapUint16ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint32Arr(f func([]int32) []uint32) Uint32ArrOption { return MapUint32ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint64Arr(f func([]int32) []uint64) Uint64ArrOption { return MapUint64ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintptrArr(f func([]int32) []uintptr) UintptrArrOption { return MapUintptrArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapByteArr(f func([]int32) []byte) ByteArrOption { return MapByteArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapRuneArr(f func([]int32) []rune) RuneArrOption { return MapRuneArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat32Arr(f func([]int32) []float32) Float32ArrOption { return MapFloat32ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat64Arr(f func([]int32) []float64) Float64ArrOption { return MapFloat64ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex64Arr(f func([]int32) []complex64) Complex64ArrOption { return MapComplex64ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex128Arr(f func([]int32) []complex128) Complex128ArrOption { return MapComplex128ArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapAnyArr(f func([]int32) []Any) AnyArrOption { return MapAnyArrToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapBoolList(f func([]int32) BoolList) BoolListOption { return MapBoolListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapStringList(f func([]int32) StringList) StringListOption { return MapStringListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapIntList(f func([]int32) IntList) IntListOption { return MapIntListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt8List(f func([]int32) Int8List) Int8ListOption { return MapInt8ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt16List(f func([]int32) Int16List) Int16ListOption { return MapInt16ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt32List(f func([]int32) Int32List) Int32ListOption { return MapInt32ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapInt64List(f func([]int32) Int64List) Int64ListOption { return MapInt64ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintList(f func([]int32) UintList) UintListOption { return MapUintListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint8List(f func([]int32) Uint8List) Uint8ListOption { return MapUint8ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint16List(f func([]int32) Uint16List) Uint16ListOption { return MapUint16ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint32List(f func([]int32) Uint32List) Uint32ListOption { return MapUint32ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUint64List(f func([]int32) Uint64List) Uint64ListOption { return MapUint64ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapUintptrList(f func([]int32) UintptrList) UintptrListOption { return MapUintptrListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapByteList(f func([]int32) ByteList) ByteListOption { return MapByteListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapRuneList(f func([]int32) RuneList) RuneListOption { return MapRuneListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat32List(f func([]int32) Float32List) Float32ListOption { return MapFloat32ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapFloat64List(f func([]int32) Float64List) Float64ListOption { return MapFloat64ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex64List(f func([]int32) Complex64List) Complex64ListOption { return MapComplex64ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapComplex128List(f func([]int32) Complex128List) Complex128ListOption { return MapComplex128ListToInt32ArrOption(m, f) }
func (m Int32ArrOption) MapAnyList(f func([]int32) AnyList) AnyListOption { return MapAnyListToInt32ArrOption(m, f) }
func (m Int64ArrOption) MapBool(f func([]int64) bool) BoolOption { return MapBoolToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapString(f func([]int64) string) StringOption { return MapStringToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt(f func([]int64) int) IntOption { return MapIntToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt8(f func([]int64) int8) Int8Option { return MapInt8ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt16(f func([]int64) int16) Int16Option { return MapInt16ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt32(f func([]int64) int32) Int32Option { return MapInt32ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt64(f func([]int64) int64) Int64Option { return MapInt64ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint(f func([]int64) uint) UintOption { return MapUintToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint8(f func([]int64) uint8) Uint8Option { return MapUint8ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint16(f func([]int64) uint16) Uint16Option { return MapUint16ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint32(f func([]int64) uint32) Uint32Option { return MapUint32ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint64(f func([]int64) uint64) Uint64Option { return MapUint64ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintptr(f func([]int64) uintptr) UintptrOption { return MapUintptrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapByte(f func([]int64) byte) ByteOption { return MapByteToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapRune(f func([]int64) rune) RuneOption { return MapRuneToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat32(f func([]int64) float32) Float32Option { return MapFloat32ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat64(f func([]int64) float64) Float64Option { return MapFloat64ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex64(f func([]int64) complex64) Complex64Option { return MapComplex64ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex128(f func([]int64) complex128) Complex128Option { return MapComplex128ToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapAny(f func([]int64) Any) AnyOption { return MapAnyToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapBoolOption(f func([]int64) BoolOption) BoolOptionOption { return MapBoolOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapStringOption(f func([]int64) StringOption) StringOptionOption { return MapStringOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapIntOption(f func([]int64) IntOption) IntOptionOption { return MapIntOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt8Option(f func([]int64) Int8Option) Int8OptionOption { return MapInt8OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt16Option(f func([]int64) Int16Option) Int16OptionOption { return MapInt16OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt32Option(f func([]int64) Int32Option) Int32OptionOption { return MapInt32OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt64Option(f func([]int64) Int64Option) Int64OptionOption { return MapInt64OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintOption(f func([]int64) UintOption) UintOptionOption { return MapUintOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint8Option(f func([]int64) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint16Option(f func([]int64) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint32Option(f func([]int64) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint64Option(f func([]int64) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintptrOption(f func([]int64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapByteOption(f func([]int64) ByteOption) ByteOptionOption { return MapByteOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapRuneOption(f func([]int64) RuneOption) RuneOptionOption { return MapRuneOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat32Option(f func([]int64) Float32Option) Float32OptionOption { return MapFloat32OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat64Option(f func([]int64) Float64Option) Float64OptionOption { return MapFloat64OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex64Option(f func([]int64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex128Option(f func([]int64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapAnyOption(f func([]int64) AnyOption) AnyOptionOption { return MapAnyOptionToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapBoolArr(f func([]int64) []bool) BoolArrOption { return MapBoolArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapStringArr(f func([]int64) []string) StringArrOption { return MapStringArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapIntArr(f func([]int64) []int) IntArrOption { return MapIntArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt8Arr(f func([]int64) []int8) Int8ArrOption { return MapInt8ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt16Arr(f func([]int64) []int16) Int16ArrOption { return MapInt16ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt32Arr(f func([]int64) []int32) Int32ArrOption { return MapInt32ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt64Arr(f func([]int64) []int64) Int64ArrOption { return MapInt64ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintArr(f func([]int64) []uint) UintArrOption { return MapUintArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint8Arr(f func([]int64) []uint8) Uint8ArrOption { return MapUint8ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint16Arr(f func([]int64) []uint16) Uint16ArrOption { return MapUint16ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint32Arr(f func([]int64) []uint32) Uint32ArrOption { return MapUint32ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint64Arr(f func([]int64) []uint64) Uint64ArrOption { return MapUint64ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintptrArr(f func([]int64) []uintptr) UintptrArrOption { return MapUintptrArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapByteArr(f func([]int64) []byte) ByteArrOption { return MapByteArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapRuneArr(f func([]int64) []rune) RuneArrOption { return MapRuneArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat32Arr(f func([]int64) []float32) Float32ArrOption { return MapFloat32ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat64Arr(f func([]int64) []float64) Float64ArrOption { return MapFloat64ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex64Arr(f func([]int64) []complex64) Complex64ArrOption { return MapComplex64ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex128Arr(f func([]int64) []complex128) Complex128ArrOption { return MapComplex128ArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapAnyArr(f func([]int64) []Any) AnyArrOption { return MapAnyArrToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapBoolList(f func([]int64) BoolList) BoolListOption { return MapBoolListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapStringList(f func([]int64) StringList) StringListOption { return MapStringListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapIntList(f func([]int64) IntList) IntListOption { return MapIntListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt8List(f func([]int64) Int8List) Int8ListOption { return MapInt8ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt16List(f func([]int64) Int16List) Int16ListOption { return MapInt16ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt32List(f func([]int64) Int32List) Int32ListOption { return MapInt32ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapInt64List(f func([]int64) Int64List) Int64ListOption { return MapInt64ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintList(f func([]int64) UintList) UintListOption { return MapUintListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint8List(f func([]int64) Uint8List) Uint8ListOption { return MapUint8ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint16List(f func([]int64) Uint16List) Uint16ListOption { return MapUint16ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint32List(f func([]int64) Uint32List) Uint32ListOption { return MapUint32ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUint64List(f func([]int64) Uint64List) Uint64ListOption { return MapUint64ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapUintptrList(f func([]int64) UintptrList) UintptrListOption { return MapUintptrListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapByteList(f func([]int64) ByteList) ByteListOption { return MapByteListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapRuneList(f func([]int64) RuneList) RuneListOption { return MapRuneListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat32List(f func([]int64) Float32List) Float32ListOption { return MapFloat32ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapFloat64List(f func([]int64) Float64List) Float64ListOption { return MapFloat64ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex64List(f func([]int64) Complex64List) Complex64ListOption { return MapComplex64ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapComplex128List(f func([]int64) Complex128List) Complex128ListOption { return MapComplex128ListToInt64ArrOption(m, f) }
func (m Int64ArrOption) MapAnyList(f func([]int64) AnyList) AnyListOption { return MapAnyListToInt64ArrOption(m, f) }
func (m UintArrOption) MapBool(f func([]uint) bool) BoolOption { return MapBoolToUintArrOption(m, f) }
func (m UintArrOption) MapString(f func([]uint) string) StringOption { return MapStringToUintArrOption(m, f) }
func (m UintArrOption) MapInt(f func([]uint) int) IntOption { return MapIntToUintArrOption(m, f) }
func (m UintArrOption) MapInt8(f func([]uint) int8) Int8Option { return MapInt8ToUintArrOption(m, f) }
func (m UintArrOption) MapInt16(f func([]uint) int16) Int16Option { return MapInt16ToUintArrOption(m, f) }
func (m UintArrOption) MapInt32(f func([]uint) int32) Int32Option { return MapInt32ToUintArrOption(m, f) }
func (m UintArrOption) MapInt64(f func([]uint) int64) Int64Option { return MapInt64ToUintArrOption(m, f) }
func (m UintArrOption) MapUint(f func([]uint) uint) UintOption { return MapUintToUintArrOption(m, f) }
func (m UintArrOption) MapUint8(f func([]uint) uint8) Uint8Option { return MapUint8ToUintArrOption(m, f) }
func (m UintArrOption) MapUint16(f func([]uint) uint16) Uint16Option { return MapUint16ToUintArrOption(m, f) }
func (m UintArrOption) MapUint32(f func([]uint) uint32) Uint32Option { return MapUint32ToUintArrOption(m, f) }
func (m UintArrOption) MapUint64(f func([]uint) uint64) Uint64Option { return MapUint64ToUintArrOption(m, f) }
func (m UintArrOption) MapUintptr(f func([]uint) uintptr) UintptrOption { return MapUintptrToUintArrOption(m, f) }
func (m UintArrOption) MapByte(f func([]uint) byte) ByteOption { return MapByteToUintArrOption(m, f) }
func (m UintArrOption) MapRune(f func([]uint) rune) RuneOption { return MapRuneToUintArrOption(m, f) }
func (m UintArrOption) MapFloat32(f func([]uint) float32) Float32Option { return MapFloat32ToUintArrOption(m, f) }
func (m UintArrOption) MapFloat64(f func([]uint) float64) Float64Option { return MapFloat64ToUintArrOption(m, f) }
func (m UintArrOption) MapComplex64(f func([]uint) complex64) Complex64Option { return MapComplex64ToUintArrOption(m, f) }
func (m UintArrOption) MapComplex128(f func([]uint) complex128) Complex128Option { return MapComplex128ToUintArrOption(m, f) }
func (m UintArrOption) MapAny(f func([]uint) Any) AnyOption { return MapAnyToUintArrOption(m, f) }
func (m UintArrOption) MapBoolOption(f func([]uint) BoolOption) BoolOptionOption { return MapBoolOptionToUintArrOption(m, f) }
func (m UintArrOption) MapStringOption(f func([]uint) StringOption) StringOptionOption { return MapStringOptionToUintArrOption(m, f) }
func (m UintArrOption) MapIntOption(f func([]uint) IntOption) IntOptionOption { return MapIntOptionToUintArrOption(m, f) }
func (m UintArrOption) MapInt8Option(f func([]uint) Int8Option) Int8OptionOption { return MapInt8OptionToUintArrOption(m, f) }
func (m UintArrOption) MapInt16Option(f func([]uint) Int16Option) Int16OptionOption { return MapInt16OptionToUintArrOption(m, f) }
func (m UintArrOption) MapInt32Option(f func([]uint) Int32Option) Int32OptionOption { return MapInt32OptionToUintArrOption(m, f) }
func (m UintArrOption) MapInt64Option(f func([]uint) Int64Option) Int64OptionOption { return MapInt64OptionToUintArrOption(m, f) }
func (m UintArrOption) MapUintOption(f func([]uint) UintOption) UintOptionOption { return MapUintOptionToUintArrOption(m, f) }
func (m UintArrOption) MapUint8Option(f func([]uint) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintArrOption(m, f) }
func (m UintArrOption) MapUint16Option(f func([]uint) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintArrOption(m, f) }
func (m UintArrOption) MapUint32Option(f func([]uint) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintArrOption(m, f) }
func (m UintArrOption) MapUint64Option(f func([]uint) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintArrOption(m, f) }
func (m UintArrOption) MapUintptrOption(f func([]uint) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintArrOption(m, f) }
func (m UintArrOption) MapByteOption(f func([]uint) ByteOption) ByteOptionOption { return MapByteOptionToUintArrOption(m, f) }
func (m UintArrOption) MapRuneOption(f func([]uint) RuneOption) RuneOptionOption { return MapRuneOptionToUintArrOption(m, f) }
func (m UintArrOption) MapFloat32Option(f func([]uint) Float32Option) Float32OptionOption { return MapFloat32OptionToUintArrOption(m, f) }
func (m UintArrOption) MapFloat64Option(f func([]uint) Float64Option) Float64OptionOption { return MapFloat64OptionToUintArrOption(m, f) }
func (m UintArrOption) MapComplex64Option(f func([]uint) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintArrOption(m, f) }
func (m UintArrOption) MapComplex128Option(f func([]uint) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintArrOption(m, f) }
func (m UintArrOption) MapAnyOption(f func([]uint) AnyOption) AnyOptionOption { return MapAnyOptionToUintArrOption(m, f) }
func (m UintArrOption) MapBoolArr(f func([]uint) []bool) BoolArrOption { return MapBoolArrToUintArrOption(m, f) }
func (m UintArrOption) MapStringArr(f func([]uint) []string) StringArrOption { return MapStringArrToUintArrOption(m, f) }
func (m UintArrOption) MapIntArr(f func([]uint) []int) IntArrOption { return MapIntArrToUintArrOption(m, f) }
func (m UintArrOption) MapInt8Arr(f func([]uint) []int8) Int8ArrOption { return MapInt8ArrToUintArrOption(m, f) }
func (m UintArrOption) MapInt16Arr(f func([]uint) []int16) Int16ArrOption { return MapInt16ArrToUintArrOption(m, f) }
func (m UintArrOption) MapInt32Arr(f func([]uint) []int32) Int32ArrOption { return MapInt32ArrToUintArrOption(m, f) }
func (m UintArrOption) MapInt64Arr(f func([]uint) []int64) Int64ArrOption { return MapInt64ArrToUintArrOption(m, f) }
func (m UintArrOption) MapUintArr(f func([]uint) []uint) UintArrOption { return MapUintArrToUintArrOption(m, f) }
func (m UintArrOption) MapUint8Arr(f func([]uint) []uint8) Uint8ArrOption { return MapUint8ArrToUintArrOption(m, f) }
func (m UintArrOption) MapUint16Arr(f func([]uint) []uint16) Uint16ArrOption { return MapUint16ArrToUintArrOption(m, f) }
func (m UintArrOption) MapUint32Arr(f func([]uint) []uint32) Uint32ArrOption { return MapUint32ArrToUintArrOption(m, f) }
func (m UintArrOption) MapUint64Arr(f func([]uint) []uint64) Uint64ArrOption { return MapUint64ArrToUintArrOption(m, f) }
func (m UintArrOption) MapUintptrArr(f func([]uint) []uintptr) UintptrArrOption { return MapUintptrArrToUintArrOption(m, f) }
func (m UintArrOption) MapByteArr(f func([]uint) []byte) ByteArrOption { return MapByteArrToUintArrOption(m, f) }
func (m UintArrOption) MapRuneArr(f func([]uint) []rune) RuneArrOption { return MapRuneArrToUintArrOption(m, f) }
func (m UintArrOption) MapFloat32Arr(f func([]uint) []float32) Float32ArrOption { return MapFloat32ArrToUintArrOption(m, f) }
func (m UintArrOption) MapFloat64Arr(f func([]uint) []float64) Float64ArrOption { return MapFloat64ArrToUintArrOption(m, f) }
func (m UintArrOption) MapComplex64Arr(f func([]uint) []complex64) Complex64ArrOption { return MapComplex64ArrToUintArrOption(m, f) }
func (m UintArrOption) MapComplex128Arr(f func([]uint) []complex128) Complex128ArrOption { return MapComplex128ArrToUintArrOption(m, f) }
func (m UintArrOption) MapAnyArr(f func([]uint) []Any) AnyArrOption { return MapAnyArrToUintArrOption(m, f) }
func (m UintArrOption) MapBoolList(f func([]uint) BoolList) BoolListOption { return MapBoolListToUintArrOption(m, f) }
func (m UintArrOption) MapStringList(f func([]uint) StringList) StringListOption { return MapStringListToUintArrOption(m, f) }
func (m UintArrOption) MapIntList(f func([]uint) IntList) IntListOption { return MapIntListToUintArrOption(m, f) }
func (m UintArrOption) MapInt8List(f func([]uint) Int8List) Int8ListOption { return MapInt8ListToUintArrOption(m, f) }
func (m UintArrOption) MapInt16List(f func([]uint) Int16List) Int16ListOption { return MapInt16ListToUintArrOption(m, f) }
func (m UintArrOption) MapInt32List(f func([]uint) Int32List) Int32ListOption { return MapInt32ListToUintArrOption(m, f) }
func (m UintArrOption) MapInt64List(f func([]uint) Int64List) Int64ListOption { return MapInt64ListToUintArrOption(m, f) }
func (m UintArrOption) MapUintList(f func([]uint) UintList) UintListOption { return MapUintListToUintArrOption(m, f) }
func (m UintArrOption) MapUint8List(f func([]uint) Uint8List) Uint8ListOption { return MapUint8ListToUintArrOption(m, f) }
func (m UintArrOption) MapUint16List(f func([]uint) Uint16List) Uint16ListOption { return MapUint16ListToUintArrOption(m, f) }
func (m UintArrOption) MapUint32List(f func([]uint) Uint32List) Uint32ListOption { return MapUint32ListToUintArrOption(m, f) }
func (m UintArrOption) MapUint64List(f func([]uint) Uint64List) Uint64ListOption { return MapUint64ListToUintArrOption(m, f) }
func (m UintArrOption) MapUintptrList(f func([]uint) UintptrList) UintptrListOption { return MapUintptrListToUintArrOption(m, f) }
func (m UintArrOption) MapByteList(f func([]uint) ByteList) ByteListOption { return MapByteListToUintArrOption(m, f) }
func (m UintArrOption) MapRuneList(f func([]uint) RuneList) RuneListOption { return MapRuneListToUintArrOption(m, f) }
func (m UintArrOption) MapFloat32List(f func([]uint) Float32List) Float32ListOption { return MapFloat32ListToUintArrOption(m, f) }
func (m UintArrOption) MapFloat64List(f func([]uint) Float64List) Float64ListOption { return MapFloat64ListToUintArrOption(m, f) }
func (m UintArrOption) MapComplex64List(f func([]uint) Complex64List) Complex64ListOption { return MapComplex64ListToUintArrOption(m, f) }
func (m UintArrOption) MapComplex128List(f func([]uint) Complex128List) Complex128ListOption { return MapComplex128ListToUintArrOption(m, f) }
func (m UintArrOption) MapAnyList(f func([]uint) AnyList) AnyListOption { return MapAnyListToUintArrOption(m, f) }
func (m Uint8ArrOption) MapBool(f func([]uint8) bool) BoolOption { return MapBoolToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapString(f func([]uint8) string) StringOption { return MapStringToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt(f func([]uint8) int) IntOption { return MapIntToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt8(f func([]uint8) int8) Int8Option { return MapInt8ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt16(f func([]uint8) int16) Int16Option { return MapInt16ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt32(f func([]uint8) int32) Int32Option { return MapInt32ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt64(f func([]uint8) int64) Int64Option { return MapInt64ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint(f func([]uint8) uint) UintOption { return MapUintToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint8(f func([]uint8) uint8) Uint8Option { return MapUint8ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint16(f func([]uint8) uint16) Uint16Option { return MapUint16ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint32(f func([]uint8) uint32) Uint32Option { return MapUint32ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint64(f func([]uint8) uint64) Uint64Option { return MapUint64ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintptr(f func([]uint8) uintptr) UintptrOption { return MapUintptrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapByte(f func([]uint8) byte) ByteOption { return MapByteToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapRune(f func([]uint8) rune) RuneOption { return MapRuneToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat32(f func([]uint8) float32) Float32Option { return MapFloat32ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat64(f func([]uint8) float64) Float64Option { return MapFloat64ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex64(f func([]uint8) complex64) Complex64Option { return MapComplex64ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex128(f func([]uint8) complex128) Complex128Option { return MapComplex128ToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapAny(f func([]uint8) Any) AnyOption { return MapAnyToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapBoolOption(f func([]uint8) BoolOption) BoolOptionOption { return MapBoolOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapStringOption(f func([]uint8) StringOption) StringOptionOption { return MapStringOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapIntOption(f func([]uint8) IntOption) IntOptionOption { return MapIntOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt8Option(f func([]uint8) Int8Option) Int8OptionOption { return MapInt8OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt16Option(f func([]uint8) Int16Option) Int16OptionOption { return MapInt16OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt32Option(f func([]uint8) Int32Option) Int32OptionOption { return MapInt32OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt64Option(f func([]uint8) Int64Option) Int64OptionOption { return MapInt64OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintOption(f func([]uint8) UintOption) UintOptionOption { return MapUintOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint8Option(f func([]uint8) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint16Option(f func([]uint8) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint32Option(f func([]uint8) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint64Option(f func([]uint8) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintptrOption(f func([]uint8) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapByteOption(f func([]uint8) ByteOption) ByteOptionOption { return MapByteOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapRuneOption(f func([]uint8) RuneOption) RuneOptionOption { return MapRuneOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat32Option(f func([]uint8) Float32Option) Float32OptionOption { return MapFloat32OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat64Option(f func([]uint8) Float64Option) Float64OptionOption { return MapFloat64OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex64Option(f func([]uint8) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex128Option(f func([]uint8) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapAnyOption(f func([]uint8) AnyOption) AnyOptionOption { return MapAnyOptionToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapBoolArr(f func([]uint8) []bool) BoolArrOption { return MapBoolArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapStringArr(f func([]uint8) []string) StringArrOption { return MapStringArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapIntArr(f func([]uint8) []int) IntArrOption { return MapIntArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt8Arr(f func([]uint8) []int8) Int8ArrOption { return MapInt8ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt16Arr(f func([]uint8) []int16) Int16ArrOption { return MapInt16ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt32Arr(f func([]uint8) []int32) Int32ArrOption { return MapInt32ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt64Arr(f func([]uint8) []int64) Int64ArrOption { return MapInt64ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintArr(f func([]uint8) []uint) UintArrOption { return MapUintArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint8Arr(f func([]uint8) []uint8) Uint8ArrOption { return MapUint8ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint16Arr(f func([]uint8) []uint16) Uint16ArrOption { return MapUint16ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint32Arr(f func([]uint8) []uint32) Uint32ArrOption { return MapUint32ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint64Arr(f func([]uint8) []uint64) Uint64ArrOption { return MapUint64ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintptrArr(f func([]uint8) []uintptr) UintptrArrOption { return MapUintptrArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapByteArr(f func([]uint8) []byte) ByteArrOption { return MapByteArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapRuneArr(f func([]uint8) []rune) RuneArrOption { return MapRuneArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat32Arr(f func([]uint8) []float32) Float32ArrOption { return MapFloat32ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat64Arr(f func([]uint8) []float64) Float64ArrOption { return MapFloat64ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex64Arr(f func([]uint8) []complex64) Complex64ArrOption { return MapComplex64ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex128Arr(f func([]uint8) []complex128) Complex128ArrOption { return MapComplex128ArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapAnyArr(f func([]uint8) []Any) AnyArrOption { return MapAnyArrToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapBoolList(f func([]uint8) BoolList) BoolListOption { return MapBoolListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapStringList(f func([]uint8) StringList) StringListOption { return MapStringListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapIntList(f func([]uint8) IntList) IntListOption { return MapIntListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt8List(f func([]uint8) Int8List) Int8ListOption { return MapInt8ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt16List(f func([]uint8) Int16List) Int16ListOption { return MapInt16ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt32List(f func([]uint8) Int32List) Int32ListOption { return MapInt32ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapInt64List(f func([]uint8) Int64List) Int64ListOption { return MapInt64ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintList(f func([]uint8) UintList) UintListOption { return MapUintListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint8List(f func([]uint8) Uint8List) Uint8ListOption { return MapUint8ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint16List(f func([]uint8) Uint16List) Uint16ListOption { return MapUint16ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint32List(f func([]uint8) Uint32List) Uint32ListOption { return MapUint32ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUint64List(f func([]uint8) Uint64List) Uint64ListOption { return MapUint64ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapUintptrList(f func([]uint8) UintptrList) UintptrListOption { return MapUintptrListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapByteList(f func([]uint8) ByteList) ByteListOption { return MapByteListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapRuneList(f func([]uint8) RuneList) RuneListOption { return MapRuneListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat32List(f func([]uint8) Float32List) Float32ListOption { return MapFloat32ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapFloat64List(f func([]uint8) Float64List) Float64ListOption { return MapFloat64ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex64List(f func([]uint8) Complex64List) Complex64ListOption { return MapComplex64ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapComplex128List(f func([]uint8) Complex128List) Complex128ListOption { return MapComplex128ListToUint8ArrOption(m, f) }
func (m Uint8ArrOption) MapAnyList(f func([]uint8) AnyList) AnyListOption { return MapAnyListToUint8ArrOption(m, f) }
func (m Uint16ArrOption) MapBool(f func([]uint16) bool) BoolOption { return MapBoolToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapString(f func([]uint16) string) StringOption { return MapStringToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt(f func([]uint16) int) IntOption { return MapIntToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt8(f func([]uint16) int8) Int8Option { return MapInt8ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt16(f func([]uint16) int16) Int16Option { return MapInt16ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt32(f func([]uint16) int32) Int32Option { return MapInt32ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt64(f func([]uint16) int64) Int64Option { return MapInt64ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint(f func([]uint16) uint) UintOption { return MapUintToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint8(f func([]uint16) uint8) Uint8Option { return MapUint8ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint16(f func([]uint16) uint16) Uint16Option { return MapUint16ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint32(f func([]uint16) uint32) Uint32Option { return MapUint32ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint64(f func([]uint16) uint64) Uint64Option { return MapUint64ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintptr(f func([]uint16) uintptr) UintptrOption { return MapUintptrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapByte(f func([]uint16) byte) ByteOption { return MapByteToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapRune(f func([]uint16) rune) RuneOption { return MapRuneToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat32(f func([]uint16) float32) Float32Option { return MapFloat32ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat64(f func([]uint16) float64) Float64Option { return MapFloat64ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex64(f func([]uint16) complex64) Complex64Option { return MapComplex64ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex128(f func([]uint16) complex128) Complex128Option { return MapComplex128ToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapAny(f func([]uint16) Any) AnyOption { return MapAnyToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapBoolOption(f func([]uint16) BoolOption) BoolOptionOption { return MapBoolOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapStringOption(f func([]uint16) StringOption) StringOptionOption { return MapStringOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapIntOption(f func([]uint16) IntOption) IntOptionOption { return MapIntOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt8Option(f func([]uint16) Int8Option) Int8OptionOption { return MapInt8OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt16Option(f func([]uint16) Int16Option) Int16OptionOption { return MapInt16OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt32Option(f func([]uint16) Int32Option) Int32OptionOption { return MapInt32OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt64Option(f func([]uint16) Int64Option) Int64OptionOption { return MapInt64OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintOption(f func([]uint16) UintOption) UintOptionOption { return MapUintOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint8Option(f func([]uint16) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint16Option(f func([]uint16) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint32Option(f func([]uint16) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint64Option(f func([]uint16) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintptrOption(f func([]uint16) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapByteOption(f func([]uint16) ByteOption) ByteOptionOption { return MapByteOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapRuneOption(f func([]uint16) RuneOption) RuneOptionOption { return MapRuneOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat32Option(f func([]uint16) Float32Option) Float32OptionOption { return MapFloat32OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat64Option(f func([]uint16) Float64Option) Float64OptionOption { return MapFloat64OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex64Option(f func([]uint16) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex128Option(f func([]uint16) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapAnyOption(f func([]uint16) AnyOption) AnyOptionOption { return MapAnyOptionToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapBoolArr(f func([]uint16) []bool) BoolArrOption { return MapBoolArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapStringArr(f func([]uint16) []string) StringArrOption { return MapStringArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapIntArr(f func([]uint16) []int) IntArrOption { return MapIntArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt8Arr(f func([]uint16) []int8) Int8ArrOption { return MapInt8ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt16Arr(f func([]uint16) []int16) Int16ArrOption { return MapInt16ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt32Arr(f func([]uint16) []int32) Int32ArrOption { return MapInt32ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt64Arr(f func([]uint16) []int64) Int64ArrOption { return MapInt64ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintArr(f func([]uint16) []uint) UintArrOption { return MapUintArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint8Arr(f func([]uint16) []uint8) Uint8ArrOption { return MapUint8ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint16Arr(f func([]uint16) []uint16) Uint16ArrOption { return MapUint16ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint32Arr(f func([]uint16) []uint32) Uint32ArrOption { return MapUint32ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint64Arr(f func([]uint16) []uint64) Uint64ArrOption { return MapUint64ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintptrArr(f func([]uint16) []uintptr) UintptrArrOption { return MapUintptrArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapByteArr(f func([]uint16) []byte) ByteArrOption { return MapByteArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapRuneArr(f func([]uint16) []rune) RuneArrOption { return MapRuneArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat32Arr(f func([]uint16) []float32) Float32ArrOption { return MapFloat32ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat64Arr(f func([]uint16) []float64) Float64ArrOption { return MapFloat64ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex64Arr(f func([]uint16) []complex64) Complex64ArrOption { return MapComplex64ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex128Arr(f func([]uint16) []complex128) Complex128ArrOption { return MapComplex128ArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapAnyArr(f func([]uint16) []Any) AnyArrOption { return MapAnyArrToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapBoolList(f func([]uint16) BoolList) BoolListOption { return MapBoolListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapStringList(f func([]uint16) StringList) StringListOption { return MapStringListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapIntList(f func([]uint16) IntList) IntListOption { return MapIntListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt8List(f func([]uint16) Int8List) Int8ListOption { return MapInt8ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt16List(f func([]uint16) Int16List) Int16ListOption { return MapInt16ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt32List(f func([]uint16) Int32List) Int32ListOption { return MapInt32ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapInt64List(f func([]uint16) Int64List) Int64ListOption { return MapInt64ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintList(f func([]uint16) UintList) UintListOption { return MapUintListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint8List(f func([]uint16) Uint8List) Uint8ListOption { return MapUint8ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint16List(f func([]uint16) Uint16List) Uint16ListOption { return MapUint16ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint32List(f func([]uint16) Uint32List) Uint32ListOption { return MapUint32ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUint64List(f func([]uint16) Uint64List) Uint64ListOption { return MapUint64ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapUintptrList(f func([]uint16) UintptrList) UintptrListOption { return MapUintptrListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapByteList(f func([]uint16) ByteList) ByteListOption { return MapByteListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapRuneList(f func([]uint16) RuneList) RuneListOption { return MapRuneListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat32List(f func([]uint16) Float32List) Float32ListOption { return MapFloat32ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapFloat64List(f func([]uint16) Float64List) Float64ListOption { return MapFloat64ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex64List(f func([]uint16) Complex64List) Complex64ListOption { return MapComplex64ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapComplex128List(f func([]uint16) Complex128List) Complex128ListOption { return MapComplex128ListToUint16ArrOption(m, f) }
func (m Uint16ArrOption) MapAnyList(f func([]uint16) AnyList) AnyListOption { return MapAnyListToUint16ArrOption(m, f) }
func (m Uint32ArrOption) MapBool(f func([]uint32) bool) BoolOption { return MapBoolToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapString(f func([]uint32) string) StringOption { return MapStringToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt(f func([]uint32) int) IntOption { return MapIntToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt8(f func([]uint32) int8) Int8Option { return MapInt8ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt16(f func([]uint32) int16) Int16Option { return MapInt16ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt32(f func([]uint32) int32) Int32Option { return MapInt32ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt64(f func([]uint32) int64) Int64Option { return MapInt64ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint(f func([]uint32) uint) UintOption { return MapUintToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint8(f func([]uint32) uint8) Uint8Option { return MapUint8ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint16(f func([]uint32) uint16) Uint16Option { return MapUint16ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint32(f func([]uint32) uint32) Uint32Option { return MapUint32ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint64(f func([]uint32) uint64) Uint64Option { return MapUint64ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintptr(f func([]uint32) uintptr) UintptrOption { return MapUintptrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapByte(f func([]uint32) byte) ByteOption { return MapByteToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapRune(f func([]uint32) rune) RuneOption { return MapRuneToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat32(f func([]uint32) float32) Float32Option { return MapFloat32ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat64(f func([]uint32) float64) Float64Option { return MapFloat64ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex64(f func([]uint32) complex64) Complex64Option { return MapComplex64ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex128(f func([]uint32) complex128) Complex128Option { return MapComplex128ToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapAny(f func([]uint32) Any) AnyOption { return MapAnyToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapBoolOption(f func([]uint32) BoolOption) BoolOptionOption { return MapBoolOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapStringOption(f func([]uint32) StringOption) StringOptionOption { return MapStringOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapIntOption(f func([]uint32) IntOption) IntOptionOption { return MapIntOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt8Option(f func([]uint32) Int8Option) Int8OptionOption { return MapInt8OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt16Option(f func([]uint32) Int16Option) Int16OptionOption { return MapInt16OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt32Option(f func([]uint32) Int32Option) Int32OptionOption { return MapInt32OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt64Option(f func([]uint32) Int64Option) Int64OptionOption { return MapInt64OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintOption(f func([]uint32) UintOption) UintOptionOption { return MapUintOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint8Option(f func([]uint32) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint16Option(f func([]uint32) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint32Option(f func([]uint32) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint64Option(f func([]uint32) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintptrOption(f func([]uint32) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapByteOption(f func([]uint32) ByteOption) ByteOptionOption { return MapByteOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapRuneOption(f func([]uint32) RuneOption) RuneOptionOption { return MapRuneOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat32Option(f func([]uint32) Float32Option) Float32OptionOption { return MapFloat32OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat64Option(f func([]uint32) Float64Option) Float64OptionOption { return MapFloat64OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex64Option(f func([]uint32) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex128Option(f func([]uint32) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapAnyOption(f func([]uint32) AnyOption) AnyOptionOption { return MapAnyOptionToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapBoolArr(f func([]uint32) []bool) BoolArrOption { return MapBoolArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapStringArr(f func([]uint32) []string) StringArrOption { return MapStringArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapIntArr(f func([]uint32) []int) IntArrOption { return MapIntArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt8Arr(f func([]uint32) []int8) Int8ArrOption { return MapInt8ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt16Arr(f func([]uint32) []int16) Int16ArrOption { return MapInt16ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt32Arr(f func([]uint32) []int32) Int32ArrOption { return MapInt32ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt64Arr(f func([]uint32) []int64) Int64ArrOption { return MapInt64ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintArr(f func([]uint32) []uint) UintArrOption { return MapUintArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint8Arr(f func([]uint32) []uint8) Uint8ArrOption { return MapUint8ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint16Arr(f func([]uint32) []uint16) Uint16ArrOption { return MapUint16ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint32Arr(f func([]uint32) []uint32) Uint32ArrOption { return MapUint32ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint64Arr(f func([]uint32) []uint64) Uint64ArrOption { return MapUint64ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintptrArr(f func([]uint32) []uintptr) UintptrArrOption { return MapUintptrArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapByteArr(f func([]uint32) []byte) ByteArrOption { return MapByteArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapRuneArr(f func([]uint32) []rune) RuneArrOption { return MapRuneArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat32Arr(f func([]uint32) []float32) Float32ArrOption { return MapFloat32ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat64Arr(f func([]uint32) []float64) Float64ArrOption { return MapFloat64ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex64Arr(f func([]uint32) []complex64) Complex64ArrOption { return MapComplex64ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex128Arr(f func([]uint32) []complex128) Complex128ArrOption { return MapComplex128ArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapAnyArr(f func([]uint32) []Any) AnyArrOption { return MapAnyArrToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapBoolList(f func([]uint32) BoolList) BoolListOption { return MapBoolListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapStringList(f func([]uint32) StringList) StringListOption { return MapStringListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapIntList(f func([]uint32) IntList) IntListOption { return MapIntListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt8List(f func([]uint32) Int8List) Int8ListOption { return MapInt8ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt16List(f func([]uint32) Int16List) Int16ListOption { return MapInt16ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt32List(f func([]uint32) Int32List) Int32ListOption { return MapInt32ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapInt64List(f func([]uint32) Int64List) Int64ListOption { return MapInt64ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintList(f func([]uint32) UintList) UintListOption { return MapUintListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint8List(f func([]uint32) Uint8List) Uint8ListOption { return MapUint8ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint16List(f func([]uint32) Uint16List) Uint16ListOption { return MapUint16ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint32List(f func([]uint32) Uint32List) Uint32ListOption { return MapUint32ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUint64List(f func([]uint32) Uint64List) Uint64ListOption { return MapUint64ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapUintptrList(f func([]uint32) UintptrList) UintptrListOption { return MapUintptrListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapByteList(f func([]uint32) ByteList) ByteListOption { return MapByteListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapRuneList(f func([]uint32) RuneList) RuneListOption { return MapRuneListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat32List(f func([]uint32) Float32List) Float32ListOption { return MapFloat32ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapFloat64List(f func([]uint32) Float64List) Float64ListOption { return MapFloat64ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex64List(f func([]uint32) Complex64List) Complex64ListOption { return MapComplex64ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapComplex128List(f func([]uint32) Complex128List) Complex128ListOption { return MapComplex128ListToUint32ArrOption(m, f) }
func (m Uint32ArrOption) MapAnyList(f func([]uint32) AnyList) AnyListOption { return MapAnyListToUint32ArrOption(m, f) }
func (m Uint64ArrOption) MapBool(f func([]uint64) bool) BoolOption { return MapBoolToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapString(f func([]uint64) string) StringOption { return MapStringToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt(f func([]uint64) int) IntOption { return MapIntToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt8(f func([]uint64) int8) Int8Option { return MapInt8ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt16(f func([]uint64) int16) Int16Option { return MapInt16ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt32(f func([]uint64) int32) Int32Option { return MapInt32ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt64(f func([]uint64) int64) Int64Option { return MapInt64ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint(f func([]uint64) uint) UintOption { return MapUintToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint8(f func([]uint64) uint8) Uint8Option { return MapUint8ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint16(f func([]uint64) uint16) Uint16Option { return MapUint16ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint32(f func([]uint64) uint32) Uint32Option { return MapUint32ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint64(f func([]uint64) uint64) Uint64Option { return MapUint64ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintptr(f func([]uint64) uintptr) UintptrOption { return MapUintptrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapByte(f func([]uint64) byte) ByteOption { return MapByteToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapRune(f func([]uint64) rune) RuneOption { return MapRuneToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat32(f func([]uint64) float32) Float32Option { return MapFloat32ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat64(f func([]uint64) float64) Float64Option { return MapFloat64ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex64(f func([]uint64) complex64) Complex64Option { return MapComplex64ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex128(f func([]uint64) complex128) Complex128Option { return MapComplex128ToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapAny(f func([]uint64) Any) AnyOption { return MapAnyToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapBoolOption(f func([]uint64) BoolOption) BoolOptionOption { return MapBoolOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapStringOption(f func([]uint64) StringOption) StringOptionOption { return MapStringOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapIntOption(f func([]uint64) IntOption) IntOptionOption { return MapIntOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt8Option(f func([]uint64) Int8Option) Int8OptionOption { return MapInt8OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt16Option(f func([]uint64) Int16Option) Int16OptionOption { return MapInt16OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt32Option(f func([]uint64) Int32Option) Int32OptionOption { return MapInt32OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt64Option(f func([]uint64) Int64Option) Int64OptionOption { return MapInt64OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintOption(f func([]uint64) UintOption) UintOptionOption { return MapUintOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint8Option(f func([]uint64) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint16Option(f func([]uint64) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint32Option(f func([]uint64) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint64Option(f func([]uint64) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintptrOption(f func([]uint64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapByteOption(f func([]uint64) ByteOption) ByteOptionOption { return MapByteOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapRuneOption(f func([]uint64) RuneOption) RuneOptionOption { return MapRuneOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat32Option(f func([]uint64) Float32Option) Float32OptionOption { return MapFloat32OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat64Option(f func([]uint64) Float64Option) Float64OptionOption { return MapFloat64OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex64Option(f func([]uint64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex128Option(f func([]uint64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapAnyOption(f func([]uint64) AnyOption) AnyOptionOption { return MapAnyOptionToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapBoolArr(f func([]uint64) []bool) BoolArrOption { return MapBoolArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapStringArr(f func([]uint64) []string) StringArrOption { return MapStringArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapIntArr(f func([]uint64) []int) IntArrOption { return MapIntArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt8Arr(f func([]uint64) []int8) Int8ArrOption { return MapInt8ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt16Arr(f func([]uint64) []int16) Int16ArrOption { return MapInt16ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt32Arr(f func([]uint64) []int32) Int32ArrOption { return MapInt32ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt64Arr(f func([]uint64) []int64) Int64ArrOption { return MapInt64ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintArr(f func([]uint64) []uint) UintArrOption { return MapUintArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint8Arr(f func([]uint64) []uint8) Uint8ArrOption { return MapUint8ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint16Arr(f func([]uint64) []uint16) Uint16ArrOption { return MapUint16ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint32Arr(f func([]uint64) []uint32) Uint32ArrOption { return MapUint32ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint64Arr(f func([]uint64) []uint64) Uint64ArrOption { return MapUint64ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintptrArr(f func([]uint64) []uintptr) UintptrArrOption { return MapUintptrArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapByteArr(f func([]uint64) []byte) ByteArrOption { return MapByteArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapRuneArr(f func([]uint64) []rune) RuneArrOption { return MapRuneArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat32Arr(f func([]uint64) []float32) Float32ArrOption { return MapFloat32ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat64Arr(f func([]uint64) []float64) Float64ArrOption { return MapFloat64ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex64Arr(f func([]uint64) []complex64) Complex64ArrOption { return MapComplex64ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex128Arr(f func([]uint64) []complex128) Complex128ArrOption { return MapComplex128ArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapAnyArr(f func([]uint64) []Any) AnyArrOption { return MapAnyArrToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapBoolList(f func([]uint64) BoolList) BoolListOption { return MapBoolListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapStringList(f func([]uint64) StringList) StringListOption { return MapStringListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapIntList(f func([]uint64) IntList) IntListOption { return MapIntListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt8List(f func([]uint64) Int8List) Int8ListOption { return MapInt8ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt16List(f func([]uint64) Int16List) Int16ListOption { return MapInt16ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt32List(f func([]uint64) Int32List) Int32ListOption { return MapInt32ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapInt64List(f func([]uint64) Int64List) Int64ListOption { return MapInt64ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintList(f func([]uint64) UintList) UintListOption { return MapUintListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint8List(f func([]uint64) Uint8List) Uint8ListOption { return MapUint8ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint16List(f func([]uint64) Uint16List) Uint16ListOption { return MapUint16ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint32List(f func([]uint64) Uint32List) Uint32ListOption { return MapUint32ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUint64List(f func([]uint64) Uint64List) Uint64ListOption { return MapUint64ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapUintptrList(f func([]uint64) UintptrList) UintptrListOption { return MapUintptrListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapByteList(f func([]uint64) ByteList) ByteListOption { return MapByteListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapRuneList(f func([]uint64) RuneList) RuneListOption { return MapRuneListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat32List(f func([]uint64) Float32List) Float32ListOption { return MapFloat32ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapFloat64List(f func([]uint64) Float64List) Float64ListOption { return MapFloat64ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex64List(f func([]uint64) Complex64List) Complex64ListOption { return MapComplex64ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapComplex128List(f func([]uint64) Complex128List) Complex128ListOption { return MapComplex128ListToUint64ArrOption(m, f) }
func (m Uint64ArrOption) MapAnyList(f func([]uint64) AnyList) AnyListOption { return MapAnyListToUint64ArrOption(m, f) }
func (m UintptrArrOption) MapBool(f func([]uintptr) bool) BoolOption { return MapBoolToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapString(f func([]uintptr) string) StringOption { return MapStringToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt(f func([]uintptr) int) IntOption { return MapIntToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt8(f func([]uintptr) int8) Int8Option { return MapInt8ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt16(f func([]uintptr) int16) Int16Option { return MapInt16ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt32(f func([]uintptr) int32) Int32Option { return MapInt32ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt64(f func([]uintptr) int64) Int64Option { return MapInt64ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint(f func([]uintptr) uint) UintOption { return MapUintToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint8(f func([]uintptr) uint8) Uint8Option { return MapUint8ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint16(f func([]uintptr) uint16) Uint16Option { return MapUint16ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint32(f func([]uintptr) uint32) Uint32Option { return MapUint32ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint64(f func([]uintptr) uint64) Uint64Option { return MapUint64ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintptr(f func([]uintptr) uintptr) UintptrOption { return MapUintptrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapByte(f func([]uintptr) byte) ByteOption { return MapByteToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapRune(f func([]uintptr) rune) RuneOption { return MapRuneToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat32(f func([]uintptr) float32) Float32Option { return MapFloat32ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat64(f func([]uintptr) float64) Float64Option { return MapFloat64ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex64(f func([]uintptr) complex64) Complex64Option { return MapComplex64ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex128(f func([]uintptr) complex128) Complex128Option { return MapComplex128ToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapAny(f func([]uintptr) Any) AnyOption { return MapAnyToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapBoolOption(f func([]uintptr) BoolOption) BoolOptionOption { return MapBoolOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapStringOption(f func([]uintptr) StringOption) StringOptionOption { return MapStringOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapIntOption(f func([]uintptr) IntOption) IntOptionOption { return MapIntOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt8Option(f func([]uintptr) Int8Option) Int8OptionOption { return MapInt8OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt16Option(f func([]uintptr) Int16Option) Int16OptionOption { return MapInt16OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt32Option(f func([]uintptr) Int32Option) Int32OptionOption { return MapInt32OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt64Option(f func([]uintptr) Int64Option) Int64OptionOption { return MapInt64OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintOption(f func([]uintptr) UintOption) UintOptionOption { return MapUintOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint8Option(f func([]uintptr) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint16Option(f func([]uintptr) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint32Option(f func([]uintptr) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint64Option(f func([]uintptr) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintptrOption(f func([]uintptr) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapByteOption(f func([]uintptr) ByteOption) ByteOptionOption { return MapByteOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapRuneOption(f func([]uintptr) RuneOption) RuneOptionOption { return MapRuneOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat32Option(f func([]uintptr) Float32Option) Float32OptionOption { return MapFloat32OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat64Option(f func([]uintptr) Float64Option) Float64OptionOption { return MapFloat64OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex64Option(f func([]uintptr) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex128Option(f func([]uintptr) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapAnyOption(f func([]uintptr) AnyOption) AnyOptionOption { return MapAnyOptionToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapBoolArr(f func([]uintptr) []bool) BoolArrOption { return MapBoolArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapStringArr(f func([]uintptr) []string) StringArrOption { return MapStringArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapIntArr(f func([]uintptr) []int) IntArrOption { return MapIntArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt8Arr(f func([]uintptr) []int8) Int8ArrOption { return MapInt8ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt16Arr(f func([]uintptr) []int16) Int16ArrOption { return MapInt16ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt32Arr(f func([]uintptr) []int32) Int32ArrOption { return MapInt32ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt64Arr(f func([]uintptr) []int64) Int64ArrOption { return MapInt64ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintArr(f func([]uintptr) []uint) UintArrOption { return MapUintArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint8Arr(f func([]uintptr) []uint8) Uint8ArrOption { return MapUint8ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint16Arr(f func([]uintptr) []uint16) Uint16ArrOption { return MapUint16ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint32Arr(f func([]uintptr) []uint32) Uint32ArrOption { return MapUint32ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint64Arr(f func([]uintptr) []uint64) Uint64ArrOption { return MapUint64ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintptrArr(f func([]uintptr) []uintptr) UintptrArrOption { return MapUintptrArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapByteArr(f func([]uintptr) []byte) ByteArrOption { return MapByteArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapRuneArr(f func([]uintptr) []rune) RuneArrOption { return MapRuneArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat32Arr(f func([]uintptr) []float32) Float32ArrOption { return MapFloat32ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat64Arr(f func([]uintptr) []float64) Float64ArrOption { return MapFloat64ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex64Arr(f func([]uintptr) []complex64) Complex64ArrOption { return MapComplex64ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex128Arr(f func([]uintptr) []complex128) Complex128ArrOption { return MapComplex128ArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapAnyArr(f func([]uintptr) []Any) AnyArrOption { return MapAnyArrToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapBoolList(f func([]uintptr) BoolList) BoolListOption { return MapBoolListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapStringList(f func([]uintptr) StringList) StringListOption { return MapStringListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapIntList(f func([]uintptr) IntList) IntListOption { return MapIntListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt8List(f func([]uintptr) Int8List) Int8ListOption { return MapInt8ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt16List(f func([]uintptr) Int16List) Int16ListOption { return MapInt16ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt32List(f func([]uintptr) Int32List) Int32ListOption { return MapInt32ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapInt64List(f func([]uintptr) Int64List) Int64ListOption { return MapInt64ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintList(f func([]uintptr) UintList) UintListOption { return MapUintListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint8List(f func([]uintptr) Uint8List) Uint8ListOption { return MapUint8ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint16List(f func([]uintptr) Uint16List) Uint16ListOption { return MapUint16ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint32List(f func([]uintptr) Uint32List) Uint32ListOption { return MapUint32ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUint64List(f func([]uintptr) Uint64List) Uint64ListOption { return MapUint64ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapUintptrList(f func([]uintptr) UintptrList) UintptrListOption { return MapUintptrListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapByteList(f func([]uintptr) ByteList) ByteListOption { return MapByteListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapRuneList(f func([]uintptr) RuneList) RuneListOption { return MapRuneListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat32List(f func([]uintptr) Float32List) Float32ListOption { return MapFloat32ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapFloat64List(f func([]uintptr) Float64List) Float64ListOption { return MapFloat64ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex64List(f func([]uintptr) Complex64List) Complex64ListOption { return MapComplex64ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapComplex128List(f func([]uintptr) Complex128List) Complex128ListOption { return MapComplex128ListToUintptrArrOption(m, f) }
func (m UintptrArrOption) MapAnyList(f func([]uintptr) AnyList) AnyListOption { return MapAnyListToUintptrArrOption(m, f) }
func (m ByteArrOption) MapBool(f func([]byte) bool) BoolOption { return MapBoolToByteArrOption(m, f) }
func (m ByteArrOption) MapString(f func([]byte) string) StringOption { return MapStringToByteArrOption(m, f) }
func (m ByteArrOption) MapInt(f func([]byte) int) IntOption { return MapIntToByteArrOption(m, f) }
func (m ByteArrOption) MapInt8(f func([]byte) int8) Int8Option { return MapInt8ToByteArrOption(m, f) }
func (m ByteArrOption) MapInt16(f func([]byte) int16) Int16Option { return MapInt16ToByteArrOption(m, f) }
func (m ByteArrOption) MapInt32(f func([]byte) int32) Int32Option { return MapInt32ToByteArrOption(m, f) }
func (m ByteArrOption) MapInt64(f func([]byte) int64) Int64Option { return MapInt64ToByteArrOption(m, f) }
func (m ByteArrOption) MapUint(f func([]byte) uint) UintOption { return MapUintToByteArrOption(m, f) }
func (m ByteArrOption) MapUint8(f func([]byte) uint8) Uint8Option { return MapUint8ToByteArrOption(m, f) }
func (m ByteArrOption) MapUint16(f func([]byte) uint16) Uint16Option { return MapUint16ToByteArrOption(m, f) }
func (m ByteArrOption) MapUint32(f func([]byte) uint32) Uint32Option { return MapUint32ToByteArrOption(m, f) }
func (m ByteArrOption) MapUint64(f func([]byte) uint64) Uint64Option { return MapUint64ToByteArrOption(m, f) }
func (m ByteArrOption) MapUintptr(f func([]byte) uintptr) UintptrOption { return MapUintptrToByteArrOption(m, f) }
func (m ByteArrOption) MapByte(f func([]byte) byte) ByteOption { return MapByteToByteArrOption(m, f) }
func (m ByteArrOption) MapRune(f func([]byte) rune) RuneOption { return MapRuneToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat32(f func([]byte) float32) Float32Option { return MapFloat32ToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat64(f func([]byte) float64) Float64Option { return MapFloat64ToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex64(f func([]byte) complex64) Complex64Option { return MapComplex64ToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex128(f func([]byte) complex128) Complex128Option { return MapComplex128ToByteArrOption(m, f) }
func (m ByteArrOption) MapAny(f func([]byte) Any) AnyOption { return MapAnyToByteArrOption(m, f) }
func (m ByteArrOption) MapBoolOption(f func([]byte) BoolOption) BoolOptionOption { return MapBoolOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapStringOption(f func([]byte) StringOption) StringOptionOption { return MapStringOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapIntOption(f func([]byte) IntOption) IntOptionOption { return MapIntOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapInt8Option(f func([]byte) Int8Option) Int8OptionOption { return MapInt8OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapInt16Option(f func([]byte) Int16Option) Int16OptionOption { return MapInt16OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapInt32Option(f func([]byte) Int32Option) Int32OptionOption { return MapInt32OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapInt64Option(f func([]byte) Int64Option) Int64OptionOption { return MapInt64OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapUintOption(f func([]byte) UintOption) UintOptionOption { return MapUintOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapUint8Option(f func([]byte) Uint8Option) Uint8OptionOption { return MapUint8OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapUint16Option(f func([]byte) Uint16Option) Uint16OptionOption { return MapUint16OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapUint32Option(f func([]byte) Uint32Option) Uint32OptionOption { return MapUint32OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapUint64Option(f func([]byte) Uint64Option) Uint64OptionOption { return MapUint64OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapUintptrOption(f func([]byte) UintptrOption) UintptrOptionOption { return MapUintptrOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapByteOption(f func([]byte) ByteOption) ByteOptionOption { return MapByteOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapRuneOption(f func([]byte) RuneOption) RuneOptionOption { return MapRuneOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat32Option(f func([]byte) Float32Option) Float32OptionOption { return MapFloat32OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat64Option(f func([]byte) Float64Option) Float64OptionOption { return MapFloat64OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex64Option(f func([]byte) Complex64Option) Complex64OptionOption { return MapComplex64OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex128Option(f func([]byte) Complex128Option) Complex128OptionOption { return MapComplex128OptionToByteArrOption(m, f) }
func (m ByteArrOption) MapAnyOption(f func([]byte) AnyOption) AnyOptionOption { return MapAnyOptionToByteArrOption(m, f) }
func (m ByteArrOption) MapBoolArr(f func([]byte) []bool) BoolArrOption { return MapBoolArrToByteArrOption(m, f) }
func (m ByteArrOption) MapStringArr(f func([]byte) []string) StringArrOption { return MapStringArrToByteArrOption(m, f) }
func (m ByteArrOption) MapIntArr(f func([]byte) []int) IntArrOption { return MapIntArrToByteArrOption(m, f) }
func (m ByteArrOption) MapInt8Arr(f func([]byte) []int8) Int8ArrOption { return MapInt8ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapInt16Arr(f func([]byte) []int16) Int16ArrOption { return MapInt16ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapInt32Arr(f func([]byte) []int32) Int32ArrOption { return MapInt32ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapInt64Arr(f func([]byte) []int64) Int64ArrOption { return MapInt64ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapUintArr(f func([]byte) []uint) UintArrOption { return MapUintArrToByteArrOption(m, f) }
func (m ByteArrOption) MapUint8Arr(f func([]byte) []uint8) Uint8ArrOption { return MapUint8ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapUint16Arr(f func([]byte) []uint16) Uint16ArrOption { return MapUint16ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapUint32Arr(f func([]byte) []uint32) Uint32ArrOption { return MapUint32ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapUint64Arr(f func([]byte) []uint64) Uint64ArrOption { return MapUint64ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapUintptrArr(f func([]byte) []uintptr) UintptrArrOption { return MapUintptrArrToByteArrOption(m, f) }
func (m ByteArrOption) MapByteArr(f func([]byte) []byte) ByteArrOption { return MapByteArrToByteArrOption(m, f) }
func (m ByteArrOption) MapRuneArr(f func([]byte) []rune) RuneArrOption { return MapRuneArrToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat32Arr(f func([]byte) []float32) Float32ArrOption { return MapFloat32ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat64Arr(f func([]byte) []float64) Float64ArrOption { return MapFloat64ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex64Arr(f func([]byte) []complex64) Complex64ArrOption { return MapComplex64ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex128Arr(f func([]byte) []complex128) Complex128ArrOption { return MapComplex128ArrToByteArrOption(m, f) }
func (m ByteArrOption) MapAnyArr(f func([]byte) []Any) AnyArrOption { return MapAnyArrToByteArrOption(m, f) }
func (m ByteArrOption) MapBoolList(f func([]byte) BoolList) BoolListOption { return MapBoolListToByteArrOption(m, f) }
func (m ByteArrOption) MapStringList(f func([]byte) StringList) StringListOption { return MapStringListToByteArrOption(m, f) }
func (m ByteArrOption) MapIntList(f func([]byte) IntList) IntListOption { return MapIntListToByteArrOption(m, f) }
func (m ByteArrOption) MapInt8List(f func([]byte) Int8List) Int8ListOption { return MapInt8ListToByteArrOption(m, f) }
func (m ByteArrOption) MapInt16List(f func([]byte) Int16List) Int16ListOption { return MapInt16ListToByteArrOption(m, f) }
func (m ByteArrOption) MapInt32List(f func([]byte) Int32List) Int32ListOption { return MapInt32ListToByteArrOption(m, f) }
func (m ByteArrOption) MapInt64List(f func([]byte) Int64List) Int64ListOption { return MapInt64ListToByteArrOption(m, f) }
func (m ByteArrOption) MapUintList(f func([]byte) UintList) UintListOption { return MapUintListToByteArrOption(m, f) }
func (m ByteArrOption) MapUint8List(f func([]byte) Uint8List) Uint8ListOption { return MapUint8ListToByteArrOption(m, f) }
func (m ByteArrOption) MapUint16List(f func([]byte) Uint16List) Uint16ListOption { return MapUint16ListToByteArrOption(m, f) }
func (m ByteArrOption) MapUint32List(f func([]byte) Uint32List) Uint32ListOption { return MapUint32ListToByteArrOption(m, f) }
func (m ByteArrOption) MapUint64List(f func([]byte) Uint64List) Uint64ListOption { return MapUint64ListToByteArrOption(m, f) }
func (m ByteArrOption) MapUintptrList(f func([]byte) UintptrList) UintptrListOption { return MapUintptrListToByteArrOption(m, f) }
func (m ByteArrOption) MapByteList(f func([]byte) ByteList) ByteListOption { return MapByteListToByteArrOption(m, f) }
func (m ByteArrOption) MapRuneList(f func([]byte) RuneList) RuneListOption { return MapRuneListToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat32List(f func([]byte) Float32List) Float32ListOption { return MapFloat32ListToByteArrOption(m, f) }
func (m ByteArrOption) MapFloat64List(f func([]byte) Float64List) Float64ListOption { return MapFloat64ListToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex64List(f func([]byte) Complex64List) Complex64ListOption { return MapComplex64ListToByteArrOption(m, f) }
func (m ByteArrOption) MapComplex128List(f func([]byte) Complex128List) Complex128ListOption { return MapComplex128ListToByteArrOption(m, f) }
func (m ByteArrOption) MapAnyList(f func([]byte) AnyList) AnyListOption { return MapAnyListToByteArrOption(m, f) }
func (m RuneArrOption) MapBool(f func([]rune) bool) BoolOption { return MapBoolToRuneArrOption(m, f) }
func (m RuneArrOption) MapString(f func([]rune) string) StringOption { return MapStringToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt(f func([]rune) int) IntOption { return MapIntToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt8(f func([]rune) int8) Int8Option { return MapInt8ToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt16(f func([]rune) int16) Int16Option { return MapInt16ToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt32(f func([]rune) int32) Int32Option { return MapInt32ToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt64(f func([]rune) int64) Int64Option { return MapInt64ToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint(f func([]rune) uint) UintOption { return MapUintToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint8(f func([]rune) uint8) Uint8Option { return MapUint8ToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint16(f func([]rune) uint16) Uint16Option { return MapUint16ToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint32(f func([]rune) uint32) Uint32Option { return MapUint32ToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint64(f func([]rune) uint64) Uint64Option { return MapUint64ToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintptr(f func([]rune) uintptr) UintptrOption { return MapUintptrToRuneArrOption(m, f) }
func (m RuneArrOption) MapByte(f func([]rune) byte) ByteOption { return MapByteToRuneArrOption(m, f) }
func (m RuneArrOption) MapRune(f func([]rune) rune) RuneOption { return MapRuneToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat32(f func([]rune) float32) Float32Option { return MapFloat32ToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat64(f func([]rune) float64) Float64Option { return MapFloat64ToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex64(f func([]rune) complex64) Complex64Option { return MapComplex64ToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex128(f func([]rune) complex128) Complex128Option { return MapComplex128ToRuneArrOption(m, f) }
func (m RuneArrOption) MapAny(f func([]rune) Any) AnyOption { return MapAnyToRuneArrOption(m, f) }
func (m RuneArrOption) MapBoolOption(f func([]rune) BoolOption) BoolOptionOption { return MapBoolOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapStringOption(f func([]rune) StringOption) StringOptionOption { return MapStringOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapIntOption(f func([]rune) IntOption) IntOptionOption { return MapIntOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt8Option(f func([]rune) Int8Option) Int8OptionOption { return MapInt8OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt16Option(f func([]rune) Int16Option) Int16OptionOption { return MapInt16OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt32Option(f func([]rune) Int32Option) Int32OptionOption { return MapInt32OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt64Option(f func([]rune) Int64Option) Int64OptionOption { return MapInt64OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintOption(f func([]rune) UintOption) UintOptionOption { return MapUintOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint8Option(f func([]rune) Uint8Option) Uint8OptionOption { return MapUint8OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint16Option(f func([]rune) Uint16Option) Uint16OptionOption { return MapUint16OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint32Option(f func([]rune) Uint32Option) Uint32OptionOption { return MapUint32OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint64Option(f func([]rune) Uint64Option) Uint64OptionOption { return MapUint64OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintptrOption(f func([]rune) UintptrOption) UintptrOptionOption { return MapUintptrOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapByteOption(f func([]rune) ByteOption) ByteOptionOption { return MapByteOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapRuneOption(f func([]rune) RuneOption) RuneOptionOption { return MapRuneOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat32Option(f func([]rune) Float32Option) Float32OptionOption { return MapFloat32OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat64Option(f func([]rune) Float64Option) Float64OptionOption { return MapFloat64OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex64Option(f func([]rune) Complex64Option) Complex64OptionOption { return MapComplex64OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex128Option(f func([]rune) Complex128Option) Complex128OptionOption { return MapComplex128OptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapAnyOption(f func([]rune) AnyOption) AnyOptionOption { return MapAnyOptionToRuneArrOption(m, f) }
func (m RuneArrOption) MapBoolArr(f func([]rune) []bool) BoolArrOption { return MapBoolArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapStringArr(f func([]rune) []string) StringArrOption { return MapStringArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapIntArr(f func([]rune) []int) IntArrOption { return MapIntArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt8Arr(f func([]rune) []int8) Int8ArrOption { return MapInt8ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt16Arr(f func([]rune) []int16) Int16ArrOption { return MapInt16ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt32Arr(f func([]rune) []int32) Int32ArrOption { return MapInt32ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt64Arr(f func([]rune) []int64) Int64ArrOption { return MapInt64ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintArr(f func([]rune) []uint) UintArrOption { return MapUintArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint8Arr(f func([]rune) []uint8) Uint8ArrOption { return MapUint8ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint16Arr(f func([]rune) []uint16) Uint16ArrOption { return MapUint16ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint32Arr(f func([]rune) []uint32) Uint32ArrOption { return MapUint32ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint64Arr(f func([]rune) []uint64) Uint64ArrOption { return MapUint64ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintptrArr(f func([]rune) []uintptr) UintptrArrOption { return MapUintptrArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapByteArr(f func([]rune) []byte) ByteArrOption { return MapByteArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapRuneArr(f func([]rune) []rune) RuneArrOption { return MapRuneArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat32Arr(f func([]rune) []float32) Float32ArrOption { return MapFloat32ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat64Arr(f func([]rune) []float64) Float64ArrOption { return MapFloat64ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex64Arr(f func([]rune) []complex64) Complex64ArrOption { return MapComplex64ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex128Arr(f func([]rune) []complex128) Complex128ArrOption { return MapComplex128ArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapAnyArr(f func([]rune) []Any) AnyArrOption { return MapAnyArrToRuneArrOption(m, f) }
func (m RuneArrOption) MapBoolList(f func([]rune) BoolList) BoolListOption { return MapBoolListToRuneArrOption(m, f) }
func (m RuneArrOption) MapStringList(f func([]rune) StringList) StringListOption { return MapStringListToRuneArrOption(m, f) }
func (m RuneArrOption) MapIntList(f func([]rune) IntList) IntListOption { return MapIntListToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt8List(f func([]rune) Int8List) Int8ListOption { return MapInt8ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt16List(f func([]rune) Int16List) Int16ListOption { return MapInt16ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt32List(f func([]rune) Int32List) Int32ListOption { return MapInt32ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapInt64List(f func([]rune) Int64List) Int64ListOption { return MapInt64ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintList(f func([]rune) UintList) UintListOption { return MapUintListToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint8List(f func([]rune) Uint8List) Uint8ListOption { return MapUint8ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint16List(f func([]rune) Uint16List) Uint16ListOption { return MapUint16ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint32List(f func([]rune) Uint32List) Uint32ListOption { return MapUint32ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapUint64List(f func([]rune) Uint64List) Uint64ListOption { return MapUint64ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapUintptrList(f func([]rune) UintptrList) UintptrListOption { return MapUintptrListToRuneArrOption(m, f) }
func (m RuneArrOption) MapByteList(f func([]rune) ByteList) ByteListOption { return MapByteListToRuneArrOption(m, f) }
func (m RuneArrOption) MapRuneList(f func([]rune) RuneList) RuneListOption { return MapRuneListToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat32List(f func([]rune) Float32List) Float32ListOption { return MapFloat32ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapFloat64List(f func([]rune) Float64List) Float64ListOption { return MapFloat64ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex64List(f func([]rune) Complex64List) Complex64ListOption { return MapComplex64ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapComplex128List(f func([]rune) Complex128List) Complex128ListOption { return MapComplex128ListToRuneArrOption(m, f) }
func (m RuneArrOption) MapAnyList(f func([]rune) AnyList) AnyListOption { return MapAnyListToRuneArrOption(m, f) }
func (m Float32ArrOption) MapBool(f func([]float32) bool) BoolOption { return MapBoolToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapString(f func([]float32) string) StringOption { return MapStringToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt(f func([]float32) int) IntOption { return MapIntToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt8(f func([]float32) int8) Int8Option { return MapInt8ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt16(f func([]float32) int16) Int16Option { return MapInt16ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt32(f func([]float32) int32) Int32Option { return MapInt32ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt64(f func([]float32) int64) Int64Option { return MapInt64ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint(f func([]float32) uint) UintOption { return MapUintToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint8(f func([]float32) uint8) Uint8Option { return MapUint8ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint16(f func([]float32) uint16) Uint16Option { return MapUint16ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint32(f func([]float32) uint32) Uint32Option { return MapUint32ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint64(f func([]float32) uint64) Uint64Option { return MapUint64ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintptr(f func([]float32) uintptr) UintptrOption { return MapUintptrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapByte(f func([]float32) byte) ByteOption { return MapByteToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapRune(f func([]float32) rune) RuneOption { return MapRuneToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat32(f func([]float32) float32) Float32Option { return MapFloat32ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat64(f func([]float32) float64) Float64Option { return MapFloat64ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex64(f func([]float32) complex64) Complex64Option { return MapComplex64ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex128(f func([]float32) complex128) Complex128Option { return MapComplex128ToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapAny(f func([]float32) Any) AnyOption { return MapAnyToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapBoolOption(f func([]float32) BoolOption) BoolOptionOption { return MapBoolOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapStringOption(f func([]float32) StringOption) StringOptionOption { return MapStringOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapIntOption(f func([]float32) IntOption) IntOptionOption { return MapIntOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt8Option(f func([]float32) Int8Option) Int8OptionOption { return MapInt8OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt16Option(f func([]float32) Int16Option) Int16OptionOption { return MapInt16OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt32Option(f func([]float32) Int32Option) Int32OptionOption { return MapInt32OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt64Option(f func([]float32) Int64Option) Int64OptionOption { return MapInt64OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintOption(f func([]float32) UintOption) UintOptionOption { return MapUintOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint8Option(f func([]float32) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint16Option(f func([]float32) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint32Option(f func([]float32) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint64Option(f func([]float32) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintptrOption(f func([]float32) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapByteOption(f func([]float32) ByteOption) ByteOptionOption { return MapByteOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapRuneOption(f func([]float32) RuneOption) RuneOptionOption { return MapRuneOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat32Option(f func([]float32) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat64Option(f func([]float32) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex64Option(f func([]float32) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex128Option(f func([]float32) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapAnyOption(f func([]float32) AnyOption) AnyOptionOption { return MapAnyOptionToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapBoolArr(f func([]float32) []bool) BoolArrOption { return MapBoolArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapStringArr(f func([]float32) []string) StringArrOption { return MapStringArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapIntArr(f func([]float32) []int) IntArrOption { return MapIntArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt8Arr(f func([]float32) []int8) Int8ArrOption { return MapInt8ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt16Arr(f func([]float32) []int16) Int16ArrOption { return MapInt16ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt32Arr(f func([]float32) []int32) Int32ArrOption { return MapInt32ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt64Arr(f func([]float32) []int64) Int64ArrOption { return MapInt64ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintArr(f func([]float32) []uint) UintArrOption { return MapUintArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint8Arr(f func([]float32) []uint8) Uint8ArrOption { return MapUint8ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint16Arr(f func([]float32) []uint16) Uint16ArrOption { return MapUint16ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint32Arr(f func([]float32) []uint32) Uint32ArrOption { return MapUint32ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint64Arr(f func([]float32) []uint64) Uint64ArrOption { return MapUint64ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintptrArr(f func([]float32) []uintptr) UintptrArrOption { return MapUintptrArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapByteArr(f func([]float32) []byte) ByteArrOption { return MapByteArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapRuneArr(f func([]float32) []rune) RuneArrOption { return MapRuneArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat32Arr(f func([]float32) []float32) Float32ArrOption { return MapFloat32ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat64Arr(f func([]float32) []float64) Float64ArrOption { return MapFloat64ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex64Arr(f func([]float32) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex128Arr(f func([]float32) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapAnyArr(f func([]float32) []Any) AnyArrOption { return MapAnyArrToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapBoolList(f func([]float32) BoolList) BoolListOption { return MapBoolListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapStringList(f func([]float32) StringList) StringListOption { return MapStringListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapIntList(f func([]float32) IntList) IntListOption { return MapIntListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt8List(f func([]float32) Int8List) Int8ListOption { return MapInt8ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt16List(f func([]float32) Int16List) Int16ListOption { return MapInt16ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt32List(f func([]float32) Int32List) Int32ListOption { return MapInt32ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapInt64List(f func([]float32) Int64List) Int64ListOption { return MapInt64ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintList(f func([]float32) UintList) UintListOption { return MapUintListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint8List(f func([]float32) Uint8List) Uint8ListOption { return MapUint8ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint16List(f func([]float32) Uint16List) Uint16ListOption { return MapUint16ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint32List(f func([]float32) Uint32List) Uint32ListOption { return MapUint32ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUint64List(f func([]float32) Uint64List) Uint64ListOption { return MapUint64ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapUintptrList(f func([]float32) UintptrList) UintptrListOption { return MapUintptrListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapByteList(f func([]float32) ByteList) ByteListOption { return MapByteListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapRuneList(f func([]float32) RuneList) RuneListOption { return MapRuneListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat32List(f func([]float32) Float32List) Float32ListOption { return MapFloat32ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapFloat64List(f func([]float32) Float64List) Float64ListOption { return MapFloat64ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex64List(f func([]float32) Complex64List) Complex64ListOption { return MapComplex64ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapComplex128List(f func([]float32) Complex128List) Complex128ListOption { return MapComplex128ListToFloat32ArrOption(m, f) }
func (m Float32ArrOption) MapAnyList(f func([]float32) AnyList) AnyListOption { return MapAnyListToFloat32ArrOption(m, f) }
func (m Float64ArrOption) MapBool(f func([]float64) bool) BoolOption { return MapBoolToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapString(f func([]float64) string) StringOption { return MapStringToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt(f func([]float64) int) IntOption { return MapIntToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt8(f func([]float64) int8) Int8Option { return MapInt8ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt16(f func([]float64) int16) Int16Option { return MapInt16ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt32(f func([]float64) int32) Int32Option { return MapInt32ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt64(f func([]float64) int64) Int64Option { return MapInt64ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint(f func([]float64) uint) UintOption { return MapUintToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint8(f func([]float64) uint8) Uint8Option { return MapUint8ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint16(f func([]float64) uint16) Uint16Option { return MapUint16ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint32(f func([]float64) uint32) Uint32Option { return MapUint32ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint64(f func([]float64) uint64) Uint64Option { return MapUint64ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintptr(f func([]float64) uintptr) UintptrOption { return MapUintptrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapByte(f func([]float64) byte) ByteOption { return MapByteToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapRune(f func([]float64) rune) RuneOption { return MapRuneToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat32(f func([]float64) float32) Float32Option { return MapFloat32ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat64(f func([]float64) float64) Float64Option { return MapFloat64ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex64(f func([]float64) complex64) Complex64Option { return MapComplex64ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex128(f func([]float64) complex128) Complex128Option { return MapComplex128ToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapAny(f func([]float64) Any) AnyOption { return MapAnyToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapBoolOption(f func([]float64) BoolOption) BoolOptionOption { return MapBoolOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapStringOption(f func([]float64) StringOption) StringOptionOption { return MapStringOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapIntOption(f func([]float64) IntOption) IntOptionOption { return MapIntOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt8Option(f func([]float64) Int8Option) Int8OptionOption { return MapInt8OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt16Option(f func([]float64) Int16Option) Int16OptionOption { return MapInt16OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt32Option(f func([]float64) Int32Option) Int32OptionOption { return MapInt32OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt64Option(f func([]float64) Int64Option) Int64OptionOption { return MapInt64OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintOption(f func([]float64) UintOption) UintOptionOption { return MapUintOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint8Option(f func([]float64) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint16Option(f func([]float64) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint32Option(f func([]float64) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint64Option(f func([]float64) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintptrOption(f func([]float64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapByteOption(f func([]float64) ByteOption) ByteOptionOption { return MapByteOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapRuneOption(f func([]float64) RuneOption) RuneOptionOption { return MapRuneOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat32Option(f func([]float64) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat64Option(f func([]float64) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex64Option(f func([]float64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex128Option(f func([]float64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapAnyOption(f func([]float64) AnyOption) AnyOptionOption { return MapAnyOptionToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapBoolArr(f func([]float64) []bool) BoolArrOption { return MapBoolArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapStringArr(f func([]float64) []string) StringArrOption { return MapStringArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapIntArr(f func([]float64) []int) IntArrOption { return MapIntArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt8Arr(f func([]float64) []int8) Int8ArrOption { return MapInt8ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt16Arr(f func([]float64) []int16) Int16ArrOption { return MapInt16ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt32Arr(f func([]float64) []int32) Int32ArrOption { return MapInt32ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt64Arr(f func([]float64) []int64) Int64ArrOption { return MapInt64ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintArr(f func([]float64) []uint) UintArrOption { return MapUintArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint8Arr(f func([]float64) []uint8) Uint8ArrOption { return MapUint8ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint16Arr(f func([]float64) []uint16) Uint16ArrOption { return MapUint16ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint32Arr(f func([]float64) []uint32) Uint32ArrOption { return MapUint32ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint64Arr(f func([]float64) []uint64) Uint64ArrOption { return MapUint64ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintptrArr(f func([]float64) []uintptr) UintptrArrOption { return MapUintptrArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapByteArr(f func([]float64) []byte) ByteArrOption { return MapByteArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapRuneArr(f func([]float64) []rune) RuneArrOption { return MapRuneArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat32Arr(f func([]float64) []float32) Float32ArrOption { return MapFloat32ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat64Arr(f func([]float64) []float64) Float64ArrOption { return MapFloat64ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex64Arr(f func([]float64) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex128Arr(f func([]float64) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapAnyArr(f func([]float64) []Any) AnyArrOption { return MapAnyArrToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapBoolList(f func([]float64) BoolList) BoolListOption { return MapBoolListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapStringList(f func([]float64) StringList) StringListOption { return MapStringListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapIntList(f func([]float64) IntList) IntListOption { return MapIntListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt8List(f func([]float64) Int8List) Int8ListOption { return MapInt8ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt16List(f func([]float64) Int16List) Int16ListOption { return MapInt16ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt32List(f func([]float64) Int32List) Int32ListOption { return MapInt32ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapInt64List(f func([]float64) Int64List) Int64ListOption { return MapInt64ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintList(f func([]float64) UintList) UintListOption { return MapUintListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint8List(f func([]float64) Uint8List) Uint8ListOption { return MapUint8ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint16List(f func([]float64) Uint16List) Uint16ListOption { return MapUint16ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint32List(f func([]float64) Uint32List) Uint32ListOption { return MapUint32ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUint64List(f func([]float64) Uint64List) Uint64ListOption { return MapUint64ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapUintptrList(f func([]float64) UintptrList) UintptrListOption { return MapUintptrListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapByteList(f func([]float64) ByteList) ByteListOption { return MapByteListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapRuneList(f func([]float64) RuneList) RuneListOption { return MapRuneListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat32List(f func([]float64) Float32List) Float32ListOption { return MapFloat32ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapFloat64List(f func([]float64) Float64List) Float64ListOption { return MapFloat64ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex64List(f func([]float64) Complex64List) Complex64ListOption { return MapComplex64ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapComplex128List(f func([]float64) Complex128List) Complex128ListOption { return MapComplex128ListToFloat64ArrOption(m, f) }
func (m Float64ArrOption) MapAnyList(f func([]float64) AnyList) AnyListOption { return MapAnyListToFloat64ArrOption(m, f) }
func (m Complex64ArrOption) MapBool(f func([]complex64) bool) BoolOption { return MapBoolToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapString(f func([]complex64) string) StringOption { return MapStringToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt(f func([]complex64) int) IntOption { return MapIntToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt8(f func([]complex64) int8) Int8Option { return MapInt8ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt16(f func([]complex64) int16) Int16Option { return MapInt16ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt32(f func([]complex64) int32) Int32Option { return MapInt32ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt64(f func([]complex64) int64) Int64Option { return MapInt64ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint(f func([]complex64) uint) UintOption { return MapUintToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint8(f func([]complex64) uint8) Uint8Option { return MapUint8ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint16(f func([]complex64) uint16) Uint16Option { return MapUint16ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint32(f func([]complex64) uint32) Uint32Option { return MapUint32ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint64(f func([]complex64) uint64) Uint64Option { return MapUint64ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintptr(f func([]complex64) uintptr) UintptrOption { return MapUintptrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapByte(f func([]complex64) byte) ByteOption { return MapByteToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapRune(f func([]complex64) rune) RuneOption { return MapRuneToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat32(f func([]complex64) float32) Float32Option { return MapFloat32ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat64(f func([]complex64) float64) Float64Option { return MapFloat64ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex64(f func([]complex64) complex64) Complex64Option { return MapComplex64ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex128(f func([]complex64) complex128) Complex128Option { return MapComplex128ToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapAny(f func([]complex64) Any) AnyOption { return MapAnyToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapBoolOption(f func([]complex64) BoolOption) BoolOptionOption { return MapBoolOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapStringOption(f func([]complex64) StringOption) StringOptionOption { return MapStringOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapIntOption(f func([]complex64) IntOption) IntOptionOption { return MapIntOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt8Option(f func([]complex64) Int8Option) Int8OptionOption { return MapInt8OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt16Option(f func([]complex64) Int16Option) Int16OptionOption { return MapInt16OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt32Option(f func([]complex64) Int32Option) Int32OptionOption { return MapInt32OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt64Option(f func([]complex64) Int64Option) Int64OptionOption { return MapInt64OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintOption(f func([]complex64) UintOption) UintOptionOption { return MapUintOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint8Option(f func([]complex64) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint16Option(f func([]complex64) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint32Option(f func([]complex64) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint64Option(f func([]complex64) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintptrOption(f func([]complex64) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapByteOption(f func([]complex64) ByteOption) ByteOptionOption { return MapByteOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapRuneOption(f func([]complex64) RuneOption) RuneOptionOption { return MapRuneOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat32Option(f func([]complex64) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat64Option(f func([]complex64) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex64Option(f func([]complex64) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex128Option(f func([]complex64) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapAnyOption(f func([]complex64) AnyOption) AnyOptionOption { return MapAnyOptionToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapBoolArr(f func([]complex64) []bool) BoolArrOption { return MapBoolArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapStringArr(f func([]complex64) []string) StringArrOption { return MapStringArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapIntArr(f func([]complex64) []int) IntArrOption { return MapIntArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt8Arr(f func([]complex64) []int8) Int8ArrOption { return MapInt8ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt16Arr(f func([]complex64) []int16) Int16ArrOption { return MapInt16ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt32Arr(f func([]complex64) []int32) Int32ArrOption { return MapInt32ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt64Arr(f func([]complex64) []int64) Int64ArrOption { return MapInt64ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintArr(f func([]complex64) []uint) UintArrOption { return MapUintArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint8Arr(f func([]complex64) []uint8) Uint8ArrOption { return MapUint8ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint16Arr(f func([]complex64) []uint16) Uint16ArrOption { return MapUint16ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint32Arr(f func([]complex64) []uint32) Uint32ArrOption { return MapUint32ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint64Arr(f func([]complex64) []uint64) Uint64ArrOption { return MapUint64ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintptrArr(f func([]complex64) []uintptr) UintptrArrOption { return MapUintptrArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapByteArr(f func([]complex64) []byte) ByteArrOption { return MapByteArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapRuneArr(f func([]complex64) []rune) RuneArrOption { return MapRuneArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat32Arr(f func([]complex64) []float32) Float32ArrOption { return MapFloat32ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat64Arr(f func([]complex64) []float64) Float64ArrOption { return MapFloat64ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex64Arr(f func([]complex64) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex128Arr(f func([]complex64) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapAnyArr(f func([]complex64) []Any) AnyArrOption { return MapAnyArrToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapBoolList(f func([]complex64) BoolList) BoolListOption { return MapBoolListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapStringList(f func([]complex64) StringList) StringListOption { return MapStringListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapIntList(f func([]complex64) IntList) IntListOption { return MapIntListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt8List(f func([]complex64) Int8List) Int8ListOption { return MapInt8ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt16List(f func([]complex64) Int16List) Int16ListOption { return MapInt16ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt32List(f func([]complex64) Int32List) Int32ListOption { return MapInt32ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapInt64List(f func([]complex64) Int64List) Int64ListOption { return MapInt64ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintList(f func([]complex64) UintList) UintListOption { return MapUintListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint8List(f func([]complex64) Uint8List) Uint8ListOption { return MapUint8ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint16List(f func([]complex64) Uint16List) Uint16ListOption { return MapUint16ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint32List(f func([]complex64) Uint32List) Uint32ListOption { return MapUint32ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUint64List(f func([]complex64) Uint64List) Uint64ListOption { return MapUint64ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapUintptrList(f func([]complex64) UintptrList) UintptrListOption { return MapUintptrListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapByteList(f func([]complex64) ByteList) ByteListOption { return MapByteListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapRuneList(f func([]complex64) RuneList) RuneListOption { return MapRuneListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat32List(f func([]complex64) Float32List) Float32ListOption { return MapFloat32ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapFloat64List(f func([]complex64) Float64List) Float64ListOption { return MapFloat64ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex64List(f func([]complex64) Complex64List) Complex64ListOption { return MapComplex64ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapComplex128List(f func([]complex64) Complex128List) Complex128ListOption { return MapComplex128ListToComplex64ArrOption(m, f) }
func (m Complex64ArrOption) MapAnyList(f func([]complex64) AnyList) AnyListOption { return MapAnyListToComplex64ArrOption(m, f) }
func (m Complex128ArrOption) MapBool(f func([]complex128) bool) BoolOption { return MapBoolToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapString(f func([]complex128) string) StringOption { return MapStringToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt(f func([]complex128) int) IntOption { return MapIntToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt8(f func([]complex128) int8) Int8Option { return MapInt8ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt16(f func([]complex128) int16) Int16Option { return MapInt16ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt32(f func([]complex128) int32) Int32Option { return MapInt32ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt64(f func([]complex128) int64) Int64Option { return MapInt64ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint(f func([]complex128) uint) UintOption { return MapUintToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint8(f func([]complex128) uint8) Uint8Option { return MapUint8ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint16(f func([]complex128) uint16) Uint16Option { return MapUint16ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint32(f func([]complex128) uint32) Uint32Option { return MapUint32ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint64(f func([]complex128) uint64) Uint64Option { return MapUint64ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintptr(f func([]complex128) uintptr) UintptrOption { return MapUintptrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapByte(f func([]complex128) byte) ByteOption { return MapByteToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapRune(f func([]complex128) rune) RuneOption { return MapRuneToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat32(f func([]complex128) float32) Float32Option { return MapFloat32ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat64(f func([]complex128) float64) Float64Option { return MapFloat64ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex64(f func([]complex128) complex64) Complex64Option { return MapComplex64ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex128(f func([]complex128) complex128) Complex128Option { return MapComplex128ToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapAny(f func([]complex128) Any) AnyOption { return MapAnyToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapBoolOption(f func([]complex128) BoolOption) BoolOptionOption { return MapBoolOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapStringOption(f func([]complex128) StringOption) StringOptionOption { return MapStringOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapIntOption(f func([]complex128) IntOption) IntOptionOption { return MapIntOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt8Option(f func([]complex128) Int8Option) Int8OptionOption { return MapInt8OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt16Option(f func([]complex128) Int16Option) Int16OptionOption { return MapInt16OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt32Option(f func([]complex128) Int32Option) Int32OptionOption { return MapInt32OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt64Option(f func([]complex128) Int64Option) Int64OptionOption { return MapInt64OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintOption(f func([]complex128) UintOption) UintOptionOption { return MapUintOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint8Option(f func([]complex128) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint16Option(f func([]complex128) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint32Option(f func([]complex128) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint64Option(f func([]complex128) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintptrOption(f func([]complex128) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapByteOption(f func([]complex128) ByteOption) ByteOptionOption { return MapByteOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapRuneOption(f func([]complex128) RuneOption) RuneOptionOption { return MapRuneOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat32Option(f func([]complex128) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat64Option(f func([]complex128) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex64Option(f func([]complex128) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex128Option(f func([]complex128) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapAnyOption(f func([]complex128) AnyOption) AnyOptionOption { return MapAnyOptionToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapBoolArr(f func([]complex128) []bool) BoolArrOption { return MapBoolArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapStringArr(f func([]complex128) []string) StringArrOption { return MapStringArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapIntArr(f func([]complex128) []int) IntArrOption { return MapIntArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt8Arr(f func([]complex128) []int8) Int8ArrOption { return MapInt8ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt16Arr(f func([]complex128) []int16) Int16ArrOption { return MapInt16ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt32Arr(f func([]complex128) []int32) Int32ArrOption { return MapInt32ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt64Arr(f func([]complex128) []int64) Int64ArrOption { return MapInt64ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintArr(f func([]complex128) []uint) UintArrOption { return MapUintArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint8Arr(f func([]complex128) []uint8) Uint8ArrOption { return MapUint8ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint16Arr(f func([]complex128) []uint16) Uint16ArrOption { return MapUint16ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint32Arr(f func([]complex128) []uint32) Uint32ArrOption { return MapUint32ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint64Arr(f func([]complex128) []uint64) Uint64ArrOption { return MapUint64ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintptrArr(f func([]complex128) []uintptr) UintptrArrOption { return MapUintptrArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapByteArr(f func([]complex128) []byte) ByteArrOption { return MapByteArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapRuneArr(f func([]complex128) []rune) RuneArrOption { return MapRuneArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat32Arr(f func([]complex128) []float32) Float32ArrOption { return MapFloat32ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat64Arr(f func([]complex128) []float64) Float64ArrOption { return MapFloat64ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex64Arr(f func([]complex128) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex128Arr(f func([]complex128) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapAnyArr(f func([]complex128) []Any) AnyArrOption { return MapAnyArrToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapBoolList(f func([]complex128) BoolList) BoolListOption { return MapBoolListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapStringList(f func([]complex128) StringList) StringListOption { return MapStringListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapIntList(f func([]complex128) IntList) IntListOption { return MapIntListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt8List(f func([]complex128) Int8List) Int8ListOption { return MapInt8ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt16List(f func([]complex128) Int16List) Int16ListOption { return MapInt16ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt32List(f func([]complex128) Int32List) Int32ListOption { return MapInt32ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapInt64List(f func([]complex128) Int64List) Int64ListOption { return MapInt64ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintList(f func([]complex128) UintList) UintListOption { return MapUintListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint8List(f func([]complex128) Uint8List) Uint8ListOption { return MapUint8ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint16List(f func([]complex128) Uint16List) Uint16ListOption { return MapUint16ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint32List(f func([]complex128) Uint32List) Uint32ListOption { return MapUint32ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUint64List(f func([]complex128) Uint64List) Uint64ListOption { return MapUint64ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapUintptrList(f func([]complex128) UintptrList) UintptrListOption { return MapUintptrListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapByteList(f func([]complex128) ByteList) ByteListOption { return MapByteListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapRuneList(f func([]complex128) RuneList) RuneListOption { return MapRuneListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat32List(f func([]complex128) Float32List) Float32ListOption { return MapFloat32ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapFloat64List(f func([]complex128) Float64List) Float64ListOption { return MapFloat64ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex64List(f func([]complex128) Complex64List) Complex64ListOption { return MapComplex64ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapComplex128List(f func([]complex128) Complex128List) Complex128ListOption { return MapComplex128ListToComplex128ArrOption(m, f) }
func (m Complex128ArrOption) MapAnyList(f func([]complex128) AnyList) AnyListOption { return MapAnyListToComplex128ArrOption(m, f) }
func (m AnyArrOption) MapBool(f func([]Any) bool) BoolOption { return MapBoolToAnyArrOption(m, f) }
func (m AnyArrOption) MapString(f func([]Any) string) StringOption { return MapStringToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt(f func([]Any) int) IntOption { return MapIntToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt8(f func([]Any) int8) Int8Option { return MapInt8ToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt16(f func([]Any) int16) Int16Option { return MapInt16ToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt32(f func([]Any) int32) Int32Option { return MapInt32ToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt64(f func([]Any) int64) Int64Option { return MapInt64ToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint(f func([]Any) uint) UintOption { return MapUintToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint8(f func([]Any) uint8) Uint8Option { return MapUint8ToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint16(f func([]Any) uint16) Uint16Option { return MapUint16ToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint32(f func([]Any) uint32) Uint32Option { return MapUint32ToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint64(f func([]Any) uint64) Uint64Option { return MapUint64ToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintptr(f func([]Any) uintptr) UintptrOption { return MapUintptrToAnyArrOption(m, f) }
func (m AnyArrOption) MapByte(f func([]Any) byte) ByteOption { return MapByteToAnyArrOption(m, f) }
func (m AnyArrOption) MapRune(f func([]Any) rune) RuneOption { return MapRuneToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat32(f func([]Any) float32) Float32Option { return MapFloat32ToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat64(f func([]Any) float64) Float64Option { return MapFloat64ToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex64(f func([]Any) complex64) Complex64Option { return MapComplex64ToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex128(f func([]Any) complex128) Complex128Option { return MapComplex128ToAnyArrOption(m, f) }
func (m AnyArrOption) MapAny(f func([]Any) Any) AnyOption { return MapAnyToAnyArrOption(m, f) }
func (m AnyArrOption) MapBoolOption(f func([]Any) BoolOption) BoolOptionOption { return MapBoolOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapStringOption(f func([]Any) StringOption) StringOptionOption { return MapStringOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapIntOption(f func([]Any) IntOption) IntOptionOption { return MapIntOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt8Option(f func([]Any) Int8Option) Int8OptionOption { return MapInt8OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt16Option(f func([]Any) Int16Option) Int16OptionOption { return MapInt16OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt32Option(f func([]Any) Int32Option) Int32OptionOption { return MapInt32OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt64Option(f func([]Any) Int64Option) Int64OptionOption { return MapInt64OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintOption(f func([]Any) UintOption) UintOptionOption { return MapUintOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint8Option(f func([]Any) Uint8Option) Uint8OptionOption { return MapUint8OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint16Option(f func([]Any) Uint16Option) Uint16OptionOption { return MapUint16OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint32Option(f func([]Any) Uint32Option) Uint32OptionOption { return MapUint32OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint64Option(f func([]Any) Uint64Option) Uint64OptionOption { return MapUint64OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintptrOption(f func([]Any) UintptrOption) UintptrOptionOption { return MapUintptrOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapByteOption(f func([]Any) ByteOption) ByteOptionOption { return MapByteOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapRuneOption(f func([]Any) RuneOption) RuneOptionOption { return MapRuneOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat32Option(f func([]Any) Float32Option) Float32OptionOption { return MapFloat32OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat64Option(f func([]Any) Float64Option) Float64OptionOption { return MapFloat64OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex64Option(f func([]Any) Complex64Option) Complex64OptionOption { return MapComplex64OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex128Option(f func([]Any) Complex128Option) Complex128OptionOption { return MapComplex128OptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapAnyOption(f func([]Any) AnyOption) AnyOptionOption { return MapAnyOptionToAnyArrOption(m, f) }
func (m AnyArrOption) MapBoolArr(f func([]Any) []bool) BoolArrOption { return MapBoolArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapStringArr(f func([]Any) []string) StringArrOption { return MapStringArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapIntArr(f func([]Any) []int) IntArrOption { return MapIntArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt8Arr(f func([]Any) []int8) Int8ArrOption { return MapInt8ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt16Arr(f func([]Any) []int16) Int16ArrOption { return MapInt16ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt32Arr(f func([]Any) []int32) Int32ArrOption { return MapInt32ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt64Arr(f func([]Any) []int64) Int64ArrOption { return MapInt64ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintArr(f func([]Any) []uint) UintArrOption { return MapUintArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint8Arr(f func([]Any) []uint8) Uint8ArrOption { return MapUint8ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint16Arr(f func([]Any) []uint16) Uint16ArrOption { return MapUint16ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint32Arr(f func([]Any) []uint32) Uint32ArrOption { return MapUint32ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint64Arr(f func([]Any) []uint64) Uint64ArrOption { return MapUint64ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintptrArr(f func([]Any) []uintptr) UintptrArrOption { return MapUintptrArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapByteArr(f func([]Any) []byte) ByteArrOption { return MapByteArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapRuneArr(f func([]Any) []rune) RuneArrOption { return MapRuneArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat32Arr(f func([]Any) []float32) Float32ArrOption { return MapFloat32ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat64Arr(f func([]Any) []float64) Float64ArrOption { return MapFloat64ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex64Arr(f func([]Any) []complex64) Complex64ArrOption { return MapComplex64ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex128Arr(f func([]Any) []complex128) Complex128ArrOption { return MapComplex128ArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapAnyArr(f func([]Any) []Any) AnyArrOption { return MapAnyArrToAnyArrOption(m, f) }
func (m AnyArrOption) MapBoolList(f func([]Any) BoolList) BoolListOption { return MapBoolListToAnyArrOption(m, f) }
func (m AnyArrOption) MapStringList(f func([]Any) StringList) StringListOption { return MapStringListToAnyArrOption(m, f) }
func (m AnyArrOption) MapIntList(f func([]Any) IntList) IntListOption { return MapIntListToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt8List(f func([]Any) Int8List) Int8ListOption { return MapInt8ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt16List(f func([]Any) Int16List) Int16ListOption { return MapInt16ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt32List(f func([]Any) Int32List) Int32ListOption { return MapInt32ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapInt64List(f func([]Any) Int64List) Int64ListOption { return MapInt64ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintList(f func([]Any) UintList) UintListOption { return MapUintListToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint8List(f func([]Any) Uint8List) Uint8ListOption { return MapUint8ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint16List(f func([]Any) Uint16List) Uint16ListOption { return MapUint16ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint32List(f func([]Any) Uint32List) Uint32ListOption { return MapUint32ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapUint64List(f func([]Any) Uint64List) Uint64ListOption { return MapUint64ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapUintptrList(f func([]Any) UintptrList) UintptrListOption { return MapUintptrListToAnyArrOption(m, f) }
func (m AnyArrOption) MapByteList(f func([]Any) ByteList) ByteListOption { return MapByteListToAnyArrOption(m, f) }
func (m AnyArrOption) MapRuneList(f func([]Any) RuneList) RuneListOption { return MapRuneListToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat32List(f func([]Any) Float32List) Float32ListOption { return MapFloat32ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapFloat64List(f func([]Any) Float64List) Float64ListOption { return MapFloat64ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex64List(f func([]Any) Complex64List) Complex64ListOption { return MapComplex64ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapComplex128List(f func([]Any) Complex128List) Complex128ListOption { return MapComplex128ListToAnyArrOption(m, f) }
func (m AnyArrOption) MapAnyList(f func([]Any) AnyList) AnyListOption { return MapAnyListToAnyArrOption(m, f) }
func (m BoolListOption) MapBool(f func(BoolList) bool) BoolOption { return MapBoolToBoolListOption(m, f) }
func (m BoolListOption) MapString(f func(BoolList) string) StringOption { return MapStringToBoolListOption(m, f) }
func (m BoolListOption) MapInt(f func(BoolList) int) IntOption { return MapIntToBoolListOption(m, f) }
func (m BoolListOption) MapInt8(f func(BoolList) int8) Int8Option { return MapInt8ToBoolListOption(m, f) }
func (m BoolListOption) MapInt16(f func(BoolList) int16) Int16Option { return MapInt16ToBoolListOption(m, f) }
func (m BoolListOption) MapInt32(f func(BoolList) int32) Int32Option { return MapInt32ToBoolListOption(m, f) }
func (m BoolListOption) MapInt64(f func(BoolList) int64) Int64Option { return MapInt64ToBoolListOption(m, f) }
func (m BoolListOption) MapUint(f func(BoolList) uint) UintOption { return MapUintToBoolListOption(m, f) }
func (m BoolListOption) MapUint8(f func(BoolList) uint8) Uint8Option { return MapUint8ToBoolListOption(m, f) }
func (m BoolListOption) MapUint16(f func(BoolList) uint16) Uint16Option { return MapUint16ToBoolListOption(m, f) }
func (m BoolListOption) MapUint32(f func(BoolList) uint32) Uint32Option { return MapUint32ToBoolListOption(m, f) }
func (m BoolListOption) MapUint64(f func(BoolList) uint64) Uint64Option { return MapUint64ToBoolListOption(m, f) }
func (m BoolListOption) MapUintptr(f func(BoolList) uintptr) UintptrOption { return MapUintptrToBoolListOption(m, f) }
func (m BoolListOption) MapByte(f func(BoolList) byte) ByteOption { return MapByteToBoolListOption(m, f) }
func (m BoolListOption) MapRune(f func(BoolList) rune) RuneOption { return MapRuneToBoolListOption(m, f) }
func (m BoolListOption) MapFloat32(f func(BoolList) float32) Float32Option { return MapFloat32ToBoolListOption(m, f) }
func (m BoolListOption) MapFloat64(f func(BoolList) float64) Float64Option { return MapFloat64ToBoolListOption(m, f) }
func (m BoolListOption) MapComplex64(f func(BoolList) complex64) Complex64Option { return MapComplex64ToBoolListOption(m, f) }
func (m BoolListOption) MapComplex128(f func(BoolList) complex128) Complex128Option { return MapComplex128ToBoolListOption(m, f) }
func (m BoolListOption) MapAny(f func(BoolList) Any) AnyOption { return MapAnyToBoolListOption(m, f) }
func (m BoolListOption) MapBoolOption(f func(BoolList) BoolOption) BoolOptionOption { return MapBoolOptionToBoolListOption(m, f) }
func (m BoolListOption) MapStringOption(f func(BoolList) StringOption) StringOptionOption { return MapStringOptionToBoolListOption(m, f) }
func (m BoolListOption) MapIntOption(f func(BoolList) IntOption) IntOptionOption { return MapIntOptionToBoolListOption(m, f) }
func (m BoolListOption) MapInt8Option(f func(BoolList) Int8Option) Int8OptionOption { return MapInt8OptionToBoolListOption(m, f) }
func (m BoolListOption) MapInt16Option(f func(BoolList) Int16Option) Int16OptionOption { return MapInt16OptionToBoolListOption(m, f) }
func (m BoolListOption) MapInt32Option(f func(BoolList) Int32Option) Int32OptionOption { return MapInt32OptionToBoolListOption(m, f) }
func (m BoolListOption) MapInt64Option(f func(BoolList) Int64Option) Int64OptionOption { return MapInt64OptionToBoolListOption(m, f) }
func (m BoolListOption) MapUintOption(f func(BoolList) UintOption) UintOptionOption { return MapUintOptionToBoolListOption(m, f) }
func (m BoolListOption) MapUint8Option(f func(BoolList) Uint8Option) Uint8OptionOption { return MapUint8OptionToBoolListOption(m, f) }
func (m BoolListOption) MapUint16Option(f func(BoolList) Uint16Option) Uint16OptionOption { return MapUint16OptionToBoolListOption(m, f) }
func (m BoolListOption) MapUint32Option(f func(BoolList) Uint32Option) Uint32OptionOption { return MapUint32OptionToBoolListOption(m, f) }
func (m BoolListOption) MapUint64Option(f func(BoolList) Uint64Option) Uint64OptionOption { return MapUint64OptionToBoolListOption(m, f) }
func (m BoolListOption) MapUintptrOption(f func(BoolList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToBoolListOption(m, f) }
func (m BoolListOption) MapByteOption(f func(BoolList) ByteOption) ByteOptionOption { return MapByteOptionToBoolListOption(m, f) }
func (m BoolListOption) MapRuneOption(f func(BoolList) RuneOption) RuneOptionOption { return MapRuneOptionToBoolListOption(m, f) }
func (m BoolListOption) MapFloat32Option(f func(BoolList) Float32Option) Float32OptionOption { return MapFloat32OptionToBoolListOption(m, f) }
func (m BoolListOption) MapFloat64Option(f func(BoolList) Float64Option) Float64OptionOption { return MapFloat64OptionToBoolListOption(m, f) }
func (m BoolListOption) MapComplex64Option(f func(BoolList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToBoolListOption(m, f) }
func (m BoolListOption) MapComplex128Option(f func(BoolList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToBoolListOption(m, f) }
func (m BoolListOption) MapAnyOption(f func(BoolList) AnyOption) AnyOptionOption { return MapAnyOptionToBoolListOption(m, f) }
func (m BoolListOption) MapBoolArr(f func(BoolList) []bool) BoolArrOption { return MapBoolArrToBoolListOption(m, f) }
func (m BoolListOption) MapStringArr(f func(BoolList) []string) StringArrOption { return MapStringArrToBoolListOption(m, f) }
func (m BoolListOption) MapIntArr(f func(BoolList) []int) IntArrOption { return MapIntArrToBoolListOption(m, f) }
func (m BoolListOption) MapInt8Arr(f func(BoolList) []int8) Int8ArrOption { return MapInt8ArrToBoolListOption(m, f) }
func (m BoolListOption) MapInt16Arr(f func(BoolList) []int16) Int16ArrOption { return MapInt16ArrToBoolListOption(m, f) }
func (m BoolListOption) MapInt32Arr(f func(BoolList) []int32) Int32ArrOption { return MapInt32ArrToBoolListOption(m, f) }
func (m BoolListOption) MapInt64Arr(f func(BoolList) []int64) Int64ArrOption { return MapInt64ArrToBoolListOption(m, f) }
func (m BoolListOption) MapUintArr(f func(BoolList) []uint) UintArrOption { return MapUintArrToBoolListOption(m, f) }
func (m BoolListOption) MapUint8Arr(f func(BoolList) []uint8) Uint8ArrOption { return MapUint8ArrToBoolListOption(m, f) }
func (m BoolListOption) MapUint16Arr(f func(BoolList) []uint16) Uint16ArrOption { return MapUint16ArrToBoolListOption(m, f) }
func (m BoolListOption) MapUint32Arr(f func(BoolList) []uint32) Uint32ArrOption { return MapUint32ArrToBoolListOption(m, f) }
func (m BoolListOption) MapUint64Arr(f func(BoolList) []uint64) Uint64ArrOption { return MapUint64ArrToBoolListOption(m, f) }
func (m BoolListOption) MapUintptrArr(f func(BoolList) []uintptr) UintptrArrOption { return MapUintptrArrToBoolListOption(m, f) }
func (m BoolListOption) MapByteArr(f func(BoolList) []byte) ByteArrOption { return MapByteArrToBoolListOption(m, f) }
func (m BoolListOption) MapRuneArr(f func(BoolList) []rune) RuneArrOption { return MapRuneArrToBoolListOption(m, f) }
func (m BoolListOption) MapFloat32Arr(f func(BoolList) []float32) Float32ArrOption { return MapFloat32ArrToBoolListOption(m, f) }
func (m BoolListOption) MapFloat64Arr(f func(BoolList) []float64) Float64ArrOption { return MapFloat64ArrToBoolListOption(m, f) }
func (m BoolListOption) MapComplex64Arr(f func(BoolList) []complex64) Complex64ArrOption { return MapComplex64ArrToBoolListOption(m, f) }
func (m BoolListOption) MapComplex128Arr(f func(BoolList) []complex128) Complex128ArrOption { return MapComplex128ArrToBoolListOption(m, f) }
func (m BoolListOption) MapAnyArr(f func(BoolList) []Any) AnyArrOption { return MapAnyArrToBoolListOption(m, f) }
func (m BoolListOption) MapBoolList(f func(BoolList) BoolList) BoolListOption { return MapBoolListToBoolListOption(m, f) }
func (m BoolListOption) MapStringList(f func(BoolList) StringList) StringListOption { return MapStringListToBoolListOption(m, f) }
func (m BoolListOption) MapIntList(f func(BoolList) IntList) IntListOption { return MapIntListToBoolListOption(m, f) }
func (m BoolListOption) MapInt8List(f func(BoolList) Int8List) Int8ListOption { return MapInt8ListToBoolListOption(m, f) }
func (m BoolListOption) MapInt16List(f func(BoolList) Int16List) Int16ListOption { return MapInt16ListToBoolListOption(m, f) }
func (m BoolListOption) MapInt32List(f func(BoolList) Int32List) Int32ListOption { return MapInt32ListToBoolListOption(m, f) }
func (m BoolListOption) MapInt64List(f func(BoolList) Int64List) Int64ListOption { return MapInt64ListToBoolListOption(m, f) }
func (m BoolListOption) MapUintList(f func(BoolList) UintList) UintListOption { return MapUintListToBoolListOption(m, f) }
func (m BoolListOption) MapUint8List(f func(BoolList) Uint8List) Uint8ListOption { return MapUint8ListToBoolListOption(m, f) }
func (m BoolListOption) MapUint16List(f func(BoolList) Uint16List) Uint16ListOption { return MapUint16ListToBoolListOption(m, f) }
func (m BoolListOption) MapUint32List(f func(BoolList) Uint32List) Uint32ListOption { return MapUint32ListToBoolListOption(m, f) }
func (m BoolListOption) MapUint64List(f func(BoolList) Uint64List) Uint64ListOption { return MapUint64ListToBoolListOption(m, f) }
func (m BoolListOption) MapUintptrList(f func(BoolList) UintptrList) UintptrListOption { return MapUintptrListToBoolListOption(m, f) }
func (m BoolListOption) MapByteList(f func(BoolList) ByteList) ByteListOption { return MapByteListToBoolListOption(m, f) }
func (m BoolListOption) MapRuneList(f func(BoolList) RuneList) RuneListOption { return MapRuneListToBoolListOption(m, f) }
func (m BoolListOption) MapFloat32List(f func(BoolList) Float32List) Float32ListOption { return MapFloat32ListToBoolListOption(m, f) }
func (m BoolListOption) MapFloat64List(f func(BoolList) Float64List) Float64ListOption { return MapFloat64ListToBoolListOption(m, f) }
func (m BoolListOption) MapComplex64List(f func(BoolList) Complex64List) Complex64ListOption { return MapComplex64ListToBoolListOption(m, f) }
func (m BoolListOption) MapComplex128List(f func(BoolList) Complex128List) Complex128ListOption { return MapComplex128ListToBoolListOption(m, f) }
func (m BoolListOption) MapAnyList(f func(BoolList) AnyList) AnyListOption { return MapAnyListToBoolListOption(m, f) }
func (m StringListOption) MapBool(f func(StringList) bool) BoolOption { return MapBoolToStringListOption(m, f) }
func (m StringListOption) MapString(f func(StringList) string) StringOption { return MapStringToStringListOption(m, f) }
func (m StringListOption) MapInt(f func(StringList) int) IntOption { return MapIntToStringListOption(m, f) }
func (m StringListOption) MapInt8(f func(StringList) int8) Int8Option { return MapInt8ToStringListOption(m, f) }
func (m StringListOption) MapInt16(f func(StringList) int16) Int16Option { return MapInt16ToStringListOption(m, f) }
func (m StringListOption) MapInt32(f func(StringList) int32) Int32Option { return MapInt32ToStringListOption(m, f) }
func (m StringListOption) MapInt64(f func(StringList) int64) Int64Option { return MapInt64ToStringListOption(m, f) }
func (m StringListOption) MapUint(f func(StringList) uint) UintOption { return MapUintToStringListOption(m, f) }
func (m StringListOption) MapUint8(f func(StringList) uint8) Uint8Option { return MapUint8ToStringListOption(m, f) }
func (m StringListOption) MapUint16(f func(StringList) uint16) Uint16Option { return MapUint16ToStringListOption(m, f) }
func (m StringListOption) MapUint32(f func(StringList) uint32) Uint32Option { return MapUint32ToStringListOption(m, f) }
func (m StringListOption) MapUint64(f func(StringList) uint64) Uint64Option { return MapUint64ToStringListOption(m, f) }
func (m StringListOption) MapUintptr(f func(StringList) uintptr) UintptrOption { return MapUintptrToStringListOption(m, f) }
func (m StringListOption) MapByte(f func(StringList) byte) ByteOption { return MapByteToStringListOption(m, f) }
func (m StringListOption) MapRune(f func(StringList) rune) RuneOption { return MapRuneToStringListOption(m, f) }
func (m StringListOption) MapFloat32(f func(StringList) float32) Float32Option { return MapFloat32ToStringListOption(m, f) }
func (m StringListOption) MapFloat64(f func(StringList) float64) Float64Option { return MapFloat64ToStringListOption(m, f) }
func (m StringListOption) MapComplex64(f func(StringList) complex64) Complex64Option { return MapComplex64ToStringListOption(m, f) }
func (m StringListOption) MapComplex128(f func(StringList) complex128) Complex128Option { return MapComplex128ToStringListOption(m, f) }
func (m StringListOption) MapAny(f func(StringList) Any) AnyOption { return MapAnyToStringListOption(m, f) }
func (m StringListOption) MapBoolOption(f func(StringList) BoolOption) BoolOptionOption { return MapBoolOptionToStringListOption(m, f) }
func (m StringListOption) MapStringOption(f func(StringList) StringOption) StringOptionOption { return MapStringOptionToStringListOption(m, f) }
func (m StringListOption) MapIntOption(f func(StringList) IntOption) IntOptionOption { return MapIntOptionToStringListOption(m, f) }
func (m StringListOption) MapInt8Option(f func(StringList) Int8Option) Int8OptionOption { return MapInt8OptionToStringListOption(m, f) }
func (m StringListOption) MapInt16Option(f func(StringList) Int16Option) Int16OptionOption { return MapInt16OptionToStringListOption(m, f) }
func (m StringListOption) MapInt32Option(f func(StringList) Int32Option) Int32OptionOption { return MapInt32OptionToStringListOption(m, f) }
func (m StringListOption) MapInt64Option(f func(StringList) Int64Option) Int64OptionOption { return MapInt64OptionToStringListOption(m, f) }
func (m StringListOption) MapUintOption(f func(StringList) UintOption) UintOptionOption { return MapUintOptionToStringListOption(m, f) }
func (m StringListOption) MapUint8Option(f func(StringList) Uint8Option) Uint8OptionOption { return MapUint8OptionToStringListOption(m, f) }
func (m StringListOption) MapUint16Option(f func(StringList) Uint16Option) Uint16OptionOption { return MapUint16OptionToStringListOption(m, f) }
func (m StringListOption) MapUint32Option(f func(StringList) Uint32Option) Uint32OptionOption { return MapUint32OptionToStringListOption(m, f) }
func (m StringListOption) MapUint64Option(f func(StringList) Uint64Option) Uint64OptionOption { return MapUint64OptionToStringListOption(m, f) }
func (m StringListOption) MapUintptrOption(f func(StringList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToStringListOption(m, f) }
func (m StringListOption) MapByteOption(f func(StringList) ByteOption) ByteOptionOption { return MapByteOptionToStringListOption(m, f) }
func (m StringListOption) MapRuneOption(f func(StringList) RuneOption) RuneOptionOption { return MapRuneOptionToStringListOption(m, f) }
func (m StringListOption) MapFloat32Option(f func(StringList) Float32Option) Float32OptionOption { return MapFloat32OptionToStringListOption(m, f) }
func (m StringListOption) MapFloat64Option(f func(StringList) Float64Option) Float64OptionOption { return MapFloat64OptionToStringListOption(m, f) }
func (m StringListOption) MapComplex64Option(f func(StringList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToStringListOption(m, f) }
func (m StringListOption) MapComplex128Option(f func(StringList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToStringListOption(m, f) }
func (m StringListOption) MapAnyOption(f func(StringList) AnyOption) AnyOptionOption { return MapAnyOptionToStringListOption(m, f) }
func (m StringListOption) MapBoolArr(f func(StringList) []bool) BoolArrOption { return MapBoolArrToStringListOption(m, f) }
func (m StringListOption) MapStringArr(f func(StringList) []string) StringArrOption { return MapStringArrToStringListOption(m, f) }
func (m StringListOption) MapIntArr(f func(StringList) []int) IntArrOption { return MapIntArrToStringListOption(m, f) }
func (m StringListOption) MapInt8Arr(f func(StringList) []int8) Int8ArrOption { return MapInt8ArrToStringListOption(m, f) }
func (m StringListOption) MapInt16Arr(f func(StringList) []int16) Int16ArrOption { return MapInt16ArrToStringListOption(m, f) }
func (m StringListOption) MapInt32Arr(f func(StringList) []int32) Int32ArrOption { return MapInt32ArrToStringListOption(m, f) }
func (m StringListOption) MapInt64Arr(f func(StringList) []int64) Int64ArrOption { return MapInt64ArrToStringListOption(m, f) }
func (m StringListOption) MapUintArr(f func(StringList) []uint) UintArrOption { return MapUintArrToStringListOption(m, f) }
func (m StringListOption) MapUint8Arr(f func(StringList) []uint8) Uint8ArrOption { return MapUint8ArrToStringListOption(m, f) }
func (m StringListOption) MapUint16Arr(f func(StringList) []uint16) Uint16ArrOption { return MapUint16ArrToStringListOption(m, f) }
func (m StringListOption) MapUint32Arr(f func(StringList) []uint32) Uint32ArrOption { return MapUint32ArrToStringListOption(m, f) }
func (m StringListOption) MapUint64Arr(f func(StringList) []uint64) Uint64ArrOption { return MapUint64ArrToStringListOption(m, f) }
func (m StringListOption) MapUintptrArr(f func(StringList) []uintptr) UintptrArrOption { return MapUintptrArrToStringListOption(m, f) }
func (m StringListOption) MapByteArr(f func(StringList) []byte) ByteArrOption { return MapByteArrToStringListOption(m, f) }
func (m StringListOption) MapRuneArr(f func(StringList) []rune) RuneArrOption { return MapRuneArrToStringListOption(m, f) }
func (m StringListOption) MapFloat32Arr(f func(StringList) []float32) Float32ArrOption { return MapFloat32ArrToStringListOption(m, f) }
func (m StringListOption) MapFloat64Arr(f func(StringList) []float64) Float64ArrOption { return MapFloat64ArrToStringListOption(m, f) }
func (m StringListOption) MapComplex64Arr(f func(StringList) []complex64) Complex64ArrOption { return MapComplex64ArrToStringListOption(m, f) }
func (m StringListOption) MapComplex128Arr(f func(StringList) []complex128) Complex128ArrOption { return MapComplex128ArrToStringListOption(m, f) }
func (m StringListOption) MapAnyArr(f func(StringList) []Any) AnyArrOption { return MapAnyArrToStringListOption(m, f) }
func (m StringListOption) MapBoolList(f func(StringList) BoolList) BoolListOption { return MapBoolListToStringListOption(m, f) }
func (m StringListOption) MapStringList(f func(StringList) StringList) StringListOption { return MapStringListToStringListOption(m, f) }
func (m StringListOption) MapIntList(f func(StringList) IntList) IntListOption { return MapIntListToStringListOption(m, f) }
func (m StringListOption) MapInt8List(f func(StringList) Int8List) Int8ListOption { return MapInt8ListToStringListOption(m, f) }
func (m StringListOption) MapInt16List(f func(StringList) Int16List) Int16ListOption { return MapInt16ListToStringListOption(m, f) }
func (m StringListOption) MapInt32List(f func(StringList) Int32List) Int32ListOption { return MapInt32ListToStringListOption(m, f) }
func (m StringListOption) MapInt64List(f func(StringList) Int64List) Int64ListOption { return MapInt64ListToStringListOption(m, f) }
func (m StringListOption) MapUintList(f func(StringList) UintList) UintListOption { return MapUintListToStringListOption(m, f) }
func (m StringListOption) MapUint8List(f func(StringList) Uint8List) Uint8ListOption { return MapUint8ListToStringListOption(m, f) }
func (m StringListOption) MapUint16List(f func(StringList) Uint16List) Uint16ListOption { return MapUint16ListToStringListOption(m, f) }
func (m StringListOption) MapUint32List(f func(StringList) Uint32List) Uint32ListOption { return MapUint32ListToStringListOption(m, f) }
func (m StringListOption) MapUint64List(f func(StringList) Uint64List) Uint64ListOption { return MapUint64ListToStringListOption(m, f) }
func (m StringListOption) MapUintptrList(f func(StringList) UintptrList) UintptrListOption { return MapUintptrListToStringListOption(m, f) }
func (m StringListOption) MapByteList(f func(StringList) ByteList) ByteListOption { return MapByteListToStringListOption(m, f) }
func (m StringListOption) MapRuneList(f func(StringList) RuneList) RuneListOption { return MapRuneListToStringListOption(m, f) }
func (m StringListOption) MapFloat32List(f func(StringList) Float32List) Float32ListOption { return MapFloat32ListToStringListOption(m, f) }
func (m StringListOption) MapFloat64List(f func(StringList) Float64List) Float64ListOption { return MapFloat64ListToStringListOption(m, f) }
func (m StringListOption) MapComplex64List(f func(StringList) Complex64List) Complex64ListOption { return MapComplex64ListToStringListOption(m, f) }
func (m StringListOption) MapComplex128List(f func(StringList) Complex128List) Complex128ListOption { return MapComplex128ListToStringListOption(m, f) }
func (m StringListOption) MapAnyList(f func(StringList) AnyList) AnyListOption { return MapAnyListToStringListOption(m, f) }
func (m IntListOption) MapBool(f func(IntList) bool) BoolOption { return MapBoolToIntListOption(m, f) }
func (m IntListOption) MapString(f func(IntList) string) StringOption { return MapStringToIntListOption(m, f) }
func (m IntListOption) MapInt(f func(IntList) int) IntOption { return MapIntToIntListOption(m, f) }
func (m IntListOption) MapInt8(f func(IntList) int8) Int8Option { return MapInt8ToIntListOption(m, f) }
func (m IntListOption) MapInt16(f func(IntList) int16) Int16Option { return MapInt16ToIntListOption(m, f) }
func (m IntListOption) MapInt32(f func(IntList) int32) Int32Option { return MapInt32ToIntListOption(m, f) }
func (m IntListOption) MapInt64(f func(IntList) int64) Int64Option { return MapInt64ToIntListOption(m, f) }
func (m IntListOption) MapUint(f func(IntList) uint) UintOption { return MapUintToIntListOption(m, f) }
func (m IntListOption) MapUint8(f func(IntList) uint8) Uint8Option { return MapUint8ToIntListOption(m, f) }
func (m IntListOption) MapUint16(f func(IntList) uint16) Uint16Option { return MapUint16ToIntListOption(m, f) }
func (m IntListOption) MapUint32(f func(IntList) uint32) Uint32Option { return MapUint32ToIntListOption(m, f) }
func (m IntListOption) MapUint64(f func(IntList) uint64) Uint64Option { return MapUint64ToIntListOption(m, f) }
func (m IntListOption) MapUintptr(f func(IntList) uintptr) UintptrOption { return MapUintptrToIntListOption(m, f) }
func (m IntListOption) MapByte(f func(IntList) byte) ByteOption { return MapByteToIntListOption(m, f) }
func (m IntListOption) MapRune(f func(IntList) rune) RuneOption { return MapRuneToIntListOption(m, f) }
func (m IntListOption) MapFloat32(f func(IntList) float32) Float32Option { return MapFloat32ToIntListOption(m, f) }
func (m IntListOption) MapFloat64(f func(IntList) float64) Float64Option { return MapFloat64ToIntListOption(m, f) }
func (m IntListOption) MapComplex64(f func(IntList) complex64) Complex64Option { return MapComplex64ToIntListOption(m, f) }
func (m IntListOption) MapComplex128(f func(IntList) complex128) Complex128Option { return MapComplex128ToIntListOption(m, f) }
func (m IntListOption) MapAny(f func(IntList) Any) AnyOption { return MapAnyToIntListOption(m, f) }
func (m IntListOption) MapBoolOption(f func(IntList) BoolOption) BoolOptionOption { return MapBoolOptionToIntListOption(m, f) }
func (m IntListOption) MapStringOption(f func(IntList) StringOption) StringOptionOption { return MapStringOptionToIntListOption(m, f) }
func (m IntListOption) MapIntOption(f func(IntList) IntOption) IntOptionOption { return MapIntOptionToIntListOption(m, f) }
func (m IntListOption) MapInt8Option(f func(IntList) Int8Option) Int8OptionOption { return MapInt8OptionToIntListOption(m, f) }
func (m IntListOption) MapInt16Option(f func(IntList) Int16Option) Int16OptionOption { return MapInt16OptionToIntListOption(m, f) }
func (m IntListOption) MapInt32Option(f func(IntList) Int32Option) Int32OptionOption { return MapInt32OptionToIntListOption(m, f) }
func (m IntListOption) MapInt64Option(f func(IntList) Int64Option) Int64OptionOption { return MapInt64OptionToIntListOption(m, f) }
func (m IntListOption) MapUintOption(f func(IntList) UintOption) UintOptionOption { return MapUintOptionToIntListOption(m, f) }
func (m IntListOption) MapUint8Option(f func(IntList) Uint8Option) Uint8OptionOption { return MapUint8OptionToIntListOption(m, f) }
func (m IntListOption) MapUint16Option(f func(IntList) Uint16Option) Uint16OptionOption { return MapUint16OptionToIntListOption(m, f) }
func (m IntListOption) MapUint32Option(f func(IntList) Uint32Option) Uint32OptionOption { return MapUint32OptionToIntListOption(m, f) }
func (m IntListOption) MapUint64Option(f func(IntList) Uint64Option) Uint64OptionOption { return MapUint64OptionToIntListOption(m, f) }
func (m IntListOption) MapUintptrOption(f func(IntList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToIntListOption(m, f) }
func (m IntListOption) MapByteOption(f func(IntList) ByteOption) ByteOptionOption { return MapByteOptionToIntListOption(m, f) }
func (m IntListOption) MapRuneOption(f func(IntList) RuneOption) RuneOptionOption { return MapRuneOptionToIntListOption(m, f) }
func (m IntListOption) MapFloat32Option(f func(IntList) Float32Option) Float32OptionOption { return MapFloat32OptionToIntListOption(m, f) }
func (m IntListOption) MapFloat64Option(f func(IntList) Float64Option) Float64OptionOption { return MapFloat64OptionToIntListOption(m, f) }
func (m IntListOption) MapComplex64Option(f func(IntList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToIntListOption(m, f) }
func (m IntListOption) MapComplex128Option(f func(IntList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToIntListOption(m, f) }
func (m IntListOption) MapAnyOption(f func(IntList) AnyOption) AnyOptionOption { return MapAnyOptionToIntListOption(m, f) }
func (m IntListOption) MapBoolArr(f func(IntList) []bool) BoolArrOption { return MapBoolArrToIntListOption(m, f) }
func (m IntListOption) MapStringArr(f func(IntList) []string) StringArrOption { return MapStringArrToIntListOption(m, f) }
func (m IntListOption) MapIntArr(f func(IntList) []int) IntArrOption { return MapIntArrToIntListOption(m, f) }
func (m IntListOption) MapInt8Arr(f func(IntList) []int8) Int8ArrOption { return MapInt8ArrToIntListOption(m, f) }
func (m IntListOption) MapInt16Arr(f func(IntList) []int16) Int16ArrOption { return MapInt16ArrToIntListOption(m, f) }
func (m IntListOption) MapInt32Arr(f func(IntList) []int32) Int32ArrOption { return MapInt32ArrToIntListOption(m, f) }
func (m IntListOption) MapInt64Arr(f func(IntList) []int64) Int64ArrOption { return MapInt64ArrToIntListOption(m, f) }
func (m IntListOption) MapUintArr(f func(IntList) []uint) UintArrOption { return MapUintArrToIntListOption(m, f) }
func (m IntListOption) MapUint8Arr(f func(IntList) []uint8) Uint8ArrOption { return MapUint8ArrToIntListOption(m, f) }
func (m IntListOption) MapUint16Arr(f func(IntList) []uint16) Uint16ArrOption { return MapUint16ArrToIntListOption(m, f) }
func (m IntListOption) MapUint32Arr(f func(IntList) []uint32) Uint32ArrOption { return MapUint32ArrToIntListOption(m, f) }
func (m IntListOption) MapUint64Arr(f func(IntList) []uint64) Uint64ArrOption { return MapUint64ArrToIntListOption(m, f) }
func (m IntListOption) MapUintptrArr(f func(IntList) []uintptr) UintptrArrOption { return MapUintptrArrToIntListOption(m, f) }
func (m IntListOption) MapByteArr(f func(IntList) []byte) ByteArrOption { return MapByteArrToIntListOption(m, f) }
func (m IntListOption) MapRuneArr(f func(IntList) []rune) RuneArrOption { return MapRuneArrToIntListOption(m, f) }
func (m IntListOption) MapFloat32Arr(f func(IntList) []float32) Float32ArrOption { return MapFloat32ArrToIntListOption(m, f) }
func (m IntListOption) MapFloat64Arr(f func(IntList) []float64) Float64ArrOption { return MapFloat64ArrToIntListOption(m, f) }
func (m IntListOption) MapComplex64Arr(f func(IntList) []complex64) Complex64ArrOption { return MapComplex64ArrToIntListOption(m, f) }
func (m IntListOption) MapComplex128Arr(f func(IntList) []complex128) Complex128ArrOption { return MapComplex128ArrToIntListOption(m, f) }
func (m IntListOption) MapAnyArr(f func(IntList) []Any) AnyArrOption { return MapAnyArrToIntListOption(m, f) }
func (m IntListOption) MapBoolList(f func(IntList) BoolList) BoolListOption { return MapBoolListToIntListOption(m, f) }
func (m IntListOption) MapStringList(f func(IntList) StringList) StringListOption { return MapStringListToIntListOption(m, f) }
func (m IntListOption) MapIntList(f func(IntList) IntList) IntListOption { return MapIntListToIntListOption(m, f) }
func (m IntListOption) MapInt8List(f func(IntList) Int8List) Int8ListOption { return MapInt8ListToIntListOption(m, f) }
func (m IntListOption) MapInt16List(f func(IntList) Int16List) Int16ListOption { return MapInt16ListToIntListOption(m, f) }
func (m IntListOption) MapInt32List(f func(IntList) Int32List) Int32ListOption { return MapInt32ListToIntListOption(m, f) }
func (m IntListOption) MapInt64List(f func(IntList) Int64List) Int64ListOption { return MapInt64ListToIntListOption(m, f) }
func (m IntListOption) MapUintList(f func(IntList) UintList) UintListOption { return MapUintListToIntListOption(m, f) }
func (m IntListOption) MapUint8List(f func(IntList) Uint8List) Uint8ListOption { return MapUint8ListToIntListOption(m, f) }
func (m IntListOption) MapUint16List(f func(IntList) Uint16List) Uint16ListOption { return MapUint16ListToIntListOption(m, f) }
func (m IntListOption) MapUint32List(f func(IntList) Uint32List) Uint32ListOption { return MapUint32ListToIntListOption(m, f) }
func (m IntListOption) MapUint64List(f func(IntList) Uint64List) Uint64ListOption { return MapUint64ListToIntListOption(m, f) }
func (m IntListOption) MapUintptrList(f func(IntList) UintptrList) UintptrListOption { return MapUintptrListToIntListOption(m, f) }
func (m IntListOption) MapByteList(f func(IntList) ByteList) ByteListOption { return MapByteListToIntListOption(m, f) }
func (m IntListOption) MapRuneList(f func(IntList) RuneList) RuneListOption { return MapRuneListToIntListOption(m, f) }
func (m IntListOption) MapFloat32List(f func(IntList) Float32List) Float32ListOption { return MapFloat32ListToIntListOption(m, f) }
func (m IntListOption) MapFloat64List(f func(IntList) Float64List) Float64ListOption { return MapFloat64ListToIntListOption(m, f) }
func (m IntListOption) MapComplex64List(f func(IntList) Complex64List) Complex64ListOption { return MapComplex64ListToIntListOption(m, f) }
func (m IntListOption) MapComplex128List(f func(IntList) Complex128List) Complex128ListOption { return MapComplex128ListToIntListOption(m, f) }
func (m IntListOption) MapAnyList(f func(IntList) AnyList) AnyListOption { return MapAnyListToIntListOption(m, f) }
func (m Int8ListOption) MapBool(f func(Int8List) bool) BoolOption { return MapBoolToInt8ListOption(m, f) }
func (m Int8ListOption) MapString(f func(Int8List) string) StringOption { return MapStringToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt(f func(Int8List) int) IntOption { return MapIntToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt8(f func(Int8List) int8) Int8Option { return MapInt8ToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt16(f func(Int8List) int16) Int16Option { return MapInt16ToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt32(f func(Int8List) int32) Int32Option { return MapInt32ToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt64(f func(Int8List) int64) Int64Option { return MapInt64ToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint(f func(Int8List) uint) UintOption { return MapUintToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint8(f func(Int8List) uint8) Uint8Option { return MapUint8ToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint16(f func(Int8List) uint16) Uint16Option { return MapUint16ToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint32(f func(Int8List) uint32) Uint32Option { return MapUint32ToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint64(f func(Int8List) uint64) Uint64Option { return MapUint64ToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintptr(f func(Int8List) uintptr) UintptrOption { return MapUintptrToInt8ListOption(m, f) }
func (m Int8ListOption) MapByte(f func(Int8List) byte) ByteOption { return MapByteToInt8ListOption(m, f) }
func (m Int8ListOption) MapRune(f func(Int8List) rune) RuneOption { return MapRuneToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat32(f func(Int8List) float32) Float32Option { return MapFloat32ToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat64(f func(Int8List) float64) Float64Option { return MapFloat64ToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex64(f func(Int8List) complex64) Complex64Option { return MapComplex64ToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex128(f func(Int8List) complex128) Complex128Option { return MapComplex128ToInt8ListOption(m, f) }
func (m Int8ListOption) MapAny(f func(Int8List) Any) AnyOption { return MapAnyToInt8ListOption(m, f) }
func (m Int8ListOption) MapBoolOption(f func(Int8List) BoolOption) BoolOptionOption { return MapBoolOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapStringOption(f func(Int8List) StringOption) StringOptionOption { return MapStringOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapIntOption(f func(Int8List) IntOption) IntOptionOption { return MapIntOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt8Option(f func(Int8List) Int8Option) Int8OptionOption { return MapInt8OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt16Option(f func(Int8List) Int16Option) Int16OptionOption { return MapInt16OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt32Option(f func(Int8List) Int32Option) Int32OptionOption { return MapInt32OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt64Option(f func(Int8List) Int64Option) Int64OptionOption { return MapInt64OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintOption(f func(Int8List) UintOption) UintOptionOption { return MapUintOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint8Option(f func(Int8List) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint16Option(f func(Int8List) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint32Option(f func(Int8List) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint64Option(f func(Int8List) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintptrOption(f func(Int8List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapByteOption(f func(Int8List) ByteOption) ByteOptionOption { return MapByteOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapRuneOption(f func(Int8List) RuneOption) RuneOptionOption { return MapRuneOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat32Option(f func(Int8List) Float32Option) Float32OptionOption { return MapFloat32OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat64Option(f func(Int8List) Float64Option) Float64OptionOption { return MapFloat64OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex64Option(f func(Int8List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex128Option(f func(Int8List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapAnyOption(f func(Int8List) AnyOption) AnyOptionOption { return MapAnyOptionToInt8ListOption(m, f) }
func (m Int8ListOption) MapBoolArr(f func(Int8List) []bool) BoolArrOption { return MapBoolArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapStringArr(f func(Int8List) []string) StringArrOption { return MapStringArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapIntArr(f func(Int8List) []int) IntArrOption { return MapIntArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt8Arr(f func(Int8List) []int8) Int8ArrOption { return MapInt8ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt16Arr(f func(Int8List) []int16) Int16ArrOption { return MapInt16ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt32Arr(f func(Int8List) []int32) Int32ArrOption { return MapInt32ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt64Arr(f func(Int8List) []int64) Int64ArrOption { return MapInt64ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintArr(f func(Int8List) []uint) UintArrOption { return MapUintArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint8Arr(f func(Int8List) []uint8) Uint8ArrOption { return MapUint8ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint16Arr(f func(Int8List) []uint16) Uint16ArrOption { return MapUint16ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint32Arr(f func(Int8List) []uint32) Uint32ArrOption { return MapUint32ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint64Arr(f func(Int8List) []uint64) Uint64ArrOption { return MapUint64ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintptrArr(f func(Int8List) []uintptr) UintptrArrOption { return MapUintptrArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapByteArr(f func(Int8List) []byte) ByteArrOption { return MapByteArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapRuneArr(f func(Int8List) []rune) RuneArrOption { return MapRuneArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat32Arr(f func(Int8List) []float32) Float32ArrOption { return MapFloat32ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat64Arr(f func(Int8List) []float64) Float64ArrOption { return MapFloat64ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex64Arr(f func(Int8List) []complex64) Complex64ArrOption { return MapComplex64ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex128Arr(f func(Int8List) []complex128) Complex128ArrOption { return MapComplex128ArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapAnyArr(f func(Int8List) []Any) AnyArrOption { return MapAnyArrToInt8ListOption(m, f) }
func (m Int8ListOption) MapBoolList(f func(Int8List) BoolList) BoolListOption { return MapBoolListToInt8ListOption(m, f) }
func (m Int8ListOption) MapStringList(f func(Int8List) StringList) StringListOption { return MapStringListToInt8ListOption(m, f) }
func (m Int8ListOption) MapIntList(f func(Int8List) IntList) IntListOption { return MapIntListToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt8List(f func(Int8List) Int8List) Int8ListOption { return MapInt8ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt16List(f func(Int8List) Int16List) Int16ListOption { return MapInt16ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt32List(f func(Int8List) Int32List) Int32ListOption { return MapInt32ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapInt64List(f func(Int8List) Int64List) Int64ListOption { return MapInt64ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintList(f func(Int8List) UintList) UintListOption { return MapUintListToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint8List(f func(Int8List) Uint8List) Uint8ListOption { return MapUint8ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint16List(f func(Int8List) Uint16List) Uint16ListOption { return MapUint16ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint32List(f func(Int8List) Uint32List) Uint32ListOption { return MapUint32ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapUint64List(f func(Int8List) Uint64List) Uint64ListOption { return MapUint64ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapUintptrList(f func(Int8List) UintptrList) UintptrListOption { return MapUintptrListToInt8ListOption(m, f) }
func (m Int8ListOption) MapByteList(f func(Int8List) ByteList) ByteListOption { return MapByteListToInt8ListOption(m, f) }
func (m Int8ListOption) MapRuneList(f func(Int8List) RuneList) RuneListOption { return MapRuneListToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat32List(f func(Int8List) Float32List) Float32ListOption { return MapFloat32ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapFloat64List(f func(Int8List) Float64List) Float64ListOption { return MapFloat64ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex64List(f func(Int8List) Complex64List) Complex64ListOption { return MapComplex64ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapComplex128List(f func(Int8List) Complex128List) Complex128ListOption { return MapComplex128ListToInt8ListOption(m, f) }
func (m Int8ListOption) MapAnyList(f func(Int8List) AnyList) AnyListOption { return MapAnyListToInt8ListOption(m, f) }
func (m Int16ListOption) MapBool(f func(Int16List) bool) BoolOption { return MapBoolToInt16ListOption(m, f) }
func (m Int16ListOption) MapString(f func(Int16List) string) StringOption { return MapStringToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt(f func(Int16List) int) IntOption { return MapIntToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt8(f func(Int16List) int8) Int8Option { return MapInt8ToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt16(f func(Int16List) int16) Int16Option { return MapInt16ToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt32(f func(Int16List) int32) Int32Option { return MapInt32ToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt64(f func(Int16List) int64) Int64Option { return MapInt64ToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint(f func(Int16List) uint) UintOption { return MapUintToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint8(f func(Int16List) uint8) Uint8Option { return MapUint8ToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint16(f func(Int16List) uint16) Uint16Option { return MapUint16ToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint32(f func(Int16List) uint32) Uint32Option { return MapUint32ToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint64(f func(Int16List) uint64) Uint64Option { return MapUint64ToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintptr(f func(Int16List) uintptr) UintptrOption { return MapUintptrToInt16ListOption(m, f) }
func (m Int16ListOption) MapByte(f func(Int16List) byte) ByteOption { return MapByteToInt16ListOption(m, f) }
func (m Int16ListOption) MapRune(f func(Int16List) rune) RuneOption { return MapRuneToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat32(f func(Int16List) float32) Float32Option { return MapFloat32ToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat64(f func(Int16List) float64) Float64Option { return MapFloat64ToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex64(f func(Int16List) complex64) Complex64Option { return MapComplex64ToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex128(f func(Int16List) complex128) Complex128Option { return MapComplex128ToInt16ListOption(m, f) }
func (m Int16ListOption) MapAny(f func(Int16List) Any) AnyOption { return MapAnyToInt16ListOption(m, f) }
func (m Int16ListOption) MapBoolOption(f func(Int16List) BoolOption) BoolOptionOption { return MapBoolOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapStringOption(f func(Int16List) StringOption) StringOptionOption { return MapStringOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapIntOption(f func(Int16List) IntOption) IntOptionOption { return MapIntOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt8Option(f func(Int16List) Int8Option) Int8OptionOption { return MapInt8OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt16Option(f func(Int16List) Int16Option) Int16OptionOption { return MapInt16OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt32Option(f func(Int16List) Int32Option) Int32OptionOption { return MapInt32OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt64Option(f func(Int16List) Int64Option) Int64OptionOption { return MapInt64OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintOption(f func(Int16List) UintOption) UintOptionOption { return MapUintOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint8Option(f func(Int16List) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint16Option(f func(Int16List) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint32Option(f func(Int16List) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint64Option(f func(Int16List) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintptrOption(f func(Int16List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapByteOption(f func(Int16List) ByteOption) ByteOptionOption { return MapByteOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapRuneOption(f func(Int16List) RuneOption) RuneOptionOption { return MapRuneOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat32Option(f func(Int16List) Float32Option) Float32OptionOption { return MapFloat32OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat64Option(f func(Int16List) Float64Option) Float64OptionOption { return MapFloat64OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex64Option(f func(Int16List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex128Option(f func(Int16List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapAnyOption(f func(Int16List) AnyOption) AnyOptionOption { return MapAnyOptionToInt16ListOption(m, f) }
func (m Int16ListOption) MapBoolArr(f func(Int16List) []bool) BoolArrOption { return MapBoolArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapStringArr(f func(Int16List) []string) StringArrOption { return MapStringArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapIntArr(f func(Int16List) []int) IntArrOption { return MapIntArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt8Arr(f func(Int16List) []int8) Int8ArrOption { return MapInt8ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt16Arr(f func(Int16List) []int16) Int16ArrOption { return MapInt16ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt32Arr(f func(Int16List) []int32) Int32ArrOption { return MapInt32ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt64Arr(f func(Int16List) []int64) Int64ArrOption { return MapInt64ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintArr(f func(Int16List) []uint) UintArrOption { return MapUintArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint8Arr(f func(Int16List) []uint8) Uint8ArrOption { return MapUint8ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint16Arr(f func(Int16List) []uint16) Uint16ArrOption { return MapUint16ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint32Arr(f func(Int16List) []uint32) Uint32ArrOption { return MapUint32ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint64Arr(f func(Int16List) []uint64) Uint64ArrOption { return MapUint64ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintptrArr(f func(Int16List) []uintptr) UintptrArrOption { return MapUintptrArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapByteArr(f func(Int16List) []byte) ByteArrOption { return MapByteArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapRuneArr(f func(Int16List) []rune) RuneArrOption { return MapRuneArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat32Arr(f func(Int16List) []float32) Float32ArrOption { return MapFloat32ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat64Arr(f func(Int16List) []float64) Float64ArrOption { return MapFloat64ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex64Arr(f func(Int16List) []complex64) Complex64ArrOption { return MapComplex64ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex128Arr(f func(Int16List) []complex128) Complex128ArrOption { return MapComplex128ArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapAnyArr(f func(Int16List) []Any) AnyArrOption { return MapAnyArrToInt16ListOption(m, f) }
func (m Int16ListOption) MapBoolList(f func(Int16List) BoolList) BoolListOption { return MapBoolListToInt16ListOption(m, f) }
func (m Int16ListOption) MapStringList(f func(Int16List) StringList) StringListOption { return MapStringListToInt16ListOption(m, f) }
func (m Int16ListOption) MapIntList(f func(Int16List) IntList) IntListOption { return MapIntListToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt8List(f func(Int16List) Int8List) Int8ListOption { return MapInt8ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt16List(f func(Int16List) Int16List) Int16ListOption { return MapInt16ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt32List(f func(Int16List) Int32List) Int32ListOption { return MapInt32ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapInt64List(f func(Int16List) Int64List) Int64ListOption { return MapInt64ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintList(f func(Int16List) UintList) UintListOption { return MapUintListToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint8List(f func(Int16List) Uint8List) Uint8ListOption { return MapUint8ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint16List(f func(Int16List) Uint16List) Uint16ListOption { return MapUint16ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint32List(f func(Int16List) Uint32List) Uint32ListOption { return MapUint32ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapUint64List(f func(Int16List) Uint64List) Uint64ListOption { return MapUint64ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapUintptrList(f func(Int16List) UintptrList) UintptrListOption { return MapUintptrListToInt16ListOption(m, f) }
func (m Int16ListOption) MapByteList(f func(Int16List) ByteList) ByteListOption { return MapByteListToInt16ListOption(m, f) }
func (m Int16ListOption) MapRuneList(f func(Int16List) RuneList) RuneListOption { return MapRuneListToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat32List(f func(Int16List) Float32List) Float32ListOption { return MapFloat32ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapFloat64List(f func(Int16List) Float64List) Float64ListOption { return MapFloat64ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex64List(f func(Int16List) Complex64List) Complex64ListOption { return MapComplex64ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapComplex128List(f func(Int16List) Complex128List) Complex128ListOption { return MapComplex128ListToInt16ListOption(m, f) }
func (m Int16ListOption) MapAnyList(f func(Int16List) AnyList) AnyListOption { return MapAnyListToInt16ListOption(m, f) }
func (m Int32ListOption) MapBool(f func(Int32List) bool) BoolOption { return MapBoolToInt32ListOption(m, f) }
func (m Int32ListOption) MapString(f func(Int32List) string) StringOption { return MapStringToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt(f func(Int32List) int) IntOption { return MapIntToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt8(f func(Int32List) int8) Int8Option { return MapInt8ToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt16(f func(Int32List) int16) Int16Option { return MapInt16ToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt32(f func(Int32List) int32) Int32Option { return MapInt32ToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt64(f func(Int32List) int64) Int64Option { return MapInt64ToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint(f func(Int32List) uint) UintOption { return MapUintToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint8(f func(Int32List) uint8) Uint8Option { return MapUint8ToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint16(f func(Int32List) uint16) Uint16Option { return MapUint16ToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint32(f func(Int32List) uint32) Uint32Option { return MapUint32ToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint64(f func(Int32List) uint64) Uint64Option { return MapUint64ToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintptr(f func(Int32List) uintptr) UintptrOption { return MapUintptrToInt32ListOption(m, f) }
func (m Int32ListOption) MapByte(f func(Int32List) byte) ByteOption { return MapByteToInt32ListOption(m, f) }
func (m Int32ListOption) MapRune(f func(Int32List) rune) RuneOption { return MapRuneToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat32(f func(Int32List) float32) Float32Option { return MapFloat32ToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat64(f func(Int32List) float64) Float64Option { return MapFloat64ToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex64(f func(Int32List) complex64) Complex64Option { return MapComplex64ToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex128(f func(Int32List) complex128) Complex128Option { return MapComplex128ToInt32ListOption(m, f) }
func (m Int32ListOption) MapAny(f func(Int32List) Any) AnyOption { return MapAnyToInt32ListOption(m, f) }
func (m Int32ListOption) MapBoolOption(f func(Int32List) BoolOption) BoolOptionOption { return MapBoolOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapStringOption(f func(Int32List) StringOption) StringOptionOption { return MapStringOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapIntOption(f func(Int32List) IntOption) IntOptionOption { return MapIntOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt8Option(f func(Int32List) Int8Option) Int8OptionOption { return MapInt8OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt16Option(f func(Int32List) Int16Option) Int16OptionOption { return MapInt16OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt32Option(f func(Int32List) Int32Option) Int32OptionOption { return MapInt32OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt64Option(f func(Int32List) Int64Option) Int64OptionOption { return MapInt64OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintOption(f func(Int32List) UintOption) UintOptionOption { return MapUintOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint8Option(f func(Int32List) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint16Option(f func(Int32List) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint32Option(f func(Int32List) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint64Option(f func(Int32List) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintptrOption(f func(Int32List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapByteOption(f func(Int32List) ByteOption) ByteOptionOption { return MapByteOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapRuneOption(f func(Int32List) RuneOption) RuneOptionOption { return MapRuneOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat32Option(f func(Int32List) Float32Option) Float32OptionOption { return MapFloat32OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat64Option(f func(Int32List) Float64Option) Float64OptionOption { return MapFloat64OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex64Option(f func(Int32List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex128Option(f func(Int32List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapAnyOption(f func(Int32List) AnyOption) AnyOptionOption { return MapAnyOptionToInt32ListOption(m, f) }
func (m Int32ListOption) MapBoolArr(f func(Int32List) []bool) BoolArrOption { return MapBoolArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapStringArr(f func(Int32List) []string) StringArrOption { return MapStringArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapIntArr(f func(Int32List) []int) IntArrOption { return MapIntArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt8Arr(f func(Int32List) []int8) Int8ArrOption { return MapInt8ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt16Arr(f func(Int32List) []int16) Int16ArrOption { return MapInt16ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt32Arr(f func(Int32List) []int32) Int32ArrOption { return MapInt32ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt64Arr(f func(Int32List) []int64) Int64ArrOption { return MapInt64ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintArr(f func(Int32List) []uint) UintArrOption { return MapUintArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint8Arr(f func(Int32List) []uint8) Uint8ArrOption { return MapUint8ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint16Arr(f func(Int32List) []uint16) Uint16ArrOption { return MapUint16ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint32Arr(f func(Int32List) []uint32) Uint32ArrOption { return MapUint32ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint64Arr(f func(Int32List) []uint64) Uint64ArrOption { return MapUint64ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintptrArr(f func(Int32List) []uintptr) UintptrArrOption { return MapUintptrArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapByteArr(f func(Int32List) []byte) ByteArrOption { return MapByteArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapRuneArr(f func(Int32List) []rune) RuneArrOption { return MapRuneArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat32Arr(f func(Int32List) []float32) Float32ArrOption { return MapFloat32ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat64Arr(f func(Int32List) []float64) Float64ArrOption { return MapFloat64ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex64Arr(f func(Int32List) []complex64) Complex64ArrOption { return MapComplex64ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex128Arr(f func(Int32List) []complex128) Complex128ArrOption { return MapComplex128ArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapAnyArr(f func(Int32List) []Any) AnyArrOption { return MapAnyArrToInt32ListOption(m, f) }
func (m Int32ListOption) MapBoolList(f func(Int32List) BoolList) BoolListOption { return MapBoolListToInt32ListOption(m, f) }
func (m Int32ListOption) MapStringList(f func(Int32List) StringList) StringListOption { return MapStringListToInt32ListOption(m, f) }
func (m Int32ListOption) MapIntList(f func(Int32List) IntList) IntListOption { return MapIntListToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt8List(f func(Int32List) Int8List) Int8ListOption { return MapInt8ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt16List(f func(Int32List) Int16List) Int16ListOption { return MapInt16ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt32List(f func(Int32List) Int32List) Int32ListOption { return MapInt32ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapInt64List(f func(Int32List) Int64List) Int64ListOption { return MapInt64ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintList(f func(Int32List) UintList) UintListOption { return MapUintListToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint8List(f func(Int32List) Uint8List) Uint8ListOption { return MapUint8ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint16List(f func(Int32List) Uint16List) Uint16ListOption { return MapUint16ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint32List(f func(Int32List) Uint32List) Uint32ListOption { return MapUint32ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapUint64List(f func(Int32List) Uint64List) Uint64ListOption { return MapUint64ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapUintptrList(f func(Int32List) UintptrList) UintptrListOption { return MapUintptrListToInt32ListOption(m, f) }
func (m Int32ListOption) MapByteList(f func(Int32List) ByteList) ByteListOption { return MapByteListToInt32ListOption(m, f) }
func (m Int32ListOption) MapRuneList(f func(Int32List) RuneList) RuneListOption { return MapRuneListToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat32List(f func(Int32List) Float32List) Float32ListOption { return MapFloat32ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapFloat64List(f func(Int32List) Float64List) Float64ListOption { return MapFloat64ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex64List(f func(Int32List) Complex64List) Complex64ListOption { return MapComplex64ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapComplex128List(f func(Int32List) Complex128List) Complex128ListOption { return MapComplex128ListToInt32ListOption(m, f) }
func (m Int32ListOption) MapAnyList(f func(Int32List) AnyList) AnyListOption { return MapAnyListToInt32ListOption(m, f) }
func (m Int64ListOption) MapBool(f func(Int64List) bool) BoolOption { return MapBoolToInt64ListOption(m, f) }
func (m Int64ListOption) MapString(f func(Int64List) string) StringOption { return MapStringToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt(f func(Int64List) int) IntOption { return MapIntToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt8(f func(Int64List) int8) Int8Option { return MapInt8ToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt16(f func(Int64List) int16) Int16Option { return MapInt16ToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt32(f func(Int64List) int32) Int32Option { return MapInt32ToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt64(f func(Int64List) int64) Int64Option { return MapInt64ToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint(f func(Int64List) uint) UintOption { return MapUintToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint8(f func(Int64List) uint8) Uint8Option { return MapUint8ToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint16(f func(Int64List) uint16) Uint16Option { return MapUint16ToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint32(f func(Int64List) uint32) Uint32Option { return MapUint32ToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint64(f func(Int64List) uint64) Uint64Option { return MapUint64ToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintptr(f func(Int64List) uintptr) UintptrOption { return MapUintptrToInt64ListOption(m, f) }
func (m Int64ListOption) MapByte(f func(Int64List) byte) ByteOption { return MapByteToInt64ListOption(m, f) }
func (m Int64ListOption) MapRune(f func(Int64List) rune) RuneOption { return MapRuneToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat32(f func(Int64List) float32) Float32Option { return MapFloat32ToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat64(f func(Int64List) float64) Float64Option { return MapFloat64ToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex64(f func(Int64List) complex64) Complex64Option { return MapComplex64ToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex128(f func(Int64List) complex128) Complex128Option { return MapComplex128ToInt64ListOption(m, f) }
func (m Int64ListOption) MapAny(f func(Int64List) Any) AnyOption { return MapAnyToInt64ListOption(m, f) }
func (m Int64ListOption) MapBoolOption(f func(Int64List) BoolOption) BoolOptionOption { return MapBoolOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapStringOption(f func(Int64List) StringOption) StringOptionOption { return MapStringOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapIntOption(f func(Int64List) IntOption) IntOptionOption { return MapIntOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt8Option(f func(Int64List) Int8Option) Int8OptionOption { return MapInt8OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt16Option(f func(Int64List) Int16Option) Int16OptionOption { return MapInt16OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt32Option(f func(Int64List) Int32Option) Int32OptionOption { return MapInt32OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt64Option(f func(Int64List) Int64Option) Int64OptionOption { return MapInt64OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintOption(f func(Int64List) UintOption) UintOptionOption { return MapUintOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint8Option(f func(Int64List) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint16Option(f func(Int64List) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint32Option(f func(Int64List) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint64Option(f func(Int64List) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintptrOption(f func(Int64List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapByteOption(f func(Int64List) ByteOption) ByteOptionOption { return MapByteOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapRuneOption(f func(Int64List) RuneOption) RuneOptionOption { return MapRuneOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat32Option(f func(Int64List) Float32Option) Float32OptionOption { return MapFloat32OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat64Option(f func(Int64List) Float64Option) Float64OptionOption { return MapFloat64OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex64Option(f func(Int64List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex128Option(f func(Int64List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapAnyOption(f func(Int64List) AnyOption) AnyOptionOption { return MapAnyOptionToInt64ListOption(m, f) }
func (m Int64ListOption) MapBoolArr(f func(Int64List) []bool) BoolArrOption { return MapBoolArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapStringArr(f func(Int64List) []string) StringArrOption { return MapStringArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapIntArr(f func(Int64List) []int) IntArrOption { return MapIntArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt8Arr(f func(Int64List) []int8) Int8ArrOption { return MapInt8ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt16Arr(f func(Int64List) []int16) Int16ArrOption { return MapInt16ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt32Arr(f func(Int64List) []int32) Int32ArrOption { return MapInt32ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt64Arr(f func(Int64List) []int64) Int64ArrOption { return MapInt64ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintArr(f func(Int64List) []uint) UintArrOption { return MapUintArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint8Arr(f func(Int64List) []uint8) Uint8ArrOption { return MapUint8ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint16Arr(f func(Int64List) []uint16) Uint16ArrOption { return MapUint16ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint32Arr(f func(Int64List) []uint32) Uint32ArrOption { return MapUint32ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint64Arr(f func(Int64List) []uint64) Uint64ArrOption { return MapUint64ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintptrArr(f func(Int64List) []uintptr) UintptrArrOption { return MapUintptrArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapByteArr(f func(Int64List) []byte) ByteArrOption { return MapByteArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapRuneArr(f func(Int64List) []rune) RuneArrOption { return MapRuneArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat32Arr(f func(Int64List) []float32) Float32ArrOption { return MapFloat32ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat64Arr(f func(Int64List) []float64) Float64ArrOption { return MapFloat64ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex64Arr(f func(Int64List) []complex64) Complex64ArrOption { return MapComplex64ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex128Arr(f func(Int64List) []complex128) Complex128ArrOption { return MapComplex128ArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapAnyArr(f func(Int64List) []Any) AnyArrOption { return MapAnyArrToInt64ListOption(m, f) }
func (m Int64ListOption) MapBoolList(f func(Int64List) BoolList) BoolListOption { return MapBoolListToInt64ListOption(m, f) }
func (m Int64ListOption) MapStringList(f func(Int64List) StringList) StringListOption { return MapStringListToInt64ListOption(m, f) }
func (m Int64ListOption) MapIntList(f func(Int64List) IntList) IntListOption { return MapIntListToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt8List(f func(Int64List) Int8List) Int8ListOption { return MapInt8ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt16List(f func(Int64List) Int16List) Int16ListOption { return MapInt16ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt32List(f func(Int64List) Int32List) Int32ListOption { return MapInt32ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapInt64List(f func(Int64List) Int64List) Int64ListOption { return MapInt64ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintList(f func(Int64List) UintList) UintListOption { return MapUintListToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint8List(f func(Int64List) Uint8List) Uint8ListOption { return MapUint8ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint16List(f func(Int64List) Uint16List) Uint16ListOption { return MapUint16ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint32List(f func(Int64List) Uint32List) Uint32ListOption { return MapUint32ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapUint64List(f func(Int64List) Uint64List) Uint64ListOption { return MapUint64ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapUintptrList(f func(Int64List) UintptrList) UintptrListOption { return MapUintptrListToInt64ListOption(m, f) }
func (m Int64ListOption) MapByteList(f func(Int64List) ByteList) ByteListOption { return MapByteListToInt64ListOption(m, f) }
func (m Int64ListOption) MapRuneList(f func(Int64List) RuneList) RuneListOption { return MapRuneListToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat32List(f func(Int64List) Float32List) Float32ListOption { return MapFloat32ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapFloat64List(f func(Int64List) Float64List) Float64ListOption { return MapFloat64ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex64List(f func(Int64List) Complex64List) Complex64ListOption { return MapComplex64ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapComplex128List(f func(Int64List) Complex128List) Complex128ListOption { return MapComplex128ListToInt64ListOption(m, f) }
func (m Int64ListOption) MapAnyList(f func(Int64List) AnyList) AnyListOption { return MapAnyListToInt64ListOption(m, f) }
func (m UintListOption) MapBool(f func(UintList) bool) BoolOption { return MapBoolToUintListOption(m, f) }
func (m UintListOption) MapString(f func(UintList) string) StringOption { return MapStringToUintListOption(m, f) }
func (m UintListOption) MapInt(f func(UintList) int) IntOption { return MapIntToUintListOption(m, f) }
func (m UintListOption) MapInt8(f func(UintList) int8) Int8Option { return MapInt8ToUintListOption(m, f) }
func (m UintListOption) MapInt16(f func(UintList) int16) Int16Option { return MapInt16ToUintListOption(m, f) }
func (m UintListOption) MapInt32(f func(UintList) int32) Int32Option { return MapInt32ToUintListOption(m, f) }
func (m UintListOption) MapInt64(f func(UintList) int64) Int64Option { return MapInt64ToUintListOption(m, f) }
func (m UintListOption) MapUint(f func(UintList) uint) UintOption { return MapUintToUintListOption(m, f) }
func (m UintListOption) MapUint8(f func(UintList) uint8) Uint8Option { return MapUint8ToUintListOption(m, f) }
func (m UintListOption) MapUint16(f func(UintList) uint16) Uint16Option { return MapUint16ToUintListOption(m, f) }
func (m UintListOption) MapUint32(f func(UintList) uint32) Uint32Option { return MapUint32ToUintListOption(m, f) }
func (m UintListOption) MapUint64(f func(UintList) uint64) Uint64Option { return MapUint64ToUintListOption(m, f) }
func (m UintListOption) MapUintptr(f func(UintList) uintptr) UintptrOption { return MapUintptrToUintListOption(m, f) }
func (m UintListOption) MapByte(f func(UintList) byte) ByteOption { return MapByteToUintListOption(m, f) }
func (m UintListOption) MapRune(f func(UintList) rune) RuneOption { return MapRuneToUintListOption(m, f) }
func (m UintListOption) MapFloat32(f func(UintList) float32) Float32Option { return MapFloat32ToUintListOption(m, f) }
func (m UintListOption) MapFloat64(f func(UintList) float64) Float64Option { return MapFloat64ToUintListOption(m, f) }
func (m UintListOption) MapComplex64(f func(UintList) complex64) Complex64Option { return MapComplex64ToUintListOption(m, f) }
func (m UintListOption) MapComplex128(f func(UintList) complex128) Complex128Option { return MapComplex128ToUintListOption(m, f) }
func (m UintListOption) MapAny(f func(UintList) Any) AnyOption { return MapAnyToUintListOption(m, f) }
func (m UintListOption) MapBoolOption(f func(UintList) BoolOption) BoolOptionOption { return MapBoolOptionToUintListOption(m, f) }
func (m UintListOption) MapStringOption(f func(UintList) StringOption) StringOptionOption { return MapStringOptionToUintListOption(m, f) }
func (m UintListOption) MapIntOption(f func(UintList) IntOption) IntOptionOption { return MapIntOptionToUintListOption(m, f) }
func (m UintListOption) MapInt8Option(f func(UintList) Int8Option) Int8OptionOption { return MapInt8OptionToUintListOption(m, f) }
func (m UintListOption) MapInt16Option(f func(UintList) Int16Option) Int16OptionOption { return MapInt16OptionToUintListOption(m, f) }
func (m UintListOption) MapInt32Option(f func(UintList) Int32Option) Int32OptionOption { return MapInt32OptionToUintListOption(m, f) }
func (m UintListOption) MapInt64Option(f func(UintList) Int64Option) Int64OptionOption { return MapInt64OptionToUintListOption(m, f) }
func (m UintListOption) MapUintOption(f func(UintList) UintOption) UintOptionOption { return MapUintOptionToUintListOption(m, f) }
func (m UintListOption) MapUint8Option(f func(UintList) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintListOption(m, f) }
func (m UintListOption) MapUint16Option(f func(UintList) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintListOption(m, f) }
func (m UintListOption) MapUint32Option(f func(UintList) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintListOption(m, f) }
func (m UintListOption) MapUint64Option(f func(UintList) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintListOption(m, f) }
func (m UintListOption) MapUintptrOption(f func(UintList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintListOption(m, f) }
func (m UintListOption) MapByteOption(f func(UintList) ByteOption) ByteOptionOption { return MapByteOptionToUintListOption(m, f) }
func (m UintListOption) MapRuneOption(f func(UintList) RuneOption) RuneOptionOption { return MapRuneOptionToUintListOption(m, f) }
func (m UintListOption) MapFloat32Option(f func(UintList) Float32Option) Float32OptionOption { return MapFloat32OptionToUintListOption(m, f) }
func (m UintListOption) MapFloat64Option(f func(UintList) Float64Option) Float64OptionOption { return MapFloat64OptionToUintListOption(m, f) }
func (m UintListOption) MapComplex64Option(f func(UintList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintListOption(m, f) }
func (m UintListOption) MapComplex128Option(f func(UintList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintListOption(m, f) }
func (m UintListOption) MapAnyOption(f func(UintList) AnyOption) AnyOptionOption { return MapAnyOptionToUintListOption(m, f) }
func (m UintListOption) MapBoolArr(f func(UintList) []bool) BoolArrOption { return MapBoolArrToUintListOption(m, f) }
func (m UintListOption) MapStringArr(f func(UintList) []string) StringArrOption { return MapStringArrToUintListOption(m, f) }
func (m UintListOption) MapIntArr(f func(UintList) []int) IntArrOption { return MapIntArrToUintListOption(m, f) }
func (m UintListOption) MapInt8Arr(f func(UintList) []int8) Int8ArrOption { return MapInt8ArrToUintListOption(m, f) }
func (m UintListOption) MapInt16Arr(f func(UintList) []int16) Int16ArrOption { return MapInt16ArrToUintListOption(m, f) }
func (m UintListOption) MapInt32Arr(f func(UintList) []int32) Int32ArrOption { return MapInt32ArrToUintListOption(m, f) }
func (m UintListOption) MapInt64Arr(f func(UintList) []int64) Int64ArrOption { return MapInt64ArrToUintListOption(m, f) }
func (m UintListOption) MapUintArr(f func(UintList) []uint) UintArrOption { return MapUintArrToUintListOption(m, f) }
func (m UintListOption) MapUint8Arr(f func(UintList) []uint8) Uint8ArrOption { return MapUint8ArrToUintListOption(m, f) }
func (m UintListOption) MapUint16Arr(f func(UintList) []uint16) Uint16ArrOption { return MapUint16ArrToUintListOption(m, f) }
func (m UintListOption) MapUint32Arr(f func(UintList) []uint32) Uint32ArrOption { return MapUint32ArrToUintListOption(m, f) }
func (m UintListOption) MapUint64Arr(f func(UintList) []uint64) Uint64ArrOption { return MapUint64ArrToUintListOption(m, f) }
func (m UintListOption) MapUintptrArr(f func(UintList) []uintptr) UintptrArrOption { return MapUintptrArrToUintListOption(m, f) }
func (m UintListOption) MapByteArr(f func(UintList) []byte) ByteArrOption { return MapByteArrToUintListOption(m, f) }
func (m UintListOption) MapRuneArr(f func(UintList) []rune) RuneArrOption { return MapRuneArrToUintListOption(m, f) }
func (m UintListOption) MapFloat32Arr(f func(UintList) []float32) Float32ArrOption { return MapFloat32ArrToUintListOption(m, f) }
func (m UintListOption) MapFloat64Arr(f func(UintList) []float64) Float64ArrOption { return MapFloat64ArrToUintListOption(m, f) }
func (m UintListOption) MapComplex64Arr(f func(UintList) []complex64) Complex64ArrOption { return MapComplex64ArrToUintListOption(m, f) }
func (m UintListOption) MapComplex128Arr(f func(UintList) []complex128) Complex128ArrOption { return MapComplex128ArrToUintListOption(m, f) }
func (m UintListOption) MapAnyArr(f func(UintList) []Any) AnyArrOption { return MapAnyArrToUintListOption(m, f) }
func (m UintListOption) MapBoolList(f func(UintList) BoolList) BoolListOption { return MapBoolListToUintListOption(m, f) }
func (m UintListOption) MapStringList(f func(UintList) StringList) StringListOption { return MapStringListToUintListOption(m, f) }
func (m UintListOption) MapIntList(f func(UintList) IntList) IntListOption { return MapIntListToUintListOption(m, f) }
func (m UintListOption) MapInt8List(f func(UintList) Int8List) Int8ListOption { return MapInt8ListToUintListOption(m, f) }
func (m UintListOption) MapInt16List(f func(UintList) Int16List) Int16ListOption { return MapInt16ListToUintListOption(m, f) }
func (m UintListOption) MapInt32List(f func(UintList) Int32List) Int32ListOption { return MapInt32ListToUintListOption(m, f) }
func (m UintListOption) MapInt64List(f func(UintList) Int64List) Int64ListOption { return MapInt64ListToUintListOption(m, f) }
func (m UintListOption) MapUintList(f func(UintList) UintList) UintListOption { return MapUintListToUintListOption(m, f) }
func (m UintListOption) MapUint8List(f func(UintList) Uint8List) Uint8ListOption { return MapUint8ListToUintListOption(m, f) }
func (m UintListOption) MapUint16List(f func(UintList) Uint16List) Uint16ListOption { return MapUint16ListToUintListOption(m, f) }
func (m UintListOption) MapUint32List(f func(UintList) Uint32List) Uint32ListOption { return MapUint32ListToUintListOption(m, f) }
func (m UintListOption) MapUint64List(f func(UintList) Uint64List) Uint64ListOption { return MapUint64ListToUintListOption(m, f) }
func (m UintListOption) MapUintptrList(f func(UintList) UintptrList) UintptrListOption { return MapUintptrListToUintListOption(m, f) }
func (m UintListOption) MapByteList(f func(UintList) ByteList) ByteListOption { return MapByteListToUintListOption(m, f) }
func (m UintListOption) MapRuneList(f func(UintList) RuneList) RuneListOption { return MapRuneListToUintListOption(m, f) }
func (m UintListOption) MapFloat32List(f func(UintList) Float32List) Float32ListOption { return MapFloat32ListToUintListOption(m, f) }
func (m UintListOption) MapFloat64List(f func(UintList) Float64List) Float64ListOption { return MapFloat64ListToUintListOption(m, f) }
func (m UintListOption) MapComplex64List(f func(UintList) Complex64List) Complex64ListOption { return MapComplex64ListToUintListOption(m, f) }
func (m UintListOption) MapComplex128List(f func(UintList) Complex128List) Complex128ListOption { return MapComplex128ListToUintListOption(m, f) }
func (m UintListOption) MapAnyList(f func(UintList) AnyList) AnyListOption { return MapAnyListToUintListOption(m, f) }
func (m Uint8ListOption) MapBool(f func(Uint8List) bool) BoolOption { return MapBoolToUint8ListOption(m, f) }
func (m Uint8ListOption) MapString(f func(Uint8List) string) StringOption { return MapStringToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt(f func(Uint8List) int) IntOption { return MapIntToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt8(f func(Uint8List) int8) Int8Option { return MapInt8ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt16(f func(Uint8List) int16) Int16Option { return MapInt16ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt32(f func(Uint8List) int32) Int32Option { return MapInt32ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt64(f func(Uint8List) int64) Int64Option { return MapInt64ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint(f func(Uint8List) uint) UintOption { return MapUintToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint8(f func(Uint8List) uint8) Uint8Option { return MapUint8ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint16(f func(Uint8List) uint16) Uint16Option { return MapUint16ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint32(f func(Uint8List) uint32) Uint32Option { return MapUint32ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint64(f func(Uint8List) uint64) Uint64Option { return MapUint64ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintptr(f func(Uint8List) uintptr) UintptrOption { return MapUintptrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapByte(f func(Uint8List) byte) ByteOption { return MapByteToUint8ListOption(m, f) }
func (m Uint8ListOption) MapRune(f func(Uint8List) rune) RuneOption { return MapRuneToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat32(f func(Uint8List) float32) Float32Option { return MapFloat32ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat64(f func(Uint8List) float64) Float64Option { return MapFloat64ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex64(f func(Uint8List) complex64) Complex64Option { return MapComplex64ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex128(f func(Uint8List) complex128) Complex128Option { return MapComplex128ToUint8ListOption(m, f) }
func (m Uint8ListOption) MapAny(f func(Uint8List) Any) AnyOption { return MapAnyToUint8ListOption(m, f) }
func (m Uint8ListOption) MapBoolOption(f func(Uint8List) BoolOption) BoolOptionOption { return MapBoolOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapStringOption(f func(Uint8List) StringOption) StringOptionOption { return MapStringOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapIntOption(f func(Uint8List) IntOption) IntOptionOption { return MapIntOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt8Option(f func(Uint8List) Int8Option) Int8OptionOption { return MapInt8OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt16Option(f func(Uint8List) Int16Option) Int16OptionOption { return MapInt16OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt32Option(f func(Uint8List) Int32Option) Int32OptionOption { return MapInt32OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt64Option(f func(Uint8List) Int64Option) Int64OptionOption { return MapInt64OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintOption(f func(Uint8List) UintOption) UintOptionOption { return MapUintOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint8Option(f func(Uint8List) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint16Option(f func(Uint8List) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint32Option(f func(Uint8List) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint64Option(f func(Uint8List) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintptrOption(f func(Uint8List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapByteOption(f func(Uint8List) ByteOption) ByteOptionOption { return MapByteOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapRuneOption(f func(Uint8List) RuneOption) RuneOptionOption { return MapRuneOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat32Option(f func(Uint8List) Float32Option) Float32OptionOption { return MapFloat32OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat64Option(f func(Uint8List) Float64Option) Float64OptionOption { return MapFloat64OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex64Option(f func(Uint8List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex128Option(f func(Uint8List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapAnyOption(f func(Uint8List) AnyOption) AnyOptionOption { return MapAnyOptionToUint8ListOption(m, f) }
func (m Uint8ListOption) MapBoolArr(f func(Uint8List) []bool) BoolArrOption { return MapBoolArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapStringArr(f func(Uint8List) []string) StringArrOption { return MapStringArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapIntArr(f func(Uint8List) []int) IntArrOption { return MapIntArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt8Arr(f func(Uint8List) []int8) Int8ArrOption { return MapInt8ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt16Arr(f func(Uint8List) []int16) Int16ArrOption { return MapInt16ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt32Arr(f func(Uint8List) []int32) Int32ArrOption { return MapInt32ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt64Arr(f func(Uint8List) []int64) Int64ArrOption { return MapInt64ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintArr(f func(Uint8List) []uint) UintArrOption { return MapUintArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint8Arr(f func(Uint8List) []uint8) Uint8ArrOption { return MapUint8ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint16Arr(f func(Uint8List) []uint16) Uint16ArrOption { return MapUint16ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint32Arr(f func(Uint8List) []uint32) Uint32ArrOption { return MapUint32ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint64Arr(f func(Uint8List) []uint64) Uint64ArrOption { return MapUint64ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintptrArr(f func(Uint8List) []uintptr) UintptrArrOption { return MapUintptrArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapByteArr(f func(Uint8List) []byte) ByteArrOption { return MapByteArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapRuneArr(f func(Uint8List) []rune) RuneArrOption { return MapRuneArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat32Arr(f func(Uint8List) []float32) Float32ArrOption { return MapFloat32ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat64Arr(f func(Uint8List) []float64) Float64ArrOption { return MapFloat64ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex64Arr(f func(Uint8List) []complex64) Complex64ArrOption { return MapComplex64ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex128Arr(f func(Uint8List) []complex128) Complex128ArrOption { return MapComplex128ArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapAnyArr(f func(Uint8List) []Any) AnyArrOption { return MapAnyArrToUint8ListOption(m, f) }
func (m Uint8ListOption) MapBoolList(f func(Uint8List) BoolList) BoolListOption { return MapBoolListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapStringList(f func(Uint8List) StringList) StringListOption { return MapStringListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapIntList(f func(Uint8List) IntList) IntListOption { return MapIntListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt8List(f func(Uint8List) Int8List) Int8ListOption { return MapInt8ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt16List(f func(Uint8List) Int16List) Int16ListOption { return MapInt16ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt32List(f func(Uint8List) Int32List) Int32ListOption { return MapInt32ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapInt64List(f func(Uint8List) Int64List) Int64ListOption { return MapInt64ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintList(f func(Uint8List) UintList) UintListOption { return MapUintListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint8List(f func(Uint8List) Uint8List) Uint8ListOption { return MapUint8ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint16List(f func(Uint8List) Uint16List) Uint16ListOption { return MapUint16ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint32List(f func(Uint8List) Uint32List) Uint32ListOption { return MapUint32ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUint64List(f func(Uint8List) Uint64List) Uint64ListOption { return MapUint64ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapUintptrList(f func(Uint8List) UintptrList) UintptrListOption { return MapUintptrListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapByteList(f func(Uint8List) ByteList) ByteListOption { return MapByteListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapRuneList(f func(Uint8List) RuneList) RuneListOption { return MapRuneListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat32List(f func(Uint8List) Float32List) Float32ListOption { return MapFloat32ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapFloat64List(f func(Uint8List) Float64List) Float64ListOption { return MapFloat64ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex64List(f func(Uint8List) Complex64List) Complex64ListOption { return MapComplex64ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapComplex128List(f func(Uint8List) Complex128List) Complex128ListOption { return MapComplex128ListToUint8ListOption(m, f) }
func (m Uint8ListOption) MapAnyList(f func(Uint8List) AnyList) AnyListOption { return MapAnyListToUint8ListOption(m, f) }
func (m Uint16ListOption) MapBool(f func(Uint16List) bool) BoolOption { return MapBoolToUint16ListOption(m, f) }
func (m Uint16ListOption) MapString(f func(Uint16List) string) StringOption { return MapStringToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt(f func(Uint16List) int) IntOption { return MapIntToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt8(f func(Uint16List) int8) Int8Option { return MapInt8ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt16(f func(Uint16List) int16) Int16Option { return MapInt16ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt32(f func(Uint16List) int32) Int32Option { return MapInt32ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt64(f func(Uint16List) int64) Int64Option { return MapInt64ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint(f func(Uint16List) uint) UintOption { return MapUintToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint8(f func(Uint16List) uint8) Uint8Option { return MapUint8ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint16(f func(Uint16List) uint16) Uint16Option { return MapUint16ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint32(f func(Uint16List) uint32) Uint32Option { return MapUint32ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint64(f func(Uint16List) uint64) Uint64Option { return MapUint64ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintptr(f func(Uint16List) uintptr) UintptrOption { return MapUintptrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapByte(f func(Uint16List) byte) ByteOption { return MapByteToUint16ListOption(m, f) }
func (m Uint16ListOption) MapRune(f func(Uint16List) rune) RuneOption { return MapRuneToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat32(f func(Uint16List) float32) Float32Option { return MapFloat32ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat64(f func(Uint16List) float64) Float64Option { return MapFloat64ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex64(f func(Uint16List) complex64) Complex64Option { return MapComplex64ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex128(f func(Uint16List) complex128) Complex128Option { return MapComplex128ToUint16ListOption(m, f) }
func (m Uint16ListOption) MapAny(f func(Uint16List) Any) AnyOption { return MapAnyToUint16ListOption(m, f) }
func (m Uint16ListOption) MapBoolOption(f func(Uint16List) BoolOption) BoolOptionOption { return MapBoolOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapStringOption(f func(Uint16List) StringOption) StringOptionOption { return MapStringOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapIntOption(f func(Uint16List) IntOption) IntOptionOption { return MapIntOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt8Option(f func(Uint16List) Int8Option) Int8OptionOption { return MapInt8OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt16Option(f func(Uint16List) Int16Option) Int16OptionOption { return MapInt16OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt32Option(f func(Uint16List) Int32Option) Int32OptionOption { return MapInt32OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt64Option(f func(Uint16List) Int64Option) Int64OptionOption { return MapInt64OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintOption(f func(Uint16List) UintOption) UintOptionOption { return MapUintOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint8Option(f func(Uint16List) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint16Option(f func(Uint16List) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint32Option(f func(Uint16List) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint64Option(f func(Uint16List) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintptrOption(f func(Uint16List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapByteOption(f func(Uint16List) ByteOption) ByteOptionOption { return MapByteOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapRuneOption(f func(Uint16List) RuneOption) RuneOptionOption { return MapRuneOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat32Option(f func(Uint16List) Float32Option) Float32OptionOption { return MapFloat32OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat64Option(f func(Uint16List) Float64Option) Float64OptionOption { return MapFloat64OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex64Option(f func(Uint16List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex128Option(f func(Uint16List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapAnyOption(f func(Uint16List) AnyOption) AnyOptionOption { return MapAnyOptionToUint16ListOption(m, f) }
func (m Uint16ListOption) MapBoolArr(f func(Uint16List) []bool) BoolArrOption { return MapBoolArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapStringArr(f func(Uint16List) []string) StringArrOption { return MapStringArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapIntArr(f func(Uint16List) []int) IntArrOption { return MapIntArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt8Arr(f func(Uint16List) []int8) Int8ArrOption { return MapInt8ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt16Arr(f func(Uint16List) []int16) Int16ArrOption { return MapInt16ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt32Arr(f func(Uint16List) []int32) Int32ArrOption { return MapInt32ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt64Arr(f func(Uint16List) []int64) Int64ArrOption { return MapInt64ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintArr(f func(Uint16List) []uint) UintArrOption { return MapUintArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint8Arr(f func(Uint16List) []uint8) Uint8ArrOption { return MapUint8ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint16Arr(f func(Uint16List) []uint16) Uint16ArrOption { return MapUint16ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint32Arr(f func(Uint16List) []uint32) Uint32ArrOption { return MapUint32ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint64Arr(f func(Uint16List) []uint64) Uint64ArrOption { return MapUint64ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintptrArr(f func(Uint16List) []uintptr) UintptrArrOption { return MapUintptrArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapByteArr(f func(Uint16List) []byte) ByteArrOption { return MapByteArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapRuneArr(f func(Uint16List) []rune) RuneArrOption { return MapRuneArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat32Arr(f func(Uint16List) []float32) Float32ArrOption { return MapFloat32ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat64Arr(f func(Uint16List) []float64) Float64ArrOption { return MapFloat64ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex64Arr(f func(Uint16List) []complex64) Complex64ArrOption { return MapComplex64ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex128Arr(f func(Uint16List) []complex128) Complex128ArrOption { return MapComplex128ArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapAnyArr(f func(Uint16List) []Any) AnyArrOption { return MapAnyArrToUint16ListOption(m, f) }
func (m Uint16ListOption) MapBoolList(f func(Uint16List) BoolList) BoolListOption { return MapBoolListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapStringList(f func(Uint16List) StringList) StringListOption { return MapStringListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapIntList(f func(Uint16List) IntList) IntListOption { return MapIntListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt8List(f func(Uint16List) Int8List) Int8ListOption { return MapInt8ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt16List(f func(Uint16List) Int16List) Int16ListOption { return MapInt16ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt32List(f func(Uint16List) Int32List) Int32ListOption { return MapInt32ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapInt64List(f func(Uint16List) Int64List) Int64ListOption { return MapInt64ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintList(f func(Uint16List) UintList) UintListOption { return MapUintListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint8List(f func(Uint16List) Uint8List) Uint8ListOption { return MapUint8ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint16List(f func(Uint16List) Uint16List) Uint16ListOption { return MapUint16ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint32List(f func(Uint16List) Uint32List) Uint32ListOption { return MapUint32ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUint64List(f func(Uint16List) Uint64List) Uint64ListOption { return MapUint64ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapUintptrList(f func(Uint16List) UintptrList) UintptrListOption { return MapUintptrListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapByteList(f func(Uint16List) ByteList) ByteListOption { return MapByteListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapRuneList(f func(Uint16List) RuneList) RuneListOption { return MapRuneListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat32List(f func(Uint16List) Float32List) Float32ListOption { return MapFloat32ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapFloat64List(f func(Uint16List) Float64List) Float64ListOption { return MapFloat64ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex64List(f func(Uint16List) Complex64List) Complex64ListOption { return MapComplex64ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapComplex128List(f func(Uint16List) Complex128List) Complex128ListOption { return MapComplex128ListToUint16ListOption(m, f) }
func (m Uint16ListOption) MapAnyList(f func(Uint16List) AnyList) AnyListOption { return MapAnyListToUint16ListOption(m, f) }
func (m Uint32ListOption) MapBool(f func(Uint32List) bool) BoolOption { return MapBoolToUint32ListOption(m, f) }
func (m Uint32ListOption) MapString(f func(Uint32List) string) StringOption { return MapStringToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt(f func(Uint32List) int) IntOption { return MapIntToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt8(f func(Uint32List) int8) Int8Option { return MapInt8ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt16(f func(Uint32List) int16) Int16Option { return MapInt16ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt32(f func(Uint32List) int32) Int32Option { return MapInt32ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt64(f func(Uint32List) int64) Int64Option { return MapInt64ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint(f func(Uint32List) uint) UintOption { return MapUintToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint8(f func(Uint32List) uint8) Uint8Option { return MapUint8ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint16(f func(Uint32List) uint16) Uint16Option { return MapUint16ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint32(f func(Uint32List) uint32) Uint32Option { return MapUint32ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint64(f func(Uint32List) uint64) Uint64Option { return MapUint64ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintptr(f func(Uint32List) uintptr) UintptrOption { return MapUintptrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapByte(f func(Uint32List) byte) ByteOption { return MapByteToUint32ListOption(m, f) }
func (m Uint32ListOption) MapRune(f func(Uint32List) rune) RuneOption { return MapRuneToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat32(f func(Uint32List) float32) Float32Option { return MapFloat32ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat64(f func(Uint32List) float64) Float64Option { return MapFloat64ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex64(f func(Uint32List) complex64) Complex64Option { return MapComplex64ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex128(f func(Uint32List) complex128) Complex128Option { return MapComplex128ToUint32ListOption(m, f) }
func (m Uint32ListOption) MapAny(f func(Uint32List) Any) AnyOption { return MapAnyToUint32ListOption(m, f) }
func (m Uint32ListOption) MapBoolOption(f func(Uint32List) BoolOption) BoolOptionOption { return MapBoolOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapStringOption(f func(Uint32List) StringOption) StringOptionOption { return MapStringOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapIntOption(f func(Uint32List) IntOption) IntOptionOption { return MapIntOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt8Option(f func(Uint32List) Int8Option) Int8OptionOption { return MapInt8OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt16Option(f func(Uint32List) Int16Option) Int16OptionOption { return MapInt16OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt32Option(f func(Uint32List) Int32Option) Int32OptionOption { return MapInt32OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt64Option(f func(Uint32List) Int64Option) Int64OptionOption { return MapInt64OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintOption(f func(Uint32List) UintOption) UintOptionOption { return MapUintOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint8Option(f func(Uint32List) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint16Option(f func(Uint32List) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint32Option(f func(Uint32List) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint64Option(f func(Uint32List) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintptrOption(f func(Uint32List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapByteOption(f func(Uint32List) ByteOption) ByteOptionOption { return MapByteOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapRuneOption(f func(Uint32List) RuneOption) RuneOptionOption { return MapRuneOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat32Option(f func(Uint32List) Float32Option) Float32OptionOption { return MapFloat32OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat64Option(f func(Uint32List) Float64Option) Float64OptionOption { return MapFloat64OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex64Option(f func(Uint32List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex128Option(f func(Uint32List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapAnyOption(f func(Uint32List) AnyOption) AnyOptionOption { return MapAnyOptionToUint32ListOption(m, f) }
func (m Uint32ListOption) MapBoolArr(f func(Uint32List) []bool) BoolArrOption { return MapBoolArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapStringArr(f func(Uint32List) []string) StringArrOption { return MapStringArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapIntArr(f func(Uint32List) []int) IntArrOption { return MapIntArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt8Arr(f func(Uint32List) []int8) Int8ArrOption { return MapInt8ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt16Arr(f func(Uint32List) []int16) Int16ArrOption { return MapInt16ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt32Arr(f func(Uint32List) []int32) Int32ArrOption { return MapInt32ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt64Arr(f func(Uint32List) []int64) Int64ArrOption { return MapInt64ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintArr(f func(Uint32List) []uint) UintArrOption { return MapUintArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint8Arr(f func(Uint32List) []uint8) Uint8ArrOption { return MapUint8ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint16Arr(f func(Uint32List) []uint16) Uint16ArrOption { return MapUint16ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint32Arr(f func(Uint32List) []uint32) Uint32ArrOption { return MapUint32ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint64Arr(f func(Uint32List) []uint64) Uint64ArrOption { return MapUint64ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintptrArr(f func(Uint32List) []uintptr) UintptrArrOption { return MapUintptrArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapByteArr(f func(Uint32List) []byte) ByteArrOption { return MapByteArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapRuneArr(f func(Uint32List) []rune) RuneArrOption { return MapRuneArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat32Arr(f func(Uint32List) []float32) Float32ArrOption { return MapFloat32ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat64Arr(f func(Uint32List) []float64) Float64ArrOption { return MapFloat64ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex64Arr(f func(Uint32List) []complex64) Complex64ArrOption { return MapComplex64ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex128Arr(f func(Uint32List) []complex128) Complex128ArrOption { return MapComplex128ArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapAnyArr(f func(Uint32List) []Any) AnyArrOption { return MapAnyArrToUint32ListOption(m, f) }
func (m Uint32ListOption) MapBoolList(f func(Uint32List) BoolList) BoolListOption { return MapBoolListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapStringList(f func(Uint32List) StringList) StringListOption { return MapStringListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapIntList(f func(Uint32List) IntList) IntListOption { return MapIntListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt8List(f func(Uint32List) Int8List) Int8ListOption { return MapInt8ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt16List(f func(Uint32List) Int16List) Int16ListOption { return MapInt16ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt32List(f func(Uint32List) Int32List) Int32ListOption { return MapInt32ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapInt64List(f func(Uint32List) Int64List) Int64ListOption { return MapInt64ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintList(f func(Uint32List) UintList) UintListOption { return MapUintListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint8List(f func(Uint32List) Uint8List) Uint8ListOption { return MapUint8ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint16List(f func(Uint32List) Uint16List) Uint16ListOption { return MapUint16ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint32List(f func(Uint32List) Uint32List) Uint32ListOption { return MapUint32ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUint64List(f func(Uint32List) Uint64List) Uint64ListOption { return MapUint64ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapUintptrList(f func(Uint32List) UintptrList) UintptrListOption { return MapUintptrListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapByteList(f func(Uint32List) ByteList) ByteListOption { return MapByteListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapRuneList(f func(Uint32List) RuneList) RuneListOption { return MapRuneListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat32List(f func(Uint32List) Float32List) Float32ListOption { return MapFloat32ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapFloat64List(f func(Uint32List) Float64List) Float64ListOption { return MapFloat64ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex64List(f func(Uint32List) Complex64List) Complex64ListOption { return MapComplex64ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapComplex128List(f func(Uint32List) Complex128List) Complex128ListOption { return MapComplex128ListToUint32ListOption(m, f) }
func (m Uint32ListOption) MapAnyList(f func(Uint32List) AnyList) AnyListOption { return MapAnyListToUint32ListOption(m, f) }
func (m Uint64ListOption) MapBool(f func(Uint64List) bool) BoolOption { return MapBoolToUint64ListOption(m, f) }
func (m Uint64ListOption) MapString(f func(Uint64List) string) StringOption { return MapStringToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt(f func(Uint64List) int) IntOption { return MapIntToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt8(f func(Uint64List) int8) Int8Option { return MapInt8ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt16(f func(Uint64List) int16) Int16Option { return MapInt16ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt32(f func(Uint64List) int32) Int32Option { return MapInt32ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt64(f func(Uint64List) int64) Int64Option { return MapInt64ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint(f func(Uint64List) uint) UintOption { return MapUintToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint8(f func(Uint64List) uint8) Uint8Option { return MapUint8ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint16(f func(Uint64List) uint16) Uint16Option { return MapUint16ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint32(f func(Uint64List) uint32) Uint32Option { return MapUint32ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint64(f func(Uint64List) uint64) Uint64Option { return MapUint64ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintptr(f func(Uint64List) uintptr) UintptrOption { return MapUintptrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapByte(f func(Uint64List) byte) ByteOption { return MapByteToUint64ListOption(m, f) }
func (m Uint64ListOption) MapRune(f func(Uint64List) rune) RuneOption { return MapRuneToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat32(f func(Uint64List) float32) Float32Option { return MapFloat32ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat64(f func(Uint64List) float64) Float64Option { return MapFloat64ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex64(f func(Uint64List) complex64) Complex64Option { return MapComplex64ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex128(f func(Uint64List) complex128) Complex128Option { return MapComplex128ToUint64ListOption(m, f) }
func (m Uint64ListOption) MapAny(f func(Uint64List) Any) AnyOption { return MapAnyToUint64ListOption(m, f) }
func (m Uint64ListOption) MapBoolOption(f func(Uint64List) BoolOption) BoolOptionOption { return MapBoolOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapStringOption(f func(Uint64List) StringOption) StringOptionOption { return MapStringOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapIntOption(f func(Uint64List) IntOption) IntOptionOption { return MapIntOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt8Option(f func(Uint64List) Int8Option) Int8OptionOption { return MapInt8OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt16Option(f func(Uint64List) Int16Option) Int16OptionOption { return MapInt16OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt32Option(f func(Uint64List) Int32Option) Int32OptionOption { return MapInt32OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt64Option(f func(Uint64List) Int64Option) Int64OptionOption { return MapInt64OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintOption(f func(Uint64List) UintOption) UintOptionOption { return MapUintOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint8Option(f func(Uint64List) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint16Option(f func(Uint64List) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint32Option(f func(Uint64List) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint64Option(f func(Uint64List) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintptrOption(f func(Uint64List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapByteOption(f func(Uint64List) ByteOption) ByteOptionOption { return MapByteOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapRuneOption(f func(Uint64List) RuneOption) RuneOptionOption { return MapRuneOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat32Option(f func(Uint64List) Float32Option) Float32OptionOption { return MapFloat32OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat64Option(f func(Uint64List) Float64Option) Float64OptionOption { return MapFloat64OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex64Option(f func(Uint64List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex128Option(f func(Uint64List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapAnyOption(f func(Uint64List) AnyOption) AnyOptionOption { return MapAnyOptionToUint64ListOption(m, f) }
func (m Uint64ListOption) MapBoolArr(f func(Uint64List) []bool) BoolArrOption { return MapBoolArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapStringArr(f func(Uint64List) []string) StringArrOption { return MapStringArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapIntArr(f func(Uint64List) []int) IntArrOption { return MapIntArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt8Arr(f func(Uint64List) []int8) Int8ArrOption { return MapInt8ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt16Arr(f func(Uint64List) []int16) Int16ArrOption { return MapInt16ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt32Arr(f func(Uint64List) []int32) Int32ArrOption { return MapInt32ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt64Arr(f func(Uint64List) []int64) Int64ArrOption { return MapInt64ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintArr(f func(Uint64List) []uint) UintArrOption { return MapUintArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint8Arr(f func(Uint64List) []uint8) Uint8ArrOption { return MapUint8ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint16Arr(f func(Uint64List) []uint16) Uint16ArrOption { return MapUint16ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint32Arr(f func(Uint64List) []uint32) Uint32ArrOption { return MapUint32ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint64Arr(f func(Uint64List) []uint64) Uint64ArrOption { return MapUint64ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintptrArr(f func(Uint64List) []uintptr) UintptrArrOption { return MapUintptrArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapByteArr(f func(Uint64List) []byte) ByteArrOption { return MapByteArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapRuneArr(f func(Uint64List) []rune) RuneArrOption { return MapRuneArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat32Arr(f func(Uint64List) []float32) Float32ArrOption { return MapFloat32ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat64Arr(f func(Uint64List) []float64) Float64ArrOption { return MapFloat64ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex64Arr(f func(Uint64List) []complex64) Complex64ArrOption { return MapComplex64ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex128Arr(f func(Uint64List) []complex128) Complex128ArrOption { return MapComplex128ArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapAnyArr(f func(Uint64List) []Any) AnyArrOption { return MapAnyArrToUint64ListOption(m, f) }
func (m Uint64ListOption) MapBoolList(f func(Uint64List) BoolList) BoolListOption { return MapBoolListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapStringList(f func(Uint64List) StringList) StringListOption { return MapStringListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapIntList(f func(Uint64List) IntList) IntListOption { return MapIntListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt8List(f func(Uint64List) Int8List) Int8ListOption { return MapInt8ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt16List(f func(Uint64List) Int16List) Int16ListOption { return MapInt16ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt32List(f func(Uint64List) Int32List) Int32ListOption { return MapInt32ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapInt64List(f func(Uint64List) Int64List) Int64ListOption { return MapInt64ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintList(f func(Uint64List) UintList) UintListOption { return MapUintListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint8List(f func(Uint64List) Uint8List) Uint8ListOption { return MapUint8ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint16List(f func(Uint64List) Uint16List) Uint16ListOption { return MapUint16ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint32List(f func(Uint64List) Uint32List) Uint32ListOption { return MapUint32ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUint64List(f func(Uint64List) Uint64List) Uint64ListOption { return MapUint64ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapUintptrList(f func(Uint64List) UintptrList) UintptrListOption { return MapUintptrListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapByteList(f func(Uint64List) ByteList) ByteListOption { return MapByteListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapRuneList(f func(Uint64List) RuneList) RuneListOption { return MapRuneListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat32List(f func(Uint64List) Float32List) Float32ListOption { return MapFloat32ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapFloat64List(f func(Uint64List) Float64List) Float64ListOption { return MapFloat64ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex64List(f func(Uint64List) Complex64List) Complex64ListOption { return MapComplex64ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapComplex128List(f func(Uint64List) Complex128List) Complex128ListOption { return MapComplex128ListToUint64ListOption(m, f) }
func (m Uint64ListOption) MapAnyList(f func(Uint64List) AnyList) AnyListOption { return MapAnyListToUint64ListOption(m, f) }
func (m UintptrListOption) MapBool(f func(UintptrList) bool) BoolOption { return MapBoolToUintptrListOption(m, f) }
func (m UintptrListOption) MapString(f func(UintptrList) string) StringOption { return MapStringToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt(f func(UintptrList) int) IntOption { return MapIntToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt8(f func(UintptrList) int8) Int8Option { return MapInt8ToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt16(f func(UintptrList) int16) Int16Option { return MapInt16ToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt32(f func(UintptrList) int32) Int32Option { return MapInt32ToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt64(f func(UintptrList) int64) Int64Option { return MapInt64ToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint(f func(UintptrList) uint) UintOption { return MapUintToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint8(f func(UintptrList) uint8) Uint8Option { return MapUint8ToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint16(f func(UintptrList) uint16) Uint16Option { return MapUint16ToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint32(f func(UintptrList) uint32) Uint32Option { return MapUint32ToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint64(f func(UintptrList) uint64) Uint64Option { return MapUint64ToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintptr(f func(UintptrList) uintptr) UintptrOption { return MapUintptrToUintptrListOption(m, f) }
func (m UintptrListOption) MapByte(f func(UintptrList) byte) ByteOption { return MapByteToUintptrListOption(m, f) }
func (m UintptrListOption) MapRune(f func(UintptrList) rune) RuneOption { return MapRuneToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat32(f func(UintptrList) float32) Float32Option { return MapFloat32ToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat64(f func(UintptrList) float64) Float64Option { return MapFloat64ToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex64(f func(UintptrList) complex64) Complex64Option { return MapComplex64ToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex128(f func(UintptrList) complex128) Complex128Option { return MapComplex128ToUintptrListOption(m, f) }
func (m UintptrListOption) MapAny(f func(UintptrList) Any) AnyOption { return MapAnyToUintptrListOption(m, f) }
func (m UintptrListOption) MapBoolOption(f func(UintptrList) BoolOption) BoolOptionOption { return MapBoolOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapStringOption(f func(UintptrList) StringOption) StringOptionOption { return MapStringOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapIntOption(f func(UintptrList) IntOption) IntOptionOption { return MapIntOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt8Option(f func(UintptrList) Int8Option) Int8OptionOption { return MapInt8OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt16Option(f func(UintptrList) Int16Option) Int16OptionOption { return MapInt16OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt32Option(f func(UintptrList) Int32Option) Int32OptionOption { return MapInt32OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt64Option(f func(UintptrList) Int64Option) Int64OptionOption { return MapInt64OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintOption(f func(UintptrList) UintOption) UintOptionOption { return MapUintOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint8Option(f func(UintptrList) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint16Option(f func(UintptrList) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint32Option(f func(UintptrList) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint64Option(f func(UintptrList) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintptrOption(f func(UintptrList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapByteOption(f func(UintptrList) ByteOption) ByteOptionOption { return MapByteOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapRuneOption(f func(UintptrList) RuneOption) RuneOptionOption { return MapRuneOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat32Option(f func(UintptrList) Float32Option) Float32OptionOption { return MapFloat32OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat64Option(f func(UintptrList) Float64Option) Float64OptionOption { return MapFloat64OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex64Option(f func(UintptrList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex128Option(f func(UintptrList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapAnyOption(f func(UintptrList) AnyOption) AnyOptionOption { return MapAnyOptionToUintptrListOption(m, f) }
func (m UintptrListOption) MapBoolArr(f func(UintptrList) []bool) BoolArrOption { return MapBoolArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapStringArr(f func(UintptrList) []string) StringArrOption { return MapStringArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapIntArr(f func(UintptrList) []int) IntArrOption { return MapIntArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt8Arr(f func(UintptrList) []int8) Int8ArrOption { return MapInt8ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt16Arr(f func(UintptrList) []int16) Int16ArrOption { return MapInt16ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt32Arr(f func(UintptrList) []int32) Int32ArrOption { return MapInt32ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt64Arr(f func(UintptrList) []int64) Int64ArrOption { return MapInt64ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintArr(f func(UintptrList) []uint) UintArrOption { return MapUintArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint8Arr(f func(UintptrList) []uint8) Uint8ArrOption { return MapUint8ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint16Arr(f func(UintptrList) []uint16) Uint16ArrOption { return MapUint16ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint32Arr(f func(UintptrList) []uint32) Uint32ArrOption { return MapUint32ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint64Arr(f func(UintptrList) []uint64) Uint64ArrOption { return MapUint64ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintptrArr(f func(UintptrList) []uintptr) UintptrArrOption { return MapUintptrArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapByteArr(f func(UintptrList) []byte) ByteArrOption { return MapByteArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapRuneArr(f func(UintptrList) []rune) RuneArrOption { return MapRuneArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat32Arr(f func(UintptrList) []float32) Float32ArrOption { return MapFloat32ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat64Arr(f func(UintptrList) []float64) Float64ArrOption { return MapFloat64ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex64Arr(f func(UintptrList) []complex64) Complex64ArrOption { return MapComplex64ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex128Arr(f func(UintptrList) []complex128) Complex128ArrOption { return MapComplex128ArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapAnyArr(f func(UintptrList) []Any) AnyArrOption { return MapAnyArrToUintptrListOption(m, f) }
func (m UintptrListOption) MapBoolList(f func(UintptrList) BoolList) BoolListOption { return MapBoolListToUintptrListOption(m, f) }
func (m UintptrListOption) MapStringList(f func(UintptrList) StringList) StringListOption { return MapStringListToUintptrListOption(m, f) }
func (m UintptrListOption) MapIntList(f func(UintptrList) IntList) IntListOption { return MapIntListToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt8List(f func(UintptrList) Int8List) Int8ListOption { return MapInt8ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt16List(f func(UintptrList) Int16List) Int16ListOption { return MapInt16ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt32List(f func(UintptrList) Int32List) Int32ListOption { return MapInt32ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapInt64List(f func(UintptrList) Int64List) Int64ListOption { return MapInt64ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintList(f func(UintptrList) UintList) UintListOption { return MapUintListToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint8List(f func(UintptrList) Uint8List) Uint8ListOption { return MapUint8ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint16List(f func(UintptrList) Uint16List) Uint16ListOption { return MapUint16ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint32List(f func(UintptrList) Uint32List) Uint32ListOption { return MapUint32ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapUint64List(f func(UintptrList) Uint64List) Uint64ListOption { return MapUint64ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapUintptrList(f func(UintptrList) UintptrList) UintptrListOption { return MapUintptrListToUintptrListOption(m, f) }
func (m UintptrListOption) MapByteList(f func(UintptrList) ByteList) ByteListOption { return MapByteListToUintptrListOption(m, f) }
func (m UintptrListOption) MapRuneList(f func(UintptrList) RuneList) RuneListOption { return MapRuneListToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat32List(f func(UintptrList) Float32List) Float32ListOption { return MapFloat32ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapFloat64List(f func(UintptrList) Float64List) Float64ListOption { return MapFloat64ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex64List(f func(UintptrList) Complex64List) Complex64ListOption { return MapComplex64ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapComplex128List(f func(UintptrList) Complex128List) Complex128ListOption { return MapComplex128ListToUintptrListOption(m, f) }
func (m UintptrListOption) MapAnyList(f func(UintptrList) AnyList) AnyListOption { return MapAnyListToUintptrListOption(m, f) }
func (m ByteListOption) MapBool(f func(ByteList) bool) BoolOption { return MapBoolToByteListOption(m, f) }
func (m ByteListOption) MapString(f func(ByteList) string) StringOption { return MapStringToByteListOption(m, f) }
func (m ByteListOption) MapInt(f func(ByteList) int) IntOption { return MapIntToByteListOption(m, f) }
func (m ByteListOption) MapInt8(f func(ByteList) int8) Int8Option { return MapInt8ToByteListOption(m, f) }
func (m ByteListOption) MapInt16(f func(ByteList) int16) Int16Option { return MapInt16ToByteListOption(m, f) }
func (m ByteListOption) MapInt32(f func(ByteList) int32) Int32Option { return MapInt32ToByteListOption(m, f) }
func (m ByteListOption) MapInt64(f func(ByteList) int64) Int64Option { return MapInt64ToByteListOption(m, f) }
func (m ByteListOption) MapUint(f func(ByteList) uint) UintOption { return MapUintToByteListOption(m, f) }
func (m ByteListOption) MapUint8(f func(ByteList) uint8) Uint8Option { return MapUint8ToByteListOption(m, f) }
func (m ByteListOption) MapUint16(f func(ByteList) uint16) Uint16Option { return MapUint16ToByteListOption(m, f) }
func (m ByteListOption) MapUint32(f func(ByteList) uint32) Uint32Option { return MapUint32ToByteListOption(m, f) }
func (m ByteListOption) MapUint64(f func(ByteList) uint64) Uint64Option { return MapUint64ToByteListOption(m, f) }
func (m ByteListOption) MapUintptr(f func(ByteList) uintptr) UintptrOption { return MapUintptrToByteListOption(m, f) }
func (m ByteListOption) MapByte(f func(ByteList) byte) ByteOption { return MapByteToByteListOption(m, f) }
func (m ByteListOption) MapRune(f func(ByteList) rune) RuneOption { return MapRuneToByteListOption(m, f) }
func (m ByteListOption) MapFloat32(f func(ByteList) float32) Float32Option { return MapFloat32ToByteListOption(m, f) }
func (m ByteListOption) MapFloat64(f func(ByteList) float64) Float64Option { return MapFloat64ToByteListOption(m, f) }
func (m ByteListOption) MapComplex64(f func(ByteList) complex64) Complex64Option { return MapComplex64ToByteListOption(m, f) }
func (m ByteListOption) MapComplex128(f func(ByteList) complex128) Complex128Option { return MapComplex128ToByteListOption(m, f) }
func (m ByteListOption) MapAny(f func(ByteList) Any) AnyOption { return MapAnyToByteListOption(m, f) }
func (m ByteListOption) MapBoolOption(f func(ByteList) BoolOption) BoolOptionOption { return MapBoolOptionToByteListOption(m, f) }
func (m ByteListOption) MapStringOption(f func(ByteList) StringOption) StringOptionOption { return MapStringOptionToByteListOption(m, f) }
func (m ByteListOption) MapIntOption(f func(ByteList) IntOption) IntOptionOption { return MapIntOptionToByteListOption(m, f) }
func (m ByteListOption) MapInt8Option(f func(ByteList) Int8Option) Int8OptionOption { return MapInt8OptionToByteListOption(m, f) }
func (m ByteListOption) MapInt16Option(f func(ByteList) Int16Option) Int16OptionOption { return MapInt16OptionToByteListOption(m, f) }
func (m ByteListOption) MapInt32Option(f func(ByteList) Int32Option) Int32OptionOption { return MapInt32OptionToByteListOption(m, f) }
func (m ByteListOption) MapInt64Option(f func(ByteList) Int64Option) Int64OptionOption { return MapInt64OptionToByteListOption(m, f) }
func (m ByteListOption) MapUintOption(f func(ByteList) UintOption) UintOptionOption { return MapUintOptionToByteListOption(m, f) }
func (m ByteListOption) MapUint8Option(f func(ByteList) Uint8Option) Uint8OptionOption { return MapUint8OptionToByteListOption(m, f) }
func (m ByteListOption) MapUint16Option(f func(ByteList) Uint16Option) Uint16OptionOption { return MapUint16OptionToByteListOption(m, f) }
func (m ByteListOption) MapUint32Option(f func(ByteList) Uint32Option) Uint32OptionOption { return MapUint32OptionToByteListOption(m, f) }
func (m ByteListOption) MapUint64Option(f func(ByteList) Uint64Option) Uint64OptionOption { return MapUint64OptionToByteListOption(m, f) }
func (m ByteListOption) MapUintptrOption(f func(ByteList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToByteListOption(m, f) }
func (m ByteListOption) MapByteOption(f func(ByteList) ByteOption) ByteOptionOption { return MapByteOptionToByteListOption(m, f) }
func (m ByteListOption) MapRuneOption(f func(ByteList) RuneOption) RuneOptionOption { return MapRuneOptionToByteListOption(m, f) }
func (m ByteListOption) MapFloat32Option(f func(ByteList) Float32Option) Float32OptionOption { return MapFloat32OptionToByteListOption(m, f) }
func (m ByteListOption) MapFloat64Option(f func(ByteList) Float64Option) Float64OptionOption { return MapFloat64OptionToByteListOption(m, f) }
func (m ByteListOption) MapComplex64Option(f func(ByteList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToByteListOption(m, f) }
func (m ByteListOption) MapComplex128Option(f func(ByteList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToByteListOption(m, f) }
func (m ByteListOption) MapAnyOption(f func(ByteList) AnyOption) AnyOptionOption { return MapAnyOptionToByteListOption(m, f) }
func (m ByteListOption) MapBoolArr(f func(ByteList) []bool) BoolArrOption { return MapBoolArrToByteListOption(m, f) }
func (m ByteListOption) MapStringArr(f func(ByteList) []string) StringArrOption { return MapStringArrToByteListOption(m, f) }
func (m ByteListOption) MapIntArr(f func(ByteList) []int) IntArrOption { return MapIntArrToByteListOption(m, f) }
func (m ByteListOption) MapInt8Arr(f func(ByteList) []int8) Int8ArrOption { return MapInt8ArrToByteListOption(m, f) }
func (m ByteListOption) MapInt16Arr(f func(ByteList) []int16) Int16ArrOption { return MapInt16ArrToByteListOption(m, f) }
func (m ByteListOption) MapInt32Arr(f func(ByteList) []int32) Int32ArrOption { return MapInt32ArrToByteListOption(m, f) }
func (m ByteListOption) MapInt64Arr(f func(ByteList) []int64) Int64ArrOption { return MapInt64ArrToByteListOption(m, f) }
func (m ByteListOption) MapUintArr(f func(ByteList) []uint) UintArrOption { return MapUintArrToByteListOption(m, f) }
func (m ByteListOption) MapUint8Arr(f func(ByteList) []uint8) Uint8ArrOption { return MapUint8ArrToByteListOption(m, f) }
func (m ByteListOption) MapUint16Arr(f func(ByteList) []uint16) Uint16ArrOption { return MapUint16ArrToByteListOption(m, f) }
func (m ByteListOption) MapUint32Arr(f func(ByteList) []uint32) Uint32ArrOption { return MapUint32ArrToByteListOption(m, f) }
func (m ByteListOption) MapUint64Arr(f func(ByteList) []uint64) Uint64ArrOption { return MapUint64ArrToByteListOption(m, f) }
func (m ByteListOption) MapUintptrArr(f func(ByteList) []uintptr) UintptrArrOption { return MapUintptrArrToByteListOption(m, f) }
func (m ByteListOption) MapByteArr(f func(ByteList) []byte) ByteArrOption { return MapByteArrToByteListOption(m, f) }
func (m ByteListOption) MapRuneArr(f func(ByteList) []rune) RuneArrOption { return MapRuneArrToByteListOption(m, f) }
func (m ByteListOption) MapFloat32Arr(f func(ByteList) []float32) Float32ArrOption { return MapFloat32ArrToByteListOption(m, f) }
func (m ByteListOption) MapFloat64Arr(f func(ByteList) []float64) Float64ArrOption { return MapFloat64ArrToByteListOption(m, f) }
func (m ByteListOption) MapComplex64Arr(f func(ByteList) []complex64) Complex64ArrOption { return MapComplex64ArrToByteListOption(m, f) }
func (m ByteListOption) MapComplex128Arr(f func(ByteList) []complex128) Complex128ArrOption { return MapComplex128ArrToByteListOption(m, f) }
func (m ByteListOption) MapAnyArr(f func(ByteList) []Any) AnyArrOption { return MapAnyArrToByteListOption(m, f) }
func (m ByteListOption) MapBoolList(f func(ByteList) BoolList) BoolListOption { return MapBoolListToByteListOption(m, f) }
func (m ByteListOption) MapStringList(f func(ByteList) StringList) StringListOption { return MapStringListToByteListOption(m, f) }
func (m ByteListOption) MapIntList(f func(ByteList) IntList) IntListOption { return MapIntListToByteListOption(m, f) }
func (m ByteListOption) MapInt8List(f func(ByteList) Int8List) Int8ListOption { return MapInt8ListToByteListOption(m, f) }
func (m ByteListOption) MapInt16List(f func(ByteList) Int16List) Int16ListOption { return MapInt16ListToByteListOption(m, f) }
func (m ByteListOption) MapInt32List(f func(ByteList) Int32List) Int32ListOption { return MapInt32ListToByteListOption(m, f) }
func (m ByteListOption) MapInt64List(f func(ByteList) Int64List) Int64ListOption { return MapInt64ListToByteListOption(m, f) }
func (m ByteListOption) MapUintList(f func(ByteList) UintList) UintListOption { return MapUintListToByteListOption(m, f) }
func (m ByteListOption) MapUint8List(f func(ByteList) Uint8List) Uint8ListOption { return MapUint8ListToByteListOption(m, f) }
func (m ByteListOption) MapUint16List(f func(ByteList) Uint16List) Uint16ListOption { return MapUint16ListToByteListOption(m, f) }
func (m ByteListOption) MapUint32List(f func(ByteList) Uint32List) Uint32ListOption { return MapUint32ListToByteListOption(m, f) }
func (m ByteListOption) MapUint64List(f func(ByteList) Uint64List) Uint64ListOption { return MapUint64ListToByteListOption(m, f) }
func (m ByteListOption) MapUintptrList(f func(ByteList) UintptrList) UintptrListOption { return MapUintptrListToByteListOption(m, f) }
func (m ByteListOption) MapByteList(f func(ByteList) ByteList) ByteListOption { return MapByteListToByteListOption(m, f) }
func (m ByteListOption) MapRuneList(f func(ByteList) RuneList) RuneListOption { return MapRuneListToByteListOption(m, f) }
func (m ByteListOption) MapFloat32List(f func(ByteList) Float32List) Float32ListOption { return MapFloat32ListToByteListOption(m, f) }
func (m ByteListOption) MapFloat64List(f func(ByteList) Float64List) Float64ListOption { return MapFloat64ListToByteListOption(m, f) }
func (m ByteListOption) MapComplex64List(f func(ByteList) Complex64List) Complex64ListOption { return MapComplex64ListToByteListOption(m, f) }
func (m ByteListOption) MapComplex128List(f func(ByteList) Complex128List) Complex128ListOption { return MapComplex128ListToByteListOption(m, f) }
func (m ByteListOption) MapAnyList(f func(ByteList) AnyList) AnyListOption { return MapAnyListToByteListOption(m, f) }
func (m RuneListOption) MapBool(f func(RuneList) bool) BoolOption { return MapBoolToRuneListOption(m, f) }
func (m RuneListOption) MapString(f func(RuneList) string) StringOption { return MapStringToRuneListOption(m, f) }
func (m RuneListOption) MapInt(f func(RuneList) int) IntOption { return MapIntToRuneListOption(m, f) }
func (m RuneListOption) MapInt8(f func(RuneList) int8) Int8Option { return MapInt8ToRuneListOption(m, f) }
func (m RuneListOption) MapInt16(f func(RuneList) int16) Int16Option { return MapInt16ToRuneListOption(m, f) }
func (m RuneListOption) MapInt32(f func(RuneList) int32) Int32Option { return MapInt32ToRuneListOption(m, f) }
func (m RuneListOption) MapInt64(f func(RuneList) int64) Int64Option { return MapInt64ToRuneListOption(m, f) }
func (m RuneListOption) MapUint(f func(RuneList) uint) UintOption { return MapUintToRuneListOption(m, f) }
func (m RuneListOption) MapUint8(f func(RuneList) uint8) Uint8Option { return MapUint8ToRuneListOption(m, f) }
func (m RuneListOption) MapUint16(f func(RuneList) uint16) Uint16Option { return MapUint16ToRuneListOption(m, f) }
func (m RuneListOption) MapUint32(f func(RuneList) uint32) Uint32Option { return MapUint32ToRuneListOption(m, f) }
func (m RuneListOption) MapUint64(f func(RuneList) uint64) Uint64Option { return MapUint64ToRuneListOption(m, f) }
func (m RuneListOption) MapUintptr(f func(RuneList) uintptr) UintptrOption { return MapUintptrToRuneListOption(m, f) }
func (m RuneListOption) MapByte(f func(RuneList) byte) ByteOption { return MapByteToRuneListOption(m, f) }
func (m RuneListOption) MapRune(f func(RuneList) rune) RuneOption { return MapRuneToRuneListOption(m, f) }
func (m RuneListOption) MapFloat32(f func(RuneList) float32) Float32Option { return MapFloat32ToRuneListOption(m, f) }
func (m RuneListOption) MapFloat64(f func(RuneList) float64) Float64Option { return MapFloat64ToRuneListOption(m, f) }
func (m RuneListOption) MapComplex64(f func(RuneList) complex64) Complex64Option { return MapComplex64ToRuneListOption(m, f) }
func (m RuneListOption) MapComplex128(f func(RuneList) complex128) Complex128Option { return MapComplex128ToRuneListOption(m, f) }
func (m RuneListOption) MapAny(f func(RuneList) Any) AnyOption { return MapAnyToRuneListOption(m, f) }
func (m RuneListOption) MapBoolOption(f func(RuneList) BoolOption) BoolOptionOption { return MapBoolOptionToRuneListOption(m, f) }
func (m RuneListOption) MapStringOption(f func(RuneList) StringOption) StringOptionOption { return MapStringOptionToRuneListOption(m, f) }
func (m RuneListOption) MapIntOption(f func(RuneList) IntOption) IntOptionOption { return MapIntOptionToRuneListOption(m, f) }
func (m RuneListOption) MapInt8Option(f func(RuneList) Int8Option) Int8OptionOption { return MapInt8OptionToRuneListOption(m, f) }
func (m RuneListOption) MapInt16Option(f func(RuneList) Int16Option) Int16OptionOption { return MapInt16OptionToRuneListOption(m, f) }
func (m RuneListOption) MapInt32Option(f func(RuneList) Int32Option) Int32OptionOption { return MapInt32OptionToRuneListOption(m, f) }
func (m RuneListOption) MapInt64Option(f func(RuneList) Int64Option) Int64OptionOption { return MapInt64OptionToRuneListOption(m, f) }
func (m RuneListOption) MapUintOption(f func(RuneList) UintOption) UintOptionOption { return MapUintOptionToRuneListOption(m, f) }
func (m RuneListOption) MapUint8Option(f func(RuneList) Uint8Option) Uint8OptionOption { return MapUint8OptionToRuneListOption(m, f) }
func (m RuneListOption) MapUint16Option(f func(RuneList) Uint16Option) Uint16OptionOption { return MapUint16OptionToRuneListOption(m, f) }
func (m RuneListOption) MapUint32Option(f func(RuneList) Uint32Option) Uint32OptionOption { return MapUint32OptionToRuneListOption(m, f) }
func (m RuneListOption) MapUint64Option(f func(RuneList) Uint64Option) Uint64OptionOption { return MapUint64OptionToRuneListOption(m, f) }
func (m RuneListOption) MapUintptrOption(f func(RuneList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToRuneListOption(m, f) }
func (m RuneListOption) MapByteOption(f func(RuneList) ByteOption) ByteOptionOption { return MapByteOptionToRuneListOption(m, f) }
func (m RuneListOption) MapRuneOption(f func(RuneList) RuneOption) RuneOptionOption { return MapRuneOptionToRuneListOption(m, f) }
func (m RuneListOption) MapFloat32Option(f func(RuneList) Float32Option) Float32OptionOption { return MapFloat32OptionToRuneListOption(m, f) }
func (m RuneListOption) MapFloat64Option(f func(RuneList) Float64Option) Float64OptionOption { return MapFloat64OptionToRuneListOption(m, f) }
func (m RuneListOption) MapComplex64Option(f func(RuneList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToRuneListOption(m, f) }
func (m RuneListOption) MapComplex128Option(f func(RuneList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToRuneListOption(m, f) }
func (m RuneListOption) MapAnyOption(f func(RuneList) AnyOption) AnyOptionOption { return MapAnyOptionToRuneListOption(m, f) }
func (m RuneListOption) MapBoolArr(f func(RuneList) []bool) BoolArrOption { return MapBoolArrToRuneListOption(m, f) }
func (m RuneListOption) MapStringArr(f func(RuneList) []string) StringArrOption { return MapStringArrToRuneListOption(m, f) }
func (m RuneListOption) MapIntArr(f func(RuneList) []int) IntArrOption { return MapIntArrToRuneListOption(m, f) }
func (m RuneListOption) MapInt8Arr(f func(RuneList) []int8) Int8ArrOption { return MapInt8ArrToRuneListOption(m, f) }
func (m RuneListOption) MapInt16Arr(f func(RuneList) []int16) Int16ArrOption { return MapInt16ArrToRuneListOption(m, f) }
func (m RuneListOption) MapInt32Arr(f func(RuneList) []int32) Int32ArrOption { return MapInt32ArrToRuneListOption(m, f) }
func (m RuneListOption) MapInt64Arr(f func(RuneList) []int64) Int64ArrOption { return MapInt64ArrToRuneListOption(m, f) }
func (m RuneListOption) MapUintArr(f func(RuneList) []uint) UintArrOption { return MapUintArrToRuneListOption(m, f) }
func (m RuneListOption) MapUint8Arr(f func(RuneList) []uint8) Uint8ArrOption { return MapUint8ArrToRuneListOption(m, f) }
func (m RuneListOption) MapUint16Arr(f func(RuneList) []uint16) Uint16ArrOption { return MapUint16ArrToRuneListOption(m, f) }
func (m RuneListOption) MapUint32Arr(f func(RuneList) []uint32) Uint32ArrOption { return MapUint32ArrToRuneListOption(m, f) }
func (m RuneListOption) MapUint64Arr(f func(RuneList) []uint64) Uint64ArrOption { return MapUint64ArrToRuneListOption(m, f) }
func (m RuneListOption) MapUintptrArr(f func(RuneList) []uintptr) UintptrArrOption { return MapUintptrArrToRuneListOption(m, f) }
func (m RuneListOption) MapByteArr(f func(RuneList) []byte) ByteArrOption { return MapByteArrToRuneListOption(m, f) }
func (m RuneListOption) MapRuneArr(f func(RuneList) []rune) RuneArrOption { return MapRuneArrToRuneListOption(m, f) }
func (m RuneListOption) MapFloat32Arr(f func(RuneList) []float32) Float32ArrOption { return MapFloat32ArrToRuneListOption(m, f) }
func (m RuneListOption) MapFloat64Arr(f func(RuneList) []float64) Float64ArrOption { return MapFloat64ArrToRuneListOption(m, f) }
func (m RuneListOption) MapComplex64Arr(f func(RuneList) []complex64) Complex64ArrOption { return MapComplex64ArrToRuneListOption(m, f) }
func (m RuneListOption) MapComplex128Arr(f func(RuneList) []complex128) Complex128ArrOption { return MapComplex128ArrToRuneListOption(m, f) }
func (m RuneListOption) MapAnyArr(f func(RuneList) []Any) AnyArrOption { return MapAnyArrToRuneListOption(m, f) }
func (m RuneListOption) MapBoolList(f func(RuneList) BoolList) BoolListOption { return MapBoolListToRuneListOption(m, f) }
func (m RuneListOption) MapStringList(f func(RuneList) StringList) StringListOption { return MapStringListToRuneListOption(m, f) }
func (m RuneListOption) MapIntList(f func(RuneList) IntList) IntListOption { return MapIntListToRuneListOption(m, f) }
func (m RuneListOption) MapInt8List(f func(RuneList) Int8List) Int8ListOption { return MapInt8ListToRuneListOption(m, f) }
func (m RuneListOption) MapInt16List(f func(RuneList) Int16List) Int16ListOption { return MapInt16ListToRuneListOption(m, f) }
func (m RuneListOption) MapInt32List(f func(RuneList) Int32List) Int32ListOption { return MapInt32ListToRuneListOption(m, f) }
func (m RuneListOption) MapInt64List(f func(RuneList) Int64List) Int64ListOption { return MapInt64ListToRuneListOption(m, f) }
func (m RuneListOption) MapUintList(f func(RuneList) UintList) UintListOption { return MapUintListToRuneListOption(m, f) }
func (m RuneListOption) MapUint8List(f func(RuneList) Uint8List) Uint8ListOption { return MapUint8ListToRuneListOption(m, f) }
func (m RuneListOption) MapUint16List(f func(RuneList) Uint16List) Uint16ListOption { return MapUint16ListToRuneListOption(m, f) }
func (m RuneListOption) MapUint32List(f func(RuneList) Uint32List) Uint32ListOption { return MapUint32ListToRuneListOption(m, f) }
func (m RuneListOption) MapUint64List(f func(RuneList) Uint64List) Uint64ListOption { return MapUint64ListToRuneListOption(m, f) }
func (m RuneListOption) MapUintptrList(f func(RuneList) UintptrList) UintptrListOption { return MapUintptrListToRuneListOption(m, f) }
func (m RuneListOption) MapByteList(f func(RuneList) ByteList) ByteListOption { return MapByteListToRuneListOption(m, f) }
func (m RuneListOption) MapRuneList(f func(RuneList) RuneList) RuneListOption { return MapRuneListToRuneListOption(m, f) }
func (m RuneListOption) MapFloat32List(f func(RuneList) Float32List) Float32ListOption { return MapFloat32ListToRuneListOption(m, f) }
func (m RuneListOption) MapFloat64List(f func(RuneList) Float64List) Float64ListOption { return MapFloat64ListToRuneListOption(m, f) }
func (m RuneListOption) MapComplex64List(f func(RuneList) Complex64List) Complex64ListOption { return MapComplex64ListToRuneListOption(m, f) }
func (m RuneListOption) MapComplex128List(f func(RuneList) Complex128List) Complex128ListOption { return MapComplex128ListToRuneListOption(m, f) }
func (m RuneListOption) MapAnyList(f func(RuneList) AnyList) AnyListOption { return MapAnyListToRuneListOption(m, f) }
func (m Float32ListOption) MapBool(f func(Float32List) bool) BoolOption { return MapBoolToFloat32ListOption(m, f) }
func (m Float32ListOption) MapString(f func(Float32List) string) StringOption { return MapStringToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt(f func(Float32List) int) IntOption { return MapIntToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt8(f func(Float32List) int8) Int8Option { return MapInt8ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt16(f func(Float32List) int16) Int16Option { return MapInt16ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt32(f func(Float32List) int32) Int32Option { return MapInt32ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt64(f func(Float32List) int64) Int64Option { return MapInt64ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint(f func(Float32List) uint) UintOption { return MapUintToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint8(f func(Float32List) uint8) Uint8Option { return MapUint8ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint16(f func(Float32List) uint16) Uint16Option { return MapUint16ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint32(f func(Float32List) uint32) Uint32Option { return MapUint32ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint64(f func(Float32List) uint64) Uint64Option { return MapUint64ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintptr(f func(Float32List) uintptr) UintptrOption { return MapUintptrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapByte(f func(Float32List) byte) ByteOption { return MapByteToFloat32ListOption(m, f) }
func (m Float32ListOption) MapRune(f func(Float32List) rune) RuneOption { return MapRuneToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat32(f func(Float32List) float32) Float32Option { return MapFloat32ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat64(f func(Float32List) float64) Float64Option { return MapFloat64ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex64(f func(Float32List) complex64) Complex64Option { return MapComplex64ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex128(f func(Float32List) complex128) Complex128Option { return MapComplex128ToFloat32ListOption(m, f) }
func (m Float32ListOption) MapAny(f func(Float32List) Any) AnyOption { return MapAnyToFloat32ListOption(m, f) }
func (m Float32ListOption) MapBoolOption(f func(Float32List) BoolOption) BoolOptionOption { return MapBoolOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapStringOption(f func(Float32List) StringOption) StringOptionOption { return MapStringOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapIntOption(f func(Float32List) IntOption) IntOptionOption { return MapIntOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt8Option(f func(Float32List) Int8Option) Int8OptionOption { return MapInt8OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt16Option(f func(Float32List) Int16Option) Int16OptionOption { return MapInt16OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt32Option(f func(Float32List) Int32Option) Int32OptionOption { return MapInt32OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt64Option(f func(Float32List) Int64Option) Int64OptionOption { return MapInt64OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintOption(f func(Float32List) UintOption) UintOptionOption { return MapUintOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint8Option(f func(Float32List) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint16Option(f func(Float32List) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint32Option(f func(Float32List) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint64Option(f func(Float32List) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintptrOption(f func(Float32List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapByteOption(f func(Float32List) ByteOption) ByteOptionOption { return MapByteOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapRuneOption(f func(Float32List) RuneOption) RuneOptionOption { return MapRuneOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat32Option(f func(Float32List) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat64Option(f func(Float32List) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex64Option(f func(Float32List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex128Option(f func(Float32List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapAnyOption(f func(Float32List) AnyOption) AnyOptionOption { return MapAnyOptionToFloat32ListOption(m, f) }
func (m Float32ListOption) MapBoolArr(f func(Float32List) []bool) BoolArrOption { return MapBoolArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapStringArr(f func(Float32List) []string) StringArrOption { return MapStringArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapIntArr(f func(Float32List) []int) IntArrOption { return MapIntArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt8Arr(f func(Float32List) []int8) Int8ArrOption { return MapInt8ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt16Arr(f func(Float32List) []int16) Int16ArrOption { return MapInt16ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt32Arr(f func(Float32List) []int32) Int32ArrOption { return MapInt32ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt64Arr(f func(Float32List) []int64) Int64ArrOption { return MapInt64ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintArr(f func(Float32List) []uint) UintArrOption { return MapUintArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint8Arr(f func(Float32List) []uint8) Uint8ArrOption { return MapUint8ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint16Arr(f func(Float32List) []uint16) Uint16ArrOption { return MapUint16ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint32Arr(f func(Float32List) []uint32) Uint32ArrOption { return MapUint32ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint64Arr(f func(Float32List) []uint64) Uint64ArrOption { return MapUint64ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintptrArr(f func(Float32List) []uintptr) UintptrArrOption { return MapUintptrArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapByteArr(f func(Float32List) []byte) ByteArrOption { return MapByteArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapRuneArr(f func(Float32List) []rune) RuneArrOption { return MapRuneArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat32Arr(f func(Float32List) []float32) Float32ArrOption { return MapFloat32ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat64Arr(f func(Float32List) []float64) Float64ArrOption { return MapFloat64ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex64Arr(f func(Float32List) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex128Arr(f func(Float32List) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapAnyArr(f func(Float32List) []Any) AnyArrOption { return MapAnyArrToFloat32ListOption(m, f) }
func (m Float32ListOption) MapBoolList(f func(Float32List) BoolList) BoolListOption { return MapBoolListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapStringList(f func(Float32List) StringList) StringListOption { return MapStringListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapIntList(f func(Float32List) IntList) IntListOption { return MapIntListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt8List(f func(Float32List) Int8List) Int8ListOption { return MapInt8ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt16List(f func(Float32List) Int16List) Int16ListOption { return MapInt16ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt32List(f func(Float32List) Int32List) Int32ListOption { return MapInt32ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapInt64List(f func(Float32List) Int64List) Int64ListOption { return MapInt64ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintList(f func(Float32List) UintList) UintListOption { return MapUintListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint8List(f func(Float32List) Uint8List) Uint8ListOption { return MapUint8ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint16List(f func(Float32List) Uint16List) Uint16ListOption { return MapUint16ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint32List(f func(Float32List) Uint32List) Uint32ListOption { return MapUint32ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUint64List(f func(Float32List) Uint64List) Uint64ListOption { return MapUint64ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapUintptrList(f func(Float32List) UintptrList) UintptrListOption { return MapUintptrListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapByteList(f func(Float32List) ByteList) ByteListOption { return MapByteListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapRuneList(f func(Float32List) RuneList) RuneListOption { return MapRuneListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat32List(f func(Float32List) Float32List) Float32ListOption { return MapFloat32ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapFloat64List(f func(Float32List) Float64List) Float64ListOption { return MapFloat64ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex64List(f func(Float32List) Complex64List) Complex64ListOption { return MapComplex64ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapComplex128List(f func(Float32List) Complex128List) Complex128ListOption { return MapComplex128ListToFloat32ListOption(m, f) }
func (m Float32ListOption) MapAnyList(f func(Float32List) AnyList) AnyListOption { return MapAnyListToFloat32ListOption(m, f) }
func (m Float64ListOption) MapBool(f func(Float64List) bool) BoolOption { return MapBoolToFloat64ListOption(m, f) }
func (m Float64ListOption) MapString(f func(Float64List) string) StringOption { return MapStringToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt(f func(Float64List) int) IntOption { return MapIntToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt8(f func(Float64List) int8) Int8Option { return MapInt8ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt16(f func(Float64List) int16) Int16Option { return MapInt16ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt32(f func(Float64List) int32) Int32Option { return MapInt32ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt64(f func(Float64List) int64) Int64Option { return MapInt64ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint(f func(Float64List) uint) UintOption { return MapUintToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint8(f func(Float64List) uint8) Uint8Option { return MapUint8ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint16(f func(Float64List) uint16) Uint16Option { return MapUint16ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint32(f func(Float64List) uint32) Uint32Option { return MapUint32ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint64(f func(Float64List) uint64) Uint64Option { return MapUint64ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintptr(f func(Float64List) uintptr) UintptrOption { return MapUintptrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapByte(f func(Float64List) byte) ByteOption { return MapByteToFloat64ListOption(m, f) }
func (m Float64ListOption) MapRune(f func(Float64List) rune) RuneOption { return MapRuneToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat32(f func(Float64List) float32) Float32Option { return MapFloat32ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat64(f func(Float64List) float64) Float64Option { return MapFloat64ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex64(f func(Float64List) complex64) Complex64Option { return MapComplex64ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex128(f func(Float64List) complex128) Complex128Option { return MapComplex128ToFloat64ListOption(m, f) }
func (m Float64ListOption) MapAny(f func(Float64List) Any) AnyOption { return MapAnyToFloat64ListOption(m, f) }
func (m Float64ListOption) MapBoolOption(f func(Float64List) BoolOption) BoolOptionOption { return MapBoolOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapStringOption(f func(Float64List) StringOption) StringOptionOption { return MapStringOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapIntOption(f func(Float64List) IntOption) IntOptionOption { return MapIntOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt8Option(f func(Float64List) Int8Option) Int8OptionOption { return MapInt8OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt16Option(f func(Float64List) Int16Option) Int16OptionOption { return MapInt16OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt32Option(f func(Float64List) Int32Option) Int32OptionOption { return MapInt32OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt64Option(f func(Float64List) Int64Option) Int64OptionOption { return MapInt64OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintOption(f func(Float64List) UintOption) UintOptionOption { return MapUintOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint8Option(f func(Float64List) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint16Option(f func(Float64List) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint32Option(f func(Float64List) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint64Option(f func(Float64List) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintptrOption(f func(Float64List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapByteOption(f func(Float64List) ByteOption) ByteOptionOption { return MapByteOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapRuneOption(f func(Float64List) RuneOption) RuneOptionOption { return MapRuneOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat32Option(f func(Float64List) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat64Option(f func(Float64List) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex64Option(f func(Float64List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex128Option(f func(Float64List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapAnyOption(f func(Float64List) AnyOption) AnyOptionOption { return MapAnyOptionToFloat64ListOption(m, f) }
func (m Float64ListOption) MapBoolArr(f func(Float64List) []bool) BoolArrOption { return MapBoolArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapStringArr(f func(Float64List) []string) StringArrOption { return MapStringArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapIntArr(f func(Float64List) []int) IntArrOption { return MapIntArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt8Arr(f func(Float64List) []int8) Int8ArrOption { return MapInt8ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt16Arr(f func(Float64List) []int16) Int16ArrOption { return MapInt16ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt32Arr(f func(Float64List) []int32) Int32ArrOption { return MapInt32ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt64Arr(f func(Float64List) []int64) Int64ArrOption { return MapInt64ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintArr(f func(Float64List) []uint) UintArrOption { return MapUintArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint8Arr(f func(Float64List) []uint8) Uint8ArrOption { return MapUint8ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint16Arr(f func(Float64List) []uint16) Uint16ArrOption { return MapUint16ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint32Arr(f func(Float64List) []uint32) Uint32ArrOption { return MapUint32ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint64Arr(f func(Float64List) []uint64) Uint64ArrOption { return MapUint64ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintptrArr(f func(Float64List) []uintptr) UintptrArrOption { return MapUintptrArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapByteArr(f func(Float64List) []byte) ByteArrOption { return MapByteArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapRuneArr(f func(Float64List) []rune) RuneArrOption { return MapRuneArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat32Arr(f func(Float64List) []float32) Float32ArrOption { return MapFloat32ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat64Arr(f func(Float64List) []float64) Float64ArrOption { return MapFloat64ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex64Arr(f func(Float64List) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex128Arr(f func(Float64List) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapAnyArr(f func(Float64List) []Any) AnyArrOption { return MapAnyArrToFloat64ListOption(m, f) }
func (m Float64ListOption) MapBoolList(f func(Float64List) BoolList) BoolListOption { return MapBoolListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapStringList(f func(Float64List) StringList) StringListOption { return MapStringListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapIntList(f func(Float64List) IntList) IntListOption { return MapIntListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt8List(f func(Float64List) Int8List) Int8ListOption { return MapInt8ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt16List(f func(Float64List) Int16List) Int16ListOption { return MapInt16ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt32List(f func(Float64List) Int32List) Int32ListOption { return MapInt32ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapInt64List(f func(Float64List) Int64List) Int64ListOption { return MapInt64ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintList(f func(Float64List) UintList) UintListOption { return MapUintListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint8List(f func(Float64List) Uint8List) Uint8ListOption { return MapUint8ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint16List(f func(Float64List) Uint16List) Uint16ListOption { return MapUint16ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint32List(f func(Float64List) Uint32List) Uint32ListOption { return MapUint32ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUint64List(f func(Float64List) Uint64List) Uint64ListOption { return MapUint64ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapUintptrList(f func(Float64List) UintptrList) UintptrListOption { return MapUintptrListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapByteList(f func(Float64List) ByteList) ByteListOption { return MapByteListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapRuneList(f func(Float64List) RuneList) RuneListOption { return MapRuneListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat32List(f func(Float64List) Float32List) Float32ListOption { return MapFloat32ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapFloat64List(f func(Float64List) Float64List) Float64ListOption { return MapFloat64ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex64List(f func(Float64List) Complex64List) Complex64ListOption { return MapComplex64ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapComplex128List(f func(Float64List) Complex128List) Complex128ListOption { return MapComplex128ListToFloat64ListOption(m, f) }
func (m Float64ListOption) MapAnyList(f func(Float64List) AnyList) AnyListOption { return MapAnyListToFloat64ListOption(m, f) }
func (m Complex64ListOption) MapBool(f func(Complex64List) bool) BoolOption { return MapBoolToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapString(f func(Complex64List) string) StringOption { return MapStringToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt(f func(Complex64List) int) IntOption { return MapIntToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt8(f func(Complex64List) int8) Int8Option { return MapInt8ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt16(f func(Complex64List) int16) Int16Option { return MapInt16ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt32(f func(Complex64List) int32) Int32Option { return MapInt32ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt64(f func(Complex64List) int64) Int64Option { return MapInt64ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint(f func(Complex64List) uint) UintOption { return MapUintToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint8(f func(Complex64List) uint8) Uint8Option { return MapUint8ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint16(f func(Complex64List) uint16) Uint16Option { return MapUint16ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint32(f func(Complex64List) uint32) Uint32Option { return MapUint32ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint64(f func(Complex64List) uint64) Uint64Option { return MapUint64ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintptr(f func(Complex64List) uintptr) UintptrOption { return MapUintptrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapByte(f func(Complex64List) byte) ByteOption { return MapByteToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapRune(f func(Complex64List) rune) RuneOption { return MapRuneToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat32(f func(Complex64List) float32) Float32Option { return MapFloat32ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat64(f func(Complex64List) float64) Float64Option { return MapFloat64ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex64(f func(Complex64List) complex64) Complex64Option { return MapComplex64ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex128(f func(Complex64List) complex128) Complex128Option { return MapComplex128ToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapAny(f func(Complex64List) Any) AnyOption { return MapAnyToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapBoolOption(f func(Complex64List) BoolOption) BoolOptionOption { return MapBoolOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapStringOption(f func(Complex64List) StringOption) StringOptionOption { return MapStringOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapIntOption(f func(Complex64List) IntOption) IntOptionOption { return MapIntOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt8Option(f func(Complex64List) Int8Option) Int8OptionOption { return MapInt8OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt16Option(f func(Complex64List) Int16Option) Int16OptionOption { return MapInt16OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt32Option(f func(Complex64List) Int32Option) Int32OptionOption { return MapInt32OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt64Option(f func(Complex64List) Int64Option) Int64OptionOption { return MapInt64OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintOption(f func(Complex64List) UintOption) UintOptionOption { return MapUintOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint8Option(f func(Complex64List) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint16Option(f func(Complex64List) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint32Option(f func(Complex64List) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint64Option(f func(Complex64List) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintptrOption(f func(Complex64List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapByteOption(f func(Complex64List) ByteOption) ByteOptionOption { return MapByteOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapRuneOption(f func(Complex64List) RuneOption) RuneOptionOption { return MapRuneOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat32Option(f func(Complex64List) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat64Option(f func(Complex64List) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex64Option(f func(Complex64List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex128Option(f func(Complex64List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapAnyOption(f func(Complex64List) AnyOption) AnyOptionOption { return MapAnyOptionToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapBoolArr(f func(Complex64List) []bool) BoolArrOption { return MapBoolArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapStringArr(f func(Complex64List) []string) StringArrOption { return MapStringArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapIntArr(f func(Complex64List) []int) IntArrOption { return MapIntArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt8Arr(f func(Complex64List) []int8) Int8ArrOption { return MapInt8ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt16Arr(f func(Complex64List) []int16) Int16ArrOption { return MapInt16ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt32Arr(f func(Complex64List) []int32) Int32ArrOption { return MapInt32ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt64Arr(f func(Complex64List) []int64) Int64ArrOption { return MapInt64ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintArr(f func(Complex64List) []uint) UintArrOption { return MapUintArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint8Arr(f func(Complex64List) []uint8) Uint8ArrOption { return MapUint8ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint16Arr(f func(Complex64List) []uint16) Uint16ArrOption { return MapUint16ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint32Arr(f func(Complex64List) []uint32) Uint32ArrOption { return MapUint32ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint64Arr(f func(Complex64List) []uint64) Uint64ArrOption { return MapUint64ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintptrArr(f func(Complex64List) []uintptr) UintptrArrOption { return MapUintptrArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapByteArr(f func(Complex64List) []byte) ByteArrOption { return MapByteArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapRuneArr(f func(Complex64List) []rune) RuneArrOption { return MapRuneArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat32Arr(f func(Complex64List) []float32) Float32ArrOption { return MapFloat32ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat64Arr(f func(Complex64List) []float64) Float64ArrOption { return MapFloat64ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex64Arr(f func(Complex64List) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex128Arr(f func(Complex64List) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapAnyArr(f func(Complex64List) []Any) AnyArrOption { return MapAnyArrToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapBoolList(f func(Complex64List) BoolList) BoolListOption { return MapBoolListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapStringList(f func(Complex64List) StringList) StringListOption { return MapStringListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapIntList(f func(Complex64List) IntList) IntListOption { return MapIntListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt8List(f func(Complex64List) Int8List) Int8ListOption { return MapInt8ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt16List(f func(Complex64List) Int16List) Int16ListOption { return MapInt16ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt32List(f func(Complex64List) Int32List) Int32ListOption { return MapInt32ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapInt64List(f func(Complex64List) Int64List) Int64ListOption { return MapInt64ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintList(f func(Complex64List) UintList) UintListOption { return MapUintListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint8List(f func(Complex64List) Uint8List) Uint8ListOption { return MapUint8ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint16List(f func(Complex64List) Uint16List) Uint16ListOption { return MapUint16ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint32List(f func(Complex64List) Uint32List) Uint32ListOption { return MapUint32ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUint64List(f func(Complex64List) Uint64List) Uint64ListOption { return MapUint64ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapUintptrList(f func(Complex64List) UintptrList) UintptrListOption { return MapUintptrListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapByteList(f func(Complex64List) ByteList) ByteListOption { return MapByteListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapRuneList(f func(Complex64List) RuneList) RuneListOption { return MapRuneListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat32List(f func(Complex64List) Float32List) Float32ListOption { return MapFloat32ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapFloat64List(f func(Complex64List) Float64List) Float64ListOption { return MapFloat64ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex64List(f func(Complex64List) Complex64List) Complex64ListOption { return MapComplex64ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapComplex128List(f func(Complex64List) Complex128List) Complex128ListOption { return MapComplex128ListToComplex64ListOption(m, f) }
func (m Complex64ListOption) MapAnyList(f func(Complex64List) AnyList) AnyListOption { return MapAnyListToComplex64ListOption(m, f) }
func (m Complex128ListOption) MapBool(f func(Complex128List) bool) BoolOption { return MapBoolToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapString(f func(Complex128List) string) StringOption { return MapStringToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt(f func(Complex128List) int) IntOption { return MapIntToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt8(f func(Complex128List) int8) Int8Option { return MapInt8ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt16(f func(Complex128List) int16) Int16Option { return MapInt16ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt32(f func(Complex128List) int32) Int32Option { return MapInt32ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt64(f func(Complex128List) int64) Int64Option { return MapInt64ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint(f func(Complex128List) uint) UintOption { return MapUintToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint8(f func(Complex128List) uint8) Uint8Option { return MapUint8ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint16(f func(Complex128List) uint16) Uint16Option { return MapUint16ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint32(f func(Complex128List) uint32) Uint32Option { return MapUint32ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint64(f func(Complex128List) uint64) Uint64Option { return MapUint64ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintptr(f func(Complex128List) uintptr) UintptrOption { return MapUintptrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapByte(f func(Complex128List) byte) ByteOption { return MapByteToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapRune(f func(Complex128List) rune) RuneOption { return MapRuneToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat32(f func(Complex128List) float32) Float32Option { return MapFloat32ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat64(f func(Complex128List) float64) Float64Option { return MapFloat64ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex64(f func(Complex128List) complex64) Complex64Option { return MapComplex64ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex128(f func(Complex128List) complex128) Complex128Option { return MapComplex128ToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapAny(f func(Complex128List) Any) AnyOption { return MapAnyToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapBoolOption(f func(Complex128List) BoolOption) BoolOptionOption { return MapBoolOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapStringOption(f func(Complex128List) StringOption) StringOptionOption { return MapStringOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapIntOption(f func(Complex128List) IntOption) IntOptionOption { return MapIntOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt8Option(f func(Complex128List) Int8Option) Int8OptionOption { return MapInt8OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt16Option(f func(Complex128List) Int16Option) Int16OptionOption { return MapInt16OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt32Option(f func(Complex128List) Int32Option) Int32OptionOption { return MapInt32OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt64Option(f func(Complex128List) Int64Option) Int64OptionOption { return MapInt64OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintOption(f func(Complex128List) UintOption) UintOptionOption { return MapUintOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint8Option(f func(Complex128List) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint16Option(f func(Complex128List) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint32Option(f func(Complex128List) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint64Option(f func(Complex128List) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintptrOption(f func(Complex128List) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapByteOption(f func(Complex128List) ByteOption) ByteOptionOption { return MapByteOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapRuneOption(f func(Complex128List) RuneOption) RuneOptionOption { return MapRuneOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat32Option(f func(Complex128List) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat64Option(f func(Complex128List) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex64Option(f func(Complex128List) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex128Option(f func(Complex128List) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapAnyOption(f func(Complex128List) AnyOption) AnyOptionOption { return MapAnyOptionToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapBoolArr(f func(Complex128List) []bool) BoolArrOption { return MapBoolArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapStringArr(f func(Complex128List) []string) StringArrOption { return MapStringArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapIntArr(f func(Complex128List) []int) IntArrOption { return MapIntArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt8Arr(f func(Complex128List) []int8) Int8ArrOption { return MapInt8ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt16Arr(f func(Complex128List) []int16) Int16ArrOption { return MapInt16ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt32Arr(f func(Complex128List) []int32) Int32ArrOption { return MapInt32ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt64Arr(f func(Complex128List) []int64) Int64ArrOption { return MapInt64ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintArr(f func(Complex128List) []uint) UintArrOption { return MapUintArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint8Arr(f func(Complex128List) []uint8) Uint8ArrOption { return MapUint8ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint16Arr(f func(Complex128List) []uint16) Uint16ArrOption { return MapUint16ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint32Arr(f func(Complex128List) []uint32) Uint32ArrOption { return MapUint32ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint64Arr(f func(Complex128List) []uint64) Uint64ArrOption { return MapUint64ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintptrArr(f func(Complex128List) []uintptr) UintptrArrOption { return MapUintptrArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapByteArr(f func(Complex128List) []byte) ByteArrOption { return MapByteArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapRuneArr(f func(Complex128List) []rune) RuneArrOption { return MapRuneArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat32Arr(f func(Complex128List) []float32) Float32ArrOption { return MapFloat32ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat64Arr(f func(Complex128List) []float64) Float64ArrOption { return MapFloat64ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex64Arr(f func(Complex128List) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex128Arr(f func(Complex128List) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapAnyArr(f func(Complex128List) []Any) AnyArrOption { return MapAnyArrToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapBoolList(f func(Complex128List) BoolList) BoolListOption { return MapBoolListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapStringList(f func(Complex128List) StringList) StringListOption { return MapStringListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapIntList(f func(Complex128List) IntList) IntListOption { return MapIntListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt8List(f func(Complex128List) Int8List) Int8ListOption { return MapInt8ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt16List(f func(Complex128List) Int16List) Int16ListOption { return MapInt16ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt32List(f func(Complex128List) Int32List) Int32ListOption { return MapInt32ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapInt64List(f func(Complex128List) Int64List) Int64ListOption { return MapInt64ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintList(f func(Complex128List) UintList) UintListOption { return MapUintListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint8List(f func(Complex128List) Uint8List) Uint8ListOption { return MapUint8ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint16List(f func(Complex128List) Uint16List) Uint16ListOption { return MapUint16ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint32List(f func(Complex128List) Uint32List) Uint32ListOption { return MapUint32ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUint64List(f func(Complex128List) Uint64List) Uint64ListOption { return MapUint64ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapUintptrList(f func(Complex128List) UintptrList) UintptrListOption { return MapUintptrListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapByteList(f func(Complex128List) ByteList) ByteListOption { return MapByteListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapRuneList(f func(Complex128List) RuneList) RuneListOption { return MapRuneListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat32List(f func(Complex128List) Float32List) Float32ListOption { return MapFloat32ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapFloat64List(f func(Complex128List) Float64List) Float64ListOption { return MapFloat64ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex64List(f func(Complex128List) Complex64List) Complex64ListOption { return MapComplex64ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapComplex128List(f func(Complex128List) Complex128List) Complex128ListOption { return MapComplex128ListToComplex128ListOption(m, f) }
func (m Complex128ListOption) MapAnyList(f func(Complex128List) AnyList) AnyListOption { return MapAnyListToComplex128ListOption(m, f) }
func (m AnyListOption) MapBool(f func(AnyList) bool) BoolOption { return MapBoolToAnyListOption(m, f) }
func (m AnyListOption) MapString(f func(AnyList) string) StringOption { return MapStringToAnyListOption(m, f) }
func (m AnyListOption) MapInt(f func(AnyList) int) IntOption { return MapIntToAnyListOption(m, f) }
func (m AnyListOption) MapInt8(f func(AnyList) int8) Int8Option { return MapInt8ToAnyListOption(m, f) }
func (m AnyListOption) MapInt16(f func(AnyList) int16) Int16Option { return MapInt16ToAnyListOption(m, f) }
func (m AnyListOption) MapInt32(f func(AnyList) int32) Int32Option { return MapInt32ToAnyListOption(m, f) }
func (m AnyListOption) MapInt64(f func(AnyList) int64) Int64Option { return MapInt64ToAnyListOption(m, f) }
func (m AnyListOption) MapUint(f func(AnyList) uint) UintOption { return MapUintToAnyListOption(m, f) }
func (m AnyListOption) MapUint8(f func(AnyList) uint8) Uint8Option { return MapUint8ToAnyListOption(m, f) }
func (m AnyListOption) MapUint16(f func(AnyList) uint16) Uint16Option { return MapUint16ToAnyListOption(m, f) }
func (m AnyListOption) MapUint32(f func(AnyList) uint32) Uint32Option { return MapUint32ToAnyListOption(m, f) }
func (m AnyListOption) MapUint64(f func(AnyList) uint64) Uint64Option { return MapUint64ToAnyListOption(m, f) }
func (m AnyListOption) MapUintptr(f func(AnyList) uintptr) UintptrOption { return MapUintptrToAnyListOption(m, f) }
func (m AnyListOption) MapByte(f func(AnyList) byte) ByteOption { return MapByteToAnyListOption(m, f) }
func (m AnyListOption) MapRune(f func(AnyList) rune) RuneOption { return MapRuneToAnyListOption(m, f) }
func (m AnyListOption) MapFloat32(f func(AnyList) float32) Float32Option { return MapFloat32ToAnyListOption(m, f) }
func (m AnyListOption) MapFloat64(f func(AnyList) float64) Float64Option { return MapFloat64ToAnyListOption(m, f) }
func (m AnyListOption) MapComplex64(f func(AnyList) complex64) Complex64Option { return MapComplex64ToAnyListOption(m, f) }
func (m AnyListOption) MapComplex128(f func(AnyList) complex128) Complex128Option { return MapComplex128ToAnyListOption(m, f) }
func (m AnyListOption) MapAny(f func(AnyList) Any) AnyOption { return MapAnyToAnyListOption(m, f) }
func (m AnyListOption) MapBoolOption(f func(AnyList) BoolOption) BoolOptionOption { return MapBoolOptionToAnyListOption(m, f) }
func (m AnyListOption) MapStringOption(f func(AnyList) StringOption) StringOptionOption { return MapStringOptionToAnyListOption(m, f) }
func (m AnyListOption) MapIntOption(f func(AnyList) IntOption) IntOptionOption { return MapIntOptionToAnyListOption(m, f) }
func (m AnyListOption) MapInt8Option(f func(AnyList) Int8Option) Int8OptionOption { return MapInt8OptionToAnyListOption(m, f) }
func (m AnyListOption) MapInt16Option(f func(AnyList) Int16Option) Int16OptionOption { return MapInt16OptionToAnyListOption(m, f) }
func (m AnyListOption) MapInt32Option(f func(AnyList) Int32Option) Int32OptionOption { return MapInt32OptionToAnyListOption(m, f) }
func (m AnyListOption) MapInt64Option(f func(AnyList) Int64Option) Int64OptionOption { return MapInt64OptionToAnyListOption(m, f) }
func (m AnyListOption) MapUintOption(f func(AnyList) UintOption) UintOptionOption { return MapUintOptionToAnyListOption(m, f) }
func (m AnyListOption) MapUint8Option(f func(AnyList) Uint8Option) Uint8OptionOption { return MapUint8OptionToAnyListOption(m, f) }
func (m AnyListOption) MapUint16Option(f func(AnyList) Uint16Option) Uint16OptionOption { return MapUint16OptionToAnyListOption(m, f) }
func (m AnyListOption) MapUint32Option(f func(AnyList) Uint32Option) Uint32OptionOption { return MapUint32OptionToAnyListOption(m, f) }
func (m AnyListOption) MapUint64Option(f func(AnyList) Uint64Option) Uint64OptionOption { return MapUint64OptionToAnyListOption(m, f) }
func (m AnyListOption) MapUintptrOption(f func(AnyList) UintptrOption) UintptrOptionOption { return MapUintptrOptionToAnyListOption(m, f) }
func (m AnyListOption) MapByteOption(f func(AnyList) ByteOption) ByteOptionOption { return MapByteOptionToAnyListOption(m, f) }
func (m AnyListOption) MapRuneOption(f func(AnyList) RuneOption) RuneOptionOption { return MapRuneOptionToAnyListOption(m, f) }
func (m AnyListOption) MapFloat32Option(f func(AnyList) Float32Option) Float32OptionOption { return MapFloat32OptionToAnyListOption(m, f) }
func (m AnyListOption) MapFloat64Option(f func(AnyList) Float64Option) Float64OptionOption { return MapFloat64OptionToAnyListOption(m, f) }
func (m AnyListOption) MapComplex64Option(f func(AnyList) Complex64Option) Complex64OptionOption { return MapComplex64OptionToAnyListOption(m, f) }
func (m AnyListOption) MapComplex128Option(f func(AnyList) Complex128Option) Complex128OptionOption { return MapComplex128OptionToAnyListOption(m, f) }
func (m AnyListOption) MapAnyOption(f func(AnyList) AnyOption) AnyOptionOption { return MapAnyOptionToAnyListOption(m, f) }
func (m AnyListOption) MapBoolArr(f func(AnyList) []bool) BoolArrOption { return MapBoolArrToAnyListOption(m, f) }
func (m AnyListOption) MapStringArr(f func(AnyList) []string) StringArrOption { return MapStringArrToAnyListOption(m, f) }
func (m AnyListOption) MapIntArr(f func(AnyList) []int) IntArrOption { return MapIntArrToAnyListOption(m, f) }
func (m AnyListOption) MapInt8Arr(f func(AnyList) []int8) Int8ArrOption { return MapInt8ArrToAnyListOption(m, f) }
func (m AnyListOption) MapInt16Arr(f func(AnyList) []int16) Int16ArrOption { return MapInt16ArrToAnyListOption(m, f) }
func (m AnyListOption) MapInt32Arr(f func(AnyList) []int32) Int32ArrOption { return MapInt32ArrToAnyListOption(m, f) }
func (m AnyListOption) MapInt64Arr(f func(AnyList) []int64) Int64ArrOption { return MapInt64ArrToAnyListOption(m, f) }
func (m AnyListOption) MapUintArr(f func(AnyList) []uint) UintArrOption { return MapUintArrToAnyListOption(m, f) }
func (m AnyListOption) MapUint8Arr(f func(AnyList) []uint8) Uint8ArrOption { return MapUint8ArrToAnyListOption(m, f) }
func (m AnyListOption) MapUint16Arr(f func(AnyList) []uint16) Uint16ArrOption { return MapUint16ArrToAnyListOption(m, f) }
func (m AnyListOption) MapUint32Arr(f func(AnyList) []uint32) Uint32ArrOption { return MapUint32ArrToAnyListOption(m, f) }
func (m AnyListOption) MapUint64Arr(f func(AnyList) []uint64) Uint64ArrOption { return MapUint64ArrToAnyListOption(m, f) }
func (m AnyListOption) MapUintptrArr(f func(AnyList) []uintptr) UintptrArrOption { return MapUintptrArrToAnyListOption(m, f) }
func (m AnyListOption) MapByteArr(f func(AnyList) []byte) ByteArrOption { return MapByteArrToAnyListOption(m, f) }
func (m AnyListOption) MapRuneArr(f func(AnyList) []rune) RuneArrOption { return MapRuneArrToAnyListOption(m, f) }
func (m AnyListOption) MapFloat32Arr(f func(AnyList) []float32) Float32ArrOption { return MapFloat32ArrToAnyListOption(m, f) }
func (m AnyListOption) MapFloat64Arr(f func(AnyList) []float64) Float64ArrOption { return MapFloat64ArrToAnyListOption(m, f) }
func (m AnyListOption) MapComplex64Arr(f func(AnyList) []complex64) Complex64ArrOption { return MapComplex64ArrToAnyListOption(m, f) }
func (m AnyListOption) MapComplex128Arr(f func(AnyList) []complex128) Complex128ArrOption { return MapComplex128ArrToAnyListOption(m, f) }
func (m AnyListOption) MapAnyArr(f func(AnyList) []Any) AnyArrOption { return MapAnyArrToAnyListOption(m, f) }
func (m AnyListOption) MapBoolList(f func(AnyList) BoolList) BoolListOption { return MapBoolListToAnyListOption(m, f) }
func (m AnyListOption) MapStringList(f func(AnyList) StringList) StringListOption { return MapStringListToAnyListOption(m, f) }
func (m AnyListOption) MapIntList(f func(AnyList) IntList) IntListOption { return MapIntListToAnyListOption(m, f) }
func (m AnyListOption) MapInt8List(f func(AnyList) Int8List) Int8ListOption { return MapInt8ListToAnyListOption(m, f) }
func (m AnyListOption) MapInt16List(f func(AnyList) Int16List) Int16ListOption { return MapInt16ListToAnyListOption(m, f) }
func (m AnyListOption) MapInt32List(f func(AnyList) Int32List) Int32ListOption { return MapInt32ListToAnyListOption(m, f) }
func (m AnyListOption) MapInt64List(f func(AnyList) Int64List) Int64ListOption { return MapInt64ListToAnyListOption(m, f) }
func (m AnyListOption) MapUintList(f func(AnyList) UintList) UintListOption { return MapUintListToAnyListOption(m, f) }
func (m AnyListOption) MapUint8List(f func(AnyList) Uint8List) Uint8ListOption { return MapUint8ListToAnyListOption(m, f) }
func (m AnyListOption) MapUint16List(f func(AnyList) Uint16List) Uint16ListOption { return MapUint16ListToAnyListOption(m, f) }
func (m AnyListOption) MapUint32List(f func(AnyList) Uint32List) Uint32ListOption { return MapUint32ListToAnyListOption(m, f) }
func (m AnyListOption) MapUint64List(f func(AnyList) Uint64List) Uint64ListOption { return MapUint64ListToAnyListOption(m, f) }
func (m AnyListOption) MapUintptrList(f func(AnyList) UintptrList) UintptrListOption { return MapUintptrListToAnyListOption(m, f) }
func (m AnyListOption) MapByteList(f func(AnyList) ByteList) ByteListOption { return MapByteListToAnyListOption(m, f) }
func (m AnyListOption) MapRuneList(f func(AnyList) RuneList) RuneListOption { return MapRuneListToAnyListOption(m, f) }
func (m AnyListOption) MapFloat32List(f func(AnyList) Float32List) Float32ListOption { return MapFloat32ListToAnyListOption(m, f) }
func (m AnyListOption) MapFloat64List(f func(AnyList) Float64List) Float64ListOption { return MapFloat64ListToAnyListOption(m, f) }
func (m AnyListOption) MapComplex64List(f func(AnyList) Complex64List) Complex64ListOption { return MapComplex64ListToAnyListOption(m, f) }
func (m AnyListOption) MapComplex128List(f func(AnyList) Complex128List) Complex128ListOption { return MapComplex128ListToAnyListOption(m, f) }
func (m AnyListOption) MapAnyList(f func(AnyList) AnyList) AnyListOption { return MapAnyListToAnyListOption(m, f) }
func (m BoolOptionOption) MapBool(f func(BoolOption) bool) BoolOption { return MapBoolToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapString(f func(BoolOption) string) StringOption { return MapStringToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt(f func(BoolOption) int) IntOption { return MapIntToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt8(f func(BoolOption) int8) Int8Option { return MapInt8ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt16(f func(BoolOption) int16) Int16Option { return MapInt16ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt32(f func(BoolOption) int32) Int32Option { return MapInt32ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt64(f func(BoolOption) int64) Int64Option { return MapInt64ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint(f func(BoolOption) uint) UintOption { return MapUintToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint8(f func(BoolOption) uint8) Uint8Option { return MapUint8ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint16(f func(BoolOption) uint16) Uint16Option { return MapUint16ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint32(f func(BoolOption) uint32) Uint32Option { return MapUint32ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint64(f func(BoolOption) uint64) Uint64Option { return MapUint64ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintptr(f func(BoolOption) uintptr) UintptrOption { return MapUintptrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapByte(f func(BoolOption) byte) ByteOption { return MapByteToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapRune(f func(BoolOption) rune) RuneOption { return MapRuneToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat32(f func(BoolOption) float32) Float32Option { return MapFloat32ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat64(f func(BoolOption) float64) Float64Option { return MapFloat64ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex64(f func(BoolOption) complex64) Complex64Option { return MapComplex64ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex128(f func(BoolOption) complex128) Complex128Option { return MapComplex128ToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapAny(f func(BoolOption) Any) AnyOption { return MapAnyToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapBoolOption(f func(BoolOption) BoolOption) BoolOptionOption { return MapBoolOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapStringOption(f func(BoolOption) StringOption) StringOptionOption { return MapStringOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapIntOption(f func(BoolOption) IntOption) IntOptionOption { return MapIntOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt8Option(f func(BoolOption) Int8Option) Int8OptionOption { return MapInt8OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt16Option(f func(BoolOption) Int16Option) Int16OptionOption { return MapInt16OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt32Option(f func(BoolOption) Int32Option) Int32OptionOption { return MapInt32OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt64Option(f func(BoolOption) Int64Option) Int64OptionOption { return MapInt64OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintOption(f func(BoolOption) UintOption) UintOptionOption { return MapUintOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint8Option(f func(BoolOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint16Option(f func(BoolOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint32Option(f func(BoolOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint64Option(f func(BoolOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintptrOption(f func(BoolOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapByteOption(f func(BoolOption) ByteOption) ByteOptionOption { return MapByteOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapRuneOption(f func(BoolOption) RuneOption) RuneOptionOption { return MapRuneOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat32Option(f func(BoolOption) Float32Option) Float32OptionOption { return MapFloat32OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat64Option(f func(BoolOption) Float64Option) Float64OptionOption { return MapFloat64OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex64Option(f func(BoolOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex128Option(f func(BoolOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapAnyOption(f func(BoolOption) AnyOption) AnyOptionOption { return MapAnyOptionToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapBoolArr(f func(BoolOption) []bool) BoolArrOption { return MapBoolArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapStringArr(f func(BoolOption) []string) StringArrOption { return MapStringArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapIntArr(f func(BoolOption) []int) IntArrOption { return MapIntArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt8Arr(f func(BoolOption) []int8) Int8ArrOption { return MapInt8ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt16Arr(f func(BoolOption) []int16) Int16ArrOption { return MapInt16ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt32Arr(f func(BoolOption) []int32) Int32ArrOption { return MapInt32ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt64Arr(f func(BoolOption) []int64) Int64ArrOption { return MapInt64ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintArr(f func(BoolOption) []uint) UintArrOption { return MapUintArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint8Arr(f func(BoolOption) []uint8) Uint8ArrOption { return MapUint8ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint16Arr(f func(BoolOption) []uint16) Uint16ArrOption { return MapUint16ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint32Arr(f func(BoolOption) []uint32) Uint32ArrOption { return MapUint32ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint64Arr(f func(BoolOption) []uint64) Uint64ArrOption { return MapUint64ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintptrArr(f func(BoolOption) []uintptr) UintptrArrOption { return MapUintptrArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapByteArr(f func(BoolOption) []byte) ByteArrOption { return MapByteArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapRuneArr(f func(BoolOption) []rune) RuneArrOption { return MapRuneArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat32Arr(f func(BoolOption) []float32) Float32ArrOption { return MapFloat32ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat64Arr(f func(BoolOption) []float64) Float64ArrOption { return MapFloat64ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex64Arr(f func(BoolOption) []complex64) Complex64ArrOption { return MapComplex64ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex128Arr(f func(BoolOption) []complex128) Complex128ArrOption { return MapComplex128ArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapAnyArr(f func(BoolOption) []Any) AnyArrOption { return MapAnyArrToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapBoolList(f func(BoolOption) BoolList) BoolListOption { return MapBoolListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapStringList(f func(BoolOption) StringList) StringListOption { return MapStringListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapIntList(f func(BoolOption) IntList) IntListOption { return MapIntListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt8List(f func(BoolOption) Int8List) Int8ListOption { return MapInt8ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt16List(f func(BoolOption) Int16List) Int16ListOption { return MapInt16ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt32List(f func(BoolOption) Int32List) Int32ListOption { return MapInt32ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapInt64List(f func(BoolOption) Int64List) Int64ListOption { return MapInt64ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintList(f func(BoolOption) UintList) UintListOption { return MapUintListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint8List(f func(BoolOption) Uint8List) Uint8ListOption { return MapUint8ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint16List(f func(BoolOption) Uint16List) Uint16ListOption { return MapUint16ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint32List(f func(BoolOption) Uint32List) Uint32ListOption { return MapUint32ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUint64List(f func(BoolOption) Uint64List) Uint64ListOption { return MapUint64ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapUintptrList(f func(BoolOption) UintptrList) UintptrListOption { return MapUintptrListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapByteList(f func(BoolOption) ByteList) ByteListOption { return MapByteListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapRuneList(f func(BoolOption) RuneList) RuneListOption { return MapRuneListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat32List(f func(BoolOption) Float32List) Float32ListOption { return MapFloat32ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapFloat64List(f func(BoolOption) Float64List) Float64ListOption { return MapFloat64ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex64List(f func(BoolOption) Complex64List) Complex64ListOption { return MapComplex64ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapComplex128List(f func(BoolOption) Complex128List) Complex128ListOption { return MapComplex128ListToBoolOptionOption(m, f) }
func (m BoolOptionOption) MapAnyList(f func(BoolOption) AnyList) AnyListOption { return MapAnyListToBoolOptionOption(m, f) }
func (m StringOptionOption) MapBool(f func(StringOption) bool) BoolOption { return MapBoolToStringOptionOption(m, f) }
func (m StringOptionOption) MapString(f func(StringOption) string) StringOption { return MapStringToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt(f func(StringOption) int) IntOption { return MapIntToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt8(f func(StringOption) int8) Int8Option { return MapInt8ToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt16(f func(StringOption) int16) Int16Option { return MapInt16ToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt32(f func(StringOption) int32) Int32Option { return MapInt32ToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt64(f func(StringOption) int64) Int64Option { return MapInt64ToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint(f func(StringOption) uint) UintOption { return MapUintToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint8(f func(StringOption) uint8) Uint8Option { return MapUint8ToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint16(f func(StringOption) uint16) Uint16Option { return MapUint16ToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint32(f func(StringOption) uint32) Uint32Option { return MapUint32ToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint64(f func(StringOption) uint64) Uint64Option { return MapUint64ToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintptr(f func(StringOption) uintptr) UintptrOption { return MapUintptrToStringOptionOption(m, f) }
func (m StringOptionOption) MapByte(f func(StringOption) byte) ByteOption { return MapByteToStringOptionOption(m, f) }
func (m StringOptionOption) MapRune(f func(StringOption) rune) RuneOption { return MapRuneToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat32(f func(StringOption) float32) Float32Option { return MapFloat32ToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat64(f func(StringOption) float64) Float64Option { return MapFloat64ToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex64(f func(StringOption) complex64) Complex64Option { return MapComplex64ToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex128(f func(StringOption) complex128) Complex128Option { return MapComplex128ToStringOptionOption(m, f) }
func (m StringOptionOption) MapAny(f func(StringOption) Any) AnyOption { return MapAnyToStringOptionOption(m, f) }
func (m StringOptionOption) MapBoolOption(f func(StringOption) BoolOption) BoolOptionOption { return MapBoolOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapStringOption(f func(StringOption) StringOption) StringOptionOption { return MapStringOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapIntOption(f func(StringOption) IntOption) IntOptionOption { return MapIntOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt8Option(f func(StringOption) Int8Option) Int8OptionOption { return MapInt8OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt16Option(f func(StringOption) Int16Option) Int16OptionOption { return MapInt16OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt32Option(f func(StringOption) Int32Option) Int32OptionOption { return MapInt32OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt64Option(f func(StringOption) Int64Option) Int64OptionOption { return MapInt64OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintOption(f func(StringOption) UintOption) UintOptionOption { return MapUintOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint8Option(f func(StringOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint16Option(f func(StringOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint32Option(f func(StringOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint64Option(f func(StringOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintptrOption(f func(StringOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapByteOption(f func(StringOption) ByteOption) ByteOptionOption { return MapByteOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapRuneOption(f func(StringOption) RuneOption) RuneOptionOption { return MapRuneOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat32Option(f func(StringOption) Float32Option) Float32OptionOption { return MapFloat32OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat64Option(f func(StringOption) Float64Option) Float64OptionOption { return MapFloat64OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex64Option(f func(StringOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex128Option(f func(StringOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapAnyOption(f func(StringOption) AnyOption) AnyOptionOption { return MapAnyOptionToStringOptionOption(m, f) }
func (m StringOptionOption) MapBoolArr(f func(StringOption) []bool) BoolArrOption { return MapBoolArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapStringArr(f func(StringOption) []string) StringArrOption { return MapStringArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapIntArr(f func(StringOption) []int) IntArrOption { return MapIntArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt8Arr(f func(StringOption) []int8) Int8ArrOption { return MapInt8ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt16Arr(f func(StringOption) []int16) Int16ArrOption { return MapInt16ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt32Arr(f func(StringOption) []int32) Int32ArrOption { return MapInt32ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt64Arr(f func(StringOption) []int64) Int64ArrOption { return MapInt64ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintArr(f func(StringOption) []uint) UintArrOption { return MapUintArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint8Arr(f func(StringOption) []uint8) Uint8ArrOption { return MapUint8ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint16Arr(f func(StringOption) []uint16) Uint16ArrOption { return MapUint16ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint32Arr(f func(StringOption) []uint32) Uint32ArrOption { return MapUint32ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint64Arr(f func(StringOption) []uint64) Uint64ArrOption { return MapUint64ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintptrArr(f func(StringOption) []uintptr) UintptrArrOption { return MapUintptrArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapByteArr(f func(StringOption) []byte) ByteArrOption { return MapByteArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapRuneArr(f func(StringOption) []rune) RuneArrOption { return MapRuneArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat32Arr(f func(StringOption) []float32) Float32ArrOption { return MapFloat32ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat64Arr(f func(StringOption) []float64) Float64ArrOption { return MapFloat64ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex64Arr(f func(StringOption) []complex64) Complex64ArrOption { return MapComplex64ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex128Arr(f func(StringOption) []complex128) Complex128ArrOption { return MapComplex128ArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapAnyArr(f func(StringOption) []Any) AnyArrOption { return MapAnyArrToStringOptionOption(m, f) }
func (m StringOptionOption) MapBoolList(f func(StringOption) BoolList) BoolListOption { return MapBoolListToStringOptionOption(m, f) }
func (m StringOptionOption) MapStringList(f func(StringOption) StringList) StringListOption { return MapStringListToStringOptionOption(m, f) }
func (m StringOptionOption) MapIntList(f func(StringOption) IntList) IntListOption { return MapIntListToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt8List(f func(StringOption) Int8List) Int8ListOption { return MapInt8ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt16List(f func(StringOption) Int16List) Int16ListOption { return MapInt16ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt32List(f func(StringOption) Int32List) Int32ListOption { return MapInt32ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapInt64List(f func(StringOption) Int64List) Int64ListOption { return MapInt64ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintList(f func(StringOption) UintList) UintListOption { return MapUintListToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint8List(f func(StringOption) Uint8List) Uint8ListOption { return MapUint8ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint16List(f func(StringOption) Uint16List) Uint16ListOption { return MapUint16ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint32List(f func(StringOption) Uint32List) Uint32ListOption { return MapUint32ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapUint64List(f func(StringOption) Uint64List) Uint64ListOption { return MapUint64ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapUintptrList(f func(StringOption) UintptrList) UintptrListOption { return MapUintptrListToStringOptionOption(m, f) }
func (m StringOptionOption) MapByteList(f func(StringOption) ByteList) ByteListOption { return MapByteListToStringOptionOption(m, f) }
func (m StringOptionOption) MapRuneList(f func(StringOption) RuneList) RuneListOption { return MapRuneListToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat32List(f func(StringOption) Float32List) Float32ListOption { return MapFloat32ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapFloat64List(f func(StringOption) Float64List) Float64ListOption { return MapFloat64ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex64List(f func(StringOption) Complex64List) Complex64ListOption { return MapComplex64ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapComplex128List(f func(StringOption) Complex128List) Complex128ListOption { return MapComplex128ListToStringOptionOption(m, f) }
func (m StringOptionOption) MapAnyList(f func(StringOption) AnyList) AnyListOption { return MapAnyListToStringOptionOption(m, f) }
func (m IntOptionOption) MapBool(f func(IntOption) bool) BoolOption { return MapBoolToIntOptionOption(m, f) }
func (m IntOptionOption) MapString(f func(IntOption) string) StringOption { return MapStringToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt(f func(IntOption) int) IntOption { return MapIntToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt8(f func(IntOption) int8) Int8Option { return MapInt8ToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt16(f func(IntOption) int16) Int16Option { return MapInt16ToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt32(f func(IntOption) int32) Int32Option { return MapInt32ToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt64(f func(IntOption) int64) Int64Option { return MapInt64ToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint(f func(IntOption) uint) UintOption { return MapUintToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint8(f func(IntOption) uint8) Uint8Option { return MapUint8ToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint16(f func(IntOption) uint16) Uint16Option { return MapUint16ToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint32(f func(IntOption) uint32) Uint32Option { return MapUint32ToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint64(f func(IntOption) uint64) Uint64Option { return MapUint64ToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintptr(f func(IntOption) uintptr) UintptrOption { return MapUintptrToIntOptionOption(m, f) }
func (m IntOptionOption) MapByte(f func(IntOption) byte) ByteOption { return MapByteToIntOptionOption(m, f) }
func (m IntOptionOption) MapRune(f func(IntOption) rune) RuneOption { return MapRuneToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat32(f func(IntOption) float32) Float32Option { return MapFloat32ToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat64(f func(IntOption) float64) Float64Option { return MapFloat64ToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex64(f func(IntOption) complex64) Complex64Option { return MapComplex64ToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex128(f func(IntOption) complex128) Complex128Option { return MapComplex128ToIntOptionOption(m, f) }
func (m IntOptionOption) MapAny(f func(IntOption) Any) AnyOption { return MapAnyToIntOptionOption(m, f) }
func (m IntOptionOption) MapBoolOption(f func(IntOption) BoolOption) BoolOptionOption { return MapBoolOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapStringOption(f func(IntOption) StringOption) StringOptionOption { return MapStringOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapIntOption(f func(IntOption) IntOption) IntOptionOption { return MapIntOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt8Option(f func(IntOption) Int8Option) Int8OptionOption { return MapInt8OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt16Option(f func(IntOption) Int16Option) Int16OptionOption { return MapInt16OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt32Option(f func(IntOption) Int32Option) Int32OptionOption { return MapInt32OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt64Option(f func(IntOption) Int64Option) Int64OptionOption { return MapInt64OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintOption(f func(IntOption) UintOption) UintOptionOption { return MapUintOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint8Option(f func(IntOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint16Option(f func(IntOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint32Option(f func(IntOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint64Option(f func(IntOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintptrOption(f func(IntOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapByteOption(f func(IntOption) ByteOption) ByteOptionOption { return MapByteOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapRuneOption(f func(IntOption) RuneOption) RuneOptionOption { return MapRuneOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat32Option(f func(IntOption) Float32Option) Float32OptionOption { return MapFloat32OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat64Option(f func(IntOption) Float64Option) Float64OptionOption { return MapFloat64OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex64Option(f func(IntOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex128Option(f func(IntOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapAnyOption(f func(IntOption) AnyOption) AnyOptionOption { return MapAnyOptionToIntOptionOption(m, f) }
func (m IntOptionOption) MapBoolArr(f func(IntOption) []bool) BoolArrOption { return MapBoolArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapStringArr(f func(IntOption) []string) StringArrOption { return MapStringArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapIntArr(f func(IntOption) []int) IntArrOption { return MapIntArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt8Arr(f func(IntOption) []int8) Int8ArrOption { return MapInt8ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt16Arr(f func(IntOption) []int16) Int16ArrOption { return MapInt16ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt32Arr(f func(IntOption) []int32) Int32ArrOption { return MapInt32ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt64Arr(f func(IntOption) []int64) Int64ArrOption { return MapInt64ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintArr(f func(IntOption) []uint) UintArrOption { return MapUintArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint8Arr(f func(IntOption) []uint8) Uint8ArrOption { return MapUint8ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint16Arr(f func(IntOption) []uint16) Uint16ArrOption { return MapUint16ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint32Arr(f func(IntOption) []uint32) Uint32ArrOption { return MapUint32ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint64Arr(f func(IntOption) []uint64) Uint64ArrOption { return MapUint64ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintptrArr(f func(IntOption) []uintptr) UintptrArrOption { return MapUintptrArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapByteArr(f func(IntOption) []byte) ByteArrOption { return MapByteArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapRuneArr(f func(IntOption) []rune) RuneArrOption { return MapRuneArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat32Arr(f func(IntOption) []float32) Float32ArrOption { return MapFloat32ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat64Arr(f func(IntOption) []float64) Float64ArrOption { return MapFloat64ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex64Arr(f func(IntOption) []complex64) Complex64ArrOption { return MapComplex64ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex128Arr(f func(IntOption) []complex128) Complex128ArrOption { return MapComplex128ArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapAnyArr(f func(IntOption) []Any) AnyArrOption { return MapAnyArrToIntOptionOption(m, f) }
func (m IntOptionOption) MapBoolList(f func(IntOption) BoolList) BoolListOption { return MapBoolListToIntOptionOption(m, f) }
func (m IntOptionOption) MapStringList(f func(IntOption) StringList) StringListOption { return MapStringListToIntOptionOption(m, f) }
func (m IntOptionOption) MapIntList(f func(IntOption) IntList) IntListOption { return MapIntListToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt8List(f func(IntOption) Int8List) Int8ListOption { return MapInt8ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt16List(f func(IntOption) Int16List) Int16ListOption { return MapInt16ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt32List(f func(IntOption) Int32List) Int32ListOption { return MapInt32ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapInt64List(f func(IntOption) Int64List) Int64ListOption { return MapInt64ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintList(f func(IntOption) UintList) UintListOption { return MapUintListToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint8List(f func(IntOption) Uint8List) Uint8ListOption { return MapUint8ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint16List(f func(IntOption) Uint16List) Uint16ListOption { return MapUint16ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint32List(f func(IntOption) Uint32List) Uint32ListOption { return MapUint32ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapUint64List(f func(IntOption) Uint64List) Uint64ListOption { return MapUint64ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapUintptrList(f func(IntOption) UintptrList) UintptrListOption { return MapUintptrListToIntOptionOption(m, f) }
func (m IntOptionOption) MapByteList(f func(IntOption) ByteList) ByteListOption { return MapByteListToIntOptionOption(m, f) }
func (m IntOptionOption) MapRuneList(f func(IntOption) RuneList) RuneListOption { return MapRuneListToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat32List(f func(IntOption) Float32List) Float32ListOption { return MapFloat32ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapFloat64List(f func(IntOption) Float64List) Float64ListOption { return MapFloat64ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex64List(f func(IntOption) Complex64List) Complex64ListOption { return MapComplex64ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapComplex128List(f func(IntOption) Complex128List) Complex128ListOption { return MapComplex128ListToIntOptionOption(m, f) }
func (m IntOptionOption) MapAnyList(f func(IntOption) AnyList) AnyListOption { return MapAnyListToIntOptionOption(m, f) }
func (m Int8OptionOption) MapBool(f func(Int8Option) bool) BoolOption { return MapBoolToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapString(f func(Int8Option) string) StringOption { return MapStringToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt(f func(Int8Option) int) IntOption { return MapIntToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt8(f func(Int8Option) int8) Int8Option { return MapInt8ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt16(f func(Int8Option) int16) Int16Option { return MapInt16ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt32(f func(Int8Option) int32) Int32Option { return MapInt32ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt64(f func(Int8Option) int64) Int64Option { return MapInt64ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint(f func(Int8Option) uint) UintOption { return MapUintToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint8(f func(Int8Option) uint8) Uint8Option { return MapUint8ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint16(f func(Int8Option) uint16) Uint16Option { return MapUint16ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint32(f func(Int8Option) uint32) Uint32Option { return MapUint32ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint64(f func(Int8Option) uint64) Uint64Option { return MapUint64ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintptr(f func(Int8Option) uintptr) UintptrOption { return MapUintptrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapByte(f func(Int8Option) byte) ByteOption { return MapByteToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapRune(f func(Int8Option) rune) RuneOption { return MapRuneToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat32(f func(Int8Option) float32) Float32Option { return MapFloat32ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat64(f func(Int8Option) float64) Float64Option { return MapFloat64ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex64(f func(Int8Option) complex64) Complex64Option { return MapComplex64ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex128(f func(Int8Option) complex128) Complex128Option { return MapComplex128ToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapAny(f func(Int8Option) Any) AnyOption { return MapAnyToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapBoolOption(f func(Int8Option) BoolOption) BoolOptionOption { return MapBoolOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapStringOption(f func(Int8Option) StringOption) StringOptionOption { return MapStringOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapIntOption(f func(Int8Option) IntOption) IntOptionOption { return MapIntOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt8Option(f func(Int8Option) Int8Option) Int8OptionOption { return MapInt8OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt16Option(f func(Int8Option) Int16Option) Int16OptionOption { return MapInt16OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt32Option(f func(Int8Option) Int32Option) Int32OptionOption { return MapInt32OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt64Option(f func(Int8Option) Int64Option) Int64OptionOption { return MapInt64OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintOption(f func(Int8Option) UintOption) UintOptionOption { return MapUintOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint8Option(f func(Int8Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint16Option(f func(Int8Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint32Option(f func(Int8Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint64Option(f func(Int8Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintptrOption(f func(Int8Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapByteOption(f func(Int8Option) ByteOption) ByteOptionOption { return MapByteOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapRuneOption(f func(Int8Option) RuneOption) RuneOptionOption { return MapRuneOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat32Option(f func(Int8Option) Float32Option) Float32OptionOption { return MapFloat32OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat64Option(f func(Int8Option) Float64Option) Float64OptionOption { return MapFloat64OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex64Option(f func(Int8Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex128Option(f func(Int8Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapAnyOption(f func(Int8Option) AnyOption) AnyOptionOption { return MapAnyOptionToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapBoolArr(f func(Int8Option) []bool) BoolArrOption { return MapBoolArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapStringArr(f func(Int8Option) []string) StringArrOption { return MapStringArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapIntArr(f func(Int8Option) []int) IntArrOption { return MapIntArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt8Arr(f func(Int8Option) []int8) Int8ArrOption { return MapInt8ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt16Arr(f func(Int8Option) []int16) Int16ArrOption { return MapInt16ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt32Arr(f func(Int8Option) []int32) Int32ArrOption { return MapInt32ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt64Arr(f func(Int8Option) []int64) Int64ArrOption { return MapInt64ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintArr(f func(Int8Option) []uint) UintArrOption { return MapUintArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint8Arr(f func(Int8Option) []uint8) Uint8ArrOption { return MapUint8ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint16Arr(f func(Int8Option) []uint16) Uint16ArrOption { return MapUint16ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint32Arr(f func(Int8Option) []uint32) Uint32ArrOption { return MapUint32ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint64Arr(f func(Int8Option) []uint64) Uint64ArrOption { return MapUint64ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintptrArr(f func(Int8Option) []uintptr) UintptrArrOption { return MapUintptrArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapByteArr(f func(Int8Option) []byte) ByteArrOption { return MapByteArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapRuneArr(f func(Int8Option) []rune) RuneArrOption { return MapRuneArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat32Arr(f func(Int8Option) []float32) Float32ArrOption { return MapFloat32ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat64Arr(f func(Int8Option) []float64) Float64ArrOption { return MapFloat64ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex64Arr(f func(Int8Option) []complex64) Complex64ArrOption { return MapComplex64ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex128Arr(f func(Int8Option) []complex128) Complex128ArrOption { return MapComplex128ArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapAnyArr(f func(Int8Option) []Any) AnyArrOption { return MapAnyArrToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapBoolList(f func(Int8Option) BoolList) BoolListOption { return MapBoolListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapStringList(f func(Int8Option) StringList) StringListOption { return MapStringListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapIntList(f func(Int8Option) IntList) IntListOption { return MapIntListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt8List(f func(Int8Option) Int8List) Int8ListOption { return MapInt8ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt16List(f func(Int8Option) Int16List) Int16ListOption { return MapInt16ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt32List(f func(Int8Option) Int32List) Int32ListOption { return MapInt32ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapInt64List(f func(Int8Option) Int64List) Int64ListOption { return MapInt64ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintList(f func(Int8Option) UintList) UintListOption { return MapUintListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint8List(f func(Int8Option) Uint8List) Uint8ListOption { return MapUint8ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint16List(f func(Int8Option) Uint16List) Uint16ListOption { return MapUint16ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint32List(f func(Int8Option) Uint32List) Uint32ListOption { return MapUint32ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUint64List(f func(Int8Option) Uint64List) Uint64ListOption { return MapUint64ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapUintptrList(f func(Int8Option) UintptrList) UintptrListOption { return MapUintptrListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapByteList(f func(Int8Option) ByteList) ByteListOption { return MapByteListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapRuneList(f func(Int8Option) RuneList) RuneListOption { return MapRuneListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat32List(f func(Int8Option) Float32List) Float32ListOption { return MapFloat32ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapFloat64List(f func(Int8Option) Float64List) Float64ListOption { return MapFloat64ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex64List(f func(Int8Option) Complex64List) Complex64ListOption { return MapComplex64ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapComplex128List(f func(Int8Option) Complex128List) Complex128ListOption { return MapComplex128ListToInt8OptionOption(m, f) }
func (m Int8OptionOption) MapAnyList(f func(Int8Option) AnyList) AnyListOption { return MapAnyListToInt8OptionOption(m, f) }
func (m Int16OptionOption) MapBool(f func(Int16Option) bool) BoolOption { return MapBoolToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapString(f func(Int16Option) string) StringOption { return MapStringToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt(f func(Int16Option) int) IntOption { return MapIntToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt8(f func(Int16Option) int8) Int8Option { return MapInt8ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt16(f func(Int16Option) int16) Int16Option { return MapInt16ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt32(f func(Int16Option) int32) Int32Option { return MapInt32ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt64(f func(Int16Option) int64) Int64Option { return MapInt64ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint(f func(Int16Option) uint) UintOption { return MapUintToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint8(f func(Int16Option) uint8) Uint8Option { return MapUint8ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint16(f func(Int16Option) uint16) Uint16Option { return MapUint16ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint32(f func(Int16Option) uint32) Uint32Option { return MapUint32ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint64(f func(Int16Option) uint64) Uint64Option { return MapUint64ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintptr(f func(Int16Option) uintptr) UintptrOption { return MapUintptrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapByte(f func(Int16Option) byte) ByteOption { return MapByteToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapRune(f func(Int16Option) rune) RuneOption { return MapRuneToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat32(f func(Int16Option) float32) Float32Option { return MapFloat32ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat64(f func(Int16Option) float64) Float64Option { return MapFloat64ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex64(f func(Int16Option) complex64) Complex64Option { return MapComplex64ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex128(f func(Int16Option) complex128) Complex128Option { return MapComplex128ToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapAny(f func(Int16Option) Any) AnyOption { return MapAnyToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapBoolOption(f func(Int16Option) BoolOption) BoolOptionOption { return MapBoolOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapStringOption(f func(Int16Option) StringOption) StringOptionOption { return MapStringOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapIntOption(f func(Int16Option) IntOption) IntOptionOption { return MapIntOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt8Option(f func(Int16Option) Int8Option) Int8OptionOption { return MapInt8OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt16Option(f func(Int16Option) Int16Option) Int16OptionOption { return MapInt16OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt32Option(f func(Int16Option) Int32Option) Int32OptionOption { return MapInt32OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt64Option(f func(Int16Option) Int64Option) Int64OptionOption { return MapInt64OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintOption(f func(Int16Option) UintOption) UintOptionOption { return MapUintOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint8Option(f func(Int16Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint16Option(f func(Int16Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint32Option(f func(Int16Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint64Option(f func(Int16Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintptrOption(f func(Int16Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapByteOption(f func(Int16Option) ByteOption) ByteOptionOption { return MapByteOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapRuneOption(f func(Int16Option) RuneOption) RuneOptionOption { return MapRuneOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat32Option(f func(Int16Option) Float32Option) Float32OptionOption { return MapFloat32OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat64Option(f func(Int16Option) Float64Option) Float64OptionOption { return MapFloat64OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex64Option(f func(Int16Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex128Option(f func(Int16Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapAnyOption(f func(Int16Option) AnyOption) AnyOptionOption { return MapAnyOptionToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapBoolArr(f func(Int16Option) []bool) BoolArrOption { return MapBoolArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapStringArr(f func(Int16Option) []string) StringArrOption { return MapStringArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapIntArr(f func(Int16Option) []int) IntArrOption { return MapIntArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt8Arr(f func(Int16Option) []int8) Int8ArrOption { return MapInt8ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt16Arr(f func(Int16Option) []int16) Int16ArrOption { return MapInt16ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt32Arr(f func(Int16Option) []int32) Int32ArrOption { return MapInt32ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt64Arr(f func(Int16Option) []int64) Int64ArrOption { return MapInt64ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintArr(f func(Int16Option) []uint) UintArrOption { return MapUintArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint8Arr(f func(Int16Option) []uint8) Uint8ArrOption { return MapUint8ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint16Arr(f func(Int16Option) []uint16) Uint16ArrOption { return MapUint16ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint32Arr(f func(Int16Option) []uint32) Uint32ArrOption { return MapUint32ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint64Arr(f func(Int16Option) []uint64) Uint64ArrOption { return MapUint64ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintptrArr(f func(Int16Option) []uintptr) UintptrArrOption { return MapUintptrArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapByteArr(f func(Int16Option) []byte) ByteArrOption { return MapByteArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapRuneArr(f func(Int16Option) []rune) RuneArrOption { return MapRuneArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat32Arr(f func(Int16Option) []float32) Float32ArrOption { return MapFloat32ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat64Arr(f func(Int16Option) []float64) Float64ArrOption { return MapFloat64ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex64Arr(f func(Int16Option) []complex64) Complex64ArrOption { return MapComplex64ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex128Arr(f func(Int16Option) []complex128) Complex128ArrOption { return MapComplex128ArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapAnyArr(f func(Int16Option) []Any) AnyArrOption { return MapAnyArrToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapBoolList(f func(Int16Option) BoolList) BoolListOption { return MapBoolListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapStringList(f func(Int16Option) StringList) StringListOption { return MapStringListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapIntList(f func(Int16Option) IntList) IntListOption { return MapIntListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt8List(f func(Int16Option) Int8List) Int8ListOption { return MapInt8ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt16List(f func(Int16Option) Int16List) Int16ListOption { return MapInt16ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt32List(f func(Int16Option) Int32List) Int32ListOption { return MapInt32ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapInt64List(f func(Int16Option) Int64List) Int64ListOption { return MapInt64ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintList(f func(Int16Option) UintList) UintListOption { return MapUintListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint8List(f func(Int16Option) Uint8List) Uint8ListOption { return MapUint8ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint16List(f func(Int16Option) Uint16List) Uint16ListOption { return MapUint16ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint32List(f func(Int16Option) Uint32List) Uint32ListOption { return MapUint32ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUint64List(f func(Int16Option) Uint64List) Uint64ListOption { return MapUint64ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapUintptrList(f func(Int16Option) UintptrList) UintptrListOption { return MapUintptrListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapByteList(f func(Int16Option) ByteList) ByteListOption { return MapByteListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapRuneList(f func(Int16Option) RuneList) RuneListOption { return MapRuneListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat32List(f func(Int16Option) Float32List) Float32ListOption { return MapFloat32ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapFloat64List(f func(Int16Option) Float64List) Float64ListOption { return MapFloat64ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex64List(f func(Int16Option) Complex64List) Complex64ListOption { return MapComplex64ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapComplex128List(f func(Int16Option) Complex128List) Complex128ListOption { return MapComplex128ListToInt16OptionOption(m, f) }
func (m Int16OptionOption) MapAnyList(f func(Int16Option) AnyList) AnyListOption { return MapAnyListToInt16OptionOption(m, f) }
func (m Int32OptionOption) MapBool(f func(Int32Option) bool) BoolOption { return MapBoolToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapString(f func(Int32Option) string) StringOption { return MapStringToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt(f func(Int32Option) int) IntOption { return MapIntToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt8(f func(Int32Option) int8) Int8Option { return MapInt8ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt16(f func(Int32Option) int16) Int16Option { return MapInt16ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt32(f func(Int32Option) int32) Int32Option { return MapInt32ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt64(f func(Int32Option) int64) Int64Option { return MapInt64ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint(f func(Int32Option) uint) UintOption { return MapUintToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint8(f func(Int32Option) uint8) Uint8Option { return MapUint8ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint16(f func(Int32Option) uint16) Uint16Option { return MapUint16ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint32(f func(Int32Option) uint32) Uint32Option { return MapUint32ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint64(f func(Int32Option) uint64) Uint64Option { return MapUint64ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintptr(f func(Int32Option) uintptr) UintptrOption { return MapUintptrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapByte(f func(Int32Option) byte) ByteOption { return MapByteToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapRune(f func(Int32Option) rune) RuneOption { return MapRuneToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat32(f func(Int32Option) float32) Float32Option { return MapFloat32ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat64(f func(Int32Option) float64) Float64Option { return MapFloat64ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex64(f func(Int32Option) complex64) Complex64Option { return MapComplex64ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex128(f func(Int32Option) complex128) Complex128Option { return MapComplex128ToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapAny(f func(Int32Option) Any) AnyOption { return MapAnyToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapBoolOption(f func(Int32Option) BoolOption) BoolOptionOption { return MapBoolOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapStringOption(f func(Int32Option) StringOption) StringOptionOption { return MapStringOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapIntOption(f func(Int32Option) IntOption) IntOptionOption { return MapIntOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt8Option(f func(Int32Option) Int8Option) Int8OptionOption { return MapInt8OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt16Option(f func(Int32Option) Int16Option) Int16OptionOption { return MapInt16OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt32Option(f func(Int32Option) Int32Option) Int32OptionOption { return MapInt32OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt64Option(f func(Int32Option) Int64Option) Int64OptionOption { return MapInt64OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintOption(f func(Int32Option) UintOption) UintOptionOption { return MapUintOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint8Option(f func(Int32Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint16Option(f func(Int32Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint32Option(f func(Int32Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint64Option(f func(Int32Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintptrOption(f func(Int32Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapByteOption(f func(Int32Option) ByteOption) ByteOptionOption { return MapByteOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapRuneOption(f func(Int32Option) RuneOption) RuneOptionOption { return MapRuneOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat32Option(f func(Int32Option) Float32Option) Float32OptionOption { return MapFloat32OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat64Option(f func(Int32Option) Float64Option) Float64OptionOption { return MapFloat64OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex64Option(f func(Int32Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex128Option(f func(Int32Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapAnyOption(f func(Int32Option) AnyOption) AnyOptionOption { return MapAnyOptionToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapBoolArr(f func(Int32Option) []bool) BoolArrOption { return MapBoolArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapStringArr(f func(Int32Option) []string) StringArrOption { return MapStringArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapIntArr(f func(Int32Option) []int) IntArrOption { return MapIntArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt8Arr(f func(Int32Option) []int8) Int8ArrOption { return MapInt8ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt16Arr(f func(Int32Option) []int16) Int16ArrOption { return MapInt16ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt32Arr(f func(Int32Option) []int32) Int32ArrOption { return MapInt32ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt64Arr(f func(Int32Option) []int64) Int64ArrOption { return MapInt64ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintArr(f func(Int32Option) []uint) UintArrOption { return MapUintArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint8Arr(f func(Int32Option) []uint8) Uint8ArrOption { return MapUint8ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint16Arr(f func(Int32Option) []uint16) Uint16ArrOption { return MapUint16ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint32Arr(f func(Int32Option) []uint32) Uint32ArrOption { return MapUint32ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint64Arr(f func(Int32Option) []uint64) Uint64ArrOption { return MapUint64ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintptrArr(f func(Int32Option) []uintptr) UintptrArrOption { return MapUintptrArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapByteArr(f func(Int32Option) []byte) ByteArrOption { return MapByteArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapRuneArr(f func(Int32Option) []rune) RuneArrOption { return MapRuneArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat32Arr(f func(Int32Option) []float32) Float32ArrOption { return MapFloat32ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat64Arr(f func(Int32Option) []float64) Float64ArrOption { return MapFloat64ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex64Arr(f func(Int32Option) []complex64) Complex64ArrOption { return MapComplex64ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex128Arr(f func(Int32Option) []complex128) Complex128ArrOption { return MapComplex128ArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapAnyArr(f func(Int32Option) []Any) AnyArrOption { return MapAnyArrToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapBoolList(f func(Int32Option) BoolList) BoolListOption { return MapBoolListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapStringList(f func(Int32Option) StringList) StringListOption { return MapStringListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapIntList(f func(Int32Option) IntList) IntListOption { return MapIntListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt8List(f func(Int32Option) Int8List) Int8ListOption { return MapInt8ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt16List(f func(Int32Option) Int16List) Int16ListOption { return MapInt16ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt32List(f func(Int32Option) Int32List) Int32ListOption { return MapInt32ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapInt64List(f func(Int32Option) Int64List) Int64ListOption { return MapInt64ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintList(f func(Int32Option) UintList) UintListOption { return MapUintListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint8List(f func(Int32Option) Uint8List) Uint8ListOption { return MapUint8ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint16List(f func(Int32Option) Uint16List) Uint16ListOption { return MapUint16ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint32List(f func(Int32Option) Uint32List) Uint32ListOption { return MapUint32ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUint64List(f func(Int32Option) Uint64List) Uint64ListOption { return MapUint64ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapUintptrList(f func(Int32Option) UintptrList) UintptrListOption { return MapUintptrListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapByteList(f func(Int32Option) ByteList) ByteListOption { return MapByteListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapRuneList(f func(Int32Option) RuneList) RuneListOption { return MapRuneListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat32List(f func(Int32Option) Float32List) Float32ListOption { return MapFloat32ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapFloat64List(f func(Int32Option) Float64List) Float64ListOption { return MapFloat64ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex64List(f func(Int32Option) Complex64List) Complex64ListOption { return MapComplex64ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapComplex128List(f func(Int32Option) Complex128List) Complex128ListOption { return MapComplex128ListToInt32OptionOption(m, f) }
func (m Int32OptionOption) MapAnyList(f func(Int32Option) AnyList) AnyListOption { return MapAnyListToInt32OptionOption(m, f) }
func (m Int64OptionOption) MapBool(f func(Int64Option) bool) BoolOption { return MapBoolToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapString(f func(Int64Option) string) StringOption { return MapStringToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt(f func(Int64Option) int) IntOption { return MapIntToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt8(f func(Int64Option) int8) Int8Option { return MapInt8ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt16(f func(Int64Option) int16) Int16Option { return MapInt16ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt32(f func(Int64Option) int32) Int32Option { return MapInt32ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt64(f func(Int64Option) int64) Int64Option { return MapInt64ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint(f func(Int64Option) uint) UintOption { return MapUintToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint8(f func(Int64Option) uint8) Uint8Option { return MapUint8ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint16(f func(Int64Option) uint16) Uint16Option { return MapUint16ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint32(f func(Int64Option) uint32) Uint32Option { return MapUint32ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint64(f func(Int64Option) uint64) Uint64Option { return MapUint64ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintptr(f func(Int64Option) uintptr) UintptrOption { return MapUintptrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapByte(f func(Int64Option) byte) ByteOption { return MapByteToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapRune(f func(Int64Option) rune) RuneOption { return MapRuneToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat32(f func(Int64Option) float32) Float32Option { return MapFloat32ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat64(f func(Int64Option) float64) Float64Option { return MapFloat64ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex64(f func(Int64Option) complex64) Complex64Option { return MapComplex64ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex128(f func(Int64Option) complex128) Complex128Option { return MapComplex128ToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapAny(f func(Int64Option) Any) AnyOption { return MapAnyToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapBoolOption(f func(Int64Option) BoolOption) BoolOptionOption { return MapBoolOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapStringOption(f func(Int64Option) StringOption) StringOptionOption { return MapStringOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapIntOption(f func(Int64Option) IntOption) IntOptionOption { return MapIntOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt8Option(f func(Int64Option) Int8Option) Int8OptionOption { return MapInt8OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt16Option(f func(Int64Option) Int16Option) Int16OptionOption { return MapInt16OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt32Option(f func(Int64Option) Int32Option) Int32OptionOption { return MapInt32OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt64Option(f func(Int64Option) Int64Option) Int64OptionOption { return MapInt64OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintOption(f func(Int64Option) UintOption) UintOptionOption { return MapUintOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint8Option(f func(Int64Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint16Option(f func(Int64Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint32Option(f func(Int64Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint64Option(f func(Int64Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintptrOption(f func(Int64Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapByteOption(f func(Int64Option) ByteOption) ByteOptionOption { return MapByteOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapRuneOption(f func(Int64Option) RuneOption) RuneOptionOption { return MapRuneOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat32Option(f func(Int64Option) Float32Option) Float32OptionOption { return MapFloat32OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat64Option(f func(Int64Option) Float64Option) Float64OptionOption { return MapFloat64OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex64Option(f func(Int64Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex128Option(f func(Int64Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapAnyOption(f func(Int64Option) AnyOption) AnyOptionOption { return MapAnyOptionToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapBoolArr(f func(Int64Option) []bool) BoolArrOption { return MapBoolArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapStringArr(f func(Int64Option) []string) StringArrOption { return MapStringArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapIntArr(f func(Int64Option) []int) IntArrOption { return MapIntArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt8Arr(f func(Int64Option) []int8) Int8ArrOption { return MapInt8ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt16Arr(f func(Int64Option) []int16) Int16ArrOption { return MapInt16ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt32Arr(f func(Int64Option) []int32) Int32ArrOption { return MapInt32ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt64Arr(f func(Int64Option) []int64) Int64ArrOption { return MapInt64ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintArr(f func(Int64Option) []uint) UintArrOption { return MapUintArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint8Arr(f func(Int64Option) []uint8) Uint8ArrOption { return MapUint8ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint16Arr(f func(Int64Option) []uint16) Uint16ArrOption { return MapUint16ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint32Arr(f func(Int64Option) []uint32) Uint32ArrOption { return MapUint32ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint64Arr(f func(Int64Option) []uint64) Uint64ArrOption { return MapUint64ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintptrArr(f func(Int64Option) []uintptr) UintptrArrOption { return MapUintptrArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapByteArr(f func(Int64Option) []byte) ByteArrOption { return MapByteArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapRuneArr(f func(Int64Option) []rune) RuneArrOption { return MapRuneArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat32Arr(f func(Int64Option) []float32) Float32ArrOption { return MapFloat32ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat64Arr(f func(Int64Option) []float64) Float64ArrOption { return MapFloat64ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex64Arr(f func(Int64Option) []complex64) Complex64ArrOption { return MapComplex64ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex128Arr(f func(Int64Option) []complex128) Complex128ArrOption { return MapComplex128ArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapAnyArr(f func(Int64Option) []Any) AnyArrOption { return MapAnyArrToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapBoolList(f func(Int64Option) BoolList) BoolListOption { return MapBoolListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapStringList(f func(Int64Option) StringList) StringListOption { return MapStringListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapIntList(f func(Int64Option) IntList) IntListOption { return MapIntListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt8List(f func(Int64Option) Int8List) Int8ListOption { return MapInt8ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt16List(f func(Int64Option) Int16List) Int16ListOption { return MapInt16ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt32List(f func(Int64Option) Int32List) Int32ListOption { return MapInt32ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapInt64List(f func(Int64Option) Int64List) Int64ListOption { return MapInt64ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintList(f func(Int64Option) UintList) UintListOption { return MapUintListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint8List(f func(Int64Option) Uint8List) Uint8ListOption { return MapUint8ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint16List(f func(Int64Option) Uint16List) Uint16ListOption { return MapUint16ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint32List(f func(Int64Option) Uint32List) Uint32ListOption { return MapUint32ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUint64List(f func(Int64Option) Uint64List) Uint64ListOption { return MapUint64ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapUintptrList(f func(Int64Option) UintptrList) UintptrListOption { return MapUintptrListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapByteList(f func(Int64Option) ByteList) ByteListOption { return MapByteListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapRuneList(f func(Int64Option) RuneList) RuneListOption { return MapRuneListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat32List(f func(Int64Option) Float32List) Float32ListOption { return MapFloat32ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapFloat64List(f func(Int64Option) Float64List) Float64ListOption { return MapFloat64ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex64List(f func(Int64Option) Complex64List) Complex64ListOption { return MapComplex64ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapComplex128List(f func(Int64Option) Complex128List) Complex128ListOption { return MapComplex128ListToInt64OptionOption(m, f) }
func (m Int64OptionOption) MapAnyList(f func(Int64Option) AnyList) AnyListOption { return MapAnyListToInt64OptionOption(m, f) }
func (m UintOptionOption) MapBool(f func(UintOption) bool) BoolOption { return MapBoolToUintOptionOption(m, f) }
func (m UintOptionOption) MapString(f func(UintOption) string) StringOption { return MapStringToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt(f func(UintOption) int) IntOption { return MapIntToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt8(f func(UintOption) int8) Int8Option { return MapInt8ToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt16(f func(UintOption) int16) Int16Option { return MapInt16ToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt32(f func(UintOption) int32) Int32Option { return MapInt32ToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt64(f func(UintOption) int64) Int64Option { return MapInt64ToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint(f func(UintOption) uint) UintOption { return MapUintToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint8(f func(UintOption) uint8) Uint8Option { return MapUint8ToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint16(f func(UintOption) uint16) Uint16Option { return MapUint16ToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint32(f func(UintOption) uint32) Uint32Option { return MapUint32ToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint64(f func(UintOption) uint64) Uint64Option { return MapUint64ToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintptr(f func(UintOption) uintptr) UintptrOption { return MapUintptrToUintOptionOption(m, f) }
func (m UintOptionOption) MapByte(f func(UintOption) byte) ByteOption { return MapByteToUintOptionOption(m, f) }
func (m UintOptionOption) MapRune(f func(UintOption) rune) RuneOption { return MapRuneToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat32(f func(UintOption) float32) Float32Option { return MapFloat32ToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat64(f func(UintOption) float64) Float64Option { return MapFloat64ToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex64(f func(UintOption) complex64) Complex64Option { return MapComplex64ToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex128(f func(UintOption) complex128) Complex128Option { return MapComplex128ToUintOptionOption(m, f) }
func (m UintOptionOption) MapAny(f func(UintOption) Any) AnyOption { return MapAnyToUintOptionOption(m, f) }
func (m UintOptionOption) MapBoolOption(f func(UintOption) BoolOption) BoolOptionOption { return MapBoolOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapStringOption(f func(UintOption) StringOption) StringOptionOption { return MapStringOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapIntOption(f func(UintOption) IntOption) IntOptionOption { return MapIntOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt8Option(f func(UintOption) Int8Option) Int8OptionOption { return MapInt8OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt16Option(f func(UintOption) Int16Option) Int16OptionOption { return MapInt16OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt32Option(f func(UintOption) Int32Option) Int32OptionOption { return MapInt32OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt64Option(f func(UintOption) Int64Option) Int64OptionOption { return MapInt64OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintOption(f func(UintOption) UintOption) UintOptionOption { return MapUintOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint8Option(f func(UintOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint16Option(f func(UintOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint32Option(f func(UintOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint64Option(f func(UintOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintptrOption(f func(UintOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapByteOption(f func(UintOption) ByteOption) ByteOptionOption { return MapByteOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapRuneOption(f func(UintOption) RuneOption) RuneOptionOption { return MapRuneOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat32Option(f func(UintOption) Float32Option) Float32OptionOption { return MapFloat32OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat64Option(f func(UintOption) Float64Option) Float64OptionOption { return MapFloat64OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex64Option(f func(UintOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex128Option(f func(UintOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapAnyOption(f func(UintOption) AnyOption) AnyOptionOption { return MapAnyOptionToUintOptionOption(m, f) }
func (m UintOptionOption) MapBoolArr(f func(UintOption) []bool) BoolArrOption { return MapBoolArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapStringArr(f func(UintOption) []string) StringArrOption { return MapStringArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapIntArr(f func(UintOption) []int) IntArrOption { return MapIntArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt8Arr(f func(UintOption) []int8) Int8ArrOption { return MapInt8ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt16Arr(f func(UintOption) []int16) Int16ArrOption { return MapInt16ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt32Arr(f func(UintOption) []int32) Int32ArrOption { return MapInt32ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt64Arr(f func(UintOption) []int64) Int64ArrOption { return MapInt64ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintArr(f func(UintOption) []uint) UintArrOption { return MapUintArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint8Arr(f func(UintOption) []uint8) Uint8ArrOption { return MapUint8ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint16Arr(f func(UintOption) []uint16) Uint16ArrOption { return MapUint16ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint32Arr(f func(UintOption) []uint32) Uint32ArrOption { return MapUint32ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint64Arr(f func(UintOption) []uint64) Uint64ArrOption { return MapUint64ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintptrArr(f func(UintOption) []uintptr) UintptrArrOption { return MapUintptrArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapByteArr(f func(UintOption) []byte) ByteArrOption { return MapByteArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapRuneArr(f func(UintOption) []rune) RuneArrOption { return MapRuneArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat32Arr(f func(UintOption) []float32) Float32ArrOption { return MapFloat32ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat64Arr(f func(UintOption) []float64) Float64ArrOption { return MapFloat64ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex64Arr(f func(UintOption) []complex64) Complex64ArrOption { return MapComplex64ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex128Arr(f func(UintOption) []complex128) Complex128ArrOption { return MapComplex128ArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapAnyArr(f func(UintOption) []Any) AnyArrOption { return MapAnyArrToUintOptionOption(m, f) }
func (m UintOptionOption) MapBoolList(f func(UintOption) BoolList) BoolListOption { return MapBoolListToUintOptionOption(m, f) }
func (m UintOptionOption) MapStringList(f func(UintOption) StringList) StringListOption { return MapStringListToUintOptionOption(m, f) }
func (m UintOptionOption) MapIntList(f func(UintOption) IntList) IntListOption { return MapIntListToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt8List(f func(UintOption) Int8List) Int8ListOption { return MapInt8ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt16List(f func(UintOption) Int16List) Int16ListOption { return MapInt16ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt32List(f func(UintOption) Int32List) Int32ListOption { return MapInt32ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapInt64List(f func(UintOption) Int64List) Int64ListOption { return MapInt64ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintList(f func(UintOption) UintList) UintListOption { return MapUintListToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint8List(f func(UintOption) Uint8List) Uint8ListOption { return MapUint8ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint16List(f func(UintOption) Uint16List) Uint16ListOption { return MapUint16ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint32List(f func(UintOption) Uint32List) Uint32ListOption { return MapUint32ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapUint64List(f func(UintOption) Uint64List) Uint64ListOption { return MapUint64ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapUintptrList(f func(UintOption) UintptrList) UintptrListOption { return MapUintptrListToUintOptionOption(m, f) }
func (m UintOptionOption) MapByteList(f func(UintOption) ByteList) ByteListOption { return MapByteListToUintOptionOption(m, f) }
func (m UintOptionOption) MapRuneList(f func(UintOption) RuneList) RuneListOption { return MapRuneListToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat32List(f func(UintOption) Float32List) Float32ListOption { return MapFloat32ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapFloat64List(f func(UintOption) Float64List) Float64ListOption { return MapFloat64ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex64List(f func(UintOption) Complex64List) Complex64ListOption { return MapComplex64ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapComplex128List(f func(UintOption) Complex128List) Complex128ListOption { return MapComplex128ListToUintOptionOption(m, f) }
func (m UintOptionOption) MapAnyList(f func(UintOption) AnyList) AnyListOption { return MapAnyListToUintOptionOption(m, f) }
func (m Uint8OptionOption) MapBool(f func(Uint8Option) bool) BoolOption { return MapBoolToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapString(f func(Uint8Option) string) StringOption { return MapStringToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt(f func(Uint8Option) int) IntOption { return MapIntToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt8(f func(Uint8Option) int8) Int8Option { return MapInt8ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt16(f func(Uint8Option) int16) Int16Option { return MapInt16ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt32(f func(Uint8Option) int32) Int32Option { return MapInt32ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt64(f func(Uint8Option) int64) Int64Option { return MapInt64ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint(f func(Uint8Option) uint) UintOption { return MapUintToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint8(f func(Uint8Option) uint8) Uint8Option { return MapUint8ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint16(f func(Uint8Option) uint16) Uint16Option { return MapUint16ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint32(f func(Uint8Option) uint32) Uint32Option { return MapUint32ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint64(f func(Uint8Option) uint64) Uint64Option { return MapUint64ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintptr(f func(Uint8Option) uintptr) UintptrOption { return MapUintptrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapByte(f func(Uint8Option) byte) ByteOption { return MapByteToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapRune(f func(Uint8Option) rune) RuneOption { return MapRuneToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat32(f func(Uint8Option) float32) Float32Option { return MapFloat32ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat64(f func(Uint8Option) float64) Float64Option { return MapFloat64ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex64(f func(Uint8Option) complex64) Complex64Option { return MapComplex64ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex128(f func(Uint8Option) complex128) Complex128Option { return MapComplex128ToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapAny(f func(Uint8Option) Any) AnyOption { return MapAnyToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapBoolOption(f func(Uint8Option) BoolOption) BoolOptionOption { return MapBoolOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapStringOption(f func(Uint8Option) StringOption) StringOptionOption { return MapStringOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapIntOption(f func(Uint8Option) IntOption) IntOptionOption { return MapIntOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt8Option(f func(Uint8Option) Int8Option) Int8OptionOption { return MapInt8OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt16Option(f func(Uint8Option) Int16Option) Int16OptionOption { return MapInt16OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt32Option(f func(Uint8Option) Int32Option) Int32OptionOption { return MapInt32OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt64Option(f func(Uint8Option) Int64Option) Int64OptionOption { return MapInt64OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintOption(f func(Uint8Option) UintOption) UintOptionOption { return MapUintOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint8Option(f func(Uint8Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint16Option(f func(Uint8Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint32Option(f func(Uint8Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint64Option(f func(Uint8Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintptrOption(f func(Uint8Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapByteOption(f func(Uint8Option) ByteOption) ByteOptionOption { return MapByteOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapRuneOption(f func(Uint8Option) RuneOption) RuneOptionOption { return MapRuneOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat32Option(f func(Uint8Option) Float32Option) Float32OptionOption { return MapFloat32OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat64Option(f func(Uint8Option) Float64Option) Float64OptionOption { return MapFloat64OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex64Option(f func(Uint8Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex128Option(f func(Uint8Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapAnyOption(f func(Uint8Option) AnyOption) AnyOptionOption { return MapAnyOptionToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapBoolArr(f func(Uint8Option) []bool) BoolArrOption { return MapBoolArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapStringArr(f func(Uint8Option) []string) StringArrOption { return MapStringArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapIntArr(f func(Uint8Option) []int) IntArrOption { return MapIntArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt8Arr(f func(Uint8Option) []int8) Int8ArrOption { return MapInt8ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt16Arr(f func(Uint8Option) []int16) Int16ArrOption { return MapInt16ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt32Arr(f func(Uint8Option) []int32) Int32ArrOption { return MapInt32ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt64Arr(f func(Uint8Option) []int64) Int64ArrOption { return MapInt64ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintArr(f func(Uint8Option) []uint) UintArrOption { return MapUintArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint8Arr(f func(Uint8Option) []uint8) Uint8ArrOption { return MapUint8ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint16Arr(f func(Uint8Option) []uint16) Uint16ArrOption { return MapUint16ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint32Arr(f func(Uint8Option) []uint32) Uint32ArrOption { return MapUint32ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint64Arr(f func(Uint8Option) []uint64) Uint64ArrOption { return MapUint64ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintptrArr(f func(Uint8Option) []uintptr) UintptrArrOption { return MapUintptrArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapByteArr(f func(Uint8Option) []byte) ByteArrOption { return MapByteArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapRuneArr(f func(Uint8Option) []rune) RuneArrOption { return MapRuneArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat32Arr(f func(Uint8Option) []float32) Float32ArrOption { return MapFloat32ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat64Arr(f func(Uint8Option) []float64) Float64ArrOption { return MapFloat64ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex64Arr(f func(Uint8Option) []complex64) Complex64ArrOption { return MapComplex64ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex128Arr(f func(Uint8Option) []complex128) Complex128ArrOption { return MapComplex128ArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapAnyArr(f func(Uint8Option) []Any) AnyArrOption { return MapAnyArrToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapBoolList(f func(Uint8Option) BoolList) BoolListOption { return MapBoolListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapStringList(f func(Uint8Option) StringList) StringListOption { return MapStringListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapIntList(f func(Uint8Option) IntList) IntListOption { return MapIntListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt8List(f func(Uint8Option) Int8List) Int8ListOption { return MapInt8ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt16List(f func(Uint8Option) Int16List) Int16ListOption { return MapInt16ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt32List(f func(Uint8Option) Int32List) Int32ListOption { return MapInt32ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapInt64List(f func(Uint8Option) Int64List) Int64ListOption { return MapInt64ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintList(f func(Uint8Option) UintList) UintListOption { return MapUintListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint8List(f func(Uint8Option) Uint8List) Uint8ListOption { return MapUint8ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint16List(f func(Uint8Option) Uint16List) Uint16ListOption { return MapUint16ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint32List(f func(Uint8Option) Uint32List) Uint32ListOption { return MapUint32ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUint64List(f func(Uint8Option) Uint64List) Uint64ListOption { return MapUint64ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapUintptrList(f func(Uint8Option) UintptrList) UintptrListOption { return MapUintptrListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapByteList(f func(Uint8Option) ByteList) ByteListOption { return MapByteListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapRuneList(f func(Uint8Option) RuneList) RuneListOption { return MapRuneListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat32List(f func(Uint8Option) Float32List) Float32ListOption { return MapFloat32ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapFloat64List(f func(Uint8Option) Float64List) Float64ListOption { return MapFloat64ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex64List(f func(Uint8Option) Complex64List) Complex64ListOption { return MapComplex64ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapComplex128List(f func(Uint8Option) Complex128List) Complex128ListOption { return MapComplex128ListToUint8OptionOption(m, f) }
func (m Uint8OptionOption) MapAnyList(f func(Uint8Option) AnyList) AnyListOption { return MapAnyListToUint8OptionOption(m, f) }
func (m Uint16OptionOption) MapBool(f func(Uint16Option) bool) BoolOption { return MapBoolToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapString(f func(Uint16Option) string) StringOption { return MapStringToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt(f func(Uint16Option) int) IntOption { return MapIntToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt8(f func(Uint16Option) int8) Int8Option { return MapInt8ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt16(f func(Uint16Option) int16) Int16Option { return MapInt16ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt32(f func(Uint16Option) int32) Int32Option { return MapInt32ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt64(f func(Uint16Option) int64) Int64Option { return MapInt64ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint(f func(Uint16Option) uint) UintOption { return MapUintToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint8(f func(Uint16Option) uint8) Uint8Option { return MapUint8ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint16(f func(Uint16Option) uint16) Uint16Option { return MapUint16ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint32(f func(Uint16Option) uint32) Uint32Option { return MapUint32ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint64(f func(Uint16Option) uint64) Uint64Option { return MapUint64ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintptr(f func(Uint16Option) uintptr) UintptrOption { return MapUintptrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapByte(f func(Uint16Option) byte) ByteOption { return MapByteToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapRune(f func(Uint16Option) rune) RuneOption { return MapRuneToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat32(f func(Uint16Option) float32) Float32Option { return MapFloat32ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat64(f func(Uint16Option) float64) Float64Option { return MapFloat64ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex64(f func(Uint16Option) complex64) Complex64Option { return MapComplex64ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex128(f func(Uint16Option) complex128) Complex128Option { return MapComplex128ToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapAny(f func(Uint16Option) Any) AnyOption { return MapAnyToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapBoolOption(f func(Uint16Option) BoolOption) BoolOptionOption { return MapBoolOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapStringOption(f func(Uint16Option) StringOption) StringOptionOption { return MapStringOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapIntOption(f func(Uint16Option) IntOption) IntOptionOption { return MapIntOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt8Option(f func(Uint16Option) Int8Option) Int8OptionOption { return MapInt8OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt16Option(f func(Uint16Option) Int16Option) Int16OptionOption { return MapInt16OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt32Option(f func(Uint16Option) Int32Option) Int32OptionOption { return MapInt32OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt64Option(f func(Uint16Option) Int64Option) Int64OptionOption { return MapInt64OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintOption(f func(Uint16Option) UintOption) UintOptionOption { return MapUintOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint8Option(f func(Uint16Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint16Option(f func(Uint16Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint32Option(f func(Uint16Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint64Option(f func(Uint16Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintptrOption(f func(Uint16Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapByteOption(f func(Uint16Option) ByteOption) ByteOptionOption { return MapByteOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapRuneOption(f func(Uint16Option) RuneOption) RuneOptionOption { return MapRuneOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat32Option(f func(Uint16Option) Float32Option) Float32OptionOption { return MapFloat32OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat64Option(f func(Uint16Option) Float64Option) Float64OptionOption { return MapFloat64OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex64Option(f func(Uint16Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex128Option(f func(Uint16Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapAnyOption(f func(Uint16Option) AnyOption) AnyOptionOption { return MapAnyOptionToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapBoolArr(f func(Uint16Option) []bool) BoolArrOption { return MapBoolArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapStringArr(f func(Uint16Option) []string) StringArrOption { return MapStringArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapIntArr(f func(Uint16Option) []int) IntArrOption { return MapIntArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt8Arr(f func(Uint16Option) []int8) Int8ArrOption { return MapInt8ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt16Arr(f func(Uint16Option) []int16) Int16ArrOption { return MapInt16ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt32Arr(f func(Uint16Option) []int32) Int32ArrOption { return MapInt32ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt64Arr(f func(Uint16Option) []int64) Int64ArrOption { return MapInt64ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintArr(f func(Uint16Option) []uint) UintArrOption { return MapUintArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint8Arr(f func(Uint16Option) []uint8) Uint8ArrOption { return MapUint8ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint16Arr(f func(Uint16Option) []uint16) Uint16ArrOption { return MapUint16ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint32Arr(f func(Uint16Option) []uint32) Uint32ArrOption { return MapUint32ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint64Arr(f func(Uint16Option) []uint64) Uint64ArrOption { return MapUint64ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintptrArr(f func(Uint16Option) []uintptr) UintptrArrOption { return MapUintptrArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapByteArr(f func(Uint16Option) []byte) ByteArrOption { return MapByteArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapRuneArr(f func(Uint16Option) []rune) RuneArrOption { return MapRuneArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat32Arr(f func(Uint16Option) []float32) Float32ArrOption { return MapFloat32ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat64Arr(f func(Uint16Option) []float64) Float64ArrOption { return MapFloat64ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex64Arr(f func(Uint16Option) []complex64) Complex64ArrOption { return MapComplex64ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex128Arr(f func(Uint16Option) []complex128) Complex128ArrOption { return MapComplex128ArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapAnyArr(f func(Uint16Option) []Any) AnyArrOption { return MapAnyArrToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapBoolList(f func(Uint16Option) BoolList) BoolListOption { return MapBoolListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapStringList(f func(Uint16Option) StringList) StringListOption { return MapStringListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapIntList(f func(Uint16Option) IntList) IntListOption { return MapIntListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt8List(f func(Uint16Option) Int8List) Int8ListOption { return MapInt8ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt16List(f func(Uint16Option) Int16List) Int16ListOption { return MapInt16ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt32List(f func(Uint16Option) Int32List) Int32ListOption { return MapInt32ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapInt64List(f func(Uint16Option) Int64List) Int64ListOption { return MapInt64ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintList(f func(Uint16Option) UintList) UintListOption { return MapUintListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint8List(f func(Uint16Option) Uint8List) Uint8ListOption { return MapUint8ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint16List(f func(Uint16Option) Uint16List) Uint16ListOption { return MapUint16ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint32List(f func(Uint16Option) Uint32List) Uint32ListOption { return MapUint32ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUint64List(f func(Uint16Option) Uint64List) Uint64ListOption { return MapUint64ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapUintptrList(f func(Uint16Option) UintptrList) UintptrListOption { return MapUintptrListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapByteList(f func(Uint16Option) ByteList) ByteListOption { return MapByteListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapRuneList(f func(Uint16Option) RuneList) RuneListOption { return MapRuneListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat32List(f func(Uint16Option) Float32List) Float32ListOption { return MapFloat32ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapFloat64List(f func(Uint16Option) Float64List) Float64ListOption { return MapFloat64ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex64List(f func(Uint16Option) Complex64List) Complex64ListOption { return MapComplex64ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapComplex128List(f func(Uint16Option) Complex128List) Complex128ListOption { return MapComplex128ListToUint16OptionOption(m, f) }
func (m Uint16OptionOption) MapAnyList(f func(Uint16Option) AnyList) AnyListOption { return MapAnyListToUint16OptionOption(m, f) }
func (m Uint32OptionOption) MapBool(f func(Uint32Option) bool) BoolOption { return MapBoolToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapString(f func(Uint32Option) string) StringOption { return MapStringToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt(f func(Uint32Option) int) IntOption { return MapIntToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt8(f func(Uint32Option) int8) Int8Option { return MapInt8ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt16(f func(Uint32Option) int16) Int16Option { return MapInt16ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt32(f func(Uint32Option) int32) Int32Option { return MapInt32ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt64(f func(Uint32Option) int64) Int64Option { return MapInt64ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint(f func(Uint32Option) uint) UintOption { return MapUintToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint8(f func(Uint32Option) uint8) Uint8Option { return MapUint8ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint16(f func(Uint32Option) uint16) Uint16Option { return MapUint16ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint32(f func(Uint32Option) uint32) Uint32Option { return MapUint32ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint64(f func(Uint32Option) uint64) Uint64Option { return MapUint64ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintptr(f func(Uint32Option) uintptr) UintptrOption { return MapUintptrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapByte(f func(Uint32Option) byte) ByteOption { return MapByteToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapRune(f func(Uint32Option) rune) RuneOption { return MapRuneToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat32(f func(Uint32Option) float32) Float32Option { return MapFloat32ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat64(f func(Uint32Option) float64) Float64Option { return MapFloat64ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex64(f func(Uint32Option) complex64) Complex64Option { return MapComplex64ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex128(f func(Uint32Option) complex128) Complex128Option { return MapComplex128ToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapAny(f func(Uint32Option) Any) AnyOption { return MapAnyToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapBoolOption(f func(Uint32Option) BoolOption) BoolOptionOption { return MapBoolOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapStringOption(f func(Uint32Option) StringOption) StringOptionOption { return MapStringOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapIntOption(f func(Uint32Option) IntOption) IntOptionOption { return MapIntOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt8Option(f func(Uint32Option) Int8Option) Int8OptionOption { return MapInt8OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt16Option(f func(Uint32Option) Int16Option) Int16OptionOption { return MapInt16OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt32Option(f func(Uint32Option) Int32Option) Int32OptionOption { return MapInt32OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt64Option(f func(Uint32Option) Int64Option) Int64OptionOption { return MapInt64OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintOption(f func(Uint32Option) UintOption) UintOptionOption { return MapUintOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint8Option(f func(Uint32Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint16Option(f func(Uint32Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint32Option(f func(Uint32Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint64Option(f func(Uint32Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintptrOption(f func(Uint32Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapByteOption(f func(Uint32Option) ByteOption) ByteOptionOption { return MapByteOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapRuneOption(f func(Uint32Option) RuneOption) RuneOptionOption { return MapRuneOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat32Option(f func(Uint32Option) Float32Option) Float32OptionOption { return MapFloat32OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat64Option(f func(Uint32Option) Float64Option) Float64OptionOption { return MapFloat64OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex64Option(f func(Uint32Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex128Option(f func(Uint32Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapAnyOption(f func(Uint32Option) AnyOption) AnyOptionOption { return MapAnyOptionToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapBoolArr(f func(Uint32Option) []bool) BoolArrOption { return MapBoolArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapStringArr(f func(Uint32Option) []string) StringArrOption { return MapStringArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapIntArr(f func(Uint32Option) []int) IntArrOption { return MapIntArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt8Arr(f func(Uint32Option) []int8) Int8ArrOption { return MapInt8ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt16Arr(f func(Uint32Option) []int16) Int16ArrOption { return MapInt16ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt32Arr(f func(Uint32Option) []int32) Int32ArrOption { return MapInt32ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt64Arr(f func(Uint32Option) []int64) Int64ArrOption { return MapInt64ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintArr(f func(Uint32Option) []uint) UintArrOption { return MapUintArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint8Arr(f func(Uint32Option) []uint8) Uint8ArrOption { return MapUint8ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint16Arr(f func(Uint32Option) []uint16) Uint16ArrOption { return MapUint16ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint32Arr(f func(Uint32Option) []uint32) Uint32ArrOption { return MapUint32ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint64Arr(f func(Uint32Option) []uint64) Uint64ArrOption { return MapUint64ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintptrArr(f func(Uint32Option) []uintptr) UintptrArrOption { return MapUintptrArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapByteArr(f func(Uint32Option) []byte) ByteArrOption { return MapByteArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapRuneArr(f func(Uint32Option) []rune) RuneArrOption { return MapRuneArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat32Arr(f func(Uint32Option) []float32) Float32ArrOption { return MapFloat32ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat64Arr(f func(Uint32Option) []float64) Float64ArrOption { return MapFloat64ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex64Arr(f func(Uint32Option) []complex64) Complex64ArrOption { return MapComplex64ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex128Arr(f func(Uint32Option) []complex128) Complex128ArrOption { return MapComplex128ArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapAnyArr(f func(Uint32Option) []Any) AnyArrOption { return MapAnyArrToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapBoolList(f func(Uint32Option) BoolList) BoolListOption { return MapBoolListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapStringList(f func(Uint32Option) StringList) StringListOption { return MapStringListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapIntList(f func(Uint32Option) IntList) IntListOption { return MapIntListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt8List(f func(Uint32Option) Int8List) Int8ListOption { return MapInt8ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt16List(f func(Uint32Option) Int16List) Int16ListOption { return MapInt16ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt32List(f func(Uint32Option) Int32List) Int32ListOption { return MapInt32ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapInt64List(f func(Uint32Option) Int64List) Int64ListOption { return MapInt64ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintList(f func(Uint32Option) UintList) UintListOption { return MapUintListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint8List(f func(Uint32Option) Uint8List) Uint8ListOption { return MapUint8ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint16List(f func(Uint32Option) Uint16List) Uint16ListOption { return MapUint16ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint32List(f func(Uint32Option) Uint32List) Uint32ListOption { return MapUint32ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUint64List(f func(Uint32Option) Uint64List) Uint64ListOption { return MapUint64ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapUintptrList(f func(Uint32Option) UintptrList) UintptrListOption { return MapUintptrListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapByteList(f func(Uint32Option) ByteList) ByteListOption { return MapByteListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapRuneList(f func(Uint32Option) RuneList) RuneListOption { return MapRuneListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat32List(f func(Uint32Option) Float32List) Float32ListOption { return MapFloat32ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapFloat64List(f func(Uint32Option) Float64List) Float64ListOption { return MapFloat64ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex64List(f func(Uint32Option) Complex64List) Complex64ListOption { return MapComplex64ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapComplex128List(f func(Uint32Option) Complex128List) Complex128ListOption { return MapComplex128ListToUint32OptionOption(m, f) }
func (m Uint32OptionOption) MapAnyList(f func(Uint32Option) AnyList) AnyListOption { return MapAnyListToUint32OptionOption(m, f) }
func (m Uint64OptionOption) MapBool(f func(Uint64Option) bool) BoolOption { return MapBoolToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapString(f func(Uint64Option) string) StringOption { return MapStringToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt(f func(Uint64Option) int) IntOption { return MapIntToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt8(f func(Uint64Option) int8) Int8Option { return MapInt8ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt16(f func(Uint64Option) int16) Int16Option { return MapInt16ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt32(f func(Uint64Option) int32) Int32Option { return MapInt32ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt64(f func(Uint64Option) int64) Int64Option { return MapInt64ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint(f func(Uint64Option) uint) UintOption { return MapUintToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint8(f func(Uint64Option) uint8) Uint8Option { return MapUint8ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint16(f func(Uint64Option) uint16) Uint16Option { return MapUint16ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint32(f func(Uint64Option) uint32) Uint32Option { return MapUint32ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint64(f func(Uint64Option) uint64) Uint64Option { return MapUint64ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintptr(f func(Uint64Option) uintptr) UintptrOption { return MapUintptrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapByte(f func(Uint64Option) byte) ByteOption { return MapByteToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapRune(f func(Uint64Option) rune) RuneOption { return MapRuneToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat32(f func(Uint64Option) float32) Float32Option { return MapFloat32ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat64(f func(Uint64Option) float64) Float64Option { return MapFloat64ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex64(f func(Uint64Option) complex64) Complex64Option { return MapComplex64ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex128(f func(Uint64Option) complex128) Complex128Option { return MapComplex128ToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapAny(f func(Uint64Option) Any) AnyOption { return MapAnyToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapBoolOption(f func(Uint64Option) BoolOption) BoolOptionOption { return MapBoolOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapStringOption(f func(Uint64Option) StringOption) StringOptionOption { return MapStringOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapIntOption(f func(Uint64Option) IntOption) IntOptionOption { return MapIntOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt8Option(f func(Uint64Option) Int8Option) Int8OptionOption { return MapInt8OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt16Option(f func(Uint64Option) Int16Option) Int16OptionOption { return MapInt16OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt32Option(f func(Uint64Option) Int32Option) Int32OptionOption { return MapInt32OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt64Option(f func(Uint64Option) Int64Option) Int64OptionOption { return MapInt64OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintOption(f func(Uint64Option) UintOption) UintOptionOption { return MapUintOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint8Option(f func(Uint64Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint16Option(f func(Uint64Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint32Option(f func(Uint64Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint64Option(f func(Uint64Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintptrOption(f func(Uint64Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapByteOption(f func(Uint64Option) ByteOption) ByteOptionOption { return MapByteOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapRuneOption(f func(Uint64Option) RuneOption) RuneOptionOption { return MapRuneOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat32Option(f func(Uint64Option) Float32Option) Float32OptionOption { return MapFloat32OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat64Option(f func(Uint64Option) Float64Option) Float64OptionOption { return MapFloat64OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex64Option(f func(Uint64Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex128Option(f func(Uint64Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapAnyOption(f func(Uint64Option) AnyOption) AnyOptionOption { return MapAnyOptionToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapBoolArr(f func(Uint64Option) []bool) BoolArrOption { return MapBoolArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapStringArr(f func(Uint64Option) []string) StringArrOption { return MapStringArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapIntArr(f func(Uint64Option) []int) IntArrOption { return MapIntArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt8Arr(f func(Uint64Option) []int8) Int8ArrOption { return MapInt8ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt16Arr(f func(Uint64Option) []int16) Int16ArrOption { return MapInt16ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt32Arr(f func(Uint64Option) []int32) Int32ArrOption { return MapInt32ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt64Arr(f func(Uint64Option) []int64) Int64ArrOption { return MapInt64ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintArr(f func(Uint64Option) []uint) UintArrOption { return MapUintArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint8Arr(f func(Uint64Option) []uint8) Uint8ArrOption { return MapUint8ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint16Arr(f func(Uint64Option) []uint16) Uint16ArrOption { return MapUint16ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint32Arr(f func(Uint64Option) []uint32) Uint32ArrOption { return MapUint32ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint64Arr(f func(Uint64Option) []uint64) Uint64ArrOption { return MapUint64ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintptrArr(f func(Uint64Option) []uintptr) UintptrArrOption { return MapUintptrArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapByteArr(f func(Uint64Option) []byte) ByteArrOption { return MapByteArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapRuneArr(f func(Uint64Option) []rune) RuneArrOption { return MapRuneArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat32Arr(f func(Uint64Option) []float32) Float32ArrOption { return MapFloat32ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat64Arr(f func(Uint64Option) []float64) Float64ArrOption { return MapFloat64ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex64Arr(f func(Uint64Option) []complex64) Complex64ArrOption { return MapComplex64ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex128Arr(f func(Uint64Option) []complex128) Complex128ArrOption { return MapComplex128ArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapAnyArr(f func(Uint64Option) []Any) AnyArrOption { return MapAnyArrToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapBoolList(f func(Uint64Option) BoolList) BoolListOption { return MapBoolListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapStringList(f func(Uint64Option) StringList) StringListOption { return MapStringListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapIntList(f func(Uint64Option) IntList) IntListOption { return MapIntListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt8List(f func(Uint64Option) Int8List) Int8ListOption { return MapInt8ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt16List(f func(Uint64Option) Int16List) Int16ListOption { return MapInt16ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt32List(f func(Uint64Option) Int32List) Int32ListOption { return MapInt32ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapInt64List(f func(Uint64Option) Int64List) Int64ListOption { return MapInt64ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintList(f func(Uint64Option) UintList) UintListOption { return MapUintListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint8List(f func(Uint64Option) Uint8List) Uint8ListOption { return MapUint8ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint16List(f func(Uint64Option) Uint16List) Uint16ListOption { return MapUint16ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint32List(f func(Uint64Option) Uint32List) Uint32ListOption { return MapUint32ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUint64List(f func(Uint64Option) Uint64List) Uint64ListOption { return MapUint64ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapUintptrList(f func(Uint64Option) UintptrList) UintptrListOption { return MapUintptrListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapByteList(f func(Uint64Option) ByteList) ByteListOption { return MapByteListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapRuneList(f func(Uint64Option) RuneList) RuneListOption { return MapRuneListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat32List(f func(Uint64Option) Float32List) Float32ListOption { return MapFloat32ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapFloat64List(f func(Uint64Option) Float64List) Float64ListOption { return MapFloat64ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex64List(f func(Uint64Option) Complex64List) Complex64ListOption { return MapComplex64ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapComplex128List(f func(Uint64Option) Complex128List) Complex128ListOption { return MapComplex128ListToUint64OptionOption(m, f) }
func (m Uint64OptionOption) MapAnyList(f func(Uint64Option) AnyList) AnyListOption { return MapAnyListToUint64OptionOption(m, f) }
func (m UintptrOptionOption) MapBool(f func(UintptrOption) bool) BoolOption { return MapBoolToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapString(f func(UintptrOption) string) StringOption { return MapStringToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt(f func(UintptrOption) int) IntOption { return MapIntToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt8(f func(UintptrOption) int8) Int8Option { return MapInt8ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt16(f func(UintptrOption) int16) Int16Option { return MapInt16ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt32(f func(UintptrOption) int32) Int32Option { return MapInt32ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt64(f func(UintptrOption) int64) Int64Option { return MapInt64ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint(f func(UintptrOption) uint) UintOption { return MapUintToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint8(f func(UintptrOption) uint8) Uint8Option { return MapUint8ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint16(f func(UintptrOption) uint16) Uint16Option { return MapUint16ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint32(f func(UintptrOption) uint32) Uint32Option { return MapUint32ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint64(f func(UintptrOption) uint64) Uint64Option { return MapUint64ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintptr(f func(UintptrOption) uintptr) UintptrOption { return MapUintptrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapByte(f func(UintptrOption) byte) ByteOption { return MapByteToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapRune(f func(UintptrOption) rune) RuneOption { return MapRuneToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat32(f func(UintptrOption) float32) Float32Option { return MapFloat32ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat64(f func(UintptrOption) float64) Float64Option { return MapFloat64ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex64(f func(UintptrOption) complex64) Complex64Option { return MapComplex64ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex128(f func(UintptrOption) complex128) Complex128Option { return MapComplex128ToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapAny(f func(UintptrOption) Any) AnyOption { return MapAnyToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapBoolOption(f func(UintptrOption) BoolOption) BoolOptionOption { return MapBoolOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapStringOption(f func(UintptrOption) StringOption) StringOptionOption { return MapStringOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapIntOption(f func(UintptrOption) IntOption) IntOptionOption { return MapIntOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt8Option(f func(UintptrOption) Int8Option) Int8OptionOption { return MapInt8OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt16Option(f func(UintptrOption) Int16Option) Int16OptionOption { return MapInt16OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt32Option(f func(UintptrOption) Int32Option) Int32OptionOption { return MapInt32OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt64Option(f func(UintptrOption) Int64Option) Int64OptionOption { return MapInt64OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintOption(f func(UintptrOption) UintOption) UintOptionOption { return MapUintOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint8Option(f func(UintptrOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint16Option(f func(UintptrOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint32Option(f func(UintptrOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint64Option(f func(UintptrOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintptrOption(f func(UintptrOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapByteOption(f func(UintptrOption) ByteOption) ByteOptionOption { return MapByteOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapRuneOption(f func(UintptrOption) RuneOption) RuneOptionOption { return MapRuneOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat32Option(f func(UintptrOption) Float32Option) Float32OptionOption { return MapFloat32OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat64Option(f func(UintptrOption) Float64Option) Float64OptionOption { return MapFloat64OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex64Option(f func(UintptrOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex128Option(f func(UintptrOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapAnyOption(f func(UintptrOption) AnyOption) AnyOptionOption { return MapAnyOptionToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapBoolArr(f func(UintptrOption) []bool) BoolArrOption { return MapBoolArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapStringArr(f func(UintptrOption) []string) StringArrOption { return MapStringArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapIntArr(f func(UintptrOption) []int) IntArrOption { return MapIntArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt8Arr(f func(UintptrOption) []int8) Int8ArrOption { return MapInt8ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt16Arr(f func(UintptrOption) []int16) Int16ArrOption { return MapInt16ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt32Arr(f func(UintptrOption) []int32) Int32ArrOption { return MapInt32ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt64Arr(f func(UintptrOption) []int64) Int64ArrOption { return MapInt64ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintArr(f func(UintptrOption) []uint) UintArrOption { return MapUintArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint8Arr(f func(UintptrOption) []uint8) Uint8ArrOption { return MapUint8ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint16Arr(f func(UintptrOption) []uint16) Uint16ArrOption { return MapUint16ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint32Arr(f func(UintptrOption) []uint32) Uint32ArrOption { return MapUint32ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint64Arr(f func(UintptrOption) []uint64) Uint64ArrOption { return MapUint64ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintptrArr(f func(UintptrOption) []uintptr) UintptrArrOption { return MapUintptrArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapByteArr(f func(UintptrOption) []byte) ByteArrOption { return MapByteArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapRuneArr(f func(UintptrOption) []rune) RuneArrOption { return MapRuneArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat32Arr(f func(UintptrOption) []float32) Float32ArrOption { return MapFloat32ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat64Arr(f func(UintptrOption) []float64) Float64ArrOption { return MapFloat64ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex64Arr(f func(UintptrOption) []complex64) Complex64ArrOption { return MapComplex64ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex128Arr(f func(UintptrOption) []complex128) Complex128ArrOption { return MapComplex128ArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapAnyArr(f func(UintptrOption) []Any) AnyArrOption { return MapAnyArrToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapBoolList(f func(UintptrOption) BoolList) BoolListOption { return MapBoolListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapStringList(f func(UintptrOption) StringList) StringListOption { return MapStringListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapIntList(f func(UintptrOption) IntList) IntListOption { return MapIntListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt8List(f func(UintptrOption) Int8List) Int8ListOption { return MapInt8ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt16List(f func(UintptrOption) Int16List) Int16ListOption { return MapInt16ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt32List(f func(UintptrOption) Int32List) Int32ListOption { return MapInt32ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapInt64List(f func(UintptrOption) Int64List) Int64ListOption { return MapInt64ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintList(f func(UintptrOption) UintList) UintListOption { return MapUintListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint8List(f func(UintptrOption) Uint8List) Uint8ListOption { return MapUint8ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint16List(f func(UintptrOption) Uint16List) Uint16ListOption { return MapUint16ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint32List(f func(UintptrOption) Uint32List) Uint32ListOption { return MapUint32ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUint64List(f func(UintptrOption) Uint64List) Uint64ListOption { return MapUint64ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapUintptrList(f func(UintptrOption) UintptrList) UintptrListOption { return MapUintptrListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapByteList(f func(UintptrOption) ByteList) ByteListOption { return MapByteListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapRuneList(f func(UintptrOption) RuneList) RuneListOption { return MapRuneListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat32List(f func(UintptrOption) Float32List) Float32ListOption { return MapFloat32ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapFloat64List(f func(UintptrOption) Float64List) Float64ListOption { return MapFloat64ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex64List(f func(UintptrOption) Complex64List) Complex64ListOption { return MapComplex64ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapComplex128List(f func(UintptrOption) Complex128List) Complex128ListOption { return MapComplex128ListToUintptrOptionOption(m, f) }
func (m UintptrOptionOption) MapAnyList(f func(UintptrOption) AnyList) AnyListOption { return MapAnyListToUintptrOptionOption(m, f) }
func (m ByteOptionOption) MapBool(f func(ByteOption) bool) BoolOption { return MapBoolToByteOptionOption(m, f) }
func (m ByteOptionOption) MapString(f func(ByteOption) string) StringOption { return MapStringToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt(f func(ByteOption) int) IntOption { return MapIntToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt8(f func(ByteOption) int8) Int8Option { return MapInt8ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt16(f func(ByteOption) int16) Int16Option { return MapInt16ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt32(f func(ByteOption) int32) Int32Option { return MapInt32ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt64(f func(ByteOption) int64) Int64Option { return MapInt64ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint(f func(ByteOption) uint) UintOption { return MapUintToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint8(f func(ByteOption) uint8) Uint8Option { return MapUint8ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint16(f func(ByteOption) uint16) Uint16Option { return MapUint16ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint32(f func(ByteOption) uint32) Uint32Option { return MapUint32ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint64(f func(ByteOption) uint64) Uint64Option { return MapUint64ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintptr(f func(ByteOption) uintptr) UintptrOption { return MapUintptrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapByte(f func(ByteOption) byte) ByteOption { return MapByteToByteOptionOption(m, f) }
func (m ByteOptionOption) MapRune(f func(ByteOption) rune) RuneOption { return MapRuneToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat32(f func(ByteOption) float32) Float32Option { return MapFloat32ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat64(f func(ByteOption) float64) Float64Option { return MapFloat64ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex64(f func(ByteOption) complex64) Complex64Option { return MapComplex64ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex128(f func(ByteOption) complex128) Complex128Option { return MapComplex128ToByteOptionOption(m, f) }
func (m ByteOptionOption) MapAny(f func(ByteOption) Any) AnyOption { return MapAnyToByteOptionOption(m, f) }
func (m ByteOptionOption) MapBoolOption(f func(ByteOption) BoolOption) BoolOptionOption { return MapBoolOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapStringOption(f func(ByteOption) StringOption) StringOptionOption { return MapStringOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapIntOption(f func(ByteOption) IntOption) IntOptionOption { return MapIntOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt8Option(f func(ByteOption) Int8Option) Int8OptionOption { return MapInt8OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt16Option(f func(ByteOption) Int16Option) Int16OptionOption { return MapInt16OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt32Option(f func(ByteOption) Int32Option) Int32OptionOption { return MapInt32OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt64Option(f func(ByteOption) Int64Option) Int64OptionOption { return MapInt64OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintOption(f func(ByteOption) UintOption) UintOptionOption { return MapUintOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint8Option(f func(ByteOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint16Option(f func(ByteOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint32Option(f func(ByteOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint64Option(f func(ByteOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintptrOption(f func(ByteOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapByteOption(f func(ByteOption) ByteOption) ByteOptionOption { return MapByteOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapRuneOption(f func(ByteOption) RuneOption) RuneOptionOption { return MapRuneOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat32Option(f func(ByteOption) Float32Option) Float32OptionOption { return MapFloat32OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat64Option(f func(ByteOption) Float64Option) Float64OptionOption { return MapFloat64OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex64Option(f func(ByteOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex128Option(f func(ByteOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapAnyOption(f func(ByteOption) AnyOption) AnyOptionOption { return MapAnyOptionToByteOptionOption(m, f) }
func (m ByteOptionOption) MapBoolArr(f func(ByteOption) []bool) BoolArrOption { return MapBoolArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapStringArr(f func(ByteOption) []string) StringArrOption { return MapStringArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapIntArr(f func(ByteOption) []int) IntArrOption { return MapIntArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt8Arr(f func(ByteOption) []int8) Int8ArrOption { return MapInt8ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt16Arr(f func(ByteOption) []int16) Int16ArrOption { return MapInt16ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt32Arr(f func(ByteOption) []int32) Int32ArrOption { return MapInt32ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt64Arr(f func(ByteOption) []int64) Int64ArrOption { return MapInt64ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintArr(f func(ByteOption) []uint) UintArrOption { return MapUintArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint8Arr(f func(ByteOption) []uint8) Uint8ArrOption { return MapUint8ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint16Arr(f func(ByteOption) []uint16) Uint16ArrOption { return MapUint16ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint32Arr(f func(ByteOption) []uint32) Uint32ArrOption { return MapUint32ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint64Arr(f func(ByteOption) []uint64) Uint64ArrOption { return MapUint64ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintptrArr(f func(ByteOption) []uintptr) UintptrArrOption { return MapUintptrArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapByteArr(f func(ByteOption) []byte) ByteArrOption { return MapByteArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapRuneArr(f func(ByteOption) []rune) RuneArrOption { return MapRuneArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat32Arr(f func(ByteOption) []float32) Float32ArrOption { return MapFloat32ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat64Arr(f func(ByteOption) []float64) Float64ArrOption { return MapFloat64ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex64Arr(f func(ByteOption) []complex64) Complex64ArrOption { return MapComplex64ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex128Arr(f func(ByteOption) []complex128) Complex128ArrOption { return MapComplex128ArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapAnyArr(f func(ByteOption) []Any) AnyArrOption { return MapAnyArrToByteOptionOption(m, f) }
func (m ByteOptionOption) MapBoolList(f func(ByteOption) BoolList) BoolListOption { return MapBoolListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapStringList(f func(ByteOption) StringList) StringListOption { return MapStringListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapIntList(f func(ByteOption) IntList) IntListOption { return MapIntListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt8List(f func(ByteOption) Int8List) Int8ListOption { return MapInt8ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt16List(f func(ByteOption) Int16List) Int16ListOption { return MapInt16ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt32List(f func(ByteOption) Int32List) Int32ListOption { return MapInt32ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapInt64List(f func(ByteOption) Int64List) Int64ListOption { return MapInt64ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintList(f func(ByteOption) UintList) UintListOption { return MapUintListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint8List(f func(ByteOption) Uint8List) Uint8ListOption { return MapUint8ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint16List(f func(ByteOption) Uint16List) Uint16ListOption { return MapUint16ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint32List(f func(ByteOption) Uint32List) Uint32ListOption { return MapUint32ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUint64List(f func(ByteOption) Uint64List) Uint64ListOption { return MapUint64ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapUintptrList(f func(ByteOption) UintptrList) UintptrListOption { return MapUintptrListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapByteList(f func(ByteOption) ByteList) ByteListOption { return MapByteListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapRuneList(f func(ByteOption) RuneList) RuneListOption { return MapRuneListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat32List(f func(ByteOption) Float32List) Float32ListOption { return MapFloat32ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapFloat64List(f func(ByteOption) Float64List) Float64ListOption { return MapFloat64ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex64List(f func(ByteOption) Complex64List) Complex64ListOption { return MapComplex64ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapComplex128List(f func(ByteOption) Complex128List) Complex128ListOption { return MapComplex128ListToByteOptionOption(m, f) }
func (m ByteOptionOption) MapAnyList(f func(ByteOption) AnyList) AnyListOption { return MapAnyListToByteOptionOption(m, f) }
func (m RuneOptionOption) MapBool(f func(RuneOption) bool) BoolOption { return MapBoolToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapString(f func(RuneOption) string) StringOption { return MapStringToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt(f func(RuneOption) int) IntOption { return MapIntToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt8(f func(RuneOption) int8) Int8Option { return MapInt8ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt16(f func(RuneOption) int16) Int16Option { return MapInt16ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt32(f func(RuneOption) int32) Int32Option { return MapInt32ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt64(f func(RuneOption) int64) Int64Option { return MapInt64ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint(f func(RuneOption) uint) UintOption { return MapUintToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint8(f func(RuneOption) uint8) Uint8Option { return MapUint8ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint16(f func(RuneOption) uint16) Uint16Option { return MapUint16ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint32(f func(RuneOption) uint32) Uint32Option { return MapUint32ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint64(f func(RuneOption) uint64) Uint64Option { return MapUint64ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintptr(f func(RuneOption) uintptr) UintptrOption { return MapUintptrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapByte(f func(RuneOption) byte) ByteOption { return MapByteToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapRune(f func(RuneOption) rune) RuneOption { return MapRuneToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat32(f func(RuneOption) float32) Float32Option { return MapFloat32ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat64(f func(RuneOption) float64) Float64Option { return MapFloat64ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex64(f func(RuneOption) complex64) Complex64Option { return MapComplex64ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex128(f func(RuneOption) complex128) Complex128Option { return MapComplex128ToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapAny(f func(RuneOption) Any) AnyOption { return MapAnyToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapBoolOption(f func(RuneOption) BoolOption) BoolOptionOption { return MapBoolOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapStringOption(f func(RuneOption) StringOption) StringOptionOption { return MapStringOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapIntOption(f func(RuneOption) IntOption) IntOptionOption { return MapIntOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt8Option(f func(RuneOption) Int8Option) Int8OptionOption { return MapInt8OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt16Option(f func(RuneOption) Int16Option) Int16OptionOption { return MapInt16OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt32Option(f func(RuneOption) Int32Option) Int32OptionOption { return MapInt32OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt64Option(f func(RuneOption) Int64Option) Int64OptionOption { return MapInt64OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintOption(f func(RuneOption) UintOption) UintOptionOption { return MapUintOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint8Option(f func(RuneOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint16Option(f func(RuneOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint32Option(f func(RuneOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint64Option(f func(RuneOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintptrOption(f func(RuneOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapByteOption(f func(RuneOption) ByteOption) ByteOptionOption { return MapByteOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapRuneOption(f func(RuneOption) RuneOption) RuneOptionOption { return MapRuneOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat32Option(f func(RuneOption) Float32Option) Float32OptionOption { return MapFloat32OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat64Option(f func(RuneOption) Float64Option) Float64OptionOption { return MapFloat64OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex64Option(f func(RuneOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex128Option(f func(RuneOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapAnyOption(f func(RuneOption) AnyOption) AnyOptionOption { return MapAnyOptionToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapBoolArr(f func(RuneOption) []bool) BoolArrOption { return MapBoolArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapStringArr(f func(RuneOption) []string) StringArrOption { return MapStringArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapIntArr(f func(RuneOption) []int) IntArrOption { return MapIntArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt8Arr(f func(RuneOption) []int8) Int8ArrOption { return MapInt8ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt16Arr(f func(RuneOption) []int16) Int16ArrOption { return MapInt16ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt32Arr(f func(RuneOption) []int32) Int32ArrOption { return MapInt32ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt64Arr(f func(RuneOption) []int64) Int64ArrOption { return MapInt64ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintArr(f func(RuneOption) []uint) UintArrOption { return MapUintArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint8Arr(f func(RuneOption) []uint8) Uint8ArrOption { return MapUint8ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint16Arr(f func(RuneOption) []uint16) Uint16ArrOption { return MapUint16ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint32Arr(f func(RuneOption) []uint32) Uint32ArrOption { return MapUint32ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint64Arr(f func(RuneOption) []uint64) Uint64ArrOption { return MapUint64ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintptrArr(f func(RuneOption) []uintptr) UintptrArrOption { return MapUintptrArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapByteArr(f func(RuneOption) []byte) ByteArrOption { return MapByteArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapRuneArr(f func(RuneOption) []rune) RuneArrOption { return MapRuneArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat32Arr(f func(RuneOption) []float32) Float32ArrOption { return MapFloat32ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat64Arr(f func(RuneOption) []float64) Float64ArrOption { return MapFloat64ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex64Arr(f func(RuneOption) []complex64) Complex64ArrOption { return MapComplex64ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex128Arr(f func(RuneOption) []complex128) Complex128ArrOption { return MapComplex128ArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapAnyArr(f func(RuneOption) []Any) AnyArrOption { return MapAnyArrToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapBoolList(f func(RuneOption) BoolList) BoolListOption { return MapBoolListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapStringList(f func(RuneOption) StringList) StringListOption { return MapStringListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapIntList(f func(RuneOption) IntList) IntListOption { return MapIntListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt8List(f func(RuneOption) Int8List) Int8ListOption { return MapInt8ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt16List(f func(RuneOption) Int16List) Int16ListOption { return MapInt16ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt32List(f func(RuneOption) Int32List) Int32ListOption { return MapInt32ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapInt64List(f func(RuneOption) Int64List) Int64ListOption { return MapInt64ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintList(f func(RuneOption) UintList) UintListOption { return MapUintListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint8List(f func(RuneOption) Uint8List) Uint8ListOption { return MapUint8ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint16List(f func(RuneOption) Uint16List) Uint16ListOption { return MapUint16ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint32List(f func(RuneOption) Uint32List) Uint32ListOption { return MapUint32ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUint64List(f func(RuneOption) Uint64List) Uint64ListOption { return MapUint64ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapUintptrList(f func(RuneOption) UintptrList) UintptrListOption { return MapUintptrListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapByteList(f func(RuneOption) ByteList) ByteListOption { return MapByteListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapRuneList(f func(RuneOption) RuneList) RuneListOption { return MapRuneListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat32List(f func(RuneOption) Float32List) Float32ListOption { return MapFloat32ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapFloat64List(f func(RuneOption) Float64List) Float64ListOption { return MapFloat64ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex64List(f func(RuneOption) Complex64List) Complex64ListOption { return MapComplex64ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapComplex128List(f func(RuneOption) Complex128List) Complex128ListOption { return MapComplex128ListToRuneOptionOption(m, f) }
func (m RuneOptionOption) MapAnyList(f func(RuneOption) AnyList) AnyListOption { return MapAnyListToRuneOptionOption(m, f) }
func (m Float32OptionOption) MapBool(f func(Float32Option) bool) BoolOption { return MapBoolToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapString(f func(Float32Option) string) StringOption { return MapStringToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt(f func(Float32Option) int) IntOption { return MapIntToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt8(f func(Float32Option) int8) Int8Option { return MapInt8ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt16(f func(Float32Option) int16) Int16Option { return MapInt16ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt32(f func(Float32Option) int32) Int32Option { return MapInt32ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt64(f func(Float32Option) int64) Int64Option { return MapInt64ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint(f func(Float32Option) uint) UintOption { return MapUintToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint8(f func(Float32Option) uint8) Uint8Option { return MapUint8ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint16(f func(Float32Option) uint16) Uint16Option { return MapUint16ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint32(f func(Float32Option) uint32) Uint32Option { return MapUint32ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint64(f func(Float32Option) uint64) Uint64Option { return MapUint64ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintptr(f func(Float32Option) uintptr) UintptrOption { return MapUintptrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapByte(f func(Float32Option) byte) ByteOption { return MapByteToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapRune(f func(Float32Option) rune) RuneOption { return MapRuneToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat32(f func(Float32Option) float32) Float32Option { return MapFloat32ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat64(f func(Float32Option) float64) Float64Option { return MapFloat64ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex64(f func(Float32Option) complex64) Complex64Option { return MapComplex64ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex128(f func(Float32Option) complex128) Complex128Option { return MapComplex128ToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapAny(f func(Float32Option) Any) AnyOption { return MapAnyToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapBoolOption(f func(Float32Option) BoolOption) BoolOptionOption { return MapBoolOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapStringOption(f func(Float32Option) StringOption) StringOptionOption { return MapStringOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapIntOption(f func(Float32Option) IntOption) IntOptionOption { return MapIntOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt8Option(f func(Float32Option) Int8Option) Int8OptionOption { return MapInt8OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt16Option(f func(Float32Option) Int16Option) Int16OptionOption { return MapInt16OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt32Option(f func(Float32Option) Int32Option) Int32OptionOption { return MapInt32OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt64Option(f func(Float32Option) Int64Option) Int64OptionOption { return MapInt64OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintOption(f func(Float32Option) UintOption) UintOptionOption { return MapUintOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint8Option(f func(Float32Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint16Option(f func(Float32Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint32Option(f func(Float32Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint64Option(f func(Float32Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintptrOption(f func(Float32Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapByteOption(f func(Float32Option) ByteOption) ByteOptionOption { return MapByteOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapRuneOption(f func(Float32Option) RuneOption) RuneOptionOption { return MapRuneOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat32Option(f func(Float32Option) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat64Option(f func(Float32Option) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex64Option(f func(Float32Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex128Option(f func(Float32Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapAnyOption(f func(Float32Option) AnyOption) AnyOptionOption { return MapAnyOptionToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapBoolArr(f func(Float32Option) []bool) BoolArrOption { return MapBoolArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapStringArr(f func(Float32Option) []string) StringArrOption { return MapStringArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapIntArr(f func(Float32Option) []int) IntArrOption { return MapIntArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt8Arr(f func(Float32Option) []int8) Int8ArrOption { return MapInt8ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt16Arr(f func(Float32Option) []int16) Int16ArrOption { return MapInt16ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt32Arr(f func(Float32Option) []int32) Int32ArrOption { return MapInt32ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt64Arr(f func(Float32Option) []int64) Int64ArrOption { return MapInt64ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintArr(f func(Float32Option) []uint) UintArrOption { return MapUintArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint8Arr(f func(Float32Option) []uint8) Uint8ArrOption { return MapUint8ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint16Arr(f func(Float32Option) []uint16) Uint16ArrOption { return MapUint16ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint32Arr(f func(Float32Option) []uint32) Uint32ArrOption { return MapUint32ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint64Arr(f func(Float32Option) []uint64) Uint64ArrOption { return MapUint64ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintptrArr(f func(Float32Option) []uintptr) UintptrArrOption { return MapUintptrArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapByteArr(f func(Float32Option) []byte) ByteArrOption { return MapByteArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapRuneArr(f func(Float32Option) []rune) RuneArrOption { return MapRuneArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat32Arr(f func(Float32Option) []float32) Float32ArrOption { return MapFloat32ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat64Arr(f func(Float32Option) []float64) Float64ArrOption { return MapFloat64ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex64Arr(f func(Float32Option) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex128Arr(f func(Float32Option) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapAnyArr(f func(Float32Option) []Any) AnyArrOption { return MapAnyArrToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapBoolList(f func(Float32Option) BoolList) BoolListOption { return MapBoolListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapStringList(f func(Float32Option) StringList) StringListOption { return MapStringListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapIntList(f func(Float32Option) IntList) IntListOption { return MapIntListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt8List(f func(Float32Option) Int8List) Int8ListOption { return MapInt8ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt16List(f func(Float32Option) Int16List) Int16ListOption { return MapInt16ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt32List(f func(Float32Option) Int32List) Int32ListOption { return MapInt32ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapInt64List(f func(Float32Option) Int64List) Int64ListOption { return MapInt64ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintList(f func(Float32Option) UintList) UintListOption { return MapUintListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint8List(f func(Float32Option) Uint8List) Uint8ListOption { return MapUint8ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint16List(f func(Float32Option) Uint16List) Uint16ListOption { return MapUint16ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint32List(f func(Float32Option) Uint32List) Uint32ListOption { return MapUint32ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUint64List(f func(Float32Option) Uint64List) Uint64ListOption { return MapUint64ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapUintptrList(f func(Float32Option) UintptrList) UintptrListOption { return MapUintptrListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapByteList(f func(Float32Option) ByteList) ByteListOption { return MapByteListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapRuneList(f func(Float32Option) RuneList) RuneListOption { return MapRuneListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat32List(f func(Float32Option) Float32List) Float32ListOption { return MapFloat32ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapFloat64List(f func(Float32Option) Float64List) Float64ListOption { return MapFloat64ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex64List(f func(Float32Option) Complex64List) Complex64ListOption { return MapComplex64ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapComplex128List(f func(Float32Option) Complex128List) Complex128ListOption { return MapComplex128ListToFloat32OptionOption(m, f) }
func (m Float32OptionOption) MapAnyList(f func(Float32Option) AnyList) AnyListOption { return MapAnyListToFloat32OptionOption(m, f) }
func (m Float64OptionOption) MapBool(f func(Float64Option) bool) BoolOption { return MapBoolToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapString(f func(Float64Option) string) StringOption { return MapStringToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt(f func(Float64Option) int) IntOption { return MapIntToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt8(f func(Float64Option) int8) Int8Option { return MapInt8ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt16(f func(Float64Option) int16) Int16Option { return MapInt16ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt32(f func(Float64Option) int32) Int32Option { return MapInt32ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt64(f func(Float64Option) int64) Int64Option { return MapInt64ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint(f func(Float64Option) uint) UintOption { return MapUintToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint8(f func(Float64Option) uint8) Uint8Option { return MapUint8ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint16(f func(Float64Option) uint16) Uint16Option { return MapUint16ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint32(f func(Float64Option) uint32) Uint32Option { return MapUint32ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint64(f func(Float64Option) uint64) Uint64Option { return MapUint64ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintptr(f func(Float64Option) uintptr) UintptrOption { return MapUintptrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapByte(f func(Float64Option) byte) ByteOption { return MapByteToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapRune(f func(Float64Option) rune) RuneOption { return MapRuneToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat32(f func(Float64Option) float32) Float32Option { return MapFloat32ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat64(f func(Float64Option) float64) Float64Option { return MapFloat64ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex64(f func(Float64Option) complex64) Complex64Option { return MapComplex64ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex128(f func(Float64Option) complex128) Complex128Option { return MapComplex128ToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapAny(f func(Float64Option) Any) AnyOption { return MapAnyToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapBoolOption(f func(Float64Option) BoolOption) BoolOptionOption { return MapBoolOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapStringOption(f func(Float64Option) StringOption) StringOptionOption { return MapStringOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapIntOption(f func(Float64Option) IntOption) IntOptionOption { return MapIntOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt8Option(f func(Float64Option) Int8Option) Int8OptionOption { return MapInt8OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt16Option(f func(Float64Option) Int16Option) Int16OptionOption { return MapInt16OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt32Option(f func(Float64Option) Int32Option) Int32OptionOption { return MapInt32OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt64Option(f func(Float64Option) Int64Option) Int64OptionOption { return MapInt64OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintOption(f func(Float64Option) UintOption) UintOptionOption { return MapUintOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint8Option(f func(Float64Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint16Option(f func(Float64Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint32Option(f func(Float64Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint64Option(f func(Float64Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintptrOption(f func(Float64Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapByteOption(f func(Float64Option) ByteOption) ByteOptionOption { return MapByteOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapRuneOption(f func(Float64Option) RuneOption) RuneOptionOption { return MapRuneOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat32Option(f func(Float64Option) Float32Option) Float32OptionOption { return MapFloat32OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat64Option(f func(Float64Option) Float64Option) Float64OptionOption { return MapFloat64OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex64Option(f func(Float64Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex128Option(f func(Float64Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapAnyOption(f func(Float64Option) AnyOption) AnyOptionOption { return MapAnyOptionToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapBoolArr(f func(Float64Option) []bool) BoolArrOption { return MapBoolArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapStringArr(f func(Float64Option) []string) StringArrOption { return MapStringArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapIntArr(f func(Float64Option) []int) IntArrOption { return MapIntArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt8Arr(f func(Float64Option) []int8) Int8ArrOption { return MapInt8ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt16Arr(f func(Float64Option) []int16) Int16ArrOption { return MapInt16ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt32Arr(f func(Float64Option) []int32) Int32ArrOption { return MapInt32ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt64Arr(f func(Float64Option) []int64) Int64ArrOption { return MapInt64ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintArr(f func(Float64Option) []uint) UintArrOption { return MapUintArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint8Arr(f func(Float64Option) []uint8) Uint8ArrOption { return MapUint8ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint16Arr(f func(Float64Option) []uint16) Uint16ArrOption { return MapUint16ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint32Arr(f func(Float64Option) []uint32) Uint32ArrOption { return MapUint32ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint64Arr(f func(Float64Option) []uint64) Uint64ArrOption { return MapUint64ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintptrArr(f func(Float64Option) []uintptr) UintptrArrOption { return MapUintptrArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapByteArr(f func(Float64Option) []byte) ByteArrOption { return MapByteArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapRuneArr(f func(Float64Option) []rune) RuneArrOption { return MapRuneArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat32Arr(f func(Float64Option) []float32) Float32ArrOption { return MapFloat32ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat64Arr(f func(Float64Option) []float64) Float64ArrOption { return MapFloat64ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex64Arr(f func(Float64Option) []complex64) Complex64ArrOption { return MapComplex64ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex128Arr(f func(Float64Option) []complex128) Complex128ArrOption { return MapComplex128ArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapAnyArr(f func(Float64Option) []Any) AnyArrOption { return MapAnyArrToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapBoolList(f func(Float64Option) BoolList) BoolListOption { return MapBoolListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapStringList(f func(Float64Option) StringList) StringListOption { return MapStringListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapIntList(f func(Float64Option) IntList) IntListOption { return MapIntListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt8List(f func(Float64Option) Int8List) Int8ListOption { return MapInt8ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt16List(f func(Float64Option) Int16List) Int16ListOption { return MapInt16ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt32List(f func(Float64Option) Int32List) Int32ListOption { return MapInt32ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapInt64List(f func(Float64Option) Int64List) Int64ListOption { return MapInt64ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintList(f func(Float64Option) UintList) UintListOption { return MapUintListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint8List(f func(Float64Option) Uint8List) Uint8ListOption { return MapUint8ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint16List(f func(Float64Option) Uint16List) Uint16ListOption { return MapUint16ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint32List(f func(Float64Option) Uint32List) Uint32ListOption { return MapUint32ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUint64List(f func(Float64Option) Uint64List) Uint64ListOption { return MapUint64ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapUintptrList(f func(Float64Option) UintptrList) UintptrListOption { return MapUintptrListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapByteList(f func(Float64Option) ByteList) ByteListOption { return MapByteListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapRuneList(f func(Float64Option) RuneList) RuneListOption { return MapRuneListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat32List(f func(Float64Option) Float32List) Float32ListOption { return MapFloat32ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapFloat64List(f func(Float64Option) Float64List) Float64ListOption { return MapFloat64ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex64List(f func(Float64Option) Complex64List) Complex64ListOption { return MapComplex64ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapComplex128List(f func(Float64Option) Complex128List) Complex128ListOption { return MapComplex128ListToFloat64OptionOption(m, f) }
func (m Float64OptionOption) MapAnyList(f func(Float64Option) AnyList) AnyListOption { return MapAnyListToFloat64OptionOption(m, f) }
func (m Complex64OptionOption) MapBool(f func(Complex64Option) bool) BoolOption { return MapBoolToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapString(f func(Complex64Option) string) StringOption { return MapStringToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt(f func(Complex64Option) int) IntOption { return MapIntToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt8(f func(Complex64Option) int8) Int8Option { return MapInt8ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt16(f func(Complex64Option) int16) Int16Option { return MapInt16ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt32(f func(Complex64Option) int32) Int32Option { return MapInt32ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt64(f func(Complex64Option) int64) Int64Option { return MapInt64ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint(f func(Complex64Option) uint) UintOption { return MapUintToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint8(f func(Complex64Option) uint8) Uint8Option { return MapUint8ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint16(f func(Complex64Option) uint16) Uint16Option { return MapUint16ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint32(f func(Complex64Option) uint32) Uint32Option { return MapUint32ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint64(f func(Complex64Option) uint64) Uint64Option { return MapUint64ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintptr(f func(Complex64Option) uintptr) UintptrOption { return MapUintptrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapByte(f func(Complex64Option) byte) ByteOption { return MapByteToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapRune(f func(Complex64Option) rune) RuneOption { return MapRuneToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat32(f func(Complex64Option) float32) Float32Option { return MapFloat32ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat64(f func(Complex64Option) float64) Float64Option { return MapFloat64ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex64(f func(Complex64Option) complex64) Complex64Option { return MapComplex64ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex128(f func(Complex64Option) complex128) Complex128Option { return MapComplex128ToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapAny(f func(Complex64Option) Any) AnyOption { return MapAnyToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapBoolOption(f func(Complex64Option) BoolOption) BoolOptionOption { return MapBoolOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapStringOption(f func(Complex64Option) StringOption) StringOptionOption { return MapStringOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapIntOption(f func(Complex64Option) IntOption) IntOptionOption { return MapIntOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt8Option(f func(Complex64Option) Int8Option) Int8OptionOption { return MapInt8OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt16Option(f func(Complex64Option) Int16Option) Int16OptionOption { return MapInt16OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt32Option(f func(Complex64Option) Int32Option) Int32OptionOption { return MapInt32OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt64Option(f func(Complex64Option) Int64Option) Int64OptionOption { return MapInt64OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintOption(f func(Complex64Option) UintOption) UintOptionOption { return MapUintOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint8Option(f func(Complex64Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint16Option(f func(Complex64Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint32Option(f func(Complex64Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint64Option(f func(Complex64Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintptrOption(f func(Complex64Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapByteOption(f func(Complex64Option) ByteOption) ByteOptionOption { return MapByteOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapRuneOption(f func(Complex64Option) RuneOption) RuneOptionOption { return MapRuneOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat32Option(f func(Complex64Option) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat64Option(f func(Complex64Option) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex64Option(f func(Complex64Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex128Option(f func(Complex64Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapAnyOption(f func(Complex64Option) AnyOption) AnyOptionOption { return MapAnyOptionToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapBoolArr(f func(Complex64Option) []bool) BoolArrOption { return MapBoolArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapStringArr(f func(Complex64Option) []string) StringArrOption { return MapStringArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapIntArr(f func(Complex64Option) []int) IntArrOption { return MapIntArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt8Arr(f func(Complex64Option) []int8) Int8ArrOption { return MapInt8ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt16Arr(f func(Complex64Option) []int16) Int16ArrOption { return MapInt16ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt32Arr(f func(Complex64Option) []int32) Int32ArrOption { return MapInt32ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt64Arr(f func(Complex64Option) []int64) Int64ArrOption { return MapInt64ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintArr(f func(Complex64Option) []uint) UintArrOption { return MapUintArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint8Arr(f func(Complex64Option) []uint8) Uint8ArrOption { return MapUint8ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint16Arr(f func(Complex64Option) []uint16) Uint16ArrOption { return MapUint16ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint32Arr(f func(Complex64Option) []uint32) Uint32ArrOption { return MapUint32ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint64Arr(f func(Complex64Option) []uint64) Uint64ArrOption { return MapUint64ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintptrArr(f func(Complex64Option) []uintptr) UintptrArrOption { return MapUintptrArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapByteArr(f func(Complex64Option) []byte) ByteArrOption { return MapByteArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapRuneArr(f func(Complex64Option) []rune) RuneArrOption { return MapRuneArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat32Arr(f func(Complex64Option) []float32) Float32ArrOption { return MapFloat32ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat64Arr(f func(Complex64Option) []float64) Float64ArrOption { return MapFloat64ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex64Arr(f func(Complex64Option) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex128Arr(f func(Complex64Option) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapAnyArr(f func(Complex64Option) []Any) AnyArrOption { return MapAnyArrToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapBoolList(f func(Complex64Option) BoolList) BoolListOption { return MapBoolListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapStringList(f func(Complex64Option) StringList) StringListOption { return MapStringListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapIntList(f func(Complex64Option) IntList) IntListOption { return MapIntListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt8List(f func(Complex64Option) Int8List) Int8ListOption { return MapInt8ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt16List(f func(Complex64Option) Int16List) Int16ListOption { return MapInt16ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt32List(f func(Complex64Option) Int32List) Int32ListOption { return MapInt32ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapInt64List(f func(Complex64Option) Int64List) Int64ListOption { return MapInt64ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintList(f func(Complex64Option) UintList) UintListOption { return MapUintListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint8List(f func(Complex64Option) Uint8List) Uint8ListOption { return MapUint8ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint16List(f func(Complex64Option) Uint16List) Uint16ListOption { return MapUint16ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint32List(f func(Complex64Option) Uint32List) Uint32ListOption { return MapUint32ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUint64List(f func(Complex64Option) Uint64List) Uint64ListOption { return MapUint64ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapUintptrList(f func(Complex64Option) UintptrList) UintptrListOption { return MapUintptrListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapByteList(f func(Complex64Option) ByteList) ByteListOption { return MapByteListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapRuneList(f func(Complex64Option) RuneList) RuneListOption { return MapRuneListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat32List(f func(Complex64Option) Float32List) Float32ListOption { return MapFloat32ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapFloat64List(f func(Complex64Option) Float64List) Float64ListOption { return MapFloat64ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex64List(f func(Complex64Option) Complex64List) Complex64ListOption { return MapComplex64ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapComplex128List(f func(Complex64Option) Complex128List) Complex128ListOption { return MapComplex128ListToComplex64OptionOption(m, f) }
func (m Complex64OptionOption) MapAnyList(f func(Complex64Option) AnyList) AnyListOption { return MapAnyListToComplex64OptionOption(m, f) }
func (m Complex128OptionOption) MapBool(f func(Complex128Option) bool) BoolOption { return MapBoolToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapString(f func(Complex128Option) string) StringOption { return MapStringToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt(f func(Complex128Option) int) IntOption { return MapIntToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt8(f func(Complex128Option) int8) Int8Option { return MapInt8ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt16(f func(Complex128Option) int16) Int16Option { return MapInt16ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt32(f func(Complex128Option) int32) Int32Option { return MapInt32ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt64(f func(Complex128Option) int64) Int64Option { return MapInt64ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint(f func(Complex128Option) uint) UintOption { return MapUintToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint8(f func(Complex128Option) uint8) Uint8Option { return MapUint8ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint16(f func(Complex128Option) uint16) Uint16Option { return MapUint16ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint32(f func(Complex128Option) uint32) Uint32Option { return MapUint32ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint64(f func(Complex128Option) uint64) Uint64Option { return MapUint64ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintptr(f func(Complex128Option) uintptr) UintptrOption { return MapUintptrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapByte(f func(Complex128Option) byte) ByteOption { return MapByteToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapRune(f func(Complex128Option) rune) RuneOption { return MapRuneToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat32(f func(Complex128Option) float32) Float32Option { return MapFloat32ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat64(f func(Complex128Option) float64) Float64Option { return MapFloat64ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex64(f func(Complex128Option) complex64) Complex64Option { return MapComplex64ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex128(f func(Complex128Option) complex128) Complex128Option { return MapComplex128ToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapAny(f func(Complex128Option) Any) AnyOption { return MapAnyToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapBoolOption(f func(Complex128Option) BoolOption) BoolOptionOption { return MapBoolOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapStringOption(f func(Complex128Option) StringOption) StringOptionOption { return MapStringOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapIntOption(f func(Complex128Option) IntOption) IntOptionOption { return MapIntOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt8Option(f func(Complex128Option) Int8Option) Int8OptionOption { return MapInt8OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt16Option(f func(Complex128Option) Int16Option) Int16OptionOption { return MapInt16OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt32Option(f func(Complex128Option) Int32Option) Int32OptionOption { return MapInt32OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt64Option(f func(Complex128Option) Int64Option) Int64OptionOption { return MapInt64OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintOption(f func(Complex128Option) UintOption) UintOptionOption { return MapUintOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint8Option(f func(Complex128Option) Uint8Option) Uint8OptionOption { return MapUint8OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint16Option(f func(Complex128Option) Uint16Option) Uint16OptionOption { return MapUint16OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint32Option(f func(Complex128Option) Uint32Option) Uint32OptionOption { return MapUint32OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint64Option(f func(Complex128Option) Uint64Option) Uint64OptionOption { return MapUint64OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintptrOption(f func(Complex128Option) UintptrOption) UintptrOptionOption { return MapUintptrOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapByteOption(f func(Complex128Option) ByteOption) ByteOptionOption { return MapByteOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapRuneOption(f func(Complex128Option) RuneOption) RuneOptionOption { return MapRuneOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat32Option(f func(Complex128Option) Float32Option) Float32OptionOption { return MapFloat32OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat64Option(f func(Complex128Option) Float64Option) Float64OptionOption { return MapFloat64OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex64Option(f func(Complex128Option) Complex64Option) Complex64OptionOption { return MapComplex64OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex128Option(f func(Complex128Option) Complex128Option) Complex128OptionOption { return MapComplex128OptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapAnyOption(f func(Complex128Option) AnyOption) AnyOptionOption { return MapAnyOptionToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapBoolArr(f func(Complex128Option) []bool) BoolArrOption { return MapBoolArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapStringArr(f func(Complex128Option) []string) StringArrOption { return MapStringArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapIntArr(f func(Complex128Option) []int) IntArrOption { return MapIntArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt8Arr(f func(Complex128Option) []int8) Int8ArrOption { return MapInt8ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt16Arr(f func(Complex128Option) []int16) Int16ArrOption { return MapInt16ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt32Arr(f func(Complex128Option) []int32) Int32ArrOption { return MapInt32ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt64Arr(f func(Complex128Option) []int64) Int64ArrOption { return MapInt64ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintArr(f func(Complex128Option) []uint) UintArrOption { return MapUintArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint8Arr(f func(Complex128Option) []uint8) Uint8ArrOption { return MapUint8ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint16Arr(f func(Complex128Option) []uint16) Uint16ArrOption { return MapUint16ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint32Arr(f func(Complex128Option) []uint32) Uint32ArrOption { return MapUint32ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint64Arr(f func(Complex128Option) []uint64) Uint64ArrOption { return MapUint64ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintptrArr(f func(Complex128Option) []uintptr) UintptrArrOption { return MapUintptrArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapByteArr(f func(Complex128Option) []byte) ByteArrOption { return MapByteArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapRuneArr(f func(Complex128Option) []rune) RuneArrOption { return MapRuneArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat32Arr(f func(Complex128Option) []float32) Float32ArrOption { return MapFloat32ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat64Arr(f func(Complex128Option) []float64) Float64ArrOption { return MapFloat64ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex64Arr(f func(Complex128Option) []complex64) Complex64ArrOption { return MapComplex64ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex128Arr(f func(Complex128Option) []complex128) Complex128ArrOption { return MapComplex128ArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapAnyArr(f func(Complex128Option) []Any) AnyArrOption { return MapAnyArrToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapBoolList(f func(Complex128Option) BoolList) BoolListOption { return MapBoolListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapStringList(f func(Complex128Option) StringList) StringListOption { return MapStringListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapIntList(f func(Complex128Option) IntList) IntListOption { return MapIntListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt8List(f func(Complex128Option) Int8List) Int8ListOption { return MapInt8ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt16List(f func(Complex128Option) Int16List) Int16ListOption { return MapInt16ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt32List(f func(Complex128Option) Int32List) Int32ListOption { return MapInt32ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapInt64List(f func(Complex128Option) Int64List) Int64ListOption { return MapInt64ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintList(f func(Complex128Option) UintList) UintListOption { return MapUintListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint8List(f func(Complex128Option) Uint8List) Uint8ListOption { return MapUint8ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint16List(f func(Complex128Option) Uint16List) Uint16ListOption { return MapUint16ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint32List(f func(Complex128Option) Uint32List) Uint32ListOption { return MapUint32ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUint64List(f func(Complex128Option) Uint64List) Uint64ListOption { return MapUint64ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapUintptrList(f func(Complex128Option) UintptrList) UintptrListOption { return MapUintptrListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapByteList(f func(Complex128Option) ByteList) ByteListOption { return MapByteListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapRuneList(f func(Complex128Option) RuneList) RuneListOption { return MapRuneListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat32List(f func(Complex128Option) Float32List) Float32ListOption { return MapFloat32ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapFloat64List(f func(Complex128Option) Float64List) Float64ListOption { return MapFloat64ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex64List(f func(Complex128Option) Complex64List) Complex64ListOption { return MapComplex64ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapComplex128List(f func(Complex128Option) Complex128List) Complex128ListOption { return MapComplex128ListToComplex128OptionOption(m, f) }
func (m Complex128OptionOption) MapAnyList(f func(Complex128Option) AnyList) AnyListOption { return MapAnyListToComplex128OptionOption(m, f) }
func (m AnyOptionOption) MapBool(f func(AnyOption) bool) BoolOption { return MapBoolToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapString(f func(AnyOption) string) StringOption { return MapStringToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt(f func(AnyOption) int) IntOption { return MapIntToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt8(f func(AnyOption) int8) Int8Option { return MapInt8ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt16(f func(AnyOption) int16) Int16Option { return MapInt16ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt32(f func(AnyOption) int32) Int32Option { return MapInt32ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt64(f func(AnyOption) int64) Int64Option { return MapInt64ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint(f func(AnyOption) uint) UintOption { return MapUintToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint8(f func(AnyOption) uint8) Uint8Option { return MapUint8ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint16(f func(AnyOption) uint16) Uint16Option { return MapUint16ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint32(f func(AnyOption) uint32) Uint32Option { return MapUint32ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint64(f func(AnyOption) uint64) Uint64Option { return MapUint64ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintptr(f func(AnyOption) uintptr) UintptrOption { return MapUintptrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapByte(f func(AnyOption) byte) ByteOption { return MapByteToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapRune(f func(AnyOption) rune) RuneOption { return MapRuneToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat32(f func(AnyOption) float32) Float32Option { return MapFloat32ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat64(f func(AnyOption) float64) Float64Option { return MapFloat64ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex64(f func(AnyOption) complex64) Complex64Option { return MapComplex64ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex128(f func(AnyOption) complex128) Complex128Option { return MapComplex128ToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapAny(f func(AnyOption) Any) AnyOption { return MapAnyToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapBoolOption(f func(AnyOption) BoolOption) BoolOptionOption { return MapBoolOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapStringOption(f func(AnyOption) StringOption) StringOptionOption { return MapStringOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapIntOption(f func(AnyOption) IntOption) IntOptionOption { return MapIntOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt8Option(f func(AnyOption) Int8Option) Int8OptionOption { return MapInt8OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt16Option(f func(AnyOption) Int16Option) Int16OptionOption { return MapInt16OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt32Option(f func(AnyOption) Int32Option) Int32OptionOption { return MapInt32OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt64Option(f func(AnyOption) Int64Option) Int64OptionOption { return MapInt64OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintOption(f func(AnyOption) UintOption) UintOptionOption { return MapUintOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint8Option(f func(AnyOption) Uint8Option) Uint8OptionOption { return MapUint8OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint16Option(f func(AnyOption) Uint16Option) Uint16OptionOption { return MapUint16OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint32Option(f func(AnyOption) Uint32Option) Uint32OptionOption { return MapUint32OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint64Option(f func(AnyOption) Uint64Option) Uint64OptionOption { return MapUint64OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintptrOption(f func(AnyOption) UintptrOption) UintptrOptionOption { return MapUintptrOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapByteOption(f func(AnyOption) ByteOption) ByteOptionOption { return MapByteOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapRuneOption(f func(AnyOption) RuneOption) RuneOptionOption { return MapRuneOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat32Option(f func(AnyOption) Float32Option) Float32OptionOption { return MapFloat32OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat64Option(f func(AnyOption) Float64Option) Float64OptionOption { return MapFloat64OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex64Option(f func(AnyOption) Complex64Option) Complex64OptionOption { return MapComplex64OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex128Option(f func(AnyOption) Complex128Option) Complex128OptionOption { return MapComplex128OptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapAnyOption(f func(AnyOption) AnyOption) AnyOptionOption { return MapAnyOptionToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapBoolArr(f func(AnyOption) []bool) BoolArrOption { return MapBoolArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapStringArr(f func(AnyOption) []string) StringArrOption { return MapStringArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapIntArr(f func(AnyOption) []int) IntArrOption { return MapIntArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt8Arr(f func(AnyOption) []int8) Int8ArrOption { return MapInt8ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt16Arr(f func(AnyOption) []int16) Int16ArrOption { return MapInt16ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt32Arr(f func(AnyOption) []int32) Int32ArrOption { return MapInt32ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt64Arr(f func(AnyOption) []int64) Int64ArrOption { return MapInt64ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintArr(f func(AnyOption) []uint) UintArrOption { return MapUintArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint8Arr(f func(AnyOption) []uint8) Uint8ArrOption { return MapUint8ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint16Arr(f func(AnyOption) []uint16) Uint16ArrOption { return MapUint16ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint32Arr(f func(AnyOption) []uint32) Uint32ArrOption { return MapUint32ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint64Arr(f func(AnyOption) []uint64) Uint64ArrOption { return MapUint64ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintptrArr(f func(AnyOption) []uintptr) UintptrArrOption { return MapUintptrArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapByteArr(f func(AnyOption) []byte) ByteArrOption { return MapByteArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapRuneArr(f func(AnyOption) []rune) RuneArrOption { return MapRuneArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat32Arr(f func(AnyOption) []float32) Float32ArrOption { return MapFloat32ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat64Arr(f func(AnyOption) []float64) Float64ArrOption { return MapFloat64ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex64Arr(f func(AnyOption) []complex64) Complex64ArrOption { return MapComplex64ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex128Arr(f func(AnyOption) []complex128) Complex128ArrOption { return MapComplex128ArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapAnyArr(f func(AnyOption) []Any) AnyArrOption { return MapAnyArrToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapBoolList(f func(AnyOption) BoolList) BoolListOption { return MapBoolListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapStringList(f func(AnyOption) StringList) StringListOption { return MapStringListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapIntList(f func(AnyOption) IntList) IntListOption { return MapIntListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt8List(f func(AnyOption) Int8List) Int8ListOption { return MapInt8ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt16List(f func(AnyOption) Int16List) Int16ListOption { return MapInt16ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt32List(f func(AnyOption) Int32List) Int32ListOption { return MapInt32ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapInt64List(f func(AnyOption) Int64List) Int64ListOption { return MapInt64ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintList(f func(AnyOption) UintList) UintListOption { return MapUintListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint8List(f func(AnyOption) Uint8List) Uint8ListOption { return MapUint8ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint16List(f func(AnyOption) Uint16List) Uint16ListOption { return MapUint16ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint32List(f func(AnyOption) Uint32List) Uint32ListOption { return MapUint32ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUint64List(f func(AnyOption) Uint64List) Uint64ListOption { return MapUint64ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapUintptrList(f func(AnyOption) UintptrList) UintptrListOption { return MapUintptrListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapByteList(f func(AnyOption) ByteList) ByteListOption { return MapByteListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapRuneList(f func(AnyOption) RuneList) RuneListOption { return MapRuneListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat32List(f func(AnyOption) Float32List) Float32ListOption { return MapFloat32ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapFloat64List(f func(AnyOption) Float64List) Float64ListOption { return MapFloat64ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex64List(f func(AnyOption) Complex64List) Complex64ListOption { return MapComplex64ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapComplex128List(f func(AnyOption) Complex128List) Complex128ListOption { return MapComplex128ListToAnyOptionOption(m, f) }
func (m AnyOptionOption) MapAnyList(f func(AnyOption) AnyList) AnyListOption { return MapAnyListToAnyOptionOption(m, f) }