// bootstrap_option_tostring.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

import "fmt"

func (o BoolOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolToString)
	} else {
		return "None"
	}
}
func (o StringOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringToString)
	} else {
		return "None"
	}
}
func (o IntOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntToString)
	} else {
		return "None"
	}
}
func (o Int8Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ToString)
	} else {
		return "None"
	}
}
func (o Int16Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ToString)
	} else {
		return "None"
	}
}
func (o Int32Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ToString)
	} else {
		return "None"
	}
}
func (o Int64Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ToString)
	} else {
		return "None"
	}
}
func (o UintOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintToString)
	} else {
		return "None"
	}
}
func (o Uint8Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ToString)
	} else {
		return "None"
	}
}
func (o Uint16Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ToString)
	} else {
		return "None"
	}
}
func (o Uint32Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ToString)
	} else {
		return "None"
	}
}
func (o Uint64Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ToString)
	} else {
		return "None"
	}
}
func (o UintptrOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrToString)
	} else {
		return "None"
	}
}
func (o ByteOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteToString)
	} else {
		return "None"
	}
}
func (o RuneOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneToString)
	} else {
		return "None"
	}
}
func (o Float32Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ToString)
	} else {
		return "None"
	}
}
func (o Float64Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ToString)
	} else {
		return "None"
	}
}
func (o Complex64Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ToString)
	} else {
		return "None"
	}
}
func (o Complex128Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ToString)
	} else {
		return "None"
	}
}
func (o AnyOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyToString)
	} else {
		return "None"
	}
}
func (o BoolArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayToString)
	} else {
		return "None"
	}
}
func (o StringArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayToString)
	} else {
		return "None"
	}
}
func (o IntArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayToString)
	} else {
		return "None"
	}
}
func (o Int8ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ArrayToString)
	} else {
		return "None"
	}
}
func (o Int16ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ArrayToString)
	} else {
		return "None"
	}
}
func (o Int32ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ArrayToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayToString)
	} else {
		return "None"
	}
}
func (o UintArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintArrayToString)
	} else {
		return "None"
	}
}
func (o Uint8ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ArrayToString)
	} else {
		return "None"
	}
}
func (o Uint16ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ArrayToString)
	} else {
		return "None"
	}
}
func (o Uint32ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ArrayToString)
	} else {
		return "None"
	}
}
func (o Uint64ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ArrayToString)
	} else {
		return "None"
	}
}
func (o UintptrArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrArrayToString)
	} else {
		return "None"
	}
}
func (o ByteArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayToString)
	} else {
		return "None"
	}
}
func (o RuneArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayToString)
	} else {
		return "None"
	}
}
func (o Complex64ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ArrayToString)
	} else {
		return "None"
	}
}
func (o Complex128ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ArrayToString)
	} else {
		return "None"
	}
}
func (o AnyArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayToString)
	} else {
		return "None"
	}
}
func (o BoolArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayArrayToString)
	} else {
		return "None"
	}
}
func (o StringArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayArrayToString)
	} else {
		return "None"
	}
}
func (o IntArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Int8ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Int16ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Int32ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o UintArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Uint8ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Uint16ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Uint32ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Uint64ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o UintptrArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrArrayArrayToString)
	} else {
		return "None"
	}
}
func (o ByteArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayArrayToString)
	} else {
		return "None"
	}
}
func (o RuneArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Complex64ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o Complex128ArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ArrayArrayToString)
	} else {
		return "None"
	}
}
func (o AnyArrayArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayArrayToString)
	} else {
		return "None"
	}
}
func (o BoolOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolOptionArrayToString)
	} else {
		return "None"
	}
}
func (o StringOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringOptionArrayToString)
	} else {
		return "None"
	}
}
func (o IntOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntOptionArrayToString)
	} else {
		return "None"
	}
}
func (o Int8OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Int16OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Int32OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Int64OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64OptionArrayToString)
	} else {
		return "None"
	}
}
func (o UintOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintOptionArrayToString)
	} else {
		return "None"
	}
}
func (o Uint8OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Uint16OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Uint32OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Uint64OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64OptionArrayToString)
	} else {
		return "None"
	}
}
func (o UintptrOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrOptionArrayToString)
	} else {
		return "None"
	}
}
func (o ByteOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteOptionArrayToString)
	} else {
		return "None"
	}
}
func (o RuneOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneOptionArrayToString)
	} else {
		return "None"
	}
}
func (o Float32OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Float64OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Complex64OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64OptionArrayToString)
	} else {
		return "None"
	}
}
func (o Complex128OptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128OptionArrayToString)
	} else {
		return "None"
	}
}
func (o AnyOptionArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyOptionArrayToString)
	} else {
		return "None"
	}
}
func (o BoolListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolListToString)
	} else {
		return "None"
	}
}
func (o StringListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringListToString)
	} else {
		return "None"
	}
}
func (o IntListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntListToString)
	} else {
		return "None"
	}
}
func (o Int8ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ListToString)
	} else {
		return "None"
	}
}
func (o Int16ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ListToString)
	} else {
		return "None"
	}
}
func (o Int32ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ListToString)
	} else {
		return "None"
	}
}
func (o Int64ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ListToString)
	} else {
		return "None"
	}
}
func (o UintListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintListToString)
	} else {
		return "None"
	}
}
func (o Uint8ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ListToString)
	} else {
		return "None"
	}
}
func (o Uint16ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ListToString)
	} else {
		return "None"
	}
}
func (o Uint32ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ListToString)
	} else {
		return "None"
	}
}
func (o Uint64ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ListToString)
	} else {
		return "None"
	}
}
func (o UintptrListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrListToString)
	} else {
		return "None"
	}
}
func (o ByteListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteListToString)
	} else {
		return "None"
	}
}
func (o RuneListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneListToString)
	} else {
		return "None"
	}
}
func (o Float32ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ListToString)
	} else {
		return "None"
	}
}
func (o Float64ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ListToString)
	} else {
		return "None"
	}
}
func (o Complex64ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ListToString)
	} else {
		return "None"
	}
}
func (o Complex128ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ListToString)
	} else {
		return "None"
	}
}
func (o AnyListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyListToString)
	} else {
		return "None"
	}
}
func (o BoolOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolOptionToString)
	} else {
		return "None"
	}
}
func (o StringOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringOptionToString)
	} else {
		return "None"
	}
}
func (o IntOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntOptionToString)
	} else {
		return "None"
	}
}
func (o Int8OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8OptionToString)
	} else {
		return "None"
	}
}
func (o Int16OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16OptionToString)
	} else {
		return "None"
	}
}
func (o Int32OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32OptionToString)
	} else {
		return "None"
	}
}
func (o Int64OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64OptionToString)
	} else {
		return "None"
	}
}
func (o UintOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8OptionToString)
	} else {
		return "None"
	}
}
func (o Uint16OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16OptionToString)
	} else {
		return "None"
	}
}
func (o Uint32OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32OptionToString)
	} else {
		return "None"
	}
}
func (o Uint64OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64OptionToString)
	} else {
		return "None"
	}
}
func (o UintptrOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrOptionToString)
	} else {
		return "None"
	}
}
func (o ByteOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteOptionToString)
	} else {
		return "None"
	}
}
func (o RuneOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneOptionToString)
	} else {
		return "None"
	}
}
func (o Float32OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32OptionToString)
	} else {
		return "None"
	}
}
func (o Float64OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64OptionToString)
	} else {
		return "None"
	}
}
func (o Complex64OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64OptionToString)
	} else {
		return "None"
	}
}
func (o Complex128OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128OptionToString)
	} else {
		return "None"
	}
}
func (o AnyOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyOptionToString)
	} else {
		return "None"
	}
}
func (o BoolArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayOptionToString)
	} else {
		return "None"
	}
}
func (o StringArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayOptionToString)
	} else {
		return "None"
	}
}
func (o IntArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int8ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int16ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int32ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o UintArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrArrayOptionToString)
	} else {
		return "None"
	}
}
func (o ByteArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayOptionToString)
	} else {
		return "None"
	}
}
func (o RuneArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128ArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ArrayOptionToString)
	} else {
		return "None"
	}
}
func (o AnyArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayOptionToString)
	} else {
		return "None"
	}
}
func (o BoolArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o StringArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o IntArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int8ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int16ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int32ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o UintArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o ByteArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o RuneArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128ArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o AnyArrayArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayArrayOptionToString)
	} else {
		return "None"
	}
}
func (o BoolOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o StringOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o IntOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int8OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int16OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int32OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Int64OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o UintOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o ByteOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o RuneOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Float32OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Float64OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128OptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128OptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o AnyOptionArrayOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyOptionArrayOptionToString)
	} else {
		return "None"
	}
}
func (o BoolListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolListOptionToString)
	} else {
		return "None"
	}
}
func (o StringListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringListOptionToString)
	} else {
		return "None"
	}
}
func (o IntListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntListOptionToString)
	} else {
		return "None"
	}
}
func (o Int8ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ListOptionToString)
	} else {
		return "None"
	}
}
func (o Int16ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ListOptionToString)
	} else {
		return "None"
	}
}
func (o Int32ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ListOptionToString)
	} else {
		return "None"
	}
}
func (o Int64ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ListOptionToString)
	} else {
		return "None"
	}
}
func (o UintListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintListOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ListOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ListOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ListOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ListOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrListOptionToString)
	} else {
		return "None"
	}
}
func (o ByteListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteListOptionToString)
	} else {
		return "None"
	}
}
func (o RuneListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneListOptionToString)
	} else {
		return "None"
	}
}
func (o Float32ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ListOptionToString)
	} else {
		return "None"
	}
}
func (o Float64ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ListOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ListOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128ListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ListOptionToString)
	} else {
		return "None"
	}
}
func (o AnyListOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyListOptionToString)
	} else {
		return "None"
	}
}
func (o BoolOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolOptionOptionToString)
	} else {
		return "None"
	}
}
func (o StringOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringOptionOptionToString)
	} else {
		return "None"
	}
}
func (o IntOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int8OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int16OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int32OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int64OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64OptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64OptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrOptionOptionToString)
	} else {
		return "None"
	}
}
func (o ByteOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteOptionOptionToString)
	} else {
		return "None"
	}
}
func (o RuneOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float32OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float64OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64OptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128OptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128OptionOptionToString)
	} else {
		return "None"
	}
}
func (o AnyOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyOptionOptionToString)
	} else {
		return "None"
	}
}
func (o BoolArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o StringArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o IntArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int8ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int16ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int32ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o ByteArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o RuneArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128ArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o AnyArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o BoolArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o StringArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o IntArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int8ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int16ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int32ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o ByteArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o RuneArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128ArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o AnyArrayArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o BoolOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o StringOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o IntOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int8OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int16OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int32OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int64OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o ByteOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o RuneOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float32OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float64OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128OptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128OptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o AnyOptionArrayOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyOptionArrayOptionOptionToString)
	} else {
		return "None"
	}
}
func (o BoolListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o StringListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o IntListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int8ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int8ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int16ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int16ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int32ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int32ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Int64ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint8ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint8ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint16ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint16ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint32ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint32ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Uint64ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Uint64ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o UintptrListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", UintptrListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o ByteListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o RuneListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float32ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Float64ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex64ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex64ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o Complex128ListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Complex128ListOptionOptionToString)
	} else {
		return "None"
	}
}
func (o AnyListOptionOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyListOptionOptionToString)
	} else {
		return "None"
	}
}
