// bootstrap_option_tostring.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

import "fmt"

func (o BoolOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolToString)
	} else {
		return "None"
	}
}
func (o StringOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringToString)
	} else {
		return "None"
	}
}
func (o IntOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntToString)
	} else {
		return "None"
	}
}
func (o Int64Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ToString)
	} else {
		return "None"
	}
}
func (o ByteOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteToString)
	} else {
		return "None"
	}
}
func (o RuneOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneToString)
	} else {
		return "None"
	}
}
func (o Float32Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ToString)
	} else {
		return "None"
	}
}
func (o Float64Option) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ToString)
	} else {
		return "None"
	}
}
func (o AnyOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyToString)
	} else {
		return "None"
	}
}
func (o BoolOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolOptionToString)
	} else {
		return "None"
	}
}
func (o StringOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringOptionToString)
	} else {
		return "None"
	}
}
func (o IntOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntOptionToString)
	} else {
		return "None"
	}
}
func (o Int64OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64OptionToString)
	} else {
		return "None"
	}
}
func (o ByteOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteOptionToString)
	} else {
		return "None"
	}
}
func (o RuneOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneOptionToString)
	} else {
		return "None"
	}
}
func (o Float32OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32OptionToString)
	} else {
		return "None"
	}
}
func (o Float64OptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64OptionToString)
	} else {
		return "None"
	}
}
func (o AnyOptionOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyOptionToString)
	} else {
		return "None"
	}
}
func (o BoolArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolArrayToString)
	} else {
		return "None"
	}
}
func (o StringArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringArrayToString)
	} else {
		return "None"
	}
}
func (o IntArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntArrayToString)
	} else {
		return "None"
	}
}
func (o Int64ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ArrayToString)
	} else {
		return "None"
	}
}
func (o ByteArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteArrayToString)
	} else {
		return "None"
	}
}
func (o RuneArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneArrayToString)
	} else {
		return "None"
	}
}
func (o Float32ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ArrayToString)
	} else {
		return "None"
	}
}
func (o Float64ArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ArrayToString)
	} else {
		return "None"
	}
}
func (o AnyArrayOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyArrayToString)
	} else {
		return "None"
	}
}
func (o BoolListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", BoolListToString)
	} else {
		return "None"
	}
}
func (o StringListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", StringListToString)
	} else {
		return "None"
	}
}
func (o IntListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", IntListToString)
	} else {
		return "None"
	}
}
func (o Int64ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Int64ListToString)
	} else {
		return "None"
	}
}
func (o ByteListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", ByteListToString)
	} else {
		return "None"
	}
}
func (o RuneListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", RuneListToString)
	} else {
		return "None"
	}
}
func (o Float32ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float32ListToString)
	} else {
		return "None"
	}
}
func (o Float64ListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", Float64ListToString)
	} else {
		return "None"
	}
}
func (o AnyListOption) ToString() string {
	if o.IsDefined() {
		return fmt.Sprintf("Some(%v)", AnyListToString)
	} else {
		return "None"
	}
}
