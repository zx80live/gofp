// bootstrap_predicate_math.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

var EvenInt IntPredicate = func(t int) bool { return t%2 == 0 }
var EvenInt64 Int64Predicate = func(t int64) bool { return t%2 == 0 }
var EvenByte BytePredicate = func(t byte) bool { return t%2 == 0 }
var EvenRune RunePredicate = func(t rune) bool { return t%2 == 0 }
var OddInt IntPredicate = func(t int) bool { return t%2 != 0 }
var OddInt64 Int64Predicate = func(t int64) bool { return t%2 != 0 }
var OddByte BytePredicate = func(t byte) bool { return t%2 != 0 }
var OddRune RunePredicate = func(t rune) bool { return t%2 != 0 }
var NegInt IntPredicate = func(t int) bool { return t < 0 }
var NegInt64 Int64Predicate = func(t int64) bool { return t < 0 }
var NegByte BytePredicate = func(t byte) bool { return t < 0 }
var NegRune RunePredicate = func(t rune) bool { return t < 0 }
var PosInt IntPredicate = func(t int) bool { return t >= 0 }
var PosInt64 Int64Predicate = func(t int64) bool { return t >= 0 }
var PosByte BytePredicate = func(t byte) bool { return t >= 0 }
var PosRune RunePredicate = func(t rune) bool { return t >= 0 }
var ZeroInt IntPredicate = func(t int) bool { return t == 0 }
var ZeroInt64 Int64Predicate = func(t int64) bool { return t == 0 }
var ZeroByte BytePredicate = func(t byte) bool { return t == 0 }
var ZeroRune RunePredicate = func(t rune) bool { return t == 0 }
var OneInt IntPredicate = func(t int) bool { return t == 1 }
var OneInt64 Int64Predicate = func(t int64) bool { return t == 1 }
var OneByte BytePredicate = func(t byte) bool { return t == 1 }
var OneRune RunePredicate = func(t rune) bool { return t == 1 }
