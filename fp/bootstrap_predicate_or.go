// bootstrap_predicate_or.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (p1 BoolPredicate) Or(p2 BoolPredicate) BoolPredicate {
	return func(e bool) bool { return p1(e) || p2(e) }
}
func (p1 StringPredicate) Or(p2 StringPredicate) StringPredicate {
	return func(e string) bool { return p1(e) || p2(e) }
}
func (p1 IntPredicate) Or(p2 IntPredicate) IntPredicate {
	return func(e int) bool { return p1(e) || p2(e) }
}
func (p1 Int8Predicate) Or(p2 Int8Predicate) Int8Predicate {
	return func(e int8) bool { return p1(e) || p2(e) }
}
func (p1 Int16Predicate) Or(p2 Int16Predicate) Int16Predicate {
	return func(e int16) bool { return p1(e) || p2(e) }
}
func (p1 Int32Predicate) Or(p2 Int32Predicate) Int32Predicate {
	return func(e int32) bool { return p1(e) || p2(e) }
}
func (p1 Int64Predicate) Or(p2 Int64Predicate) Int64Predicate {
	return func(e int64) bool { return p1(e) || p2(e) }
}
func (p1 UintPredicate) Or(p2 UintPredicate) UintPredicate {
	return func(e uint) bool { return p1(e) || p2(e) }
}
func (p1 Uint8Predicate) Or(p2 Uint8Predicate) Uint8Predicate {
	return func(e uint8) bool { return p1(e) || p2(e) }
}
func (p1 Uint16Predicate) Or(p2 Uint16Predicate) Uint16Predicate {
	return func(e uint16) bool { return p1(e) || p2(e) }
}
func (p1 Uint32Predicate) Or(p2 Uint32Predicate) Uint32Predicate {
	return func(e uint32) bool { return p1(e) || p2(e) }
}
func (p1 Uint64Predicate) Or(p2 Uint64Predicate) Uint64Predicate {
	return func(e uint64) bool { return p1(e) || p2(e) }
}
func (p1 UintptrPredicate) Or(p2 UintptrPredicate) UintptrPredicate {
	return func(e uintptr) bool { return p1(e) || p2(e) }
}
func (p1 BytePredicate) Or(p2 BytePredicate) BytePredicate {
	return func(e byte) bool { return p1(e) || p2(e) }
}
func (p1 RunePredicate) Or(p2 RunePredicate) RunePredicate {
	return func(e rune) bool { return p1(e) || p2(e) }
}
func (p1 Float32Predicate) Or(p2 Float32Predicate) Float32Predicate {
	return func(e float32) bool { return p1(e) || p2(e) }
}
func (p1 Float64Predicate) Or(p2 Float64Predicate) Float64Predicate {
	return func(e float64) bool { return p1(e) || p2(e) }
}
func (p1 Complex64Predicate) Or(p2 Complex64Predicate) Complex64Predicate {
	return func(e complex64) bool { return p1(e) || p2(e) }
}
func (p1 Complex128Predicate) Or(p2 Complex128Predicate) Complex128Predicate {
	return func(e complex128) bool { return p1(e) || p2(e) }
}
func (p1 AnyPredicate) Or(p2 AnyPredicate) AnyPredicate {
	return func(e Any) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayPredicate) Or(p2 BoolArrayPredicate) BoolArrayPredicate {
	return func(e []bool) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayPredicate) Or(p2 StringArrayPredicate) StringArrayPredicate {
	return func(e []string) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayPredicate) Or(p2 IntArrayPredicate) IntArrayPredicate {
	return func(e []int) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayPredicate) Or(p2 Int8ArrayPredicate) Int8ArrayPredicate {
	return func(e []int8) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayPredicate) Or(p2 Int16ArrayPredicate) Int16ArrayPredicate {
	return func(e []int16) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayPredicate) Or(p2 Int32ArrayPredicate) Int32ArrayPredicate {
	return func(e []int32) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayPredicate) Or(p2 Int64ArrayPredicate) Int64ArrayPredicate {
	return func(e []int64) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayPredicate) Or(p2 UintArrayPredicate) UintArrayPredicate {
	return func(e []uint) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayPredicate) Or(p2 Uint8ArrayPredicate) Uint8ArrayPredicate {
	return func(e []uint8) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayPredicate) Or(p2 Uint16ArrayPredicate) Uint16ArrayPredicate {
	return func(e []uint16) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayPredicate) Or(p2 Uint32ArrayPredicate) Uint32ArrayPredicate {
	return func(e []uint32) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayPredicate) Or(p2 Uint64ArrayPredicate) Uint64ArrayPredicate {
	return func(e []uint64) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayPredicate) Or(p2 UintptrArrayPredicate) UintptrArrayPredicate {
	return func(e []uintptr) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayPredicate) Or(p2 ByteArrayPredicate) ByteArrayPredicate {
	return func(e []byte) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayPredicate) Or(p2 RuneArrayPredicate) RuneArrayPredicate {
	return func(e []rune) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayPredicate) Or(p2 Float32ArrayPredicate) Float32ArrayPredicate {
	return func(e []float32) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayPredicate) Or(p2 Float64ArrayPredicate) Float64ArrayPredicate {
	return func(e []float64) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayPredicate) Or(p2 Complex64ArrayPredicate) Complex64ArrayPredicate {
	return func(e []complex64) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayPredicate) Or(p2 Complex128ArrayPredicate) Complex128ArrayPredicate {
	return func(e []complex128) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayPredicate) Or(p2 AnyArrayPredicate) AnyArrayPredicate {
	return func(e []Any) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayPredicate) Or(p2 BoolArrayArrayPredicate) BoolArrayArrayPredicate {
	return func(e [][]bool) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayPredicate) Or(p2 StringArrayArrayPredicate) StringArrayArrayPredicate {
	return func(e [][]string) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayPredicate) Or(p2 IntArrayArrayPredicate) IntArrayArrayPredicate {
	return func(e [][]int) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayPredicate) Or(p2 Int8ArrayArrayPredicate) Int8ArrayArrayPredicate {
	return func(e [][]int8) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayPredicate) Or(p2 Int16ArrayArrayPredicate) Int16ArrayArrayPredicate {
	return func(e [][]int16) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayPredicate) Or(p2 Int32ArrayArrayPredicate) Int32ArrayArrayPredicate {
	return func(e [][]int32) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayPredicate) Or(p2 Int64ArrayArrayPredicate) Int64ArrayArrayPredicate {
	return func(e [][]int64) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayPredicate) Or(p2 UintArrayArrayPredicate) UintArrayArrayPredicate {
	return func(e [][]uint) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayPredicate) Or(p2 Uint8ArrayArrayPredicate) Uint8ArrayArrayPredicate {
	return func(e [][]uint8) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayPredicate) Or(p2 Uint16ArrayArrayPredicate) Uint16ArrayArrayPredicate {
	return func(e [][]uint16) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayPredicate) Or(p2 Uint32ArrayArrayPredicate) Uint32ArrayArrayPredicate {
	return func(e [][]uint32) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayPredicate) Or(p2 Uint64ArrayArrayPredicate) Uint64ArrayArrayPredicate {
	return func(e [][]uint64) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayPredicate) Or(p2 UintptrArrayArrayPredicate) UintptrArrayArrayPredicate {
	return func(e [][]uintptr) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayPredicate) Or(p2 ByteArrayArrayPredicate) ByteArrayArrayPredicate {
	return func(e [][]byte) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayPredicate) Or(p2 RuneArrayArrayPredicate) RuneArrayArrayPredicate {
	return func(e [][]rune) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayPredicate) Or(p2 Float32ArrayArrayPredicate) Float32ArrayArrayPredicate {
	return func(e [][]float32) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayPredicate) Or(p2 Float64ArrayArrayPredicate) Float64ArrayArrayPredicate {
	return func(e [][]float64) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayPredicate) Or(p2 Complex64ArrayArrayPredicate) Complex64ArrayArrayPredicate {
	return func(e [][]complex64) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayPredicate) Or(p2 Complex128ArrayArrayPredicate) Complex128ArrayArrayPredicate {
	return func(e [][]complex128) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayPredicate) Or(p2 AnyArrayArrayPredicate) AnyArrayArrayPredicate {
	return func(e [][]Any) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayPredicate) Or(p2 BoolOptionArrayPredicate) BoolOptionArrayPredicate {
	return func(e []BoolOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayPredicate) Or(p2 StringOptionArrayPredicate) StringOptionArrayPredicate {
	return func(e []StringOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayPredicate) Or(p2 IntOptionArrayPredicate) IntOptionArrayPredicate {
	return func(e []IntOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayPredicate) Or(p2 Int8OptionArrayPredicate) Int8OptionArrayPredicate {
	return func(e []Int8Option) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayPredicate) Or(p2 Int16OptionArrayPredicate) Int16OptionArrayPredicate {
	return func(e []Int16Option) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayPredicate) Or(p2 Int32OptionArrayPredicate) Int32OptionArrayPredicate {
	return func(e []Int32Option) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayPredicate) Or(p2 Int64OptionArrayPredicate) Int64OptionArrayPredicate {
	return func(e []Int64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayPredicate) Or(p2 UintOptionArrayPredicate) UintOptionArrayPredicate {
	return func(e []UintOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayPredicate) Or(p2 Uint8OptionArrayPredicate) Uint8OptionArrayPredicate {
	return func(e []Uint8Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayPredicate) Or(p2 Uint16OptionArrayPredicate) Uint16OptionArrayPredicate {
	return func(e []Uint16Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayPredicate) Or(p2 Uint32OptionArrayPredicate) Uint32OptionArrayPredicate {
	return func(e []Uint32Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayPredicate) Or(p2 Uint64OptionArrayPredicate) Uint64OptionArrayPredicate {
	return func(e []Uint64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayPredicate) Or(p2 UintptrOptionArrayPredicate) UintptrOptionArrayPredicate {
	return func(e []UintptrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayPredicate) Or(p2 ByteOptionArrayPredicate) ByteOptionArrayPredicate {
	return func(e []ByteOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayPredicate) Or(p2 RuneOptionArrayPredicate) RuneOptionArrayPredicate {
	return func(e []RuneOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayPredicate) Or(p2 Float32OptionArrayPredicate) Float32OptionArrayPredicate {
	return func(e []Float32Option) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayPredicate) Or(p2 Float64OptionArrayPredicate) Float64OptionArrayPredicate {
	return func(e []Float64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayPredicate) Or(p2 Complex64OptionArrayPredicate) Complex64OptionArrayPredicate {
	return func(e []Complex64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayPredicate) Or(p2 Complex128OptionArrayPredicate) Complex128OptionArrayPredicate {
	return func(e []Complex128Option) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayPredicate) Or(p2 AnyOptionArrayPredicate) AnyOptionArrayPredicate {
	return func(e []AnyOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionPredicate) Or(p2 BoolOptionPredicate) BoolOptionPredicate {
	return func(e BoolOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionPredicate) Or(p2 StringOptionPredicate) StringOptionPredicate {
	return func(e StringOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionPredicate) Or(p2 IntOptionPredicate) IntOptionPredicate {
	return func(e IntOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionPredicate) Or(p2 Int8OptionPredicate) Int8OptionPredicate {
	return func(e Int8Option) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionPredicate) Or(p2 Int16OptionPredicate) Int16OptionPredicate {
	return func(e Int16Option) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionPredicate) Or(p2 Int32OptionPredicate) Int32OptionPredicate {
	return func(e Int32Option) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionPredicate) Or(p2 Int64OptionPredicate) Int64OptionPredicate {
	return func(e Int64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionPredicate) Or(p2 UintOptionPredicate) UintOptionPredicate {
	return func(e UintOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionPredicate) Or(p2 Uint8OptionPredicate) Uint8OptionPredicate {
	return func(e Uint8Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionPredicate) Or(p2 Uint16OptionPredicate) Uint16OptionPredicate {
	return func(e Uint16Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionPredicate) Or(p2 Uint32OptionPredicate) Uint32OptionPredicate {
	return func(e Uint32Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionPredicate) Or(p2 Uint64OptionPredicate) Uint64OptionPredicate {
	return func(e Uint64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionPredicate) Or(p2 UintptrOptionPredicate) UintptrOptionPredicate {
	return func(e UintptrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionPredicate) Or(p2 ByteOptionPredicate) ByteOptionPredicate {
	return func(e ByteOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionPredicate) Or(p2 RuneOptionPredicate) RuneOptionPredicate {
	return func(e RuneOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionPredicate) Or(p2 Float32OptionPredicate) Float32OptionPredicate {
	return func(e Float32Option) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionPredicate) Or(p2 Float64OptionPredicate) Float64OptionPredicate {
	return func(e Float64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionPredicate) Or(p2 Complex64OptionPredicate) Complex64OptionPredicate {
	return func(e Complex64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionPredicate) Or(p2 Complex128OptionPredicate) Complex128OptionPredicate {
	return func(e Complex128Option) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionPredicate) Or(p2 AnyOptionPredicate) AnyOptionPredicate {
	return func(e AnyOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayOptionPredicate) Or(p2 BoolArrayOptionPredicate) BoolArrayOptionPredicate {
	return func(e BoolArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayOptionPredicate) Or(p2 StringArrayOptionPredicate) StringArrayOptionPredicate {
	return func(e StringArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayOptionPredicate) Or(p2 IntArrayOptionPredicate) IntArrayOptionPredicate {
	return func(e IntArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayOptionPredicate) Or(p2 Int8ArrayOptionPredicate) Int8ArrayOptionPredicate {
	return func(e Int8ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayOptionPredicate) Or(p2 Int16ArrayOptionPredicate) Int16ArrayOptionPredicate {
	return func(e Int16ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayOptionPredicate) Or(p2 Int32ArrayOptionPredicate) Int32ArrayOptionPredicate {
	return func(e Int32ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayOptionPredicate) Or(p2 Int64ArrayOptionPredicate) Int64ArrayOptionPredicate {
	return func(e Int64ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayOptionPredicate) Or(p2 UintArrayOptionPredicate) UintArrayOptionPredicate {
	return func(e UintArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayOptionPredicate) Or(p2 Uint8ArrayOptionPredicate) Uint8ArrayOptionPredicate {
	return func(e Uint8ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayOptionPredicate) Or(p2 Uint16ArrayOptionPredicate) Uint16ArrayOptionPredicate {
	return func(e Uint16ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayOptionPredicate) Or(p2 Uint32ArrayOptionPredicate) Uint32ArrayOptionPredicate {
	return func(e Uint32ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayOptionPredicate) Or(p2 Uint64ArrayOptionPredicate) Uint64ArrayOptionPredicate {
	return func(e Uint64ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayOptionPredicate) Or(p2 UintptrArrayOptionPredicate) UintptrArrayOptionPredicate {
	return func(e UintptrArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayOptionPredicate) Or(p2 ByteArrayOptionPredicate) ByteArrayOptionPredicate {
	return func(e ByteArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayOptionPredicate) Or(p2 RuneArrayOptionPredicate) RuneArrayOptionPredicate {
	return func(e RuneArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayOptionPredicate) Or(p2 Float32ArrayOptionPredicate) Float32ArrayOptionPredicate {
	return func(e Float32ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayOptionPredicate) Or(p2 Float64ArrayOptionPredicate) Float64ArrayOptionPredicate {
	return func(e Float64ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayOptionPredicate) Or(p2 Complex64ArrayOptionPredicate) Complex64ArrayOptionPredicate {
	return func(e Complex64ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayOptionPredicate) Or(p2 Complex128ArrayOptionPredicate) Complex128ArrayOptionPredicate {
	return func(e Complex128ArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayOptionPredicate) Or(p2 AnyArrayOptionPredicate) AnyArrayOptionPredicate {
	return func(e AnyArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayOptionPredicate) Or(p2 BoolArrayArrayOptionPredicate) BoolArrayArrayOptionPredicate {
	return func(e BoolArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayOptionPredicate) Or(p2 StringArrayArrayOptionPredicate) StringArrayArrayOptionPredicate {
	return func(e StringArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayOptionPredicate) Or(p2 IntArrayArrayOptionPredicate) IntArrayArrayOptionPredicate {
	return func(e IntArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayOptionPredicate) Or(p2 Int8ArrayArrayOptionPredicate) Int8ArrayArrayOptionPredicate {
	return func(e Int8ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayOptionPredicate) Or(p2 Int16ArrayArrayOptionPredicate) Int16ArrayArrayOptionPredicate {
	return func(e Int16ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayOptionPredicate) Or(p2 Int32ArrayArrayOptionPredicate) Int32ArrayArrayOptionPredicate {
	return func(e Int32ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayOptionPredicate) Or(p2 Int64ArrayArrayOptionPredicate) Int64ArrayArrayOptionPredicate {
	return func(e Int64ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayOptionPredicate) Or(p2 UintArrayArrayOptionPredicate) UintArrayArrayOptionPredicate {
	return func(e UintArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayOptionPredicate) Or(p2 Uint8ArrayArrayOptionPredicate) Uint8ArrayArrayOptionPredicate {
	return func(e Uint8ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayOptionPredicate) Or(p2 Uint16ArrayArrayOptionPredicate) Uint16ArrayArrayOptionPredicate {
	return func(e Uint16ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayOptionPredicate) Or(p2 Uint32ArrayArrayOptionPredicate) Uint32ArrayArrayOptionPredicate {
	return func(e Uint32ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayOptionPredicate) Or(p2 Uint64ArrayArrayOptionPredicate) Uint64ArrayArrayOptionPredicate {
	return func(e Uint64ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayOptionPredicate) Or(p2 UintptrArrayArrayOptionPredicate) UintptrArrayArrayOptionPredicate {
	return func(e UintptrArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayOptionPredicate) Or(p2 ByteArrayArrayOptionPredicate) ByteArrayArrayOptionPredicate {
	return func(e ByteArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayOptionPredicate) Or(p2 RuneArrayArrayOptionPredicate) RuneArrayArrayOptionPredicate {
	return func(e RuneArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayOptionPredicate) Or(p2 Float32ArrayArrayOptionPredicate) Float32ArrayArrayOptionPredicate {
	return func(e Float32ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayOptionPredicate) Or(p2 Float64ArrayArrayOptionPredicate) Float64ArrayArrayOptionPredicate {
	return func(e Float64ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayOptionPredicate) Or(p2 Complex64ArrayArrayOptionPredicate) Complex64ArrayArrayOptionPredicate {
	return func(e Complex64ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayOptionPredicate) Or(p2 Complex128ArrayArrayOptionPredicate) Complex128ArrayArrayOptionPredicate {
	return func(e Complex128ArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayOptionPredicate) Or(p2 AnyArrayArrayOptionPredicate) AnyArrayArrayOptionPredicate {
	return func(e AnyArrayArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayOptionPredicate) Or(p2 BoolOptionArrayOptionPredicate) BoolOptionArrayOptionPredicate {
	return func(e BoolOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayOptionPredicate) Or(p2 StringOptionArrayOptionPredicate) StringOptionArrayOptionPredicate {
	return func(e StringOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayOptionPredicate) Or(p2 IntOptionArrayOptionPredicate) IntOptionArrayOptionPredicate {
	return func(e IntOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayOptionPredicate) Or(p2 Int8OptionArrayOptionPredicate) Int8OptionArrayOptionPredicate {
	return func(e Int8OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayOptionPredicate) Or(p2 Int16OptionArrayOptionPredicate) Int16OptionArrayOptionPredicate {
	return func(e Int16OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayOptionPredicate) Or(p2 Int32OptionArrayOptionPredicate) Int32OptionArrayOptionPredicate {
	return func(e Int32OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayOptionPredicate) Or(p2 Int64OptionArrayOptionPredicate) Int64OptionArrayOptionPredicate {
	return func(e Int64OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayOptionPredicate) Or(p2 UintOptionArrayOptionPredicate) UintOptionArrayOptionPredicate {
	return func(e UintOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayOptionPredicate) Or(p2 Uint8OptionArrayOptionPredicate) Uint8OptionArrayOptionPredicate {
	return func(e Uint8OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayOptionPredicate) Or(p2 Uint16OptionArrayOptionPredicate) Uint16OptionArrayOptionPredicate {
	return func(e Uint16OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayOptionPredicate) Or(p2 Uint32OptionArrayOptionPredicate) Uint32OptionArrayOptionPredicate {
	return func(e Uint32OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayOptionPredicate) Or(p2 Uint64OptionArrayOptionPredicate) Uint64OptionArrayOptionPredicate {
	return func(e Uint64OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayOptionPredicate) Or(p2 UintptrOptionArrayOptionPredicate) UintptrOptionArrayOptionPredicate {
	return func(e UintptrOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayOptionPredicate) Or(p2 ByteOptionArrayOptionPredicate) ByteOptionArrayOptionPredicate {
	return func(e ByteOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayOptionPredicate) Or(p2 RuneOptionArrayOptionPredicate) RuneOptionArrayOptionPredicate {
	return func(e RuneOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayOptionPredicate) Or(p2 Float32OptionArrayOptionPredicate) Float32OptionArrayOptionPredicate {
	return func(e Float32OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayOptionPredicate) Or(p2 Float64OptionArrayOptionPredicate) Float64OptionArrayOptionPredicate {
	return func(e Float64OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayOptionPredicate) Or(p2 Complex64OptionArrayOptionPredicate) Complex64OptionArrayOptionPredicate {
	return func(e Complex64OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayOptionPredicate) Or(p2 Complex128OptionArrayOptionPredicate) Complex128OptionArrayOptionPredicate {
	return func(e Complex128OptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayOptionPredicate) Or(p2 AnyOptionArrayOptionPredicate) AnyOptionArrayOptionPredicate {
	return func(e AnyOptionArrayOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionPredicate) Or(p2 BoolListOptionPredicate) BoolListOptionPredicate {
	return func(e BoolListOption) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionPredicate) Or(p2 StringListOptionPredicate) StringListOptionPredicate {
	return func(e StringListOption) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionPredicate) Or(p2 IntListOptionPredicate) IntListOptionPredicate {
	return func(e IntListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionPredicate) Or(p2 Int8ListOptionPredicate) Int8ListOptionPredicate {
	return func(e Int8ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionPredicate) Or(p2 Int16ListOptionPredicate) Int16ListOptionPredicate {
	return func(e Int16ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionPredicate) Or(p2 Int32ListOptionPredicate) Int32ListOptionPredicate {
	return func(e Int32ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionPredicate) Or(p2 Int64ListOptionPredicate) Int64ListOptionPredicate {
	return func(e Int64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionPredicate) Or(p2 UintListOptionPredicate) UintListOptionPredicate {
	return func(e UintListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionPredicate) Or(p2 Uint8ListOptionPredicate) Uint8ListOptionPredicate {
	return func(e Uint8ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionPredicate) Or(p2 Uint16ListOptionPredicate) Uint16ListOptionPredicate {
	return func(e Uint16ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionPredicate) Or(p2 Uint32ListOptionPredicate) Uint32ListOptionPredicate {
	return func(e Uint32ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionPredicate) Or(p2 Uint64ListOptionPredicate) Uint64ListOptionPredicate {
	return func(e Uint64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionPredicate) Or(p2 UintptrListOptionPredicate) UintptrListOptionPredicate {
	return func(e UintptrListOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionPredicate) Or(p2 ByteListOptionPredicate) ByteListOptionPredicate {
	return func(e ByteListOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionPredicate) Or(p2 RuneListOptionPredicate) RuneListOptionPredicate {
	return func(e RuneListOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionPredicate) Or(p2 Float32ListOptionPredicate) Float32ListOptionPredicate {
	return func(e Float32ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionPredicate) Or(p2 Float64ListOptionPredicate) Float64ListOptionPredicate {
	return func(e Float64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionPredicate) Or(p2 Complex64ListOptionPredicate) Complex64ListOptionPredicate {
	return func(e Complex64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionPredicate) Or(p2 Complex128ListOptionPredicate) Complex128ListOptionPredicate {
	return func(e Complex128ListOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionPredicate) Or(p2 AnyListOptionPredicate) AnyListOptionPredicate {
	return func(e AnyListOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionPredicate) Or(p2 BoolOptionOptionPredicate) BoolOptionOptionPredicate {
	return func(e BoolOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionPredicate) Or(p2 StringOptionOptionPredicate) StringOptionOptionPredicate {
	return func(e StringOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionPredicate) Or(p2 IntOptionOptionPredicate) IntOptionOptionPredicate {
	return func(e IntOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionPredicate) Or(p2 Int8OptionOptionPredicate) Int8OptionOptionPredicate {
	return func(e Int8OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionPredicate) Or(p2 Int16OptionOptionPredicate) Int16OptionOptionPredicate {
	return func(e Int16OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionPredicate) Or(p2 Int32OptionOptionPredicate) Int32OptionOptionPredicate {
	return func(e Int32OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionPredicate) Or(p2 Int64OptionOptionPredicate) Int64OptionOptionPredicate {
	return func(e Int64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionPredicate) Or(p2 UintOptionOptionPredicate) UintOptionOptionPredicate {
	return func(e UintOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionPredicate) Or(p2 Uint8OptionOptionPredicate) Uint8OptionOptionPredicate {
	return func(e Uint8OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionPredicate) Or(p2 Uint16OptionOptionPredicate) Uint16OptionOptionPredicate {
	return func(e Uint16OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionPredicate) Or(p2 Uint32OptionOptionPredicate) Uint32OptionOptionPredicate {
	return func(e Uint32OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionPredicate) Or(p2 Uint64OptionOptionPredicate) Uint64OptionOptionPredicate {
	return func(e Uint64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionPredicate) Or(p2 UintptrOptionOptionPredicate) UintptrOptionOptionPredicate {
	return func(e UintptrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionPredicate) Or(p2 ByteOptionOptionPredicate) ByteOptionOptionPredicate {
	return func(e ByteOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionPredicate) Or(p2 RuneOptionOptionPredicate) RuneOptionOptionPredicate {
	return func(e RuneOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionPredicate) Or(p2 Float32OptionOptionPredicate) Float32OptionOptionPredicate {
	return func(e Float32OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionPredicate) Or(p2 Float64OptionOptionPredicate) Float64OptionOptionPredicate {
	return func(e Float64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionPredicate) Or(p2 Complex64OptionOptionPredicate) Complex64OptionOptionPredicate {
	return func(e Complex64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionPredicate) Or(p2 Complex128OptionOptionPredicate) Complex128OptionOptionPredicate {
	return func(e Complex128OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionPredicate) Or(p2 AnyOptionOptionPredicate) AnyOptionOptionPredicate {
	return func(e AnyOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayOptionOptionPredicate) Or(p2 BoolArrayOptionOptionPredicate) BoolArrayOptionOptionPredicate {
	return func(e BoolArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayOptionOptionPredicate) Or(p2 StringArrayOptionOptionPredicate) StringArrayOptionOptionPredicate {
	return func(e StringArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayOptionOptionPredicate) Or(p2 IntArrayOptionOptionPredicate) IntArrayOptionOptionPredicate {
	return func(e IntArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayOptionOptionPredicate) Or(p2 Int8ArrayOptionOptionPredicate) Int8ArrayOptionOptionPredicate {
	return func(e Int8ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayOptionOptionPredicate) Or(p2 Int16ArrayOptionOptionPredicate) Int16ArrayOptionOptionPredicate {
	return func(e Int16ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayOptionOptionPredicate) Or(p2 Int32ArrayOptionOptionPredicate) Int32ArrayOptionOptionPredicate {
	return func(e Int32ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayOptionOptionPredicate) Or(p2 Int64ArrayOptionOptionPredicate) Int64ArrayOptionOptionPredicate {
	return func(e Int64ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayOptionOptionPredicate) Or(p2 UintArrayOptionOptionPredicate) UintArrayOptionOptionPredicate {
	return func(e UintArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayOptionOptionPredicate) Or(p2 Uint8ArrayOptionOptionPredicate) Uint8ArrayOptionOptionPredicate {
	return func(e Uint8ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayOptionOptionPredicate) Or(p2 Uint16ArrayOptionOptionPredicate) Uint16ArrayOptionOptionPredicate {
	return func(e Uint16ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayOptionOptionPredicate) Or(p2 Uint32ArrayOptionOptionPredicate) Uint32ArrayOptionOptionPredicate {
	return func(e Uint32ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayOptionOptionPredicate) Or(p2 Uint64ArrayOptionOptionPredicate) Uint64ArrayOptionOptionPredicate {
	return func(e Uint64ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayOptionOptionPredicate) Or(p2 UintptrArrayOptionOptionPredicate) UintptrArrayOptionOptionPredicate {
	return func(e UintptrArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayOptionOptionPredicate) Or(p2 ByteArrayOptionOptionPredicate) ByteArrayOptionOptionPredicate {
	return func(e ByteArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayOptionOptionPredicate) Or(p2 RuneArrayOptionOptionPredicate) RuneArrayOptionOptionPredicate {
	return func(e RuneArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayOptionOptionPredicate) Or(p2 Float32ArrayOptionOptionPredicate) Float32ArrayOptionOptionPredicate {
	return func(e Float32ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayOptionOptionPredicate) Or(p2 Float64ArrayOptionOptionPredicate) Float64ArrayOptionOptionPredicate {
	return func(e Float64ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayOptionOptionPredicate) Or(p2 Complex64ArrayOptionOptionPredicate) Complex64ArrayOptionOptionPredicate {
	return func(e Complex64ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayOptionOptionPredicate) Or(p2 Complex128ArrayOptionOptionPredicate) Complex128ArrayOptionOptionPredicate {
	return func(e Complex128ArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayOptionOptionPredicate) Or(p2 AnyArrayOptionOptionPredicate) AnyArrayOptionOptionPredicate {
	return func(e AnyArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayOptionOptionPredicate) Or(p2 BoolArrayArrayOptionOptionPredicate) BoolArrayArrayOptionOptionPredicate {
	return func(e BoolArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayOptionOptionPredicate) Or(p2 StringArrayArrayOptionOptionPredicate) StringArrayArrayOptionOptionPredicate {
	return func(e StringArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayOptionOptionPredicate) Or(p2 IntArrayArrayOptionOptionPredicate) IntArrayArrayOptionOptionPredicate {
	return func(e IntArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayOptionOptionPredicate) Or(p2 Int8ArrayArrayOptionOptionPredicate) Int8ArrayArrayOptionOptionPredicate {
	return func(e Int8ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayOptionOptionPredicate) Or(p2 Int16ArrayArrayOptionOptionPredicate) Int16ArrayArrayOptionOptionPredicate {
	return func(e Int16ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayOptionOptionPredicate) Or(p2 Int32ArrayArrayOptionOptionPredicate) Int32ArrayArrayOptionOptionPredicate {
	return func(e Int32ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayOptionOptionPredicate) Or(p2 Int64ArrayArrayOptionOptionPredicate) Int64ArrayArrayOptionOptionPredicate {
	return func(e Int64ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayOptionOptionPredicate) Or(p2 UintArrayArrayOptionOptionPredicate) UintArrayArrayOptionOptionPredicate {
	return func(e UintArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayOptionOptionPredicate) Or(p2 Uint8ArrayArrayOptionOptionPredicate) Uint8ArrayArrayOptionOptionPredicate {
	return func(e Uint8ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayOptionOptionPredicate) Or(p2 Uint16ArrayArrayOptionOptionPredicate) Uint16ArrayArrayOptionOptionPredicate {
	return func(e Uint16ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayOptionOptionPredicate) Or(p2 Uint32ArrayArrayOptionOptionPredicate) Uint32ArrayArrayOptionOptionPredicate {
	return func(e Uint32ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayOptionOptionPredicate) Or(p2 Uint64ArrayArrayOptionOptionPredicate) Uint64ArrayArrayOptionOptionPredicate {
	return func(e Uint64ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayOptionOptionPredicate) Or(p2 UintptrArrayArrayOptionOptionPredicate) UintptrArrayArrayOptionOptionPredicate {
	return func(e UintptrArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayOptionOptionPredicate) Or(p2 ByteArrayArrayOptionOptionPredicate) ByteArrayArrayOptionOptionPredicate {
	return func(e ByteArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayOptionOptionPredicate) Or(p2 RuneArrayArrayOptionOptionPredicate) RuneArrayArrayOptionOptionPredicate {
	return func(e RuneArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayOptionOptionPredicate) Or(p2 Float32ArrayArrayOptionOptionPredicate) Float32ArrayArrayOptionOptionPredicate {
	return func(e Float32ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayOptionOptionPredicate) Or(p2 Float64ArrayArrayOptionOptionPredicate) Float64ArrayArrayOptionOptionPredicate {
	return func(e Float64ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayOptionOptionPredicate) Or(p2 Complex64ArrayArrayOptionOptionPredicate) Complex64ArrayArrayOptionOptionPredicate {
	return func(e Complex64ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayOptionOptionPredicate) Or(p2 Complex128ArrayArrayOptionOptionPredicate) Complex128ArrayArrayOptionOptionPredicate {
	return func(e Complex128ArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayOptionOptionPredicate) Or(p2 AnyArrayArrayOptionOptionPredicate) AnyArrayArrayOptionOptionPredicate {
	return func(e AnyArrayArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayOptionOptionPredicate) Or(p2 BoolOptionArrayOptionOptionPredicate) BoolOptionArrayOptionOptionPredicate {
	return func(e BoolOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayOptionOptionPredicate) Or(p2 StringOptionArrayOptionOptionPredicate) StringOptionArrayOptionOptionPredicate {
	return func(e StringOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayOptionOptionPredicate) Or(p2 IntOptionArrayOptionOptionPredicate) IntOptionArrayOptionOptionPredicate {
	return func(e IntOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayOptionOptionPredicate) Or(p2 Int8OptionArrayOptionOptionPredicate) Int8OptionArrayOptionOptionPredicate {
	return func(e Int8OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayOptionOptionPredicate) Or(p2 Int16OptionArrayOptionOptionPredicate) Int16OptionArrayOptionOptionPredicate {
	return func(e Int16OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayOptionOptionPredicate) Or(p2 Int32OptionArrayOptionOptionPredicate) Int32OptionArrayOptionOptionPredicate {
	return func(e Int32OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayOptionOptionPredicate) Or(p2 Int64OptionArrayOptionOptionPredicate) Int64OptionArrayOptionOptionPredicate {
	return func(e Int64OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayOptionOptionPredicate) Or(p2 UintOptionArrayOptionOptionPredicate) UintOptionArrayOptionOptionPredicate {
	return func(e UintOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayOptionOptionPredicate) Or(p2 Uint8OptionArrayOptionOptionPredicate) Uint8OptionArrayOptionOptionPredicate {
	return func(e Uint8OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayOptionOptionPredicate) Or(p2 Uint16OptionArrayOptionOptionPredicate) Uint16OptionArrayOptionOptionPredicate {
	return func(e Uint16OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayOptionOptionPredicate) Or(p2 Uint32OptionArrayOptionOptionPredicate) Uint32OptionArrayOptionOptionPredicate {
	return func(e Uint32OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayOptionOptionPredicate) Or(p2 Uint64OptionArrayOptionOptionPredicate) Uint64OptionArrayOptionOptionPredicate {
	return func(e Uint64OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayOptionOptionPredicate) Or(p2 UintptrOptionArrayOptionOptionPredicate) UintptrOptionArrayOptionOptionPredicate {
	return func(e UintptrOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayOptionOptionPredicate) Or(p2 ByteOptionArrayOptionOptionPredicate) ByteOptionArrayOptionOptionPredicate {
	return func(e ByteOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayOptionOptionPredicate) Or(p2 RuneOptionArrayOptionOptionPredicate) RuneOptionArrayOptionOptionPredicate {
	return func(e RuneOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayOptionOptionPredicate) Or(p2 Float32OptionArrayOptionOptionPredicate) Float32OptionArrayOptionOptionPredicate {
	return func(e Float32OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayOptionOptionPredicate) Or(p2 Float64OptionArrayOptionOptionPredicate) Float64OptionArrayOptionOptionPredicate {
	return func(e Float64OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayOptionOptionPredicate) Or(p2 Complex64OptionArrayOptionOptionPredicate) Complex64OptionArrayOptionOptionPredicate {
	return func(e Complex64OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayOptionOptionPredicate) Or(p2 Complex128OptionArrayOptionOptionPredicate) Complex128OptionArrayOptionOptionPredicate {
	return func(e Complex128OptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayOptionOptionPredicate) Or(p2 AnyOptionArrayOptionOptionPredicate) AnyOptionArrayOptionOptionPredicate {
	return func(e AnyOptionArrayOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionPredicate) Or(p2 BoolListOptionOptionPredicate) BoolListOptionOptionPredicate {
	return func(e BoolListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionPredicate) Or(p2 StringListOptionOptionPredicate) StringListOptionOptionPredicate {
	return func(e StringListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionPredicate) Or(p2 IntListOptionOptionPredicate) IntListOptionOptionPredicate {
	return func(e IntListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionPredicate) Or(p2 Int8ListOptionOptionPredicate) Int8ListOptionOptionPredicate {
	return func(e Int8ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionPredicate) Or(p2 Int16ListOptionOptionPredicate) Int16ListOptionOptionPredicate {
	return func(e Int16ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionPredicate) Or(p2 Int32ListOptionOptionPredicate) Int32ListOptionOptionPredicate {
	return func(e Int32ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionPredicate) Or(p2 Int64ListOptionOptionPredicate) Int64ListOptionOptionPredicate {
	return func(e Int64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionPredicate) Or(p2 UintListOptionOptionPredicate) UintListOptionOptionPredicate {
	return func(e UintListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionPredicate) Or(p2 Uint8ListOptionOptionPredicate) Uint8ListOptionOptionPredicate {
	return func(e Uint8ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionPredicate) Or(p2 Uint16ListOptionOptionPredicate) Uint16ListOptionOptionPredicate {
	return func(e Uint16ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionPredicate) Or(p2 Uint32ListOptionOptionPredicate) Uint32ListOptionOptionPredicate {
	return func(e Uint32ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionPredicate) Or(p2 Uint64ListOptionOptionPredicate) Uint64ListOptionOptionPredicate {
	return func(e Uint64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionPredicate) Or(p2 UintptrListOptionOptionPredicate) UintptrListOptionOptionPredicate {
	return func(e UintptrListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionPredicate) Or(p2 ByteListOptionOptionPredicate) ByteListOptionOptionPredicate {
	return func(e ByteListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionPredicate) Or(p2 RuneListOptionOptionPredicate) RuneListOptionOptionPredicate {
	return func(e RuneListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionPredicate) Or(p2 Float32ListOptionOptionPredicate) Float32ListOptionOptionPredicate {
	return func(e Float32ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionPredicate) Or(p2 Float64ListOptionOptionPredicate) Float64ListOptionOptionPredicate {
	return func(e Float64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionPredicate) Or(p2 Complex64ListOptionOptionPredicate) Complex64ListOptionOptionPredicate {
	return func(e Complex64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionPredicate) Or(p2 Complex128ListOptionOptionPredicate) Complex128ListOptionOptionPredicate {
	return func(e Complex128ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionPredicate) Or(p2 AnyListOptionOptionPredicate) AnyListOptionOptionPredicate {
	return func(e AnyListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionOptionPredicate) Or(p2 BoolOptionOptionOptionPredicate) BoolOptionOptionOptionPredicate {
	return func(e BoolOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionOptionPredicate) Or(p2 StringOptionOptionOptionPredicate) StringOptionOptionOptionPredicate {
	return func(e StringOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionOptionPredicate) Or(p2 IntOptionOptionOptionPredicate) IntOptionOptionOptionPredicate {
	return func(e IntOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionOptionPredicate) Or(p2 Int8OptionOptionOptionPredicate) Int8OptionOptionOptionPredicate {
	return func(e Int8OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionOptionPredicate) Or(p2 Int16OptionOptionOptionPredicate) Int16OptionOptionOptionPredicate {
	return func(e Int16OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionOptionPredicate) Or(p2 Int32OptionOptionOptionPredicate) Int32OptionOptionOptionPredicate {
	return func(e Int32OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionOptionPredicate) Or(p2 Int64OptionOptionOptionPredicate) Int64OptionOptionOptionPredicate {
	return func(e Int64OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionOptionPredicate) Or(p2 UintOptionOptionOptionPredicate) UintOptionOptionOptionPredicate {
	return func(e UintOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionOptionPredicate) Or(p2 Uint8OptionOptionOptionPredicate) Uint8OptionOptionOptionPredicate {
	return func(e Uint8OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionOptionPredicate) Or(p2 Uint16OptionOptionOptionPredicate) Uint16OptionOptionOptionPredicate {
	return func(e Uint16OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionOptionPredicate) Or(p2 Uint32OptionOptionOptionPredicate) Uint32OptionOptionOptionPredicate {
	return func(e Uint32OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionOptionPredicate) Or(p2 Uint64OptionOptionOptionPredicate) Uint64OptionOptionOptionPredicate {
	return func(e Uint64OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionOptionPredicate) Or(p2 UintptrOptionOptionOptionPredicate) UintptrOptionOptionOptionPredicate {
	return func(e UintptrOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionOptionPredicate) Or(p2 ByteOptionOptionOptionPredicate) ByteOptionOptionOptionPredicate {
	return func(e ByteOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionOptionPredicate) Or(p2 RuneOptionOptionOptionPredicate) RuneOptionOptionOptionPredicate {
	return func(e RuneOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionOptionPredicate) Or(p2 Float32OptionOptionOptionPredicate) Float32OptionOptionOptionPredicate {
	return func(e Float32OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionOptionPredicate) Or(p2 Float64OptionOptionOptionPredicate) Float64OptionOptionOptionPredicate {
	return func(e Float64OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionOptionPredicate) Or(p2 Complex64OptionOptionOptionPredicate) Complex64OptionOptionOptionPredicate {
	return func(e Complex64OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionOptionPredicate) Or(p2 Complex128OptionOptionOptionPredicate) Complex128OptionOptionOptionPredicate {
	return func(e Complex128OptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionOptionPredicate) Or(p2 AnyOptionOptionOptionPredicate) AnyOptionOptionOptionPredicate {
	return func(e AnyOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayOptionOptionOptionPredicate) Or(p2 BoolArrayOptionOptionOptionPredicate) BoolArrayOptionOptionOptionPredicate {
	return func(e BoolArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayOptionOptionOptionPredicate) Or(p2 StringArrayOptionOptionOptionPredicate) StringArrayOptionOptionOptionPredicate {
	return func(e StringArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayOptionOptionOptionPredicate) Or(p2 IntArrayOptionOptionOptionPredicate) IntArrayOptionOptionOptionPredicate {
	return func(e IntArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayOptionOptionOptionPredicate) Or(p2 Int8ArrayOptionOptionOptionPredicate) Int8ArrayOptionOptionOptionPredicate {
	return func(e Int8ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayOptionOptionOptionPredicate) Or(p2 Int16ArrayOptionOptionOptionPredicate) Int16ArrayOptionOptionOptionPredicate {
	return func(e Int16ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayOptionOptionOptionPredicate) Or(p2 Int32ArrayOptionOptionOptionPredicate) Int32ArrayOptionOptionOptionPredicate {
	return func(e Int32ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayOptionOptionOptionPredicate) Or(p2 Int64ArrayOptionOptionOptionPredicate) Int64ArrayOptionOptionOptionPredicate {
	return func(e Int64ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayOptionOptionOptionPredicate) Or(p2 UintArrayOptionOptionOptionPredicate) UintArrayOptionOptionOptionPredicate {
	return func(e UintArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayOptionOptionOptionPredicate) Or(p2 Uint8ArrayOptionOptionOptionPredicate) Uint8ArrayOptionOptionOptionPredicate {
	return func(e Uint8ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayOptionOptionOptionPredicate) Or(p2 Uint16ArrayOptionOptionOptionPredicate) Uint16ArrayOptionOptionOptionPredicate {
	return func(e Uint16ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayOptionOptionOptionPredicate) Or(p2 Uint32ArrayOptionOptionOptionPredicate) Uint32ArrayOptionOptionOptionPredicate {
	return func(e Uint32ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayOptionOptionOptionPredicate) Or(p2 Uint64ArrayOptionOptionOptionPredicate) Uint64ArrayOptionOptionOptionPredicate {
	return func(e Uint64ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayOptionOptionOptionPredicate) Or(p2 UintptrArrayOptionOptionOptionPredicate) UintptrArrayOptionOptionOptionPredicate {
	return func(e UintptrArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayOptionOptionOptionPredicate) Or(p2 ByteArrayOptionOptionOptionPredicate) ByteArrayOptionOptionOptionPredicate {
	return func(e ByteArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayOptionOptionOptionPredicate) Or(p2 RuneArrayOptionOptionOptionPredicate) RuneArrayOptionOptionOptionPredicate {
	return func(e RuneArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayOptionOptionOptionPredicate) Or(p2 Float32ArrayOptionOptionOptionPredicate) Float32ArrayOptionOptionOptionPredicate {
	return func(e Float32ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayOptionOptionOptionPredicate) Or(p2 Float64ArrayOptionOptionOptionPredicate) Float64ArrayOptionOptionOptionPredicate {
	return func(e Float64ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayOptionOptionOptionPredicate) Or(p2 Complex64ArrayOptionOptionOptionPredicate) Complex64ArrayOptionOptionOptionPredicate {
	return func(e Complex64ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayOptionOptionOptionPredicate) Or(p2 Complex128ArrayOptionOptionOptionPredicate) Complex128ArrayOptionOptionOptionPredicate {
	return func(e Complex128ArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayOptionOptionOptionPredicate) Or(p2 AnyArrayOptionOptionOptionPredicate) AnyArrayOptionOptionOptionPredicate {
	return func(e AnyArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayOptionOptionOptionPredicate) Or(p2 BoolArrayArrayOptionOptionOptionPredicate) BoolArrayArrayOptionOptionOptionPredicate {
	return func(e BoolArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayOptionOptionOptionPredicate) Or(p2 StringArrayArrayOptionOptionOptionPredicate) StringArrayArrayOptionOptionOptionPredicate {
	return func(e StringArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayOptionOptionOptionPredicate) Or(p2 IntArrayArrayOptionOptionOptionPredicate) IntArrayArrayOptionOptionOptionPredicate {
	return func(e IntArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayOptionOptionOptionPredicate) Or(p2 Int8ArrayArrayOptionOptionOptionPredicate) Int8ArrayArrayOptionOptionOptionPredicate {
	return func(e Int8ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayOptionOptionOptionPredicate) Or(p2 Int16ArrayArrayOptionOptionOptionPredicate) Int16ArrayArrayOptionOptionOptionPredicate {
	return func(e Int16ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayOptionOptionOptionPredicate) Or(p2 Int32ArrayArrayOptionOptionOptionPredicate) Int32ArrayArrayOptionOptionOptionPredicate {
	return func(e Int32ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayOptionOptionOptionPredicate) Or(p2 Int64ArrayArrayOptionOptionOptionPredicate) Int64ArrayArrayOptionOptionOptionPredicate {
	return func(e Int64ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayOptionOptionOptionPredicate) Or(p2 UintArrayArrayOptionOptionOptionPredicate) UintArrayArrayOptionOptionOptionPredicate {
	return func(e UintArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayOptionOptionOptionPredicate) Or(p2 Uint8ArrayArrayOptionOptionOptionPredicate) Uint8ArrayArrayOptionOptionOptionPredicate {
	return func(e Uint8ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayOptionOptionOptionPredicate) Or(p2 Uint16ArrayArrayOptionOptionOptionPredicate) Uint16ArrayArrayOptionOptionOptionPredicate {
	return func(e Uint16ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayOptionOptionOptionPredicate) Or(p2 Uint32ArrayArrayOptionOptionOptionPredicate) Uint32ArrayArrayOptionOptionOptionPredicate {
	return func(e Uint32ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayOptionOptionOptionPredicate) Or(p2 Uint64ArrayArrayOptionOptionOptionPredicate) Uint64ArrayArrayOptionOptionOptionPredicate {
	return func(e Uint64ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayOptionOptionOptionPredicate) Or(p2 UintptrArrayArrayOptionOptionOptionPredicate) UintptrArrayArrayOptionOptionOptionPredicate {
	return func(e UintptrArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayOptionOptionOptionPredicate) Or(p2 ByteArrayArrayOptionOptionOptionPredicate) ByteArrayArrayOptionOptionOptionPredicate {
	return func(e ByteArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayOptionOptionOptionPredicate) Or(p2 RuneArrayArrayOptionOptionOptionPredicate) RuneArrayArrayOptionOptionOptionPredicate {
	return func(e RuneArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayOptionOptionOptionPredicate) Or(p2 Float32ArrayArrayOptionOptionOptionPredicate) Float32ArrayArrayOptionOptionOptionPredicate {
	return func(e Float32ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayOptionOptionOptionPredicate) Or(p2 Float64ArrayArrayOptionOptionOptionPredicate) Float64ArrayArrayOptionOptionOptionPredicate {
	return func(e Float64ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayOptionOptionOptionPredicate) Or(p2 Complex64ArrayArrayOptionOptionOptionPredicate) Complex64ArrayArrayOptionOptionOptionPredicate {
	return func(e Complex64ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayOptionOptionOptionPredicate) Or(p2 Complex128ArrayArrayOptionOptionOptionPredicate) Complex128ArrayArrayOptionOptionOptionPredicate {
	return func(e Complex128ArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayOptionOptionOptionPredicate) Or(p2 AnyArrayArrayOptionOptionOptionPredicate) AnyArrayArrayOptionOptionOptionPredicate {
	return func(e AnyArrayArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayOptionOptionOptionPredicate) Or(p2 BoolOptionArrayOptionOptionOptionPredicate) BoolOptionArrayOptionOptionOptionPredicate {
	return func(e BoolOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayOptionOptionOptionPredicate) Or(p2 StringOptionArrayOptionOptionOptionPredicate) StringOptionArrayOptionOptionOptionPredicate {
	return func(e StringOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayOptionOptionOptionPredicate) Or(p2 IntOptionArrayOptionOptionOptionPredicate) IntOptionArrayOptionOptionOptionPredicate {
	return func(e IntOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayOptionOptionOptionPredicate) Or(p2 Int8OptionArrayOptionOptionOptionPredicate) Int8OptionArrayOptionOptionOptionPredicate {
	return func(e Int8OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayOptionOptionOptionPredicate) Or(p2 Int16OptionArrayOptionOptionOptionPredicate) Int16OptionArrayOptionOptionOptionPredicate {
	return func(e Int16OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayOptionOptionOptionPredicate) Or(p2 Int32OptionArrayOptionOptionOptionPredicate) Int32OptionArrayOptionOptionOptionPredicate {
	return func(e Int32OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayOptionOptionOptionPredicate) Or(p2 Int64OptionArrayOptionOptionOptionPredicate) Int64OptionArrayOptionOptionOptionPredicate {
	return func(e Int64OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayOptionOptionOptionPredicate) Or(p2 UintOptionArrayOptionOptionOptionPredicate) UintOptionArrayOptionOptionOptionPredicate {
	return func(e UintOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayOptionOptionOptionPredicate) Or(p2 Uint8OptionArrayOptionOptionOptionPredicate) Uint8OptionArrayOptionOptionOptionPredicate {
	return func(e Uint8OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayOptionOptionOptionPredicate) Or(p2 Uint16OptionArrayOptionOptionOptionPredicate) Uint16OptionArrayOptionOptionOptionPredicate {
	return func(e Uint16OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayOptionOptionOptionPredicate) Or(p2 Uint32OptionArrayOptionOptionOptionPredicate) Uint32OptionArrayOptionOptionOptionPredicate {
	return func(e Uint32OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayOptionOptionOptionPredicate) Or(p2 Uint64OptionArrayOptionOptionOptionPredicate) Uint64OptionArrayOptionOptionOptionPredicate {
	return func(e Uint64OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayOptionOptionOptionPredicate) Or(p2 UintptrOptionArrayOptionOptionOptionPredicate) UintptrOptionArrayOptionOptionOptionPredicate {
	return func(e UintptrOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayOptionOptionOptionPredicate) Or(p2 ByteOptionArrayOptionOptionOptionPredicate) ByteOptionArrayOptionOptionOptionPredicate {
	return func(e ByteOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayOptionOptionOptionPredicate) Or(p2 RuneOptionArrayOptionOptionOptionPredicate) RuneOptionArrayOptionOptionOptionPredicate {
	return func(e RuneOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayOptionOptionOptionPredicate) Or(p2 Float32OptionArrayOptionOptionOptionPredicate) Float32OptionArrayOptionOptionOptionPredicate {
	return func(e Float32OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayOptionOptionOptionPredicate) Or(p2 Float64OptionArrayOptionOptionOptionPredicate) Float64OptionArrayOptionOptionOptionPredicate {
	return func(e Float64OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayOptionOptionOptionPredicate) Or(p2 Complex64OptionArrayOptionOptionOptionPredicate) Complex64OptionArrayOptionOptionOptionPredicate {
	return func(e Complex64OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayOptionOptionOptionPredicate) Or(p2 Complex128OptionArrayOptionOptionOptionPredicate) Complex128OptionArrayOptionOptionOptionPredicate {
	return func(e Complex128OptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayOptionOptionOptionPredicate) Or(p2 AnyOptionArrayOptionOptionOptionPredicate) AnyOptionArrayOptionOptionOptionPredicate {
	return func(e AnyOptionArrayOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionOptionPredicate) Or(p2 BoolListOptionOptionOptionPredicate) BoolListOptionOptionOptionPredicate {
	return func(e BoolListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionOptionPredicate) Or(p2 StringListOptionOptionOptionPredicate) StringListOptionOptionOptionPredicate {
	return func(e StringListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionOptionPredicate) Or(p2 IntListOptionOptionOptionPredicate) IntListOptionOptionOptionPredicate {
	return func(e IntListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionOptionPredicate) Or(p2 Int8ListOptionOptionOptionPredicate) Int8ListOptionOptionOptionPredicate {
	return func(e Int8ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionOptionPredicate) Or(p2 Int16ListOptionOptionOptionPredicate) Int16ListOptionOptionOptionPredicate {
	return func(e Int16ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionOptionPredicate) Or(p2 Int32ListOptionOptionOptionPredicate) Int32ListOptionOptionOptionPredicate {
	return func(e Int32ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionOptionPredicate) Or(p2 Int64ListOptionOptionOptionPredicate) Int64ListOptionOptionOptionPredicate {
	return func(e Int64ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionOptionPredicate) Or(p2 UintListOptionOptionOptionPredicate) UintListOptionOptionOptionPredicate {
	return func(e UintListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionOptionPredicate) Or(p2 Uint8ListOptionOptionOptionPredicate) Uint8ListOptionOptionOptionPredicate {
	return func(e Uint8ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionOptionPredicate) Or(p2 Uint16ListOptionOptionOptionPredicate) Uint16ListOptionOptionOptionPredicate {
	return func(e Uint16ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionOptionPredicate) Or(p2 Uint32ListOptionOptionOptionPredicate) Uint32ListOptionOptionOptionPredicate {
	return func(e Uint32ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionOptionPredicate) Or(p2 Uint64ListOptionOptionOptionPredicate) Uint64ListOptionOptionOptionPredicate {
	return func(e Uint64ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionOptionPredicate) Or(p2 UintptrListOptionOptionOptionPredicate) UintptrListOptionOptionOptionPredicate {
	return func(e UintptrListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionOptionPredicate) Or(p2 ByteListOptionOptionOptionPredicate) ByteListOptionOptionOptionPredicate {
	return func(e ByteListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionOptionPredicate) Or(p2 RuneListOptionOptionOptionPredicate) RuneListOptionOptionOptionPredicate {
	return func(e RuneListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionOptionPredicate) Or(p2 Float32ListOptionOptionOptionPredicate) Float32ListOptionOptionOptionPredicate {
	return func(e Float32ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionOptionPredicate) Or(p2 Float64ListOptionOptionOptionPredicate) Float64ListOptionOptionOptionPredicate {
	return func(e Float64ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionOptionPredicate) Or(p2 Complex64ListOptionOptionOptionPredicate) Complex64ListOptionOptionOptionPredicate {
	return func(e Complex64ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionOptionPredicate) Or(p2 Complex128ListOptionOptionOptionPredicate) Complex128ListOptionOptionOptionPredicate {
	return func(e Complex128ListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionOptionPredicate) Or(p2 AnyListOptionOptionOptionPredicate) AnyListOptionOptionOptionPredicate {
	return func(e AnyListOptionOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListPredicate) Or(p2 BoolListPredicate) BoolListPredicate {
	return func(e BoolList) bool { return p1(e) || p2(e) }
}
func (p1 StringListPredicate) Or(p2 StringListPredicate) StringListPredicate {
	return func(e StringList) bool { return p1(e) || p2(e) }
}
func (p1 IntListPredicate) Or(p2 IntListPredicate) IntListPredicate {
	return func(e IntList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListPredicate) Or(p2 Int8ListPredicate) Int8ListPredicate {
	return func(e Int8List) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListPredicate) Or(p2 Int16ListPredicate) Int16ListPredicate {
	return func(e Int16List) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListPredicate) Or(p2 Int32ListPredicate) Int32ListPredicate {
	return func(e Int32List) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListPredicate) Or(p2 Int64ListPredicate) Int64ListPredicate {
	return func(e Int64List) bool { return p1(e) || p2(e) }
}
func (p1 UintListPredicate) Or(p2 UintListPredicate) UintListPredicate {
	return func(e UintList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListPredicate) Or(p2 Uint8ListPredicate) Uint8ListPredicate {
	return func(e Uint8List) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListPredicate) Or(p2 Uint16ListPredicate) Uint16ListPredicate {
	return func(e Uint16List) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListPredicate) Or(p2 Uint32ListPredicate) Uint32ListPredicate {
	return func(e Uint32List) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListPredicate) Or(p2 Uint64ListPredicate) Uint64ListPredicate {
	return func(e Uint64List) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListPredicate) Or(p2 UintptrListPredicate) UintptrListPredicate {
	return func(e UintptrList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListPredicate) Or(p2 ByteListPredicate) ByteListPredicate {
	return func(e ByteList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListPredicate) Or(p2 RuneListPredicate) RuneListPredicate {
	return func(e RuneList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListPredicate) Or(p2 Float32ListPredicate) Float32ListPredicate {
	return func(e Float32List) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListPredicate) Or(p2 Float64ListPredicate) Float64ListPredicate {
	return func(e Float64List) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListPredicate) Or(p2 Complex64ListPredicate) Complex64ListPredicate {
	return func(e Complex64List) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListPredicate) Or(p2 Complex128ListPredicate) Complex128ListPredicate {
	return func(e Complex128List) bool { return p1(e) || p2(e) }
}
func (p1 AnyListPredicate) Or(p2 AnyListPredicate) AnyListPredicate {
	return func(e AnyList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionListPredicate) Or(p2 BoolOptionListPredicate) BoolOptionListPredicate {
	return func(e BoolOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionListPredicate) Or(p2 StringOptionListPredicate) StringOptionListPredicate {
	return func(e StringOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionListPredicate) Or(p2 IntOptionListPredicate) IntOptionListPredicate {
	return func(e IntOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionListPredicate) Or(p2 Int8OptionListPredicate) Int8OptionListPredicate {
	return func(e Int8OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionListPredicate) Or(p2 Int16OptionListPredicate) Int16OptionListPredicate {
	return func(e Int16OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionListPredicate) Or(p2 Int32OptionListPredicate) Int32OptionListPredicate {
	return func(e Int32OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionListPredicate) Or(p2 Int64OptionListPredicate) Int64OptionListPredicate {
	return func(e Int64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionListPredicate) Or(p2 UintOptionListPredicate) UintOptionListPredicate {
	return func(e UintOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionListPredicate) Or(p2 Uint8OptionListPredicate) Uint8OptionListPredicate {
	return func(e Uint8OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionListPredicate) Or(p2 Uint16OptionListPredicate) Uint16OptionListPredicate {
	return func(e Uint16OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionListPredicate) Or(p2 Uint32OptionListPredicate) Uint32OptionListPredicate {
	return func(e Uint32OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionListPredicate) Or(p2 Uint64OptionListPredicate) Uint64OptionListPredicate {
	return func(e Uint64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionListPredicate) Or(p2 UintptrOptionListPredicate) UintptrOptionListPredicate {
	return func(e UintptrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionListPredicate) Or(p2 ByteOptionListPredicate) ByteOptionListPredicate {
	return func(e ByteOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionListPredicate) Or(p2 RuneOptionListPredicate) RuneOptionListPredicate {
	return func(e RuneOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionListPredicate) Or(p2 Float32OptionListPredicate) Float32OptionListPredicate {
	return func(e Float32OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionListPredicate) Or(p2 Float64OptionListPredicate) Float64OptionListPredicate {
	return func(e Float64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionListPredicate) Or(p2 Complex64OptionListPredicate) Complex64OptionListPredicate {
	return func(e Complex64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionListPredicate) Or(p2 Complex128OptionListPredicate) Complex128OptionListPredicate {
	return func(e Complex128OptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionListPredicate) Or(p2 AnyOptionListPredicate) AnyOptionListPredicate {
	return func(e AnyOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayOptionListPredicate) Or(p2 BoolArrayOptionListPredicate) BoolArrayOptionListPredicate {
	return func(e BoolArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayOptionListPredicate) Or(p2 StringArrayOptionListPredicate) StringArrayOptionListPredicate {
	return func(e StringArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayOptionListPredicate) Or(p2 IntArrayOptionListPredicate) IntArrayOptionListPredicate {
	return func(e IntArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayOptionListPredicate) Or(p2 Int8ArrayOptionListPredicate) Int8ArrayOptionListPredicate {
	return func(e Int8ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayOptionListPredicate) Or(p2 Int16ArrayOptionListPredicate) Int16ArrayOptionListPredicate {
	return func(e Int16ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayOptionListPredicate) Or(p2 Int32ArrayOptionListPredicate) Int32ArrayOptionListPredicate {
	return func(e Int32ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayOptionListPredicate) Or(p2 Int64ArrayOptionListPredicate) Int64ArrayOptionListPredicate {
	return func(e Int64ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayOptionListPredicate) Or(p2 UintArrayOptionListPredicate) UintArrayOptionListPredicate {
	return func(e UintArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayOptionListPredicate) Or(p2 Uint8ArrayOptionListPredicate) Uint8ArrayOptionListPredicate {
	return func(e Uint8ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayOptionListPredicate) Or(p2 Uint16ArrayOptionListPredicate) Uint16ArrayOptionListPredicate {
	return func(e Uint16ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayOptionListPredicate) Or(p2 Uint32ArrayOptionListPredicate) Uint32ArrayOptionListPredicate {
	return func(e Uint32ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayOptionListPredicate) Or(p2 Uint64ArrayOptionListPredicate) Uint64ArrayOptionListPredicate {
	return func(e Uint64ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayOptionListPredicate) Or(p2 UintptrArrayOptionListPredicate) UintptrArrayOptionListPredicate {
	return func(e UintptrArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayOptionListPredicate) Or(p2 ByteArrayOptionListPredicate) ByteArrayOptionListPredicate {
	return func(e ByteArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayOptionListPredicate) Or(p2 RuneArrayOptionListPredicate) RuneArrayOptionListPredicate {
	return func(e RuneArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayOptionListPredicate) Or(p2 Float32ArrayOptionListPredicate) Float32ArrayOptionListPredicate {
	return func(e Float32ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayOptionListPredicate) Or(p2 Float64ArrayOptionListPredicate) Float64ArrayOptionListPredicate {
	return func(e Float64ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayOptionListPredicate) Or(p2 Complex64ArrayOptionListPredicate) Complex64ArrayOptionListPredicate {
	return func(e Complex64ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayOptionListPredicate) Or(p2 Complex128ArrayOptionListPredicate) Complex128ArrayOptionListPredicate {
	return func(e Complex128ArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayOptionListPredicate) Or(p2 AnyArrayOptionListPredicate) AnyArrayOptionListPredicate {
	return func(e AnyArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayOptionListPredicate) Or(p2 BoolArrayArrayOptionListPredicate) BoolArrayArrayOptionListPredicate {
	return func(e BoolArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayOptionListPredicate) Or(p2 StringArrayArrayOptionListPredicate) StringArrayArrayOptionListPredicate {
	return func(e StringArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayOptionListPredicate) Or(p2 IntArrayArrayOptionListPredicate) IntArrayArrayOptionListPredicate {
	return func(e IntArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayOptionListPredicate) Or(p2 Int8ArrayArrayOptionListPredicate) Int8ArrayArrayOptionListPredicate {
	return func(e Int8ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayOptionListPredicate) Or(p2 Int16ArrayArrayOptionListPredicate) Int16ArrayArrayOptionListPredicate {
	return func(e Int16ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayOptionListPredicate) Or(p2 Int32ArrayArrayOptionListPredicate) Int32ArrayArrayOptionListPredicate {
	return func(e Int32ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayOptionListPredicate) Or(p2 Int64ArrayArrayOptionListPredicate) Int64ArrayArrayOptionListPredicate {
	return func(e Int64ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayOptionListPredicate) Or(p2 UintArrayArrayOptionListPredicate) UintArrayArrayOptionListPredicate {
	return func(e UintArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayOptionListPredicate) Or(p2 Uint8ArrayArrayOptionListPredicate) Uint8ArrayArrayOptionListPredicate {
	return func(e Uint8ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayOptionListPredicate) Or(p2 Uint16ArrayArrayOptionListPredicate) Uint16ArrayArrayOptionListPredicate {
	return func(e Uint16ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayOptionListPredicate) Or(p2 Uint32ArrayArrayOptionListPredicate) Uint32ArrayArrayOptionListPredicate {
	return func(e Uint32ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayOptionListPredicate) Or(p2 Uint64ArrayArrayOptionListPredicate) Uint64ArrayArrayOptionListPredicate {
	return func(e Uint64ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayOptionListPredicate) Or(p2 UintptrArrayArrayOptionListPredicate) UintptrArrayArrayOptionListPredicate {
	return func(e UintptrArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayOptionListPredicate) Or(p2 ByteArrayArrayOptionListPredicate) ByteArrayArrayOptionListPredicate {
	return func(e ByteArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayOptionListPredicate) Or(p2 RuneArrayArrayOptionListPredicate) RuneArrayArrayOptionListPredicate {
	return func(e RuneArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayOptionListPredicate) Or(p2 Float32ArrayArrayOptionListPredicate) Float32ArrayArrayOptionListPredicate {
	return func(e Float32ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayOptionListPredicate) Or(p2 Float64ArrayArrayOptionListPredicate) Float64ArrayArrayOptionListPredicate {
	return func(e Float64ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayOptionListPredicate) Or(p2 Complex64ArrayArrayOptionListPredicate) Complex64ArrayArrayOptionListPredicate {
	return func(e Complex64ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayOptionListPredicate) Or(p2 Complex128ArrayArrayOptionListPredicate) Complex128ArrayArrayOptionListPredicate {
	return func(e Complex128ArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayOptionListPredicate) Or(p2 AnyArrayArrayOptionListPredicate) AnyArrayArrayOptionListPredicate {
	return func(e AnyArrayArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayOptionListPredicate) Or(p2 BoolOptionArrayOptionListPredicate) BoolOptionArrayOptionListPredicate {
	return func(e BoolOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayOptionListPredicate) Or(p2 StringOptionArrayOptionListPredicate) StringOptionArrayOptionListPredicate {
	return func(e StringOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayOptionListPredicate) Or(p2 IntOptionArrayOptionListPredicate) IntOptionArrayOptionListPredicate {
	return func(e IntOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayOptionListPredicate) Or(p2 Int8OptionArrayOptionListPredicate) Int8OptionArrayOptionListPredicate {
	return func(e Int8OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayOptionListPredicate) Or(p2 Int16OptionArrayOptionListPredicate) Int16OptionArrayOptionListPredicate {
	return func(e Int16OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayOptionListPredicate) Or(p2 Int32OptionArrayOptionListPredicate) Int32OptionArrayOptionListPredicate {
	return func(e Int32OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayOptionListPredicate) Or(p2 Int64OptionArrayOptionListPredicate) Int64OptionArrayOptionListPredicate {
	return func(e Int64OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayOptionListPredicate) Or(p2 UintOptionArrayOptionListPredicate) UintOptionArrayOptionListPredicate {
	return func(e UintOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayOptionListPredicate) Or(p2 Uint8OptionArrayOptionListPredicate) Uint8OptionArrayOptionListPredicate {
	return func(e Uint8OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayOptionListPredicate) Or(p2 Uint16OptionArrayOptionListPredicate) Uint16OptionArrayOptionListPredicate {
	return func(e Uint16OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayOptionListPredicate) Or(p2 Uint32OptionArrayOptionListPredicate) Uint32OptionArrayOptionListPredicate {
	return func(e Uint32OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayOptionListPredicate) Or(p2 Uint64OptionArrayOptionListPredicate) Uint64OptionArrayOptionListPredicate {
	return func(e Uint64OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayOptionListPredicate) Or(p2 UintptrOptionArrayOptionListPredicate) UintptrOptionArrayOptionListPredicate {
	return func(e UintptrOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayOptionListPredicate) Or(p2 ByteOptionArrayOptionListPredicate) ByteOptionArrayOptionListPredicate {
	return func(e ByteOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayOptionListPredicate) Or(p2 RuneOptionArrayOptionListPredicate) RuneOptionArrayOptionListPredicate {
	return func(e RuneOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayOptionListPredicate) Or(p2 Float32OptionArrayOptionListPredicate) Float32OptionArrayOptionListPredicate {
	return func(e Float32OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayOptionListPredicate) Or(p2 Float64OptionArrayOptionListPredicate) Float64OptionArrayOptionListPredicate {
	return func(e Float64OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayOptionListPredicate) Or(p2 Complex64OptionArrayOptionListPredicate) Complex64OptionArrayOptionListPredicate {
	return func(e Complex64OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayOptionListPredicate) Or(p2 Complex128OptionArrayOptionListPredicate) Complex128OptionArrayOptionListPredicate {
	return func(e Complex128OptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayOptionListPredicate) Or(p2 AnyOptionArrayOptionListPredicate) AnyOptionArrayOptionListPredicate {
	return func(e AnyOptionArrayOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionListPredicate) Or(p2 BoolListOptionListPredicate) BoolListOptionListPredicate {
	return func(e BoolListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionListPredicate) Or(p2 StringListOptionListPredicate) StringListOptionListPredicate {
	return func(e StringListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionListPredicate) Or(p2 IntListOptionListPredicate) IntListOptionListPredicate {
	return func(e IntListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionListPredicate) Or(p2 Int8ListOptionListPredicate) Int8ListOptionListPredicate {
	return func(e Int8ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionListPredicate) Or(p2 Int16ListOptionListPredicate) Int16ListOptionListPredicate {
	return func(e Int16ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionListPredicate) Or(p2 Int32ListOptionListPredicate) Int32ListOptionListPredicate {
	return func(e Int32ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionListPredicate) Or(p2 Int64ListOptionListPredicate) Int64ListOptionListPredicate {
	return func(e Int64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionListPredicate) Or(p2 UintListOptionListPredicate) UintListOptionListPredicate {
	return func(e UintListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionListPredicate) Or(p2 Uint8ListOptionListPredicate) Uint8ListOptionListPredicate {
	return func(e Uint8ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionListPredicate) Or(p2 Uint16ListOptionListPredicate) Uint16ListOptionListPredicate {
	return func(e Uint16ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionListPredicate) Or(p2 Uint32ListOptionListPredicate) Uint32ListOptionListPredicate {
	return func(e Uint32ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionListPredicate) Or(p2 Uint64ListOptionListPredicate) Uint64ListOptionListPredicate {
	return func(e Uint64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionListPredicate) Or(p2 UintptrListOptionListPredicate) UintptrListOptionListPredicate {
	return func(e UintptrListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionListPredicate) Or(p2 ByteListOptionListPredicate) ByteListOptionListPredicate {
	return func(e ByteListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionListPredicate) Or(p2 RuneListOptionListPredicate) RuneListOptionListPredicate {
	return func(e RuneListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionListPredicate) Or(p2 Float32ListOptionListPredicate) Float32ListOptionListPredicate {
	return func(e Float32ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionListPredicate) Or(p2 Float64ListOptionListPredicate) Float64ListOptionListPredicate {
	return func(e Float64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionListPredicate) Or(p2 Complex64ListOptionListPredicate) Complex64ListOptionListPredicate {
	return func(e Complex64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionListPredicate) Or(p2 Complex128ListOptionListPredicate) Complex128ListOptionListPredicate {
	return func(e Complex128ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionListPredicate) Or(p2 AnyListOptionListPredicate) AnyListOptionListPredicate {
	return func(e AnyListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionListPredicate) Or(p2 BoolOptionOptionListPredicate) BoolOptionOptionListPredicate {
	return func(e BoolOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionListPredicate) Or(p2 StringOptionOptionListPredicate) StringOptionOptionListPredicate {
	return func(e StringOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionListPredicate) Or(p2 IntOptionOptionListPredicate) IntOptionOptionListPredicate {
	return func(e IntOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionListPredicate) Or(p2 Int8OptionOptionListPredicate) Int8OptionOptionListPredicate {
	return func(e Int8OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionListPredicate) Or(p2 Int16OptionOptionListPredicate) Int16OptionOptionListPredicate {
	return func(e Int16OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionListPredicate) Or(p2 Int32OptionOptionListPredicate) Int32OptionOptionListPredicate {
	return func(e Int32OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionListPredicate) Or(p2 Int64OptionOptionListPredicate) Int64OptionOptionListPredicate {
	return func(e Int64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionListPredicate) Or(p2 UintOptionOptionListPredicate) UintOptionOptionListPredicate {
	return func(e UintOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionListPredicate) Or(p2 Uint8OptionOptionListPredicate) Uint8OptionOptionListPredicate {
	return func(e Uint8OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionListPredicate) Or(p2 Uint16OptionOptionListPredicate) Uint16OptionOptionListPredicate {
	return func(e Uint16OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionListPredicate) Or(p2 Uint32OptionOptionListPredicate) Uint32OptionOptionListPredicate {
	return func(e Uint32OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionListPredicate) Or(p2 Uint64OptionOptionListPredicate) Uint64OptionOptionListPredicate {
	return func(e Uint64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionListPredicate) Or(p2 UintptrOptionOptionListPredicate) UintptrOptionOptionListPredicate {
	return func(e UintptrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionListPredicate) Or(p2 ByteOptionOptionListPredicate) ByteOptionOptionListPredicate {
	return func(e ByteOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionListPredicate) Or(p2 RuneOptionOptionListPredicate) RuneOptionOptionListPredicate {
	return func(e RuneOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionListPredicate) Or(p2 Float32OptionOptionListPredicate) Float32OptionOptionListPredicate {
	return func(e Float32OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionListPredicate) Or(p2 Float64OptionOptionListPredicate) Float64OptionOptionListPredicate {
	return func(e Float64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionListPredicate) Or(p2 Complex64OptionOptionListPredicate) Complex64OptionOptionListPredicate {
	return func(e Complex64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionListPredicate) Or(p2 Complex128OptionOptionListPredicate) Complex128OptionOptionListPredicate {
	return func(e Complex128OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionListPredicate) Or(p2 AnyOptionOptionListPredicate) AnyOptionOptionListPredicate {
	return func(e AnyOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayOptionOptionListPredicate) Or(p2 BoolArrayOptionOptionListPredicate) BoolArrayOptionOptionListPredicate {
	return func(e BoolArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayOptionOptionListPredicate) Or(p2 StringArrayOptionOptionListPredicate) StringArrayOptionOptionListPredicate {
	return func(e StringArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayOptionOptionListPredicate) Or(p2 IntArrayOptionOptionListPredicate) IntArrayOptionOptionListPredicate {
	return func(e IntArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayOptionOptionListPredicate) Or(p2 Int8ArrayOptionOptionListPredicate) Int8ArrayOptionOptionListPredicate {
	return func(e Int8ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayOptionOptionListPredicate) Or(p2 Int16ArrayOptionOptionListPredicate) Int16ArrayOptionOptionListPredicate {
	return func(e Int16ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayOptionOptionListPredicate) Or(p2 Int32ArrayOptionOptionListPredicate) Int32ArrayOptionOptionListPredicate {
	return func(e Int32ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayOptionOptionListPredicate) Or(p2 Int64ArrayOptionOptionListPredicate) Int64ArrayOptionOptionListPredicate {
	return func(e Int64ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayOptionOptionListPredicate) Or(p2 UintArrayOptionOptionListPredicate) UintArrayOptionOptionListPredicate {
	return func(e UintArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayOptionOptionListPredicate) Or(p2 Uint8ArrayOptionOptionListPredicate) Uint8ArrayOptionOptionListPredicate {
	return func(e Uint8ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayOptionOptionListPredicate) Or(p2 Uint16ArrayOptionOptionListPredicate) Uint16ArrayOptionOptionListPredicate {
	return func(e Uint16ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayOptionOptionListPredicate) Or(p2 Uint32ArrayOptionOptionListPredicate) Uint32ArrayOptionOptionListPredicate {
	return func(e Uint32ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayOptionOptionListPredicate) Or(p2 Uint64ArrayOptionOptionListPredicate) Uint64ArrayOptionOptionListPredicate {
	return func(e Uint64ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayOptionOptionListPredicate) Or(p2 UintptrArrayOptionOptionListPredicate) UintptrArrayOptionOptionListPredicate {
	return func(e UintptrArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayOptionOptionListPredicate) Or(p2 ByteArrayOptionOptionListPredicate) ByteArrayOptionOptionListPredicate {
	return func(e ByteArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayOptionOptionListPredicate) Or(p2 RuneArrayOptionOptionListPredicate) RuneArrayOptionOptionListPredicate {
	return func(e RuneArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayOptionOptionListPredicate) Or(p2 Float32ArrayOptionOptionListPredicate) Float32ArrayOptionOptionListPredicate {
	return func(e Float32ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayOptionOptionListPredicate) Or(p2 Float64ArrayOptionOptionListPredicate) Float64ArrayOptionOptionListPredicate {
	return func(e Float64ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayOptionOptionListPredicate) Or(p2 Complex64ArrayOptionOptionListPredicate) Complex64ArrayOptionOptionListPredicate {
	return func(e Complex64ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayOptionOptionListPredicate) Or(p2 Complex128ArrayOptionOptionListPredicate) Complex128ArrayOptionOptionListPredicate {
	return func(e Complex128ArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayOptionOptionListPredicate) Or(p2 AnyArrayOptionOptionListPredicate) AnyArrayOptionOptionListPredicate {
	return func(e AnyArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayOptionOptionListPredicate) Or(p2 BoolArrayArrayOptionOptionListPredicate) BoolArrayArrayOptionOptionListPredicate {
	return func(e BoolArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayOptionOptionListPredicate) Or(p2 StringArrayArrayOptionOptionListPredicate) StringArrayArrayOptionOptionListPredicate {
	return func(e StringArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayOptionOptionListPredicate) Or(p2 IntArrayArrayOptionOptionListPredicate) IntArrayArrayOptionOptionListPredicate {
	return func(e IntArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayOptionOptionListPredicate) Or(p2 Int8ArrayArrayOptionOptionListPredicate) Int8ArrayArrayOptionOptionListPredicate {
	return func(e Int8ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayOptionOptionListPredicate) Or(p2 Int16ArrayArrayOptionOptionListPredicate) Int16ArrayArrayOptionOptionListPredicate {
	return func(e Int16ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayOptionOptionListPredicate) Or(p2 Int32ArrayArrayOptionOptionListPredicate) Int32ArrayArrayOptionOptionListPredicate {
	return func(e Int32ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayOptionOptionListPredicate) Or(p2 Int64ArrayArrayOptionOptionListPredicate) Int64ArrayArrayOptionOptionListPredicate {
	return func(e Int64ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayOptionOptionListPredicate) Or(p2 UintArrayArrayOptionOptionListPredicate) UintArrayArrayOptionOptionListPredicate {
	return func(e UintArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayOptionOptionListPredicate) Or(p2 Uint8ArrayArrayOptionOptionListPredicate) Uint8ArrayArrayOptionOptionListPredicate {
	return func(e Uint8ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayOptionOptionListPredicate) Or(p2 Uint16ArrayArrayOptionOptionListPredicate) Uint16ArrayArrayOptionOptionListPredicate {
	return func(e Uint16ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayOptionOptionListPredicate) Or(p2 Uint32ArrayArrayOptionOptionListPredicate) Uint32ArrayArrayOptionOptionListPredicate {
	return func(e Uint32ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayOptionOptionListPredicate) Or(p2 Uint64ArrayArrayOptionOptionListPredicate) Uint64ArrayArrayOptionOptionListPredicate {
	return func(e Uint64ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayOptionOptionListPredicate) Or(p2 UintptrArrayArrayOptionOptionListPredicate) UintptrArrayArrayOptionOptionListPredicate {
	return func(e UintptrArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayOptionOptionListPredicate) Or(p2 ByteArrayArrayOptionOptionListPredicate) ByteArrayArrayOptionOptionListPredicate {
	return func(e ByteArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayOptionOptionListPredicate) Or(p2 RuneArrayArrayOptionOptionListPredicate) RuneArrayArrayOptionOptionListPredicate {
	return func(e RuneArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayOptionOptionListPredicate) Or(p2 Float32ArrayArrayOptionOptionListPredicate) Float32ArrayArrayOptionOptionListPredicate {
	return func(e Float32ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayOptionOptionListPredicate) Or(p2 Float64ArrayArrayOptionOptionListPredicate) Float64ArrayArrayOptionOptionListPredicate {
	return func(e Float64ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayOptionOptionListPredicate) Or(p2 Complex64ArrayArrayOptionOptionListPredicate) Complex64ArrayArrayOptionOptionListPredicate {
	return func(e Complex64ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayOptionOptionListPredicate) Or(p2 Complex128ArrayArrayOptionOptionListPredicate) Complex128ArrayArrayOptionOptionListPredicate {
	return func(e Complex128ArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayOptionOptionListPredicate) Or(p2 AnyArrayArrayOptionOptionListPredicate) AnyArrayArrayOptionOptionListPredicate {
	return func(e AnyArrayArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayOptionOptionListPredicate) Or(p2 BoolOptionArrayOptionOptionListPredicate) BoolOptionArrayOptionOptionListPredicate {
	return func(e BoolOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayOptionOptionListPredicate) Or(p2 StringOptionArrayOptionOptionListPredicate) StringOptionArrayOptionOptionListPredicate {
	return func(e StringOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayOptionOptionListPredicate) Or(p2 IntOptionArrayOptionOptionListPredicate) IntOptionArrayOptionOptionListPredicate {
	return func(e IntOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayOptionOptionListPredicate) Or(p2 Int8OptionArrayOptionOptionListPredicate) Int8OptionArrayOptionOptionListPredicate {
	return func(e Int8OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayOptionOptionListPredicate) Or(p2 Int16OptionArrayOptionOptionListPredicate) Int16OptionArrayOptionOptionListPredicate {
	return func(e Int16OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayOptionOptionListPredicate) Or(p2 Int32OptionArrayOptionOptionListPredicate) Int32OptionArrayOptionOptionListPredicate {
	return func(e Int32OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayOptionOptionListPredicate) Or(p2 Int64OptionArrayOptionOptionListPredicate) Int64OptionArrayOptionOptionListPredicate {
	return func(e Int64OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayOptionOptionListPredicate) Or(p2 UintOptionArrayOptionOptionListPredicate) UintOptionArrayOptionOptionListPredicate {
	return func(e UintOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayOptionOptionListPredicate) Or(p2 Uint8OptionArrayOptionOptionListPredicate) Uint8OptionArrayOptionOptionListPredicate {
	return func(e Uint8OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayOptionOptionListPredicate) Or(p2 Uint16OptionArrayOptionOptionListPredicate) Uint16OptionArrayOptionOptionListPredicate {
	return func(e Uint16OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayOptionOptionListPredicate) Or(p2 Uint32OptionArrayOptionOptionListPredicate) Uint32OptionArrayOptionOptionListPredicate {
	return func(e Uint32OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayOptionOptionListPredicate) Or(p2 Uint64OptionArrayOptionOptionListPredicate) Uint64OptionArrayOptionOptionListPredicate {
	return func(e Uint64OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayOptionOptionListPredicate) Or(p2 UintptrOptionArrayOptionOptionListPredicate) UintptrOptionArrayOptionOptionListPredicate {
	return func(e UintptrOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayOptionOptionListPredicate) Or(p2 ByteOptionArrayOptionOptionListPredicate) ByteOptionArrayOptionOptionListPredicate {
	return func(e ByteOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayOptionOptionListPredicate) Or(p2 RuneOptionArrayOptionOptionListPredicate) RuneOptionArrayOptionOptionListPredicate {
	return func(e RuneOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayOptionOptionListPredicate) Or(p2 Float32OptionArrayOptionOptionListPredicate) Float32OptionArrayOptionOptionListPredicate {
	return func(e Float32OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayOptionOptionListPredicate) Or(p2 Float64OptionArrayOptionOptionListPredicate) Float64OptionArrayOptionOptionListPredicate {
	return func(e Float64OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayOptionOptionListPredicate) Or(p2 Complex64OptionArrayOptionOptionListPredicate) Complex64OptionArrayOptionOptionListPredicate {
	return func(e Complex64OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayOptionOptionListPredicate) Or(p2 Complex128OptionArrayOptionOptionListPredicate) Complex128OptionArrayOptionOptionListPredicate {
	return func(e Complex128OptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayOptionOptionListPredicate) Or(p2 AnyOptionArrayOptionOptionListPredicate) AnyOptionArrayOptionOptionListPredicate {
	return func(e AnyOptionArrayOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionListPredicate) Or(p2 BoolListOptionOptionListPredicate) BoolListOptionOptionListPredicate {
	return func(e BoolListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionListPredicate) Or(p2 StringListOptionOptionListPredicate) StringListOptionOptionListPredicate {
	return func(e StringListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionListPredicate) Or(p2 IntListOptionOptionListPredicate) IntListOptionOptionListPredicate {
	return func(e IntListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionListPredicate) Or(p2 Int8ListOptionOptionListPredicate) Int8ListOptionOptionListPredicate {
	return func(e Int8ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionListPredicate) Or(p2 Int16ListOptionOptionListPredicate) Int16ListOptionOptionListPredicate {
	return func(e Int16ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionListPredicate) Or(p2 Int32ListOptionOptionListPredicate) Int32ListOptionOptionListPredicate {
	return func(e Int32ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionListPredicate) Or(p2 Int64ListOptionOptionListPredicate) Int64ListOptionOptionListPredicate {
	return func(e Int64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionListPredicate) Or(p2 UintListOptionOptionListPredicate) UintListOptionOptionListPredicate {
	return func(e UintListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionListPredicate) Or(p2 Uint8ListOptionOptionListPredicate) Uint8ListOptionOptionListPredicate {
	return func(e Uint8ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionListPredicate) Or(p2 Uint16ListOptionOptionListPredicate) Uint16ListOptionOptionListPredicate {
	return func(e Uint16ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionListPredicate) Or(p2 Uint32ListOptionOptionListPredicate) Uint32ListOptionOptionListPredicate {
	return func(e Uint32ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionListPredicate) Or(p2 Uint64ListOptionOptionListPredicate) Uint64ListOptionOptionListPredicate {
	return func(e Uint64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionListPredicate) Or(p2 UintptrListOptionOptionListPredicate) UintptrListOptionOptionListPredicate {
	return func(e UintptrListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionListPredicate) Or(p2 ByteListOptionOptionListPredicate) ByteListOptionOptionListPredicate {
	return func(e ByteListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionListPredicate) Or(p2 RuneListOptionOptionListPredicate) RuneListOptionOptionListPredicate {
	return func(e RuneListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionListPredicate) Or(p2 Float32ListOptionOptionListPredicate) Float32ListOptionOptionListPredicate {
	return func(e Float32ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionListPredicate) Or(p2 Float64ListOptionOptionListPredicate) Float64ListOptionOptionListPredicate {
	return func(e Float64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionListPredicate) Or(p2 Complex64ListOptionOptionListPredicate) Complex64ListOptionOptionListPredicate {
	return func(e Complex64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionListPredicate) Or(p2 Complex128ListOptionOptionListPredicate) Complex128ListOptionOptionListPredicate {
	return func(e Complex128ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionListPredicate) Or(p2 AnyListOptionOptionListPredicate) AnyListOptionOptionListPredicate {
	return func(e AnyListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionOptionListPredicate) Or(p2 BoolOptionOptionOptionListPredicate) BoolOptionOptionOptionListPredicate {
	return func(e BoolOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionOptionListPredicate) Or(p2 StringOptionOptionOptionListPredicate) StringOptionOptionOptionListPredicate {
	return func(e StringOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionOptionListPredicate) Or(p2 IntOptionOptionOptionListPredicate) IntOptionOptionOptionListPredicate {
	return func(e IntOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionOptionListPredicate) Or(p2 Int8OptionOptionOptionListPredicate) Int8OptionOptionOptionListPredicate {
	return func(e Int8OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionOptionListPredicate) Or(p2 Int16OptionOptionOptionListPredicate) Int16OptionOptionOptionListPredicate {
	return func(e Int16OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionOptionListPredicate) Or(p2 Int32OptionOptionOptionListPredicate) Int32OptionOptionOptionListPredicate {
	return func(e Int32OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionOptionListPredicate) Or(p2 Int64OptionOptionOptionListPredicate) Int64OptionOptionOptionListPredicate {
	return func(e Int64OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionOptionListPredicate) Or(p2 UintOptionOptionOptionListPredicate) UintOptionOptionOptionListPredicate {
	return func(e UintOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionOptionListPredicate) Or(p2 Uint8OptionOptionOptionListPredicate) Uint8OptionOptionOptionListPredicate {
	return func(e Uint8OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionOptionListPredicate) Or(p2 Uint16OptionOptionOptionListPredicate) Uint16OptionOptionOptionListPredicate {
	return func(e Uint16OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionOptionListPredicate) Or(p2 Uint32OptionOptionOptionListPredicate) Uint32OptionOptionOptionListPredicate {
	return func(e Uint32OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionOptionListPredicate) Or(p2 Uint64OptionOptionOptionListPredicate) Uint64OptionOptionOptionListPredicate {
	return func(e Uint64OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionOptionListPredicate) Or(p2 UintptrOptionOptionOptionListPredicate) UintptrOptionOptionOptionListPredicate {
	return func(e UintptrOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionOptionListPredicate) Or(p2 ByteOptionOptionOptionListPredicate) ByteOptionOptionOptionListPredicate {
	return func(e ByteOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionOptionListPredicate) Or(p2 RuneOptionOptionOptionListPredicate) RuneOptionOptionOptionListPredicate {
	return func(e RuneOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionOptionListPredicate) Or(p2 Float32OptionOptionOptionListPredicate) Float32OptionOptionOptionListPredicate {
	return func(e Float32OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionOptionListPredicate) Or(p2 Float64OptionOptionOptionListPredicate) Float64OptionOptionOptionListPredicate {
	return func(e Float64OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionOptionListPredicate) Or(p2 Complex64OptionOptionOptionListPredicate) Complex64OptionOptionOptionListPredicate {
	return func(e Complex64OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionOptionListPredicate) Or(p2 Complex128OptionOptionOptionListPredicate) Complex128OptionOptionOptionListPredicate {
	return func(e Complex128OptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionOptionListPredicate) Or(p2 AnyOptionOptionOptionListPredicate) AnyOptionOptionOptionListPredicate {
	return func(e AnyOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayOptionOptionOptionListPredicate) Or(p2 BoolArrayOptionOptionOptionListPredicate) BoolArrayOptionOptionOptionListPredicate {
	return func(e BoolArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayOptionOptionOptionListPredicate) Or(p2 StringArrayOptionOptionOptionListPredicate) StringArrayOptionOptionOptionListPredicate {
	return func(e StringArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayOptionOptionOptionListPredicate) Or(p2 IntArrayOptionOptionOptionListPredicate) IntArrayOptionOptionOptionListPredicate {
	return func(e IntArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayOptionOptionOptionListPredicate) Or(p2 Int8ArrayOptionOptionOptionListPredicate) Int8ArrayOptionOptionOptionListPredicate {
	return func(e Int8ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayOptionOptionOptionListPredicate) Or(p2 Int16ArrayOptionOptionOptionListPredicate) Int16ArrayOptionOptionOptionListPredicate {
	return func(e Int16ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayOptionOptionOptionListPredicate) Or(p2 Int32ArrayOptionOptionOptionListPredicate) Int32ArrayOptionOptionOptionListPredicate {
	return func(e Int32ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayOptionOptionOptionListPredicate) Or(p2 Int64ArrayOptionOptionOptionListPredicate) Int64ArrayOptionOptionOptionListPredicate {
	return func(e Int64ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayOptionOptionOptionListPredicate) Or(p2 UintArrayOptionOptionOptionListPredicate) UintArrayOptionOptionOptionListPredicate {
	return func(e UintArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayOptionOptionOptionListPredicate) Or(p2 Uint8ArrayOptionOptionOptionListPredicate) Uint8ArrayOptionOptionOptionListPredicate {
	return func(e Uint8ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayOptionOptionOptionListPredicate) Or(p2 Uint16ArrayOptionOptionOptionListPredicate) Uint16ArrayOptionOptionOptionListPredicate {
	return func(e Uint16ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayOptionOptionOptionListPredicate) Or(p2 Uint32ArrayOptionOptionOptionListPredicate) Uint32ArrayOptionOptionOptionListPredicate {
	return func(e Uint32ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayOptionOptionOptionListPredicate) Or(p2 Uint64ArrayOptionOptionOptionListPredicate) Uint64ArrayOptionOptionOptionListPredicate {
	return func(e Uint64ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayOptionOptionOptionListPredicate) Or(p2 UintptrArrayOptionOptionOptionListPredicate) UintptrArrayOptionOptionOptionListPredicate {
	return func(e UintptrArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayOptionOptionOptionListPredicate) Or(p2 ByteArrayOptionOptionOptionListPredicate) ByteArrayOptionOptionOptionListPredicate {
	return func(e ByteArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayOptionOptionOptionListPredicate) Or(p2 RuneArrayOptionOptionOptionListPredicate) RuneArrayOptionOptionOptionListPredicate {
	return func(e RuneArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayOptionOptionOptionListPredicate) Or(p2 Float32ArrayOptionOptionOptionListPredicate) Float32ArrayOptionOptionOptionListPredicate {
	return func(e Float32ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayOptionOptionOptionListPredicate) Or(p2 Float64ArrayOptionOptionOptionListPredicate) Float64ArrayOptionOptionOptionListPredicate {
	return func(e Float64ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayOptionOptionOptionListPredicate) Or(p2 Complex64ArrayOptionOptionOptionListPredicate) Complex64ArrayOptionOptionOptionListPredicate {
	return func(e Complex64ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayOptionOptionOptionListPredicate) Or(p2 Complex128ArrayOptionOptionOptionListPredicate) Complex128ArrayOptionOptionOptionListPredicate {
	return func(e Complex128ArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayOptionOptionOptionListPredicate) Or(p2 AnyArrayOptionOptionOptionListPredicate) AnyArrayOptionOptionOptionListPredicate {
	return func(e AnyArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayOptionOptionOptionListPredicate) Or(p2 BoolArrayArrayOptionOptionOptionListPredicate) BoolArrayArrayOptionOptionOptionListPredicate {
	return func(e BoolArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayOptionOptionOptionListPredicate) Or(p2 StringArrayArrayOptionOptionOptionListPredicate) StringArrayArrayOptionOptionOptionListPredicate {
	return func(e StringArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayOptionOptionOptionListPredicate) Or(p2 IntArrayArrayOptionOptionOptionListPredicate) IntArrayArrayOptionOptionOptionListPredicate {
	return func(e IntArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayOptionOptionOptionListPredicate) Or(p2 Int8ArrayArrayOptionOptionOptionListPredicate) Int8ArrayArrayOptionOptionOptionListPredicate {
	return func(e Int8ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayOptionOptionOptionListPredicate) Or(p2 Int16ArrayArrayOptionOptionOptionListPredicate) Int16ArrayArrayOptionOptionOptionListPredicate {
	return func(e Int16ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayOptionOptionOptionListPredicate) Or(p2 Int32ArrayArrayOptionOptionOptionListPredicate) Int32ArrayArrayOptionOptionOptionListPredicate {
	return func(e Int32ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayOptionOptionOptionListPredicate) Or(p2 Int64ArrayArrayOptionOptionOptionListPredicate) Int64ArrayArrayOptionOptionOptionListPredicate {
	return func(e Int64ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayOptionOptionOptionListPredicate) Or(p2 UintArrayArrayOptionOptionOptionListPredicate) UintArrayArrayOptionOptionOptionListPredicate {
	return func(e UintArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayOptionOptionOptionListPredicate) Or(p2 Uint8ArrayArrayOptionOptionOptionListPredicate) Uint8ArrayArrayOptionOptionOptionListPredicate {
	return func(e Uint8ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayOptionOptionOptionListPredicate) Or(p2 Uint16ArrayArrayOptionOptionOptionListPredicate) Uint16ArrayArrayOptionOptionOptionListPredicate {
	return func(e Uint16ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayOptionOptionOptionListPredicate) Or(p2 Uint32ArrayArrayOptionOptionOptionListPredicate) Uint32ArrayArrayOptionOptionOptionListPredicate {
	return func(e Uint32ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayOptionOptionOptionListPredicate) Or(p2 Uint64ArrayArrayOptionOptionOptionListPredicate) Uint64ArrayArrayOptionOptionOptionListPredicate {
	return func(e Uint64ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayOptionOptionOptionListPredicate) Or(p2 UintptrArrayArrayOptionOptionOptionListPredicate) UintptrArrayArrayOptionOptionOptionListPredicate {
	return func(e UintptrArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayOptionOptionOptionListPredicate) Or(p2 ByteArrayArrayOptionOptionOptionListPredicate) ByteArrayArrayOptionOptionOptionListPredicate {
	return func(e ByteArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayOptionOptionOptionListPredicate) Or(p2 RuneArrayArrayOptionOptionOptionListPredicate) RuneArrayArrayOptionOptionOptionListPredicate {
	return func(e RuneArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayOptionOptionOptionListPredicate) Or(p2 Float32ArrayArrayOptionOptionOptionListPredicate) Float32ArrayArrayOptionOptionOptionListPredicate {
	return func(e Float32ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayOptionOptionOptionListPredicate) Or(p2 Float64ArrayArrayOptionOptionOptionListPredicate) Float64ArrayArrayOptionOptionOptionListPredicate {
	return func(e Float64ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayOptionOptionOptionListPredicate) Or(p2 Complex64ArrayArrayOptionOptionOptionListPredicate) Complex64ArrayArrayOptionOptionOptionListPredicate {
	return func(e Complex64ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayOptionOptionOptionListPredicate) Or(p2 Complex128ArrayArrayOptionOptionOptionListPredicate) Complex128ArrayArrayOptionOptionOptionListPredicate {
	return func(e Complex128ArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayOptionOptionOptionListPredicate) Or(p2 AnyArrayArrayOptionOptionOptionListPredicate) AnyArrayArrayOptionOptionOptionListPredicate {
	return func(e AnyArrayArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayOptionOptionOptionListPredicate) Or(p2 BoolOptionArrayOptionOptionOptionListPredicate) BoolOptionArrayOptionOptionOptionListPredicate {
	return func(e BoolOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayOptionOptionOptionListPredicate) Or(p2 StringOptionArrayOptionOptionOptionListPredicate) StringOptionArrayOptionOptionOptionListPredicate {
	return func(e StringOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayOptionOptionOptionListPredicate) Or(p2 IntOptionArrayOptionOptionOptionListPredicate) IntOptionArrayOptionOptionOptionListPredicate {
	return func(e IntOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayOptionOptionOptionListPredicate) Or(p2 Int8OptionArrayOptionOptionOptionListPredicate) Int8OptionArrayOptionOptionOptionListPredicate {
	return func(e Int8OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayOptionOptionOptionListPredicate) Or(p2 Int16OptionArrayOptionOptionOptionListPredicate) Int16OptionArrayOptionOptionOptionListPredicate {
	return func(e Int16OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayOptionOptionOptionListPredicate) Or(p2 Int32OptionArrayOptionOptionOptionListPredicate) Int32OptionArrayOptionOptionOptionListPredicate {
	return func(e Int32OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayOptionOptionOptionListPredicate) Or(p2 Int64OptionArrayOptionOptionOptionListPredicate) Int64OptionArrayOptionOptionOptionListPredicate {
	return func(e Int64OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayOptionOptionOptionListPredicate) Or(p2 UintOptionArrayOptionOptionOptionListPredicate) UintOptionArrayOptionOptionOptionListPredicate {
	return func(e UintOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayOptionOptionOptionListPredicate) Or(p2 Uint8OptionArrayOptionOptionOptionListPredicate) Uint8OptionArrayOptionOptionOptionListPredicate {
	return func(e Uint8OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayOptionOptionOptionListPredicate) Or(p2 Uint16OptionArrayOptionOptionOptionListPredicate) Uint16OptionArrayOptionOptionOptionListPredicate {
	return func(e Uint16OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayOptionOptionOptionListPredicate) Or(p2 Uint32OptionArrayOptionOptionOptionListPredicate) Uint32OptionArrayOptionOptionOptionListPredicate {
	return func(e Uint32OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayOptionOptionOptionListPredicate) Or(p2 Uint64OptionArrayOptionOptionOptionListPredicate) Uint64OptionArrayOptionOptionOptionListPredicate {
	return func(e Uint64OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayOptionOptionOptionListPredicate) Or(p2 UintptrOptionArrayOptionOptionOptionListPredicate) UintptrOptionArrayOptionOptionOptionListPredicate {
	return func(e UintptrOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayOptionOptionOptionListPredicate) Or(p2 ByteOptionArrayOptionOptionOptionListPredicate) ByteOptionArrayOptionOptionOptionListPredicate {
	return func(e ByteOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayOptionOptionOptionListPredicate) Or(p2 RuneOptionArrayOptionOptionOptionListPredicate) RuneOptionArrayOptionOptionOptionListPredicate {
	return func(e RuneOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayOptionOptionOptionListPredicate) Or(p2 Float32OptionArrayOptionOptionOptionListPredicate) Float32OptionArrayOptionOptionOptionListPredicate {
	return func(e Float32OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayOptionOptionOptionListPredicate) Or(p2 Float64OptionArrayOptionOptionOptionListPredicate) Float64OptionArrayOptionOptionOptionListPredicate {
	return func(e Float64OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayOptionOptionOptionListPredicate) Or(p2 Complex64OptionArrayOptionOptionOptionListPredicate) Complex64OptionArrayOptionOptionOptionListPredicate {
	return func(e Complex64OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayOptionOptionOptionListPredicate) Or(p2 Complex128OptionArrayOptionOptionOptionListPredicate) Complex128OptionArrayOptionOptionOptionListPredicate {
	return func(e Complex128OptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayOptionOptionOptionListPredicate) Or(p2 AnyOptionArrayOptionOptionOptionListPredicate) AnyOptionArrayOptionOptionOptionListPredicate {
	return func(e AnyOptionArrayOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionOptionListPredicate) Or(p2 BoolListOptionOptionOptionListPredicate) BoolListOptionOptionOptionListPredicate {
	return func(e BoolListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionOptionListPredicate) Or(p2 StringListOptionOptionOptionListPredicate) StringListOptionOptionOptionListPredicate {
	return func(e StringListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionOptionListPredicate) Or(p2 IntListOptionOptionOptionListPredicate) IntListOptionOptionOptionListPredicate {
	return func(e IntListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionOptionListPredicate) Or(p2 Int8ListOptionOptionOptionListPredicate) Int8ListOptionOptionOptionListPredicate {
	return func(e Int8ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionOptionListPredicate) Or(p2 Int16ListOptionOptionOptionListPredicate) Int16ListOptionOptionOptionListPredicate {
	return func(e Int16ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionOptionListPredicate) Or(p2 Int32ListOptionOptionOptionListPredicate) Int32ListOptionOptionOptionListPredicate {
	return func(e Int32ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionOptionListPredicate) Or(p2 Int64ListOptionOptionOptionListPredicate) Int64ListOptionOptionOptionListPredicate {
	return func(e Int64ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionOptionListPredicate) Or(p2 UintListOptionOptionOptionListPredicate) UintListOptionOptionOptionListPredicate {
	return func(e UintListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionOptionListPredicate) Or(p2 Uint8ListOptionOptionOptionListPredicate) Uint8ListOptionOptionOptionListPredicate {
	return func(e Uint8ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionOptionListPredicate) Or(p2 Uint16ListOptionOptionOptionListPredicate) Uint16ListOptionOptionOptionListPredicate {
	return func(e Uint16ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionOptionListPredicate) Or(p2 Uint32ListOptionOptionOptionListPredicate) Uint32ListOptionOptionOptionListPredicate {
	return func(e Uint32ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionOptionListPredicate) Or(p2 Uint64ListOptionOptionOptionListPredicate) Uint64ListOptionOptionOptionListPredicate {
	return func(e Uint64ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionOptionListPredicate) Or(p2 UintptrListOptionOptionOptionListPredicate) UintptrListOptionOptionOptionListPredicate {
	return func(e UintptrListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionOptionListPredicate) Or(p2 ByteListOptionOptionOptionListPredicate) ByteListOptionOptionOptionListPredicate {
	return func(e ByteListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionOptionListPredicate) Or(p2 RuneListOptionOptionOptionListPredicate) RuneListOptionOptionOptionListPredicate {
	return func(e RuneListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionOptionListPredicate) Or(p2 Float32ListOptionOptionOptionListPredicate) Float32ListOptionOptionOptionListPredicate {
	return func(e Float32ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionOptionListPredicate) Or(p2 Float64ListOptionOptionOptionListPredicate) Float64ListOptionOptionOptionListPredicate {
	return func(e Float64ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionOptionListPredicate) Or(p2 Complex64ListOptionOptionOptionListPredicate) Complex64ListOptionOptionOptionListPredicate {
	return func(e Complex64ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionOptionListPredicate) Or(p2 Complex128ListOptionOptionOptionListPredicate) Complex128ListOptionOptionOptionListPredicate {
	return func(e Complex128ListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionOptionListPredicate) Or(p2 AnyListOptionOptionOptionListPredicate) AnyListOptionOptionOptionListPredicate {
	return func(e AnyListOptionOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayListPredicate) Or(p2 BoolArrayListPredicate) BoolArrayListPredicate {
	return func(e BoolArrayList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayListPredicate) Or(p2 StringArrayListPredicate) StringArrayListPredicate {
	return func(e StringArrayList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayListPredicate) Or(p2 IntArrayListPredicate) IntArrayListPredicate {
	return func(e IntArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayListPredicate) Or(p2 Int8ArrayListPredicate) Int8ArrayListPredicate {
	return func(e Int8ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayListPredicate) Or(p2 Int16ArrayListPredicate) Int16ArrayListPredicate {
	return func(e Int16ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayListPredicate) Or(p2 Int32ArrayListPredicate) Int32ArrayListPredicate {
	return func(e Int32ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayListPredicate) Or(p2 Int64ArrayListPredicate) Int64ArrayListPredicate {
	return func(e Int64ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayListPredicate) Or(p2 UintArrayListPredicate) UintArrayListPredicate {
	return func(e UintArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayListPredicate) Or(p2 Uint8ArrayListPredicate) Uint8ArrayListPredicate {
	return func(e Uint8ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayListPredicate) Or(p2 Uint16ArrayListPredicate) Uint16ArrayListPredicate {
	return func(e Uint16ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayListPredicate) Or(p2 Uint32ArrayListPredicate) Uint32ArrayListPredicate {
	return func(e Uint32ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayListPredicate) Or(p2 Uint64ArrayListPredicate) Uint64ArrayListPredicate {
	return func(e Uint64ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayListPredicate) Or(p2 UintptrArrayListPredicate) UintptrArrayListPredicate {
	return func(e UintptrArrayList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayListPredicate) Or(p2 ByteArrayListPredicate) ByteArrayListPredicate {
	return func(e ByteArrayList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayListPredicate) Or(p2 RuneArrayListPredicate) RuneArrayListPredicate {
	return func(e RuneArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayListPredicate) Or(p2 Float32ArrayListPredicate) Float32ArrayListPredicate {
	return func(e Float32ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayListPredicate) Or(p2 Float64ArrayListPredicate) Float64ArrayListPredicate {
	return func(e Float64ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayListPredicate) Or(p2 Complex64ArrayListPredicate) Complex64ArrayListPredicate {
	return func(e Complex64ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayListPredicate) Or(p2 Complex128ArrayListPredicate) Complex128ArrayListPredicate {
	return func(e Complex128ArrayList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayListPredicate) Or(p2 AnyArrayListPredicate) AnyArrayListPredicate {
	return func(e AnyArrayList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrayArrayListPredicate) Or(p2 BoolArrayArrayListPredicate) BoolArrayArrayListPredicate {
	return func(e BoolArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrayArrayListPredicate) Or(p2 StringArrayArrayListPredicate) StringArrayArrayListPredicate {
	return func(e StringArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrayArrayListPredicate) Or(p2 IntArrayArrayListPredicate) IntArrayArrayListPredicate {
	return func(e IntArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrayArrayListPredicate) Or(p2 Int8ArrayArrayListPredicate) Int8ArrayArrayListPredicate {
	return func(e Int8ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrayArrayListPredicate) Or(p2 Int16ArrayArrayListPredicate) Int16ArrayArrayListPredicate {
	return func(e Int16ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrayArrayListPredicate) Or(p2 Int32ArrayArrayListPredicate) Int32ArrayArrayListPredicate {
	return func(e Int32ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrayArrayListPredicate) Or(p2 Int64ArrayArrayListPredicate) Int64ArrayArrayListPredicate {
	return func(e Int64ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrayArrayListPredicate) Or(p2 UintArrayArrayListPredicate) UintArrayArrayListPredicate {
	return func(e UintArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrayArrayListPredicate) Or(p2 Uint8ArrayArrayListPredicate) Uint8ArrayArrayListPredicate {
	return func(e Uint8ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrayArrayListPredicate) Or(p2 Uint16ArrayArrayListPredicate) Uint16ArrayArrayListPredicate {
	return func(e Uint16ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrayArrayListPredicate) Or(p2 Uint32ArrayArrayListPredicate) Uint32ArrayArrayListPredicate {
	return func(e Uint32ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrayArrayListPredicate) Or(p2 Uint64ArrayArrayListPredicate) Uint64ArrayArrayListPredicate {
	return func(e Uint64ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrayArrayListPredicate) Or(p2 UintptrArrayArrayListPredicate) UintptrArrayArrayListPredicate {
	return func(e UintptrArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrayArrayListPredicate) Or(p2 ByteArrayArrayListPredicate) ByteArrayArrayListPredicate {
	return func(e ByteArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrayArrayListPredicate) Or(p2 RuneArrayArrayListPredicate) RuneArrayArrayListPredicate {
	return func(e RuneArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrayArrayListPredicate) Or(p2 Float32ArrayArrayListPredicate) Float32ArrayArrayListPredicate {
	return func(e Float32ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrayArrayListPredicate) Or(p2 Float64ArrayArrayListPredicate) Float64ArrayArrayListPredicate {
	return func(e Float64ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrayArrayListPredicate) Or(p2 Complex64ArrayArrayListPredicate) Complex64ArrayArrayListPredicate {
	return func(e Complex64ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrayArrayListPredicate) Or(p2 Complex128ArrayArrayListPredicate) Complex128ArrayArrayListPredicate {
	return func(e Complex128ArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrayArrayListPredicate) Or(p2 AnyArrayArrayListPredicate) AnyArrayArrayListPredicate {
	return func(e AnyArrayArrayList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrayListPredicate) Or(p2 BoolOptionArrayListPredicate) BoolOptionArrayListPredicate {
	return func(e BoolOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrayListPredicate) Or(p2 StringOptionArrayListPredicate) StringOptionArrayListPredicate {
	return func(e StringOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrayListPredicate) Or(p2 IntOptionArrayListPredicate) IntOptionArrayListPredicate {
	return func(e IntOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrayListPredicate) Or(p2 Int8OptionArrayListPredicate) Int8OptionArrayListPredicate {
	return func(e Int8OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrayListPredicate) Or(p2 Int16OptionArrayListPredicate) Int16OptionArrayListPredicate {
	return func(e Int16OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrayListPredicate) Or(p2 Int32OptionArrayListPredicate) Int32OptionArrayListPredicate {
	return func(e Int32OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrayListPredicate) Or(p2 Int64OptionArrayListPredicate) Int64OptionArrayListPredicate {
	return func(e Int64OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrayListPredicate) Or(p2 UintOptionArrayListPredicate) UintOptionArrayListPredicate {
	return func(e UintOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrayListPredicate) Or(p2 Uint8OptionArrayListPredicate) Uint8OptionArrayListPredicate {
	return func(e Uint8OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrayListPredicate) Or(p2 Uint16OptionArrayListPredicate) Uint16OptionArrayListPredicate {
	return func(e Uint16OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrayListPredicate) Or(p2 Uint32OptionArrayListPredicate) Uint32OptionArrayListPredicate {
	return func(e Uint32OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrayListPredicate) Or(p2 Uint64OptionArrayListPredicate) Uint64OptionArrayListPredicate {
	return func(e Uint64OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrayListPredicate) Or(p2 UintptrOptionArrayListPredicate) UintptrOptionArrayListPredicate {
	return func(e UintptrOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrayListPredicate) Or(p2 ByteOptionArrayListPredicate) ByteOptionArrayListPredicate {
	return func(e ByteOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrayListPredicate) Or(p2 RuneOptionArrayListPredicate) RuneOptionArrayListPredicate {
	return func(e RuneOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrayListPredicate) Or(p2 Float32OptionArrayListPredicate) Float32OptionArrayListPredicate {
	return func(e Float32OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrayListPredicate) Or(p2 Float64OptionArrayListPredicate) Float64OptionArrayListPredicate {
	return func(e Float64OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrayListPredicate) Or(p2 Complex64OptionArrayListPredicate) Complex64OptionArrayListPredicate {
	return func(e Complex64OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrayListPredicate) Or(p2 Complex128OptionArrayListPredicate) Complex128OptionArrayListPredicate {
	return func(e Complex128OptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrayListPredicate) Or(p2 AnyOptionArrayListPredicate) AnyOptionArrayListPredicate {
	return func(e AnyOptionArrayList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListListPredicate) Or(p2 BoolListListPredicate) BoolListListPredicate {
	return func(e BoolListList) bool { return p1(e) || p2(e) }
}
func (p1 StringListListPredicate) Or(p2 StringListListPredicate) StringListListPredicate {
	return func(e StringListList) bool { return p1(e) || p2(e) }
}
func (p1 IntListListPredicate) Or(p2 IntListListPredicate) IntListListPredicate {
	return func(e IntListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListListPredicate) Or(p2 Int8ListListPredicate) Int8ListListPredicate {
	return func(e Int8ListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListListPredicate) Or(p2 Int16ListListPredicate) Int16ListListPredicate {
	return func(e Int16ListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListListPredicate) Or(p2 Int32ListListPredicate) Int32ListListPredicate {
	return func(e Int32ListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListListPredicate) Or(p2 Int64ListListPredicate) Int64ListListPredicate {
	return func(e Int64ListList) bool { return p1(e) || p2(e) }
}
func (p1 UintListListPredicate) Or(p2 UintListListPredicate) UintListListPredicate {
	return func(e UintListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListListPredicate) Or(p2 Uint8ListListPredicate) Uint8ListListPredicate {
	return func(e Uint8ListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListListPredicate) Or(p2 Uint16ListListPredicate) Uint16ListListPredicate {
	return func(e Uint16ListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListListPredicate) Or(p2 Uint32ListListPredicate) Uint32ListListPredicate {
	return func(e Uint32ListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListListPredicate) Or(p2 Uint64ListListPredicate) Uint64ListListPredicate {
	return func(e Uint64ListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListListPredicate) Or(p2 UintptrListListPredicate) UintptrListListPredicate {
	return func(e UintptrListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListListPredicate) Or(p2 ByteListListPredicate) ByteListListPredicate {
	return func(e ByteListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListListPredicate) Or(p2 RuneListListPredicate) RuneListListPredicate {
	return func(e RuneListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListListPredicate) Or(p2 Float32ListListPredicate) Float32ListListPredicate {
	return func(e Float32ListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListListPredicate) Or(p2 Float64ListListPredicate) Float64ListListPredicate {
	return func(e Float64ListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListListPredicate) Or(p2 Complex64ListListPredicate) Complex64ListListPredicate {
	return func(e Complex64ListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListListPredicate) Or(p2 Complex128ListListPredicate) Complex128ListListPredicate {
	return func(e Complex128ListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListListPredicate) Or(p2 AnyListListPredicate) AnyListListPredicate {
	return func(e AnyListList) bool { return p1(e) || p2(e) }
}
