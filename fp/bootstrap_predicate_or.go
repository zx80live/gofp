// bootstrap_predicate_or.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (p1 BoolPredicate) Or(p2 BoolPredicate) BoolPredicate {
	return func(e bool) bool { return p1(e) || p2(e) }
}
func (p1 StringPredicate) Or(p2 StringPredicate) StringPredicate {
	return func(e string) bool { return p1(e) || p2(e) }
}
func (p1 IntPredicate) Or(p2 IntPredicate) IntPredicate {
	return func(e int) bool { return p1(e) || p2(e) }
}
func (p1 Int8Predicate) Or(p2 Int8Predicate) Int8Predicate {
	return func(e int8) bool { return p1(e) || p2(e) }
}
func (p1 Int16Predicate) Or(p2 Int16Predicate) Int16Predicate {
	return func(e int16) bool { return p1(e) || p2(e) }
}
func (p1 Int32Predicate) Or(p2 Int32Predicate) Int32Predicate {
	return func(e int32) bool { return p1(e) || p2(e) }
}
func (p1 Int64Predicate) Or(p2 Int64Predicate) Int64Predicate {
	return func(e int64) bool { return p1(e) || p2(e) }
}
func (p1 UintPredicate) Or(p2 UintPredicate) UintPredicate {
	return func(e uint) bool { return p1(e) || p2(e) }
}
func (p1 Uint8Predicate) Or(p2 Uint8Predicate) Uint8Predicate {
	return func(e uint8) bool { return p1(e) || p2(e) }
}
func (p1 Uint16Predicate) Or(p2 Uint16Predicate) Uint16Predicate {
	return func(e uint16) bool { return p1(e) || p2(e) }
}
func (p1 Uint32Predicate) Or(p2 Uint32Predicate) Uint32Predicate {
	return func(e uint32) bool { return p1(e) || p2(e) }
}
func (p1 Uint64Predicate) Or(p2 Uint64Predicate) Uint64Predicate {
	return func(e uint64) bool { return p1(e) || p2(e) }
}
func (p1 UintptrPredicate) Or(p2 UintptrPredicate) UintptrPredicate {
	return func(e uintptr) bool { return p1(e) || p2(e) }
}
func (p1 BytePredicate) Or(p2 BytePredicate) BytePredicate {
	return func(e byte) bool { return p1(e) || p2(e) }
}
func (p1 RunePredicate) Or(p2 RunePredicate) RunePredicate {
	return func(e rune) bool { return p1(e) || p2(e) }
}
func (p1 Float32Predicate) Or(p2 Float32Predicate) Float32Predicate {
	return func(e float32) bool { return p1(e) || p2(e) }
}
func (p1 Float64Predicate) Or(p2 Float64Predicate) Float64Predicate {
	return func(e float64) bool { return p1(e) || p2(e) }
}
func (p1 Complex64Predicate) Or(p2 Complex64Predicate) Complex64Predicate {
	return func(e complex64) bool { return p1(e) || p2(e) }
}
func (p1 Complex128Predicate) Or(p2 Complex128Predicate) Complex128Predicate {
	return func(e complex128) bool { return p1(e) || p2(e) }
}
func (p1 AnyPredicate) Or(p2 AnyPredicate) AnyPredicate {
	return func(e Any) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrPredicate) Or(p2 BoolArrPredicate) BoolArrPredicate {
	return func(e []bool) bool { return p1(e) || p2(e) }
}
func (p1 StringArrPredicate) Or(p2 StringArrPredicate) StringArrPredicate {
	return func(e []string) bool { return p1(e) || p2(e) }
}
func (p1 IntArrPredicate) Or(p2 IntArrPredicate) IntArrPredicate {
	return func(e []int) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrPredicate) Or(p2 Int8ArrPredicate) Int8ArrPredicate {
	return func(e []int8) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrPredicate) Or(p2 Int16ArrPredicate) Int16ArrPredicate {
	return func(e []int16) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrPredicate) Or(p2 Int32ArrPredicate) Int32ArrPredicate {
	return func(e []int32) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrPredicate) Or(p2 Int64ArrPredicate) Int64ArrPredicate {
	return func(e []int64) bool { return p1(e) || p2(e) }
}
func (p1 UintArrPredicate) Or(p2 UintArrPredicate) UintArrPredicate {
	return func(e []uint) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrPredicate) Or(p2 Uint8ArrPredicate) Uint8ArrPredicate {
	return func(e []uint8) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrPredicate) Or(p2 Uint16ArrPredicate) Uint16ArrPredicate {
	return func(e []uint16) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrPredicate) Or(p2 Uint32ArrPredicate) Uint32ArrPredicate {
	return func(e []uint32) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrPredicate) Or(p2 Uint64ArrPredicate) Uint64ArrPredicate {
	return func(e []uint64) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrPredicate) Or(p2 UintptrArrPredicate) UintptrArrPredicate {
	return func(e []uintptr) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrPredicate) Or(p2 ByteArrPredicate) ByteArrPredicate {
	return func(e []byte) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrPredicate) Or(p2 RuneArrPredicate) RuneArrPredicate {
	return func(e []rune) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrPredicate) Or(p2 Float32ArrPredicate) Float32ArrPredicate {
	return func(e []float32) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrPredicate) Or(p2 Float64ArrPredicate) Float64ArrPredicate {
	return func(e []float64) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrPredicate) Or(p2 Complex64ArrPredicate) Complex64ArrPredicate {
	return func(e []complex64) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrPredicate) Or(p2 Complex128ArrPredicate) Complex128ArrPredicate {
	return func(e []complex128) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrPredicate) Or(p2 AnyArrPredicate) AnyArrPredicate {
	return func(e []Any) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrPredicate) Or(p2 BoolArrArrPredicate) BoolArrArrPredicate {
	return func(e [][]bool) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrPredicate) Or(p2 StringArrArrPredicate) StringArrArrPredicate {
	return func(e [][]string) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrPredicate) Or(p2 IntArrArrPredicate) IntArrArrPredicate {
	return func(e [][]int) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrPredicate) Or(p2 Int8ArrArrPredicate) Int8ArrArrPredicate {
	return func(e [][]int8) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrPredicate) Or(p2 Int16ArrArrPredicate) Int16ArrArrPredicate {
	return func(e [][]int16) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrPredicate) Or(p2 Int32ArrArrPredicate) Int32ArrArrPredicate {
	return func(e [][]int32) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrPredicate) Or(p2 Int64ArrArrPredicate) Int64ArrArrPredicate {
	return func(e [][]int64) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrPredicate) Or(p2 UintArrArrPredicate) UintArrArrPredicate {
	return func(e [][]uint) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrPredicate) Or(p2 Uint8ArrArrPredicate) Uint8ArrArrPredicate {
	return func(e [][]uint8) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrPredicate) Or(p2 Uint16ArrArrPredicate) Uint16ArrArrPredicate {
	return func(e [][]uint16) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrPredicate) Or(p2 Uint32ArrArrPredicate) Uint32ArrArrPredicate {
	return func(e [][]uint32) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrPredicate) Or(p2 Uint64ArrArrPredicate) Uint64ArrArrPredicate {
	return func(e [][]uint64) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrPredicate) Or(p2 UintptrArrArrPredicate) UintptrArrArrPredicate {
	return func(e [][]uintptr) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrPredicate) Or(p2 ByteArrArrPredicate) ByteArrArrPredicate {
	return func(e [][]byte) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrPredicate) Or(p2 RuneArrArrPredicate) RuneArrArrPredicate {
	return func(e [][]rune) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrPredicate) Or(p2 Float32ArrArrPredicate) Float32ArrArrPredicate {
	return func(e [][]float32) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrPredicate) Or(p2 Float64ArrArrPredicate) Float64ArrArrPredicate {
	return func(e [][]float64) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrPredicate) Or(p2 Complex64ArrArrPredicate) Complex64ArrArrPredicate {
	return func(e [][]complex64) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrPredicate) Or(p2 Complex128ArrArrPredicate) Complex128ArrArrPredicate {
	return func(e [][]complex128) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrPredicate) Or(p2 AnyArrArrPredicate) AnyArrArrPredicate {
	return func(e [][]Any) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrPredicate) Or(p2 BoolOptionArrPredicate) BoolOptionArrPredicate {
	return func(e []BoolOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrPredicate) Or(p2 StringOptionArrPredicate) StringOptionArrPredicate {
	return func(e []StringOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrPredicate) Or(p2 IntOptionArrPredicate) IntOptionArrPredicate {
	return func(e []IntOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrPredicate) Or(p2 Int8OptionArrPredicate) Int8OptionArrPredicate {
	return func(e []Int8Option) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrPredicate) Or(p2 Int16OptionArrPredicate) Int16OptionArrPredicate {
	return func(e []Int16Option) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrPredicate) Or(p2 Int32OptionArrPredicate) Int32OptionArrPredicate {
	return func(e []Int32Option) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrPredicate) Or(p2 Int64OptionArrPredicate) Int64OptionArrPredicate {
	return func(e []Int64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrPredicate) Or(p2 UintOptionArrPredicate) UintOptionArrPredicate {
	return func(e []UintOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrPredicate) Or(p2 Uint8OptionArrPredicate) Uint8OptionArrPredicate {
	return func(e []Uint8Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrPredicate) Or(p2 Uint16OptionArrPredicate) Uint16OptionArrPredicate {
	return func(e []Uint16Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrPredicate) Or(p2 Uint32OptionArrPredicate) Uint32OptionArrPredicate {
	return func(e []Uint32Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrPredicate) Or(p2 Uint64OptionArrPredicate) Uint64OptionArrPredicate {
	return func(e []Uint64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrPredicate) Or(p2 UintptrOptionArrPredicate) UintptrOptionArrPredicate {
	return func(e []UintptrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrPredicate) Or(p2 ByteOptionArrPredicate) ByteOptionArrPredicate {
	return func(e []ByteOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrPredicate) Or(p2 RuneOptionArrPredicate) RuneOptionArrPredicate {
	return func(e []RuneOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrPredicate) Or(p2 Float32OptionArrPredicate) Float32OptionArrPredicate {
	return func(e []Float32Option) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrPredicate) Or(p2 Float64OptionArrPredicate) Float64OptionArrPredicate {
	return func(e []Float64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrPredicate) Or(p2 Complex64OptionArrPredicate) Complex64OptionArrPredicate {
	return func(e []Complex64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrPredicate) Or(p2 Complex128OptionArrPredicate) Complex128OptionArrPredicate {
	return func(e []Complex128Option) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrPredicate) Or(p2 AnyOptionArrPredicate) AnyOptionArrPredicate {
	return func(e []AnyOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionPredicate) Or(p2 BoolOptionPredicate) BoolOptionPredicate {
	return func(e BoolOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionPredicate) Or(p2 StringOptionPredicate) StringOptionPredicate {
	return func(e StringOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionPredicate) Or(p2 IntOptionPredicate) IntOptionPredicate {
	return func(e IntOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionPredicate) Or(p2 Int8OptionPredicate) Int8OptionPredicate {
	return func(e Int8Option) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionPredicate) Or(p2 Int16OptionPredicate) Int16OptionPredicate {
	return func(e Int16Option) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionPredicate) Or(p2 Int32OptionPredicate) Int32OptionPredicate {
	return func(e Int32Option) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionPredicate) Or(p2 Int64OptionPredicate) Int64OptionPredicate {
	return func(e Int64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionPredicate) Or(p2 UintOptionPredicate) UintOptionPredicate {
	return func(e UintOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionPredicate) Or(p2 Uint8OptionPredicate) Uint8OptionPredicate {
	return func(e Uint8Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionPredicate) Or(p2 Uint16OptionPredicate) Uint16OptionPredicate {
	return func(e Uint16Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionPredicate) Or(p2 Uint32OptionPredicate) Uint32OptionPredicate {
	return func(e Uint32Option) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionPredicate) Or(p2 Uint64OptionPredicate) Uint64OptionPredicate {
	return func(e Uint64Option) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionPredicate) Or(p2 UintptrOptionPredicate) UintptrOptionPredicate {
	return func(e UintptrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionPredicate) Or(p2 ByteOptionPredicate) ByteOptionPredicate {
	return func(e ByteOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionPredicate) Or(p2 RuneOptionPredicate) RuneOptionPredicate {
	return func(e RuneOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionPredicate) Or(p2 Float32OptionPredicate) Float32OptionPredicate {
	return func(e Float32Option) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionPredicate) Or(p2 Float64OptionPredicate) Float64OptionPredicate {
	return func(e Float64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionPredicate) Or(p2 Complex64OptionPredicate) Complex64OptionPredicate {
	return func(e Complex64Option) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionPredicate) Or(p2 Complex128OptionPredicate) Complex128OptionPredicate {
	return func(e Complex128Option) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionPredicate) Or(p2 AnyOptionPredicate) AnyOptionPredicate {
	return func(e AnyOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrOptionPredicate) Or(p2 BoolArrOptionPredicate) BoolArrOptionPredicate {
	return func(e BoolArrOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrOptionPredicate) Or(p2 StringArrOptionPredicate) StringArrOptionPredicate {
	return func(e StringArrOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrOptionPredicate) Or(p2 IntArrOptionPredicate) IntArrOptionPredicate {
	return func(e IntArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrOptionPredicate) Or(p2 Int8ArrOptionPredicate) Int8ArrOptionPredicate {
	return func(e Int8ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrOptionPredicate) Or(p2 Int16ArrOptionPredicate) Int16ArrOptionPredicate {
	return func(e Int16ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrOptionPredicate) Or(p2 Int32ArrOptionPredicate) Int32ArrOptionPredicate {
	return func(e Int32ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrOptionPredicate) Or(p2 Int64ArrOptionPredicate) Int64ArrOptionPredicate {
	return func(e Int64ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrOptionPredicate) Or(p2 UintArrOptionPredicate) UintArrOptionPredicate {
	return func(e UintArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrOptionPredicate) Or(p2 Uint8ArrOptionPredicate) Uint8ArrOptionPredicate {
	return func(e Uint8ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrOptionPredicate) Or(p2 Uint16ArrOptionPredicate) Uint16ArrOptionPredicate {
	return func(e Uint16ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrOptionPredicate) Or(p2 Uint32ArrOptionPredicate) Uint32ArrOptionPredicate {
	return func(e Uint32ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrOptionPredicate) Or(p2 Uint64ArrOptionPredicate) Uint64ArrOptionPredicate {
	return func(e Uint64ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrOptionPredicate) Or(p2 UintptrArrOptionPredicate) UintptrArrOptionPredicate {
	return func(e UintptrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrOptionPredicate) Or(p2 ByteArrOptionPredicate) ByteArrOptionPredicate {
	return func(e ByteArrOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrOptionPredicate) Or(p2 RuneArrOptionPredicate) RuneArrOptionPredicate {
	return func(e RuneArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrOptionPredicate) Or(p2 Float32ArrOptionPredicate) Float32ArrOptionPredicate {
	return func(e Float32ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrOptionPredicate) Or(p2 Float64ArrOptionPredicate) Float64ArrOptionPredicate {
	return func(e Float64ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrOptionPredicate) Or(p2 Complex64ArrOptionPredicate) Complex64ArrOptionPredicate {
	return func(e Complex64ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrOptionPredicate) Or(p2 Complex128ArrOptionPredicate) Complex128ArrOptionPredicate {
	return func(e Complex128ArrOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrOptionPredicate) Or(p2 AnyArrOptionPredicate) AnyArrOptionPredicate {
	return func(e AnyArrOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrOptionPredicate) Or(p2 BoolArrArrOptionPredicate) BoolArrArrOptionPredicate {
	return func(e BoolArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrOptionPredicate) Or(p2 StringArrArrOptionPredicate) StringArrArrOptionPredicate {
	return func(e StringArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrOptionPredicate) Or(p2 IntArrArrOptionPredicate) IntArrArrOptionPredicate {
	return func(e IntArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrOptionPredicate) Or(p2 Int8ArrArrOptionPredicate) Int8ArrArrOptionPredicate {
	return func(e Int8ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrOptionPredicate) Or(p2 Int16ArrArrOptionPredicate) Int16ArrArrOptionPredicate {
	return func(e Int16ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrOptionPredicate) Or(p2 Int32ArrArrOptionPredicate) Int32ArrArrOptionPredicate {
	return func(e Int32ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrOptionPredicate) Or(p2 Int64ArrArrOptionPredicate) Int64ArrArrOptionPredicate {
	return func(e Int64ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrOptionPredicate) Or(p2 UintArrArrOptionPredicate) UintArrArrOptionPredicate {
	return func(e UintArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrOptionPredicate) Or(p2 Uint8ArrArrOptionPredicate) Uint8ArrArrOptionPredicate {
	return func(e Uint8ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrOptionPredicate) Or(p2 Uint16ArrArrOptionPredicate) Uint16ArrArrOptionPredicate {
	return func(e Uint16ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrOptionPredicate) Or(p2 Uint32ArrArrOptionPredicate) Uint32ArrArrOptionPredicate {
	return func(e Uint32ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrOptionPredicate) Or(p2 Uint64ArrArrOptionPredicate) Uint64ArrArrOptionPredicate {
	return func(e Uint64ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrOptionPredicate) Or(p2 UintptrArrArrOptionPredicate) UintptrArrArrOptionPredicate {
	return func(e UintptrArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrOptionPredicate) Or(p2 ByteArrArrOptionPredicate) ByteArrArrOptionPredicate {
	return func(e ByteArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrOptionPredicate) Or(p2 RuneArrArrOptionPredicate) RuneArrArrOptionPredicate {
	return func(e RuneArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrOptionPredicate) Or(p2 Float32ArrArrOptionPredicate) Float32ArrArrOptionPredicate {
	return func(e Float32ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrOptionPredicate) Or(p2 Float64ArrArrOptionPredicate) Float64ArrArrOptionPredicate {
	return func(e Float64ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrOptionPredicate) Or(p2 Complex64ArrArrOptionPredicate) Complex64ArrArrOptionPredicate {
	return func(e Complex64ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrOptionPredicate) Or(p2 Complex128ArrArrOptionPredicate) Complex128ArrArrOptionPredicate {
	return func(e Complex128ArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrOptionPredicate) Or(p2 AnyArrArrOptionPredicate) AnyArrArrOptionPredicate {
	return func(e AnyArrArrOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrOptionPredicate) Or(p2 BoolOptionArrOptionPredicate) BoolOptionArrOptionPredicate {
	return func(e BoolOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrOptionPredicate) Or(p2 StringOptionArrOptionPredicate) StringOptionArrOptionPredicate {
	return func(e StringOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrOptionPredicate) Or(p2 IntOptionArrOptionPredicate) IntOptionArrOptionPredicate {
	return func(e IntOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrOptionPredicate) Or(p2 Int8OptionArrOptionPredicate) Int8OptionArrOptionPredicate {
	return func(e Int8OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrOptionPredicate) Or(p2 Int16OptionArrOptionPredicate) Int16OptionArrOptionPredicate {
	return func(e Int16OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrOptionPredicate) Or(p2 Int32OptionArrOptionPredicate) Int32OptionArrOptionPredicate {
	return func(e Int32OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrOptionPredicate) Or(p2 Int64OptionArrOptionPredicate) Int64OptionArrOptionPredicate {
	return func(e Int64OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrOptionPredicate) Or(p2 UintOptionArrOptionPredicate) UintOptionArrOptionPredicate {
	return func(e UintOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrOptionPredicate) Or(p2 Uint8OptionArrOptionPredicate) Uint8OptionArrOptionPredicate {
	return func(e Uint8OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrOptionPredicate) Or(p2 Uint16OptionArrOptionPredicate) Uint16OptionArrOptionPredicate {
	return func(e Uint16OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrOptionPredicate) Or(p2 Uint32OptionArrOptionPredicate) Uint32OptionArrOptionPredicate {
	return func(e Uint32OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrOptionPredicate) Or(p2 Uint64OptionArrOptionPredicate) Uint64OptionArrOptionPredicate {
	return func(e Uint64OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrOptionPredicate) Or(p2 UintptrOptionArrOptionPredicate) UintptrOptionArrOptionPredicate {
	return func(e UintptrOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrOptionPredicate) Or(p2 ByteOptionArrOptionPredicate) ByteOptionArrOptionPredicate {
	return func(e ByteOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrOptionPredicate) Or(p2 RuneOptionArrOptionPredicate) RuneOptionArrOptionPredicate {
	return func(e RuneOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrOptionPredicate) Or(p2 Float32OptionArrOptionPredicate) Float32OptionArrOptionPredicate {
	return func(e Float32OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrOptionPredicate) Or(p2 Float64OptionArrOptionPredicate) Float64OptionArrOptionPredicate {
	return func(e Float64OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrOptionPredicate) Or(p2 Complex64OptionArrOptionPredicate) Complex64OptionArrOptionPredicate {
	return func(e Complex64OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrOptionPredicate) Or(p2 Complex128OptionArrOptionPredicate) Complex128OptionArrOptionPredicate {
	return func(e Complex128OptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrOptionPredicate) Or(p2 AnyOptionArrOptionPredicate) AnyOptionArrOptionPredicate {
	return func(e AnyOptionArrOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionPredicate) Or(p2 BoolListOptionPredicate) BoolListOptionPredicate {
	return func(e BoolListOption) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionPredicate) Or(p2 StringListOptionPredicate) StringListOptionPredicate {
	return func(e StringListOption) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionPredicate) Or(p2 IntListOptionPredicate) IntListOptionPredicate {
	return func(e IntListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionPredicate) Or(p2 Int8ListOptionPredicate) Int8ListOptionPredicate {
	return func(e Int8ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionPredicate) Or(p2 Int16ListOptionPredicate) Int16ListOptionPredicate {
	return func(e Int16ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionPredicate) Or(p2 Int32ListOptionPredicate) Int32ListOptionPredicate {
	return func(e Int32ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionPredicate) Or(p2 Int64ListOptionPredicate) Int64ListOptionPredicate {
	return func(e Int64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionPredicate) Or(p2 UintListOptionPredicate) UintListOptionPredicate {
	return func(e UintListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionPredicate) Or(p2 Uint8ListOptionPredicate) Uint8ListOptionPredicate {
	return func(e Uint8ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionPredicate) Or(p2 Uint16ListOptionPredicate) Uint16ListOptionPredicate {
	return func(e Uint16ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionPredicate) Or(p2 Uint32ListOptionPredicate) Uint32ListOptionPredicate {
	return func(e Uint32ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionPredicate) Or(p2 Uint64ListOptionPredicate) Uint64ListOptionPredicate {
	return func(e Uint64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionPredicate) Or(p2 UintptrListOptionPredicate) UintptrListOptionPredicate {
	return func(e UintptrListOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionPredicate) Or(p2 ByteListOptionPredicate) ByteListOptionPredicate {
	return func(e ByteListOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionPredicate) Or(p2 RuneListOptionPredicate) RuneListOptionPredicate {
	return func(e RuneListOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionPredicate) Or(p2 Float32ListOptionPredicate) Float32ListOptionPredicate {
	return func(e Float32ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionPredicate) Or(p2 Float64ListOptionPredicate) Float64ListOptionPredicate {
	return func(e Float64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionPredicate) Or(p2 Complex64ListOptionPredicate) Complex64ListOptionPredicate {
	return func(e Complex64ListOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionPredicate) Or(p2 Complex128ListOptionPredicate) Complex128ListOptionPredicate {
	return func(e Complex128ListOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionPredicate) Or(p2 AnyListOptionPredicate) AnyListOptionPredicate {
	return func(e AnyListOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionPredicate) Or(p2 BoolOptionOptionPredicate) BoolOptionOptionPredicate {
	return func(e BoolOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionPredicate) Or(p2 StringOptionOptionPredicate) StringOptionOptionPredicate {
	return func(e StringOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionPredicate) Or(p2 IntOptionOptionPredicate) IntOptionOptionPredicate {
	return func(e IntOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionPredicate) Or(p2 Int8OptionOptionPredicate) Int8OptionOptionPredicate {
	return func(e Int8OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionPredicate) Or(p2 Int16OptionOptionPredicate) Int16OptionOptionPredicate {
	return func(e Int16OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionPredicate) Or(p2 Int32OptionOptionPredicate) Int32OptionOptionPredicate {
	return func(e Int32OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionPredicate) Or(p2 Int64OptionOptionPredicate) Int64OptionOptionPredicate {
	return func(e Int64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionPredicate) Or(p2 UintOptionOptionPredicate) UintOptionOptionPredicate {
	return func(e UintOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionPredicate) Or(p2 Uint8OptionOptionPredicate) Uint8OptionOptionPredicate {
	return func(e Uint8OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionPredicate) Or(p2 Uint16OptionOptionPredicate) Uint16OptionOptionPredicate {
	return func(e Uint16OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionPredicate) Or(p2 Uint32OptionOptionPredicate) Uint32OptionOptionPredicate {
	return func(e Uint32OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionPredicate) Or(p2 Uint64OptionOptionPredicate) Uint64OptionOptionPredicate {
	return func(e Uint64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionPredicate) Or(p2 UintptrOptionOptionPredicate) UintptrOptionOptionPredicate {
	return func(e UintptrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionPredicate) Or(p2 ByteOptionOptionPredicate) ByteOptionOptionPredicate {
	return func(e ByteOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionPredicate) Or(p2 RuneOptionOptionPredicate) RuneOptionOptionPredicate {
	return func(e RuneOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionPredicate) Or(p2 Float32OptionOptionPredicate) Float32OptionOptionPredicate {
	return func(e Float32OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionPredicate) Or(p2 Float64OptionOptionPredicate) Float64OptionOptionPredicate {
	return func(e Float64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionPredicate) Or(p2 Complex64OptionOptionPredicate) Complex64OptionOptionPredicate {
	return func(e Complex64OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionPredicate) Or(p2 Complex128OptionOptionPredicate) Complex128OptionOptionPredicate {
	return func(e Complex128OptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionPredicate) Or(p2 AnyOptionOptionPredicate) AnyOptionOptionPredicate {
	return func(e AnyOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrOptionOptionPredicate) Or(p2 BoolArrOptionOptionPredicate) BoolArrOptionOptionPredicate {
	return func(e BoolArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrOptionOptionPredicate) Or(p2 StringArrOptionOptionPredicate) StringArrOptionOptionPredicate {
	return func(e StringArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrOptionOptionPredicate) Or(p2 IntArrOptionOptionPredicate) IntArrOptionOptionPredicate {
	return func(e IntArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrOptionOptionPredicate) Or(p2 Int8ArrOptionOptionPredicate) Int8ArrOptionOptionPredicate {
	return func(e Int8ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrOptionOptionPredicate) Or(p2 Int16ArrOptionOptionPredicate) Int16ArrOptionOptionPredicate {
	return func(e Int16ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrOptionOptionPredicate) Or(p2 Int32ArrOptionOptionPredicate) Int32ArrOptionOptionPredicate {
	return func(e Int32ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrOptionOptionPredicate) Or(p2 Int64ArrOptionOptionPredicate) Int64ArrOptionOptionPredicate {
	return func(e Int64ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrOptionOptionPredicate) Or(p2 UintArrOptionOptionPredicate) UintArrOptionOptionPredicate {
	return func(e UintArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrOptionOptionPredicate) Or(p2 Uint8ArrOptionOptionPredicate) Uint8ArrOptionOptionPredicate {
	return func(e Uint8ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrOptionOptionPredicate) Or(p2 Uint16ArrOptionOptionPredicate) Uint16ArrOptionOptionPredicate {
	return func(e Uint16ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrOptionOptionPredicate) Or(p2 Uint32ArrOptionOptionPredicate) Uint32ArrOptionOptionPredicate {
	return func(e Uint32ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrOptionOptionPredicate) Or(p2 Uint64ArrOptionOptionPredicate) Uint64ArrOptionOptionPredicate {
	return func(e Uint64ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrOptionOptionPredicate) Or(p2 UintptrArrOptionOptionPredicate) UintptrArrOptionOptionPredicate {
	return func(e UintptrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrOptionOptionPredicate) Or(p2 ByteArrOptionOptionPredicate) ByteArrOptionOptionPredicate {
	return func(e ByteArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrOptionOptionPredicate) Or(p2 RuneArrOptionOptionPredicate) RuneArrOptionOptionPredicate {
	return func(e RuneArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrOptionOptionPredicate) Or(p2 Float32ArrOptionOptionPredicate) Float32ArrOptionOptionPredicate {
	return func(e Float32ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrOptionOptionPredicate) Or(p2 Float64ArrOptionOptionPredicate) Float64ArrOptionOptionPredicate {
	return func(e Float64ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrOptionOptionPredicate) Or(p2 Complex64ArrOptionOptionPredicate) Complex64ArrOptionOptionPredicate {
	return func(e Complex64ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrOptionOptionPredicate) Or(p2 Complex128ArrOptionOptionPredicate) Complex128ArrOptionOptionPredicate {
	return func(e Complex128ArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrOptionOptionPredicate) Or(p2 AnyArrOptionOptionPredicate) AnyArrOptionOptionPredicate {
	return func(e AnyArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrOptionOptionPredicate) Or(p2 BoolArrArrOptionOptionPredicate) BoolArrArrOptionOptionPredicate {
	return func(e BoolArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrOptionOptionPredicate) Or(p2 StringArrArrOptionOptionPredicate) StringArrArrOptionOptionPredicate {
	return func(e StringArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrOptionOptionPredicate) Or(p2 IntArrArrOptionOptionPredicate) IntArrArrOptionOptionPredicate {
	return func(e IntArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrOptionOptionPredicate) Or(p2 Int8ArrArrOptionOptionPredicate) Int8ArrArrOptionOptionPredicate {
	return func(e Int8ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrOptionOptionPredicate) Or(p2 Int16ArrArrOptionOptionPredicate) Int16ArrArrOptionOptionPredicate {
	return func(e Int16ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrOptionOptionPredicate) Or(p2 Int32ArrArrOptionOptionPredicate) Int32ArrArrOptionOptionPredicate {
	return func(e Int32ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrOptionOptionPredicate) Or(p2 Int64ArrArrOptionOptionPredicate) Int64ArrArrOptionOptionPredicate {
	return func(e Int64ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrOptionOptionPredicate) Or(p2 UintArrArrOptionOptionPredicate) UintArrArrOptionOptionPredicate {
	return func(e UintArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrOptionOptionPredicate) Or(p2 Uint8ArrArrOptionOptionPredicate) Uint8ArrArrOptionOptionPredicate {
	return func(e Uint8ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrOptionOptionPredicate) Or(p2 Uint16ArrArrOptionOptionPredicate) Uint16ArrArrOptionOptionPredicate {
	return func(e Uint16ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrOptionOptionPredicate) Or(p2 Uint32ArrArrOptionOptionPredicate) Uint32ArrArrOptionOptionPredicate {
	return func(e Uint32ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrOptionOptionPredicate) Or(p2 Uint64ArrArrOptionOptionPredicate) Uint64ArrArrOptionOptionPredicate {
	return func(e Uint64ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrOptionOptionPredicate) Or(p2 UintptrArrArrOptionOptionPredicate) UintptrArrArrOptionOptionPredicate {
	return func(e UintptrArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrOptionOptionPredicate) Or(p2 ByteArrArrOptionOptionPredicate) ByteArrArrOptionOptionPredicate {
	return func(e ByteArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrOptionOptionPredicate) Or(p2 RuneArrArrOptionOptionPredicate) RuneArrArrOptionOptionPredicate {
	return func(e RuneArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrOptionOptionPredicate) Or(p2 Float32ArrArrOptionOptionPredicate) Float32ArrArrOptionOptionPredicate {
	return func(e Float32ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrOptionOptionPredicate) Or(p2 Float64ArrArrOptionOptionPredicate) Float64ArrArrOptionOptionPredicate {
	return func(e Float64ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrOptionOptionPredicate) Or(p2 Complex64ArrArrOptionOptionPredicate) Complex64ArrArrOptionOptionPredicate {
	return func(e Complex64ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrOptionOptionPredicate) Or(p2 Complex128ArrArrOptionOptionPredicate) Complex128ArrArrOptionOptionPredicate {
	return func(e Complex128ArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrOptionOptionPredicate) Or(p2 AnyArrArrOptionOptionPredicate) AnyArrArrOptionOptionPredicate {
	return func(e AnyArrArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrOptionOptionPredicate) Or(p2 BoolOptionArrOptionOptionPredicate) BoolOptionArrOptionOptionPredicate {
	return func(e BoolOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrOptionOptionPredicate) Or(p2 StringOptionArrOptionOptionPredicate) StringOptionArrOptionOptionPredicate {
	return func(e StringOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrOptionOptionPredicate) Or(p2 IntOptionArrOptionOptionPredicate) IntOptionArrOptionOptionPredicate {
	return func(e IntOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrOptionOptionPredicate) Or(p2 Int8OptionArrOptionOptionPredicate) Int8OptionArrOptionOptionPredicate {
	return func(e Int8OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrOptionOptionPredicate) Or(p2 Int16OptionArrOptionOptionPredicate) Int16OptionArrOptionOptionPredicate {
	return func(e Int16OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrOptionOptionPredicate) Or(p2 Int32OptionArrOptionOptionPredicate) Int32OptionArrOptionOptionPredicate {
	return func(e Int32OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrOptionOptionPredicate) Or(p2 Int64OptionArrOptionOptionPredicate) Int64OptionArrOptionOptionPredicate {
	return func(e Int64OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrOptionOptionPredicate) Or(p2 UintOptionArrOptionOptionPredicate) UintOptionArrOptionOptionPredicate {
	return func(e UintOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrOptionOptionPredicate) Or(p2 Uint8OptionArrOptionOptionPredicate) Uint8OptionArrOptionOptionPredicate {
	return func(e Uint8OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrOptionOptionPredicate) Or(p2 Uint16OptionArrOptionOptionPredicate) Uint16OptionArrOptionOptionPredicate {
	return func(e Uint16OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrOptionOptionPredicate) Or(p2 Uint32OptionArrOptionOptionPredicate) Uint32OptionArrOptionOptionPredicate {
	return func(e Uint32OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrOptionOptionPredicate) Or(p2 Uint64OptionArrOptionOptionPredicate) Uint64OptionArrOptionOptionPredicate {
	return func(e Uint64OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrOptionOptionPredicate) Or(p2 UintptrOptionArrOptionOptionPredicate) UintptrOptionArrOptionOptionPredicate {
	return func(e UintptrOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrOptionOptionPredicate) Or(p2 ByteOptionArrOptionOptionPredicate) ByteOptionArrOptionOptionPredicate {
	return func(e ByteOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrOptionOptionPredicate) Or(p2 RuneOptionArrOptionOptionPredicate) RuneOptionArrOptionOptionPredicate {
	return func(e RuneOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrOptionOptionPredicate) Or(p2 Float32OptionArrOptionOptionPredicate) Float32OptionArrOptionOptionPredicate {
	return func(e Float32OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrOptionOptionPredicate) Or(p2 Float64OptionArrOptionOptionPredicate) Float64OptionArrOptionOptionPredicate {
	return func(e Float64OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrOptionOptionPredicate) Or(p2 Complex64OptionArrOptionOptionPredicate) Complex64OptionArrOptionOptionPredicate {
	return func(e Complex64OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrOptionOptionPredicate) Or(p2 Complex128OptionArrOptionOptionPredicate) Complex128OptionArrOptionOptionPredicate {
	return func(e Complex128OptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrOptionOptionPredicate) Or(p2 AnyOptionArrOptionOptionPredicate) AnyOptionArrOptionOptionPredicate {
	return func(e AnyOptionArrOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionPredicate) Or(p2 BoolListOptionOptionPredicate) BoolListOptionOptionPredicate {
	return func(e BoolListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionPredicate) Or(p2 StringListOptionOptionPredicate) StringListOptionOptionPredicate {
	return func(e StringListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionPredicate) Or(p2 IntListOptionOptionPredicate) IntListOptionOptionPredicate {
	return func(e IntListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionPredicate) Or(p2 Int8ListOptionOptionPredicate) Int8ListOptionOptionPredicate {
	return func(e Int8ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionPredicate) Or(p2 Int16ListOptionOptionPredicate) Int16ListOptionOptionPredicate {
	return func(e Int16ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionPredicate) Or(p2 Int32ListOptionOptionPredicate) Int32ListOptionOptionPredicate {
	return func(e Int32ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionPredicate) Or(p2 Int64ListOptionOptionPredicate) Int64ListOptionOptionPredicate {
	return func(e Int64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionPredicate) Or(p2 UintListOptionOptionPredicate) UintListOptionOptionPredicate {
	return func(e UintListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionPredicate) Or(p2 Uint8ListOptionOptionPredicate) Uint8ListOptionOptionPredicate {
	return func(e Uint8ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionPredicate) Or(p2 Uint16ListOptionOptionPredicate) Uint16ListOptionOptionPredicate {
	return func(e Uint16ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionPredicate) Or(p2 Uint32ListOptionOptionPredicate) Uint32ListOptionOptionPredicate {
	return func(e Uint32ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionPredicate) Or(p2 Uint64ListOptionOptionPredicate) Uint64ListOptionOptionPredicate {
	return func(e Uint64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionPredicate) Or(p2 UintptrListOptionOptionPredicate) UintptrListOptionOptionPredicate {
	return func(e UintptrListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionPredicate) Or(p2 ByteListOptionOptionPredicate) ByteListOptionOptionPredicate {
	return func(e ByteListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionPredicate) Or(p2 RuneListOptionOptionPredicate) RuneListOptionOptionPredicate {
	return func(e RuneListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionPredicate) Or(p2 Float32ListOptionOptionPredicate) Float32ListOptionOptionPredicate {
	return func(e Float32ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionPredicate) Or(p2 Float64ListOptionOptionPredicate) Float64ListOptionOptionPredicate {
	return func(e Float64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionPredicate) Or(p2 Complex64ListOptionOptionPredicate) Complex64ListOptionOptionPredicate {
	return func(e Complex64ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionPredicate) Or(p2 Complex128ListOptionOptionPredicate) Complex128ListOptionOptionPredicate {
	return func(e Complex128ListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionPredicate) Or(p2 AnyListOptionOptionPredicate) AnyListOptionOptionPredicate {
	return func(e AnyListOptionOption) bool { return p1(e) || p2(e) }
}
func (p1 BoolListPredicate) Or(p2 BoolListPredicate) BoolListPredicate {
	return func(e BoolList) bool { return p1(e) || p2(e) }
}
func (p1 StringListPredicate) Or(p2 StringListPredicate) StringListPredicate {
	return func(e StringList) bool { return p1(e) || p2(e) }
}
func (p1 IntListPredicate) Or(p2 IntListPredicate) IntListPredicate {
	return func(e IntList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListPredicate) Or(p2 Int8ListPredicate) Int8ListPredicate {
	return func(e Int8List) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListPredicate) Or(p2 Int16ListPredicate) Int16ListPredicate {
	return func(e Int16List) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListPredicate) Or(p2 Int32ListPredicate) Int32ListPredicate {
	return func(e Int32List) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListPredicate) Or(p2 Int64ListPredicate) Int64ListPredicate {
	return func(e Int64List) bool { return p1(e) || p2(e) }
}
func (p1 UintListPredicate) Or(p2 UintListPredicate) UintListPredicate {
	return func(e UintList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListPredicate) Or(p2 Uint8ListPredicate) Uint8ListPredicate {
	return func(e Uint8List) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListPredicate) Or(p2 Uint16ListPredicate) Uint16ListPredicate {
	return func(e Uint16List) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListPredicate) Or(p2 Uint32ListPredicate) Uint32ListPredicate {
	return func(e Uint32List) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListPredicate) Or(p2 Uint64ListPredicate) Uint64ListPredicate {
	return func(e Uint64List) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListPredicate) Or(p2 UintptrListPredicate) UintptrListPredicate {
	return func(e UintptrList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListPredicate) Or(p2 ByteListPredicate) ByteListPredicate {
	return func(e ByteList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListPredicate) Or(p2 RuneListPredicate) RuneListPredicate {
	return func(e RuneList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListPredicate) Or(p2 Float32ListPredicate) Float32ListPredicate {
	return func(e Float32List) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListPredicate) Or(p2 Float64ListPredicate) Float64ListPredicate {
	return func(e Float64List) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListPredicate) Or(p2 Complex64ListPredicate) Complex64ListPredicate {
	return func(e Complex64List) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListPredicate) Or(p2 Complex128ListPredicate) Complex128ListPredicate {
	return func(e Complex128List) bool { return p1(e) || p2(e) }
}
func (p1 AnyListPredicate) Or(p2 AnyListPredicate) AnyListPredicate {
	return func(e AnyList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionListPredicate) Or(p2 BoolOptionListPredicate) BoolOptionListPredicate {
	return func(e BoolOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionListPredicate) Or(p2 StringOptionListPredicate) StringOptionListPredicate {
	return func(e StringOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionListPredicate) Or(p2 IntOptionListPredicate) IntOptionListPredicate {
	return func(e IntOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionListPredicate) Or(p2 Int8OptionListPredicate) Int8OptionListPredicate {
	return func(e Int8OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionListPredicate) Or(p2 Int16OptionListPredicate) Int16OptionListPredicate {
	return func(e Int16OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionListPredicate) Or(p2 Int32OptionListPredicate) Int32OptionListPredicate {
	return func(e Int32OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionListPredicate) Or(p2 Int64OptionListPredicate) Int64OptionListPredicate {
	return func(e Int64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionListPredicate) Or(p2 UintOptionListPredicate) UintOptionListPredicate {
	return func(e UintOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionListPredicate) Or(p2 Uint8OptionListPredicate) Uint8OptionListPredicate {
	return func(e Uint8OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionListPredicate) Or(p2 Uint16OptionListPredicate) Uint16OptionListPredicate {
	return func(e Uint16OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionListPredicate) Or(p2 Uint32OptionListPredicate) Uint32OptionListPredicate {
	return func(e Uint32OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionListPredicate) Or(p2 Uint64OptionListPredicate) Uint64OptionListPredicate {
	return func(e Uint64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionListPredicate) Or(p2 UintptrOptionListPredicate) UintptrOptionListPredicate {
	return func(e UintptrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionListPredicate) Or(p2 ByteOptionListPredicate) ByteOptionListPredicate {
	return func(e ByteOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionListPredicate) Or(p2 RuneOptionListPredicate) RuneOptionListPredicate {
	return func(e RuneOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionListPredicate) Or(p2 Float32OptionListPredicate) Float32OptionListPredicate {
	return func(e Float32OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionListPredicate) Or(p2 Float64OptionListPredicate) Float64OptionListPredicate {
	return func(e Float64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionListPredicate) Or(p2 Complex64OptionListPredicate) Complex64OptionListPredicate {
	return func(e Complex64OptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionListPredicate) Or(p2 Complex128OptionListPredicate) Complex128OptionListPredicate {
	return func(e Complex128OptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionListPredicate) Or(p2 AnyOptionListPredicate) AnyOptionListPredicate {
	return func(e AnyOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrOptionListPredicate) Or(p2 BoolArrOptionListPredicate) BoolArrOptionListPredicate {
	return func(e BoolArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrOptionListPredicate) Or(p2 StringArrOptionListPredicate) StringArrOptionListPredicate {
	return func(e StringArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrOptionListPredicate) Or(p2 IntArrOptionListPredicate) IntArrOptionListPredicate {
	return func(e IntArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrOptionListPredicate) Or(p2 Int8ArrOptionListPredicate) Int8ArrOptionListPredicate {
	return func(e Int8ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrOptionListPredicate) Or(p2 Int16ArrOptionListPredicate) Int16ArrOptionListPredicate {
	return func(e Int16ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrOptionListPredicate) Or(p2 Int32ArrOptionListPredicate) Int32ArrOptionListPredicate {
	return func(e Int32ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrOptionListPredicate) Or(p2 Int64ArrOptionListPredicate) Int64ArrOptionListPredicate {
	return func(e Int64ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrOptionListPredicate) Or(p2 UintArrOptionListPredicate) UintArrOptionListPredicate {
	return func(e UintArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrOptionListPredicate) Or(p2 Uint8ArrOptionListPredicate) Uint8ArrOptionListPredicate {
	return func(e Uint8ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrOptionListPredicate) Or(p2 Uint16ArrOptionListPredicate) Uint16ArrOptionListPredicate {
	return func(e Uint16ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrOptionListPredicate) Or(p2 Uint32ArrOptionListPredicate) Uint32ArrOptionListPredicate {
	return func(e Uint32ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrOptionListPredicate) Or(p2 Uint64ArrOptionListPredicate) Uint64ArrOptionListPredicate {
	return func(e Uint64ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrOptionListPredicate) Or(p2 UintptrArrOptionListPredicate) UintptrArrOptionListPredicate {
	return func(e UintptrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrOptionListPredicate) Or(p2 ByteArrOptionListPredicate) ByteArrOptionListPredicate {
	return func(e ByteArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrOptionListPredicate) Or(p2 RuneArrOptionListPredicate) RuneArrOptionListPredicate {
	return func(e RuneArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrOptionListPredicate) Or(p2 Float32ArrOptionListPredicate) Float32ArrOptionListPredicate {
	return func(e Float32ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrOptionListPredicate) Or(p2 Float64ArrOptionListPredicate) Float64ArrOptionListPredicate {
	return func(e Float64ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrOptionListPredicate) Or(p2 Complex64ArrOptionListPredicate) Complex64ArrOptionListPredicate {
	return func(e Complex64ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrOptionListPredicate) Or(p2 Complex128ArrOptionListPredicate) Complex128ArrOptionListPredicate {
	return func(e Complex128ArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrOptionListPredicate) Or(p2 AnyArrOptionListPredicate) AnyArrOptionListPredicate {
	return func(e AnyArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrOptionListPredicate) Or(p2 BoolArrArrOptionListPredicate) BoolArrArrOptionListPredicate {
	return func(e BoolArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrOptionListPredicate) Or(p2 StringArrArrOptionListPredicate) StringArrArrOptionListPredicate {
	return func(e StringArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrOptionListPredicate) Or(p2 IntArrArrOptionListPredicate) IntArrArrOptionListPredicate {
	return func(e IntArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrOptionListPredicate) Or(p2 Int8ArrArrOptionListPredicate) Int8ArrArrOptionListPredicate {
	return func(e Int8ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrOptionListPredicate) Or(p2 Int16ArrArrOptionListPredicate) Int16ArrArrOptionListPredicate {
	return func(e Int16ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrOptionListPredicate) Or(p2 Int32ArrArrOptionListPredicate) Int32ArrArrOptionListPredicate {
	return func(e Int32ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrOptionListPredicate) Or(p2 Int64ArrArrOptionListPredicate) Int64ArrArrOptionListPredicate {
	return func(e Int64ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrOptionListPredicate) Or(p2 UintArrArrOptionListPredicate) UintArrArrOptionListPredicate {
	return func(e UintArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrOptionListPredicate) Or(p2 Uint8ArrArrOptionListPredicate) Uint8ArrArrOptionListPredicate {
	return func(e Uint8ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrOptionListPredicate) Or(p2 Uint16ArrArrOptionListPredicate) Uint16ArrArrOptionListPredicate {
	return func(e Uint16ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrOptionListPredicate) Or(p2 Uint32ArrArrOptionListPredicate) Uint32ArrArrOptionListPredicate {
	return func(e Uint32ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrOptionListPredicate) Or(p2 Uint64ArrArrOptionListPredicate) Uint64ArrArrOptionListPredicate {
	return func(e Uint64ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrOptionListPredicate) Or(p2 UintptrArrArrOptionListPredicate) UintptrArrArrOptionListPredicate {
	return func(e UintptrArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrOptionListPredicate) Or(p2 ByteArrArrOptionListPredicate) ByteArrArrOptionListPredicate {
	return func(e ByteArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrOptionListPredicate) Or(p2 RuneArrArrOptionListPredicate) RuneArrArrOptionListPredicate {
	return func(e RuneArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrOptionListPredicate) Or(p2 Float32ArrArrOptionListPredicate) Float32ArrArrOptionListPredicate {
	return func(e Float32ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrOptionListPredicate) Or(p2 Float64ArrArrOptionListPredicate) Float64ArrArrOptionListPredicate {
	return func(e Float64ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrOptionListPredicate) Or(p2 Complex64ArrArrOptionListPredicate) Complex64ArrArrOptionListPredicate {
	return func(e Complex64ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrOptionListPredicate) Or(p2 Complex128ArrArrOptionListPredicate) Complex128ArrArrOptionListPredicate {
	return func(e Complex128ArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrOptionListPredicate) Or(p2 AnyArrArrOptionListPredicate) AnyArrArrOptionListPredicate {
	return func(e AnyArrArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrOptionListPredicate) Or(p2 BoolOptionArrOptionListPredicate) BoolOptionArrOptionListPredicate {
	return func(e BoolOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrOptionListPredicate) Or(p2 StringOptionArrOptionListPredicate) StringOptionArrOptionListPredicate {
	return func(e StringOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrOptionListPredicate) Or(p2 IntOptionArrOptionListPredicate) IntOptionArrOptionListPredicate {
	return func(e IntOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrOptionListPredicate) Or(p2 Int8OptionArrOptionListPredicate) Int8OptionArrOptionListPredicate {
	return func(e Int8OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrOptionListPredicate) Or(p2 Int16OptionArrOptionListPredicate) Int16OptionArrOptionListPredicate {
	return func(e Int16OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrOptionListPredicate) Or(p2 Int32OptionArrOptionListPredicate) Int32OptionArrOptionListPredicate {
	return func(e Int32OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrOptionListPredicate) Or(p2 Int64OptionArrOptionListPredicate) Int64OptionArrOptionListPredicate {
	return func(e Int64OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrOptionListPredicate) Or(p2 UintOptionArrOptionListPredicate) UintOptionArrOptionListPredicate {
	return func(e UintOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrOptionListPredicate) Or(p2 Uint8OptionArrOptionListPredicate) Uint8OptionArrOptionListPredicate {
	return func(e Uint8OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrOptionListPredicate) Or(p2 Uint16OptionArrOptionListPredicate) Uint16OptionArrOptionListPredicate {
	return func(e Uint16OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrOptionListPredicate) Or(p2 Uint32OptionArrOptionListPredicate) Uint32OptionArrOptionListPredicate {
	return func(e Uint32OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrOptionListPredicate) Or(p2 Uint64OptionArrOptionListPredicate) Uint64OptionArrOptionListPredicate {
	return func(e Uint64OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrOptionListPredicate) Or(p2 UintptrOptionArrOptionListPredicate) UintptrOptionArrOptionListPredicate {
	return func(e UintptrOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrOptionListPredicate) Or(p2 ByteOptionArrOptionListPredicate) ByteOptionArrOptionListPredicate {
	return func(e ByteOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrOptionListPredicate) Or(p2 RuneOptionArrOptionListPredicate) RuneOptionArrOptionListPredicate {
	return func(e RuneOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrOptionListPredicate) Or(p2 Float32OptionArrOptionListPredicate) Float32OptionArrOptionListPredicate {
	return func(e Float32OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrOptionListPredicate) Or(p2 Float64OptionArrOptionListPredicate) Float64OptionArrOptionListPredicate {
	return func(e Float64OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrOptionListPredicate) Or(p2 Complex64OptionArrOptionListPredicate) Complex64OptionArrOptionListPredicate {
	return func(e Complex64OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrOptionListPredicate) Or(p2 Complex128OptionArrOptionListPredicate) Complex128OptionArrOptionListPredicate {
	return func(e Complex128OptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrOptionListPredicate) Or(p2 AnyOptionArrOptionListPredicate) AnyOptionArrOptionListPredicate {
	return func(e AnyOptionArrOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionListPredicate) Or(p2 BoolListOptionListPredicate) BoolListOptionListPredicate {
	return func(e BoolListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionListPredicate) Or(p2 StringListOptionListPredicate) StringListOptionListPredicate {
	return func(e StringListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionListPredicate) Or(p2 IntListOptionListPredicate) IntListOptionListPredicate {
	return func(e IntListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionListPredicate) Or(p2 Int8ListOptionListPredicate) Int8ListOptionListPredicate {
	return func(e Int8ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionListPredicate) Or(p2 Int16ListOptionListPredicate) Int16ListOptionListPredicate {
	return func(e Int16ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionListPredicate) Or(p2 Int32ListOptionListPredicate) Int32ListOptionListPredicate {
	return func(e Int32ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionListPredicate) Or(p2 Int64ListOptionListPredicate) Int64ListOptionListPredicate {
	return func(e Int64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionListPredicate) Or(p2 UintListOptionListPredicate) UintListOptionListPredicate {
	return func(e UintListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionListPredicate) Or(p2 Uint8ListOptionListPredicate) Uint8ListOptionListPredicate {
	return func(e Uint8ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionListPredicate) Or(p2 Uint16ListOptionListPredicate) Uint16ListOptionListPredicate {
	return func(e Uint16ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionListPredicate) Or(p2 Uint32ListOptionListPredicate) Uint32ListOptionListPredicate {
	return func(e Uint32ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionListPredicate) Or(p2 Uint64ListOptionListPredicate) Uint64ListOptionListPredicate {
	return func(e Uint64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionListPredicate) Or(p2 UintptrListOptionListPredicate) UintptrListOptionListPredicate {
	return func(e UintptrListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionListPredicate) Or(p2 ByteListOptionListPredicate) ByteListOptionListPredicate {
	return func(e ByteListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionListPredicate) Or(p2 RuneListOptionListPredicate) RuneListOptionListPredicate {
	return func(e RuneListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionListPredicate) Or(p2 Float32ListOptionListPredicate) Float32ListOptionListPredicate {
	return func(e Float32ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionListPredicate) Or(p2 Float64ListOptionListPredicate) Float64ListOptionListPredicate {
	return func(e Float64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionListPredicate) Or(p2 Complex64ListOptionListPredicate) Complex64ListOptionListPredicate {
	return func(e Complex64ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionListPredicate) Or(p2 Complex128ListOptionListPredicate) Complex128ListOptionListPredicate {
	return func(e Complex128ListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionListPredicate) Or(p2 AnyListOptionListPredicate) AnyListOptionListPredicate {
	return func(e AnyListOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionListPredicate) Or(p2 BoolOptionOptionListPredicate) BoolOptionOptionListPredicate {
	return func(e BoolOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionListPredicate) Or(p2 StringOptionOptionListPredicate) StringOptionOptionListPredicate {
	return func(e StringOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionListPredicate) Or(p2 IntOptionOptionListPredicate) IntOptionOptionListPredicate {
	return func(e IntOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionListPredicate) Or(p2 Int8OptionOptionListPredicate) Int8OptionOptionListPredicate {
	return func(e Int8OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionListPredicate) Or(p2 Int16OptionOptionListPredicate) Int16OptionOptionListPredicate {
	return func(e Int16OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionListPredicate) Or(p2 Int32OptionOptionListPredicate) Int32OptionOptionListPredicate {
	return func(e Int32OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionListPredicate) Or(p2 Int64OptionOptionListPredicate) Int64OptionOptionListPredicate {
	return func(e Int64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionListPredicate) Or(p2 UintOptionOptionListPredicate) UintOptionOptionListPredicate {
	return func(e UintOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionListPredicate) Or(p2 Uint8OptionOptionListPredicate) Uint8OptionOptionListPredicate {
	return func(e Uint8OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionListPredicate) Or(p2 Uint16OptionOptionListPredicate) Uint16OptionOptionListPredicate {
	return func(e Uint16OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionListPredicate) Or(p2 Uint32OptionOptionListPredicate) Uint32OptionOptionListPredicate {
	return func(e Uint32OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionListPredicate) Or(p2 Uint64OptionOptionListPredicate) Uint64OptionOptionListPredicate {
	return func(e Uint64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionListPredicate) Or(p2 UintptrOptionOptionListPredicate) UintptrOptionOptionListPredicate {
	return func(e UintptrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionListPredicate) Or(p2 ByteOptionOptionListPredicate) ByteOptionOptionListPredicate {
	return func(e ByteOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionListPredicate) Or(p2 RuneOptionOptionListPredicate) RuneOptionOptionListPredicate {
	return func(e RuneOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionListPredicate) Or(p2 Float32OptionOptionListPredicate) Float32OptionOptionListPredicate {
	return func(e Float32OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionListPredicate) Or(p2 Float64OptionOptionListPredicate) Float64OptionOptionListPredicate {
	return func(e Float64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionListPredicate) Or(p2 Complex64OptionOptionListPredicate) Complex64OptionOptionListPredicate {
	return func(e Complex64OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionListPredicate) Or(p2 Complex128OptionOptionListPredicate) Complex128OptionOptionListPredicate {
	return func(e Complex128OptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionListPredicate) Or(p2 AnyOptionOptionListPredicate) AnyOptionOptionListPredicate {
	return func(e AnyOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrOptionOptionListPredicate) Or(p2 BoolArrOptionOptionListPredicate) BoolArrOptionOptionListPredicate {
	return func(e BoolArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrOptionOptionListPredicate) Or(p2 StringArrOptionOptionListPredicate) StringArrOptionOptionListPredicate {
	return func(e StringArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrOptionOptionListPredicate) Or(p2 IntArrOptionOptionListPredicate) IntArrOptionOptionListPredicate {
	return func(e IntArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrOptionOptionListPredicate) Or(p2 Int8ArrOptionOptionListPredicate) Int8ArrOptionOptionListPredicate {
	return func(e Int8ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrOptionOptionListPredicate) Or(p2 Int16ArrOptionOptionListPredicate) Int16ArrOptionOptionListPredicate {
	return func(e Int16ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrOptionOptionListPredicate) Or(p2 Int32ArrOptionOptionListPredicate) Int32ArrOptionOptionListPredicate {
	return func(e Int32ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrOptionOptionListPredicate) Or(p2 Int64ArrOptionOptionListPredicate) Int64ArrOptionOptionListPredicate {
	return func(e Int64ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrOptionOptionListPredicate) Or(p2 UintArrOptionOptionListPredicate) UintArrOptionOptionListPredicate {
	return func(e UintArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrOptionOptionListPredicate) Or(p2 Uint8ArrOptionOptionListPredicate) Uint8ArrOptionOptionListPredicate {
	return func(e Uint8ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrOptionOptionListPredicate) Or(p2 Uint16ArrOptionOptionListPredicate) Uint16ArrOptionOptionListPredicate {
	return func(e Uint16ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrOptionOptionListPredicate) Or(p2 Uint32ArrOptionOptionListPredicate) Uint32ArrOptionOptionListPredicate {
	return func(e Uint32ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrOptionOptionListPredicate) Or(p2 Uint64ArrOptionOptionListPredicate) Uint64ArrOptionOptionListPredicate {
	return func(e Uint64ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrOptionOptionListPredicate) Or(p2 UintptrArrOptionOptionListPredicate) UintptrArrOptionOptionListPredicate {
	return func(e UintptrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrOptionOptionListPredicate) Or(p2 ByteArrOptionOptionListPredicate) ByteArrOptionOptionListPredicate {
	return func(e ByteArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrOptionOptionListPredicate) Or(p2 RuneArrOptionOptionListPredicate) RuneArrOptionOptionListPredicate {
	return func(e RuneArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrOptionOptionListPredicate) Or(p2 Float32ArrOptionOptionListPredicate) Float32ArrOptionOptionListPredicate {
	return func(e Float32ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrOptionOptionListPredicate) Or(p2 Float64ArrOptionOptionListPredicate) Float64ArrOptionOptionListPredicate {
	return func(e Float64ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrOptionOptionListPredicate) Or(p2 Complex64ArrOptionOptionListPredicate) Complex64ArrOptionOptionListPredicate {
	return func(e Complex64ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrOptionOptionListPredicate) Or(p2 Complex128ArrOptionOptionListPredicate) Complex128ArrOptionOptionListPredicate {
	return func(e Complex128ArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrOptionOptionListPredicate) Or(p2 AnyArrOptionOptionListPredicate) AnyArrOptionOptionListPredicate {
	return func(e AnyArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrOptionOptionListPredicate) Or(p2 BoolArrArrOptionOptionListPredicate) BoolArrArrOptionOptionListPredicate {
	return func(e BoolArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrOptionOptionListPredicate) Or(p2 StringArrArrOptionOptionListPredicate) StringArrArrOptionOptionListPredicate {
	return func(e StringArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrOptionOptionListPredicate) Or(p2 IntArrArrOptionOptionListPredicate) IntArrArrOptionOptionListPredicate {
	return func(e IntArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrOptionOptionListPredicate) Or(p2 Int8ArrArrOptionOptionListPredicate) Int8ArrArrOptionOptionListPredicate {
	return func(e Int8ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrOptionOptionListPredicate) Or(p2 Int16ArrArrOptionOptionListPredicate) Int16ArrArrOptionOptionListPredicate {
	return func(e Int16ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrOptionOptionListPredicate) Or(p2 Int32ArrArrOptionOptionListPredicate) Int32ArrArrOptionOptionListPredicate {
	return func(e Int32ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrOptionOptionListPredicate) Or(p2 Int64ArrArrOptionOptionListPredicate) Int64ArrArrOptionOptionListPredicate {
	return func(e Int64ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrOptionOptionListPredicate) Or(p2 UintArrArrOptionOptionListPredicate) UintArrArrOptionOptionListPredicate {
	return func(e UintArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrOptionOptionListPredicate) Or(p2 Uint8ArrArrOptionOptionListPredicate) Uint8ArrArrOptionOptionListPredicate {
	return func(e Uint8ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrOptionOptionListPredicate) Or(p2 Uint16ArrArrOptionOptionListPredicate) Uint16ArrArrOptionOptionListPredicate {
	return func(e Uint16ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrOptionOptionListPredicate) Or(p2 Uint32ArrArrOptionOptionListPredicate) Uint32ArrArrOptionOptionListPredicate {
	return func(e Uint32ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrOptionOptionListPredicate) Or(p2 Uint64ArrArrOptionOptionListPredicate) Uint64ArrArrOptionOptionListPredicate {
	return func(e Uint64ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrOptionOptionListPredicate) Or(p2 UintptrArrArrOptionOptionListPredicate) UintptrArrArrOptionOptionListPredicate {
	return func(e UintptrArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrOptionOptionListPredicate) Or(p2 ByteArrArrOptionOptionListPredicate) ByteArrArrOptionOptionListPredicate {
	return func(e ByteArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrOptionOptionListPredicate) Or(p2 RuneArrArrOptionOptionListPredicate) RuneArrArrOptionOptionListPredicate {
	return func(e RuneArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrOptionOptionListPredicate) Or(p2 Float32ArrArrOptionOptionListPredicate) Float32ArrArrOptionOptionListPredicate {
	return func(e Float32ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrOptionOptionListPredicate) Or(p2 Float64ArrArrOptionOptionListPredicate) Float64ArrArrOptionOptionListPredicate {
	return func(e Float64ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrOptionOptionListPredicate) Or(p2 Complex64ArrArrOptionOptionListPredicate) Complex64ArrArrOptionOptionListPredicate {
	return func(e Complex64ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrOptionOptionListPredicate) Or(p2 Complex128ArrArrOptionOptionListPredicate) Complex128ArrArrOptionOptionListPredicate {
	return func(e Complex128ArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrOptionOptionListPredicate) Or(p2 AnyArrArrOptionOptionListPredicate) AnyArrArrOptionOptionListPredicate {
	return func(e AnyArrArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrOptionOptionListPredicate) Or(p2 BoolOptionArrOptionOptionListPredicate) BoolOptionArrOptionOptionListPredicate {
	return func(e BoolOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrOptionOptionListPredicate) Or(p2 StringOptionArrOptionOptionListPredicate) StringOptionArrOptionOptionListPredicate {
	return func(e StringOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrOptionOptionListPredicate) Or(p2 IntOptionArrOptionOptionListPredicate) IntOptionArrOptionOptionListPredicate {
	return func(e IntOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrOptionOptionListPredicate) Or(p2 Int8OptionArrOptionOptionListPredicate) Int8OptionArrOptionOptionListPredicate {
	return func(e Int8OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrOptionOptionListPredicate) Or(p2 Int16OptionArrOptionOptionListPredicate) Int16OptionArrOptionOptionListPredicate {
	return func(e Int16OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrOptionOptionListPredicate) Or(p2 Int32OptionArrOptionOptionListPredicate) Int32OptionArrOptionOptionListPredicate {
	return func(e Int32OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrOptionOptionListPredicate) Or(p2 Int64OptionArrOptionOptionListPredicate) Int64OptionArrOptionOptionListPredicate {
	return func(e Int64OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrOptionOptionListPredicate) Or(p2 UintOptionArrOptionOptionListPredicate) UintOptionArrOptionOptionListPredicate {
	return func(e UintOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrOptionOptionListPredicate) Or(p2 Uint8OptionArrOptionOptionListPredicate) Uint8OptionArrOptionOptionListPredicate {
	return func(e Uint8OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrOptionOptionListPredicate) Or(p2 Uint16OptionArrOptionOptionListPredicate) Uint16OptionArrOptionOptionListPredicate {
	return func(e Uint16OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrOptionOptionListPredicate) Or(p2 Uint32OptionArrOptionOptionListPredicate) Uint32OptionArrOptionOptionListPredicate {
	return func(e Uint32OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrOptionOptionListPredicate) Or(p2 Uint64OptionArrOptionOptionListPredicate) Uint64OptionArrOptionOptionListPredicate {
	return func(e Uint64OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrOptionOptionListPredicate) Or(p2 UintptrOptionArrOptionOptionListPredicate) UintptrOptionArrOptionOptionListPredicate {
	return func(e UintptrOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrOptionOptionListPredicate) Or(p2 ByteOptionArrOptionOptionListPredicate) ByteOptionArrOptionOptionListPredicate {
	return func(e ByteOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrOptionOptionListPredicate) Or(p2 RuneOptionArrOptionOptionListPredicate) RuneOptionArrOptionOptionListPredicate {
	return func(e RuneOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrOptionOptionListPredicate) Or(p2 Float32OptionArrOptionOptionListPredicate) Float32OptionArrOptionOptionListPredicate {
	return func(e Float32OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrOptionOptionListPredicate) Or(p2 Float64OptionArrOptionOptionListPredicate) Float64OptionArrOptionOptionListPredicate {
	return func(e Float64OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrOptionOptionListPredicate) Or(p2 Complex64OptionArrOptionOptionListPredicate) Complex64OptionArrOptionOptionListPredicate {
	return func(e Complex64OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrOptionOptionListPredicate) Or(p2 Complex128OptionArrOptionOptionListPredicate) Complex128OptionArrOptionOptionListPredicate {
	return func(e Complex128OptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrOptionOptionListPredicate) Or(p2 AnyOptionArrOptionOptionListPredicate) AnyOptionArrOptionOptionListPredicate {
	return func(e AnyOptionArrOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionListPredicate) Or(p2 BoolListOptionOptionListPredicate) BoolListOptionOptionListPredicate {
	return func(e BoolListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionListPredicate) Or(p2 StringListOptionOptionListPredicate) StringListOptionOptionListPredicate {
	return func(e StringListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionListPredicate) Or(p2 IntListOptionOptionListPredicate) IntListOptionOptionListPredicate {
	return func(e IntListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionListPredicate) Or(p2 Int8ListOptionOptionListPredicate) Int8ListOptionOptionListPredicate {
	return func(e Int8ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionListPredicate) Or(p2 Int16ListOptionOptionListPredicate) Int16ListOptionOptionListPredicate {
	return func(e Int16ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionListPredicate) Or(p2 Int32ListOptionOptionListPredicate) Int32ListOptionOptionListPredicate {
	return func(e Int32ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionListPredicate) Or(p2 Int64ListOptionOptionListPredicate) Int64ListOptionOptionListPredicate {
	return func(e Int64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionListPredicate) Or(p2 UintListOptionOptionListPredicate) UintListOptionOptionListPredicate {
	return func(e UintListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionListPredicate) Or(p2 Uint8ListOptionOptionListPredicate) Uint8ListOptionOptionListPredicate {
	return func(e Uint8ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionListPredicate) Or(p2 Uint16ListOptionOptionListPredicate) Uint16ListOptionOptionListPredicate {
	return func(e Uint16ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionListPredicate) Or(p2 Uint32ListOptionOptionListPredicate) Uint32ListOptionOptionListPredicate {
	return func(e Uint32ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionListPredicate) Or(p2 Uint64ListOptionOptionListPredicate) Uint64ListOptionOptionListPredicate {
	return func(e Uint64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionListPredicate) Or(p2 UintptrListOptionOptionListPredicate) UintptrListOptionOptionListPredicate {
	return func(e UintptrListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionListPredicate) Or(p2 ByteListOptionOptionListPredicate) ByteListOptionOptionListPredicate {
	return func(e ByteListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionListPredicate) Or(p2 RuneListOptionOptionListPredicate) RuneListOptionOptionListPredicate {
	return func(e RuneListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionListPredicate) Or(p2 Float32ListOptionOptionListPredicate) Float32ListOptionOptionListPredicate {
	return func(e Float32ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionListPredicate) Or(p2 Float64ListOptionOptionListPredicate) Float64ListOptionOptionListPredicate {
	return func(e Float64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionListPredicate) Or(p2 Complex64ListOptionOptionListPredicate) Complex64ListOptionOptionListPredicate {
	return func(e Complex64ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionListPredicate) Or(p2 Complex128ListOptionOptionListPredicate) Complex128ListOptionOptionListPredicate {
	return func(e Complex128ListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionListPredicate) Or(p2 AnyListOptionOptionListPredicate) AnyListOptionOptionListPredicate {
	return func(e AnyListOptionOptionList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrListPredicate) Or(p2 BoolArrListPredicate) BoolArrListPredicate {
	return func(e BoolArrList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrListPredicate) Or(p2 StringArrListPredicate) StringArrListPredicate {
	return func(e StringArrList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrListPredicate) Or(p2 IntArrListPredicate) IntArrListPredicate {
	return func(e IntArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrListPredicate) Or(p2 Int8ArrListPredicate) Int8ArrListPredicate {
	return func(e Int8ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrListPredicate) Or(p2 Int16ArrListPredicate) Int16ArrListPredicate {
	return func(e Int16ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrListPredicate) Or(p2 Int32ArrListPredicate) Int32ArrListPredicate {
	return func(e Int32ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrListPredicate) Or(p2 Int64ArrListPredicate) Int64ArrListPredicate {
	return func(e Int64ArrList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrListPredicate) Or(p2 UintArrListPredicate) UintArrListPredicate {
	return func(e UintArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrListPredicate) Or(p2 Uint8ArrListPredicate) Uint8ArrListPredicate {
	return func(e Uint8ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrListPredicate) Or(p2 Uint16ArrListPredicate) Uint16ArrListPredicate {
	return func(e Uint16ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrListPredicate) Or(p2 Uint32ArrListPredicate) Uint32ArrListPredicate {
	return func(e Uint32ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrListPredicate) Or(p2 Uint64ArrListPredicate) Uint64ArrListPredicate {
	return func(e Uint64ArrList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrListPredicate) Or(p2 UintptrArrListPredicate) UintptrArrListPredicate {
	return func(e UintptrArrList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrListPredicate) Or(p2 ByteArrListPredicate) ByteArrListPredicate {
	return func(e ByteArrList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrListPredicate) Or(p2 RuneArrListPredicate) RuneArrListPredicate {
	return func(e RuneArrList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrListPredicate) Or(p2 Float32ArrListPredicate) Float32ArrListPredicate {
	return func(e Float32ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrListPredicate) Or(p2 Float64ArrListPredicate) Float64ArrListPredicate {
	return func(e Float64ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrListPredicate) Or(p2 Complex64ArrListPredicate) Complex64ArrListPredicate {
	return func(e Complex64ArrList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrListPredicate) Or(p2 Complex128ArrListPredicate) Complex128ArrListPredicate {
	return func(e Complex128ArrList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrListPredicate) Or(p2 AnyArrListPredicate) AnyArrListPredicate {
	return func(e AnyArrList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrListPredicate) Or(p2 BoolArrArrListPredicate) BoolArrArrListPredicate {
	return func(e BoolArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrListPredicate) Or(p2 StringArrArrListPredicate) StringArrArrListPredicate {
	return func(e StringArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrListPredicate) Or(p2 IntArrArrListPredicate) IntArrArrListPredicate {
	return func(e IntArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrListPredicate) Or(p2 Int8ArrArrListPredicate) Int8ArrArrListPredicate {
	return func(e Int8ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrListPredicate) Or(p2 Int16ArrArrListPredicate) Int16ArrArrListPredicate {
	return func(e Int16ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrListPredicate) Or(p2 Int32ArrArrListPredicate) Int32ArrArrListPredicate {
	return func(e Int32ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrListPredicate) Or(p2 Int64ArrArrListPredicate) Int64ArrArrListPredicate {
	return func(e Int64ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrListPredicate) Or(p2 UintArrArrListPredicate) UintArrArrListPredicate {
	return func(e UintArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrListPredicate) Or(p2 Uint8ArrArrListPredicate) Uint8ArrArrListPredicate {
	return func(e Uint8ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrListPredicate) Or(p2 Uint16ArrArrListPredicate) Uint16ArrArrListPredicate {
	return func(e Uint16ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrListPredicate) Or(p2 Uint32ArrArrListPredicate) Uint32ArrArrListPredicate {
	return func(e Uint32ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrListPredicate) Or(p2 Uint64ArrArrListPredicate) Uint64ArrArrListPredicate {
	return func(e Uint64ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrListPredicate) Or(p2 UintptrArrArrListPredicate) UintptrArrArrListPredicate {
	return func(e UintptrArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrListPredicate) Or(p2 ByteArrArrListPredicate) ByteArrArrListPredicate {
	return func(e ByteArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrListPredicate) Or(p2 RuneArrArrListPredicate) RuneArrArrListPredicate {
	return func(e RuneArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrListPredicate) Or(p2 Float32ArrArrListPredicate) Float32ArrArrListPredicate {
	return func(e Float32ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrListPredicate) Or(p2 Float64ArrArrListPredicate) Float64ArrArrListPredicate {
	return func(e Float64ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrListPredicate) Or(p2 Complex64ArrArrListPredicate) Complex64ArrArrListPredicate {
	return func(e Complex64ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrListPredicate) Or(p2 Complex128ArrArrListPredicate) Complex128ArrArrListPredicate {
	return func(e Complex128ArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrListPredicate) Or(p2 AnyArrArrListPredicate) AnyArrArrListPredicate {
	return func(e AnyArrArrList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrListPredicate) Or(p2 BoolOptionArrListPredicate) BoolOptionArrListPredicate {
	return func(e BoolOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrListPredicate) Or(p2 StringOptionArrListPredicate) StringOptionArrListPredicate {
	return func(e StringOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrListPredicate) Or(p2 IntOptionArrListPredicate) IntOptionArrListPredicate {
	return func(e IntOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrListPredicate) Or(p2 Int8OptionArrListPredicate) Int8OptionArrListPredicate {
	return func(e Int8OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrListPredicate) Or(p2 Int16OptionArrListPredicate) Int16OptionArrListPredicate {
	return func(e Int16OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrListPredicate) Or(p2 Int32OptionArrListPredicate) Int32OptionArrListPredicate {
	return func(e Int32OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrListPredicate) Or(p2 Int64OptionArrListPredicate) Int64OptionArrListPredicate {
	return func(e Int64OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrListPredicate) Or(p2 UintOptionArrListPredicate) UintOptionArrListPredicate {
	return func(e UintOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrListPredicate) Or(p2 Uint8OptionArrListPredicate) Uint8OptionArrListPredicate {
	return func(e Uint8OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrListPredicate) Or(p2 Uint16OptionArrListPredicate) Uint16OptionArrListPredicate {
	return func(e Uint16OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrListPredicate) Or(p2 Uint32OptionArrListPredicate) Uint32OptionArrListPredicate {
	return func(e Uint32OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrListPredicate) Or(p2 Uint64OptionArrListPredicate) Uint64OptionArrListPredicate {
	return func(e Uint64OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrListPredicate) Or(p2 UintptrOptionArrListPredicate) UintptrOptionArrListPredicate {
	return func(e UintptrOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrListPredicate) Or(p2 ByteOptionArrListPredicate) ByteOptionArrListPredicate {
	return func(e ByteOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrListPredicate) Or(p2 RuneOptionArrListPredicate) RuneOptionArrListPredicate {
	return func(e RuneOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrListPredicate) Or(p2 Float32OptionArrListPredicate) Float32OptionArrListPredicate {
	return func(e Float32OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrListPredicate) Or(p2 Float64OptionArrListPredicate) Float64OptionArrListPredicate {
	return func(e Float64OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrListPredicate) Or(p2 Complex64OptionArrListPredicate) Complex64OptionArrListPredicate {
	return func(e Complex64OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrListPredicate) Or(p2 Complex128OptionArrListPredicate) Complex128OptionArrListPredicate {
	return func(e Complex128OptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrListPredicate) Or(p2 AnyOptionArrListPredicate) AnyOptionArrListPredicate {
	return func(e AnyOptionArrList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListListPredicate) Or(p2 BoolListListPredicate) BoolListListPredicate {
	return func(e BoolListList) bool { return p1(e) || p2(e) }
}
func (p1 StringListListPredicate) Or(p2 StringListListPredicate) StringListListPredicate {
	return func(e StringListList) bool { return p1(e) || p2(e) }
}
func (p1 IntListListPredicate) Or(p2 IntListListPredicate) IntListListPredicate {
	return func(e IntListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListListPredicate) Or(p2 Int8ListListPredicate) Int8ListListPredicate {
	return func(e Int8ListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListListPredicate) Or(p2 Int16ListListPredicate) Int16ListListPredicate {
	return func(e Int16ListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListListPredicate) Or(p2 Int32ListListPredicate) Int32ListListPredicate {
	return func(e Int32ListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListListPredicate) Or(p2 Int64ListListPredicate) Int64ListListPredicate {
	return func(e Int64ListList) bool { return p1(e) || p2(e) }
}
func (p1 UintListListPredicate) Or(p2 UintListListPredicate) UintListListPredicate {
	return func(e UintListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListListPredicate) Or(p2 Uint8ListListPredicate) Uint8ListListPredicate {
	return func(e Uint8ListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListListPredicate) Or(p2 Uint16ListListPredicate) Uint16ListListPredicate {
	return func(e Uint16ListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListListPredicate) Or(p2 Uint32ListListPredicate) Uint32ListListPredicate {
	return func(e Uint32ListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListListPredicate) Or(p2 Uint64ListListPredicate) Uint64ListListPredicate {
	return func(e Uint64ListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListListPredicate) Or(p2 UintptrListListPredicate) UintptrListListPredicate {
	return func(e UintptrListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListListPredicate) Or(p2 ByteListListPredicate) ByteListListPredicate {
	return func(e ByteListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListListPredicate) Or(p2 RuneListListPredicate) RuneListListPredicate {
	return func(e RuneListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListListPredicate) Or(p2 Float32ListListPredicate) Float32ListListPredicate {
	return func(e Float32ListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListListPredicate) Or(p2 Float64ListListPredicate) Float64ListListPredicate {
	return func(e Float64ListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListListPredicate) Or(p2 Complex64ListListPredicate) Complex64ListListPredicate {
	return func(e Complex64ListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListListPredicate) Or(p2 Complex128ListListPredicate) Complex128ListListPredicate {
	return func(e Complex128ListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListListPredicate) Or(p2 AnyListListPredicate) AnyListListPredicate {
	return func(e AnyListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionListListPredicate) Or(p2 BoolOptionListListPredicate) BoolOptionListListPredicate {
	return func(e BoolOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionListListPredicate) Or(p2 StringOptionListListPredicate) StringOptionListListPredicate {
	return func(e StringOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionListListPredicate) Or(p2 IntOptionListListPredicate) IntOptionListListPredicate {
	return func(e IntOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionListListPredicate) Or(p2 Int8OptionListListPredicate) Int8OptionListListPredicate {
	return func(e Int8OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionListListPredicate) Or(p2 Int16OptionListListPredicate) Int16OptionListListPredicate {
	return func(e Int16OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionListListPredicate) Or(p2 Int32OptionListListPredicate) Int32OptionListListPredicate {
	return func(e Int32OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionListListPredicate) Or(p2 Int64OptionListListPredicate) Int64OptionListListPredicate {
	return func(e Int64OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionListListPredicate) Or(p2 UintOptionListListPredicate) UintOptionListListPredicate {
	return func(e UintOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionListListPredicate) Or(p2 Uint8OptionListListPredicate) Uint8OptionListListPredicate {
	return func(e Uint8OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionListListPredicate) Or(p2 Uint16OptionListListPredicate) Uint16OptionListListPredicate {
	return func(e Uint16OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionListListPredicate) Or(p2 Uint32OptionListListPredicate) Uint32OptionListListPredicate {
	return func(e Uint32OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionListListPredicate) Or(p2 Uint64OptionListListPredicate) Uint64OptionListListPredicate {
	return func(e Uint64OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionListListPredicate) Or(p2 UintptrOptionListListPredicate) UintptrOptionListListPredicate {
	return func(e UintptrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionListListPredicate) Or(p2 ByteOptionListListPredicate) ByteOptionListListPredicate {
	return func(e ByteOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionListListPredicate) Or(p2 RuneOptionListListPredicate) RuneOptionListListPredicate {
	return func(e RuneOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionListListPredicate) Or(p2 Float32OptionListListPredicate) Float32OptionListListPredicate {
	return func(e Float32OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionListListPredicate) Or(p2 Float64OptionListListPredicate) Float64OptionListListPredicate {
	return func(e Float64OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionListListPredicate) Or(p2 Complex64OptionListListPredicate) Complex64OptionListListPredicate {
	return func(e Complex64OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionListListPredicate) Or(p2 Complex128OptionListListPredicate) Complex128OptionListListPredicate {
	return func(e Complex128OptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionListListPredicate) Or(p2 AnyOptionListListPredicate) AnyOptionListListPredicate {
	return func(e AnyOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrOptionListListPredicate) Or(p2 BoolArrOptionListListPredicate) BoolArrOptionListListPredicate {
	return func(e BoolArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrOptionListListPredicate) Or(p2 StringArrOptionListListPredicate) StringArrOptionListListPredicate {
	return func(e StringArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrOptionListListPredicate) Or(p2 IntArrOptionListListPredicate) IntArrOptionListListPredicate {
	return func(e IntArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrOptionListListPredicate) Or(p2 Int8ArrOptionListListPredicate) Int8ArrOptionListListPredicate {
	return func(e Int8ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrOptionListListPredicate) Or(p2 Int16ArrOptionListListPredicate) Int16ArrOptionListListPredicate {
	return func(e Int16ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrOptionListListPredicate) Or(p2 Int32ArrOptionListListPredicate) Int32ArrOptionListListPredicate {
	return func(e Int32ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrOptionListListPredicate) Or(p2 Int64ArrOptionListListPredicate) Int64ArrOptionListListPredicate {
	return func(e Int64ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrOptionListListPredicate) Or(p2 UintArrOptionListListPredicate) UintArrOptionListListPredicate {
	return func(e UintArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrOptionListListPredicate) Or(p2 Uint8ArrOptionListListPredicate) Uint8ArrOptionListListPredicate {
	return func(e Uint8ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrOptionListListPredicate) Or(p2 Uint16ArrOptionListListPredicate) Uint16ArrOptionListListPredicate {
	return func(e Uint16ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrOptionListListPredicate) Or(p2 Uint32ArrOptionListListPredicate) Uint32ArrOptionListListPredicate {
	return func(e Uint32ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrOptionListListPredicate) Or(p2 Uint64ArrOptionListListPredicate) Uint64ArrOptionListListPredicate {
	return func(e Uint64ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrOptionListListPredicate) Or(p2 UintptrArrOptionListListPredicate) UintptrArrOptionListListPredicate {
	return func(e UintptrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrOptionListListPredicate) Or(p2 ByteArrOptionListListPredicate) ByteArrOptionListListPredicate {
	return func(e ByteArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrOptionListListPredicate) Or(p2 RuneArrOptionListListPredicate) RuneArrOptionListListPredicate {
	return func(e RuneArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrOptionListListPredicate) Or(p2 Float32ArrOptionListListPredicate) Float32ArrOptionListListPredicate {
	return func(e Float32ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrOptionListListPredicate) Or(p2 Float64ArrOptionListListPredicate) Float64ArrOptionListListPredicate {
	return func(e Float64ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrOptionListListPredicate) Or(p2 Complex64ArrOptionListListPredicate) Complex64ArrOptionListListPredicate {
	return func(e Complex64ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrOptionListListPredicate) Or(p2 Complex128ArrOptionListListPredicate) Complex128ArrOptionListListPredicate {
	return func(e Complex128ArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrOptionListListPredicate) Or(p2 AnyArrOptionListListPredicate) AnyArrOptionListListPredicate {
	return func(e AnyArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrOptionListListPredicate) Or(p2 BoolArrArrOptionListListPredicate) BoolArrArrOptionListListPredicate {
	return func(e BoolArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrOptionListListPredicate) Or(p2 StringArrArrOptionListListPredicate) StringArrArrOptionListListPredicate {
	return func(e StringArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrOptionListListPredicate) Or(p2 IntArrArrOptionListListPredicate) IntArrArrOptionListListPredicate {
	return func(e IntArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrOptionListListPredicate) Or(p2 Int8ArrArrOptionListListPredicate) Int8ArrArrOptionListListPredicate {
	return func(e Int8ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrOptionListListPredicate) Or(p2 Int16ArrArrOptionListListPredicate) Int16ArrArrOptionListListPredicate {
	return func(e Int16ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrOptionListListPredicate) Or(p2 Int32ArrArrOptionListListPredicate) Int32ArrArrOptionListListPredicate {
	return func(e Int32ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrOptionListListPredicate) Or(p2 Int64ArrArrOptionListListPredicate) Int64ArrArrOptionListListPredicate {
	return func(e Int64ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrOptionListListPredicate) Or(p2 UintArrArrOptionListListPredicate) UintArrArrOptionListListPredicate {
	return func(e UintArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrOptionListListPredicate) Or(p2 Uint8ArrArrOptionListListPredicate) Uint8ArrArrOptionListListPredicate {
	return func(e Uint8ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrOptionListListPredicate) Or(p2 Uint16ArrArrOptionListListPredicate) Uint16ArrArrOptionListListPredicate {
	return func(e Uint16ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrOptionListListPredicate) Or(p2 Uint32ArrArrOptionListListPredicate) Uint32ArrArrOptionListListPredicate {
	return func(e Uint32ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrOptionListListPredicate) Or(p2 Uint64ArrArrOptionListListPredicate) Uint64ArrArrOptionListListPredicate {
	return func(e Uint64ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrOptionListListPredicate) Or(p2 UintptrArrArrOptionListListPredicate) UintptrArrArrOptionListListPredicate {
	return func(e UintptrArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrOptionListListPredicate) Or(p2 ByteArrArrOptionListListPredicate) ByteArrArrOptionListListPredicate {
	return func(e ByteArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrOptionListListPredicate) Or(p2 RuneArrArrOptionListListPredicate) RuneArrArrOptionListListPredicate {
	return func(e RuneArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrOptionListListPredicate) Or(p2 Float32ArrArrOptionListListPredicate) Float32ArrArrOptionListListPredicate {
	return func(e Float32ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrOptionListListPredicate) Or(p2 Float64ArrArrOptionListListPredicate) Float64ArrArrOptionListListPredicate {
	return func(e Float64ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrOptionListListPredicate) Or(p2 Complex64ArrArrOptionListListPredicate) Complex64ArrArrOptionListListPredicate {
	return func(e Complex64ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrOptionListListPredicate) Or(p2 Complex128ArrArrOptionListListPredicate) Complex128ArrArrOptionListListPredicate {
	return func(e Complex128ArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrOptionListListPredicate) Or(p2 AnyArrArrOptionListListPredicate) AnyArrArrOptionListListPredicate {
	return func(e AnyArrArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrOptionListListPredicate) Or(p2 BoolOptionArrOptionListListPredicate) BoolOptionArrOptionListListPredicate {
	return func(e BoolOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrOptionListListPredicate) Or(p2 StringOptionArrOptionListListPredicate) StringOptionArrOptionListListPredicate {
	return func(e StringOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrOptionListListPredicate) Or(p2 IntOptionArrOptionListListPredicate) IntOptionArrOptionListListPredicate {
	return func(e IntOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrOptionListListPredicate) Or(p2 Int8OptionArrOptionListListPredicate) Int8OptionArrOptionListListPredicate {
	return func(e Int8OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrOptionListListPredicate) Or(p2 Int16OptionArrOptionListListPredicate) Int16OptionArrOptionListListPredicate {
	return func(e Int16OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrOptionListListPredicate) Or(p2 Int32OptionArrOptionListListPredicate) Int32OptionArrOptionListListPredicate {
	return func(e Int32OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrOptionListListPredicate) Or(p2 Int64OptionArrOptionListListPredicate) Int64OptionArrOptionListListPredicate {
	return func(e Int64OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrOptionListListPredicate) Or(p2 UintOptionArrOptionListListPredicate) UintOptionArrOptionListListPredicate {
	return func(e UintOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrOptionListListPredicate) Or(p2 Uint8OptionArrOptionListListPredicate) Uint8OptionArrOptionListListPredicate {
	return func(e Uint8OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrOptionListListPredicate) Or(p2 Uint16OptionArrOptionListListPredicate) Uint16OptionArrOptionListListPredicate {
	return func(e Uint16OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrOptionListListPredicate) Or(p2 Uint32OptionArrOptionListListPredicate) Uint32OptionArrOptionListListPredicate {
	return func(e Uint32OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrOptionListListPredicate) Or(p2 Uint64OptionArrOptionListListPredicate) Uint64OptionArrOptionListListPredicate {
	return func(e Uint64OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrOptionListListPredicate) Or(p2 UintptrOptionArrOptionListListPredicate) UintptrOptionArrOptionListListPredicate {
	return func(e UintptrOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrOptionListListPredicate) Or(p2 ByteOptionArrOptionListListPredicate) ByteOptionArrOptionListListPredicate {
	return func(e ByteOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrOptionListListPredicate) Or(p2 RuneOptionArrOptionListListPredicate) RuneOptionArrOptionListListPredicate {
	return func(e RuneOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrOptionListListPredicate) Or(p2 Float32OptionArrOptionListListPredicate) Float32OptionArrOptionListListPredicate {
	return func(e Float32OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrOptionListListPredicate) Or(p2 Float64OptionArrOptionListListPredicate) Float64OptionArrOptionListListPredicate {
	return func(e Float64OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrOptionListListPredicate) Or(p2 Complex64OptionArrOptionListListPredicate) Complex64OptionArrOptionListListPredicate {
	return func(e Complex64OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrOptionListListPredicate) Or(p2 Complex128OptionArrOptionListListPredicate) Complex128OptionArrOptionListListPredicate {
	return func(e Complex128OptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrOptionListListPredicate) Or(p2 AnyOptionArrOptionListListPredicate) AnyOptionArrOptionListListPredicate {
	return func(e AnyOptionArrOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionListListPredicate) Or(p2 BoolListOptionListListPredicate) BoolListOptionListListPredicate {
	return func(e BoolListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionListListPredicate) Or(p2 StringListOptionListListPredicate) StringListOptionListListPredicate {
	return func(e StringListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionListListPredicate) Or(p2 IntListOptionListListPredicate) IntListOptionListListPredicate {
	return func(e IntListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionListListPredicate) Or(p2 Int8ListOptionListListPredicate) Int8ListOptionListListPredicate {
	return func(e Int8ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionListListPredicate) Or(p2 Int16ListOptionListListPredicate) Int16ListOptionListListPredicate {
	return func(e Int16ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionListListPredicate) Or(p2 Int32ListOptionListListPredicate) Int32ListOptionListListPredicate {
	return func(e Int32ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionListListPredicate) Or(p2 Int64ListOptionListListPredicate) Int64ListOptionListListPredicate {
	return func(e Int64ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionListListPredicate) Or(p2 UintListOptionListListPredicate) UintListOptionListListPredicate {
	return func(e UintListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionListListPredicate) Or(p2 Uint8ListOptionListListPredicate) Uint8ListOptionListListPredicate {
	return func(e Uint8ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionListListPredicate) Or(p2 Uint16ListOptionListListPredicate) Uint16ListOptionListListPredicate {
	return func(e Uint16ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionListListPredicate) Or(p2 Uint32ListOptionListListPredicate) Uint32ListOptionListListPredicate {
	return func(e Uint32ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionListListPredicate) Or(p2 Uint64ListOptionListListPredicate) Uint64ListOptionListListPredicate {
	return func(e Uint64ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionListListPredicate) Or(p2 UintptrListOptionListListPredicate) UintptrListOptionListListPredicate {
	return func(e UintptrListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionListListPredicate) Or(p2 ByteListOptionListListPredicate) ByteListOptionListListPredicate {
	return func(e ByteListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionListListPredicate) Or(p2 RuneListOptionListListPredicate) RuneListOptionListListPredicate {
	return func(e RuneListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionListListPredicate) Or(p2 Float32ListOptionListListPredicate) Float32ListOptionListListPredicate {
	return func(e Float32ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionListListPredicate) Or(p2 Float64ListOptionListListPredicate) Float64ListOptionListListPredicate {
	return func(e Float64ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionListListPredicate) Or(p2 Complex64ListOptionListListPredicate) Complex64ListOptionListListPredicate {
	return func(e Complex64ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionListListPredicate) Or(p2 Complex128ListOptionListListPredicate) Complex128ListOptionListListPredicate {
	return func(e Complex128ListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionListListPredicate) Or(p2 AnyListOptionListListPredicate) AnyListOptionListListPredicate {
	return func(e AnyListOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionOptionListListPredicate) Or(p2 BoolOptionOptionListListPredicate) BoolOptionOptionListListPredicate {
	return func(e BoolOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionOptionListListPredicate) Or(p2 StringOptionOptionListListPredicate) StringOptionOptionListListPredicate {
	return func(e StringOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionOptionListListPredicate) Or(p2 IntOptionOptionListListPredicate) IntOptionOptionListListPredicate {
	return func(e IntOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionOptionListListPredicate) Or(p2 Int8OptionOptionListListPredicate) Int8OptionOptionListListPredicate {
	return func(e Int8OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionOptionListListPredicate) Or(p2 Int16OptionOptionListListPredicate) Int16OptionOptionListListPredicate {
	return func(e Int16OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionOptionListListPredicate) Or(p2 Int32OptionOptionListListPredicate) Int32OptionOptionListListPredicate {
	return func(e Int32OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionOptionListListPredicate) Or(p2 Int64OptionOptionListListPredicate) Int64OptionOptionListListPredicate {
	return func(e Int64OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionOptionListListPredicate) Or(p2 UintOptionOptionListListPredicate) UintOptionOptionListListPredicate {
	return func(e UintOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionOptionListListPredicate) Or(p2 Uint8OptionOptionListListPredicate) Uint8OptionOptionListListPredicate {
	return func(e Uint8OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionOptionListListPredicate) Or(p2 Uint16OptionOptionListListPredicate) Uint16OptionOptionListListPredicate {
	return func(e Uint16OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionOptionListListPredicate) Or(p2 Uint32OptionOptionListListPredicate) Uint32OptionOptionListListPredicate {
	return func(e Uint32OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionOptionListListPredicate) Or(p2 Uint64OptionOptionListListPredicate) Uint64OptionOptionListListPredicate {
	return func(e Uint64OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionOptionListListPredicate) Or(p2 UintptrOptionOptionListListPredicate) UintptrOptionOptionListListPredicate {
	return func(e UintptrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionOptionListListPredicate) Or(p2 ByteOptionOptionListListPredicate) ByteOptionOptionListListPredicate {
	return func(e ByteOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionOptionListListPredicate) Or(p2 RuneOptionOptionListListPredicate) RuneOptionOptionListListPredicate {
	return func(e RuneOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionOptionListListPredicate) Or(p2 Float32OptionOptionListListPredicate) Float32OptionOptionListListPredicate {
	return func(e Float32OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionOptionListListPredicate) Or(p2 Float64OptionOptionListListPredicate) Float64OptionOptionListListPredicate {
	return func(e Float64OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionOptionListListPredicate) Or(p2 Complex64OptionOptionListListPredicate) Complex64OptionOptionListListPredicate {
	return func(e Complex64OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionOptionListListPredicate) Or(p2 Complex128OptionOptionListListPredicate) Complex128OptionOptionListListPredicate {
	return func(e Complex128OptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionOptionListListPredicate) Or(p2 AnyOptionOptionListListPredicate) AnyOptionOptionListListPredicate {
	return func(e AnyOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrOptionOptionListListPredicate) Or(p2 BoolArrOptionOptionListListPredicate) BoolArrOptionOptionListListPredicate {
	return func(e BoolArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrOptionOptionListListPredicate) Or(p2 StringArrOptionOptionListListPredicate) StringArrOptionOptionListListPredicate {
	return func(e StringArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrOptionOptionListListPredicate) Or(p2 IntArrOptionOptionListListPredicate) IntArrOptionOptionListListPredicate {
	return func(e IntArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrOptionOptionListListPredicate) Or(p2 Int8ArrOptionOptionListListPredicate) Int8ArrOptionOptionListListPredicate {
	return func(e Int8ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrOptionOptionListListPredicate) Or(p2 Int16ArrOptionOptionListListPredicate) Int16ArrOptionOptionListListPredicate {
	return func(e Int16ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrOptionOptionListListPredicate) Or(p2 Int32ArrOptionOptionListListPredicate) Int32ArrOptionOptionListListPredicate {
	return func(e Int32ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrOptionOptionListListPredicate) Or(p2 Int64ArrOptionOptionListListPredicate) Int64ArrOptionOptionListListPredicate {
	return func(e Int64ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrOptionOptionListListPredicate) Or(p2 UintArrOptionOptionListListPredicate) UintArrOptionOptionListListPredicate {
	return func(e UintArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrOptionOptionListListPredicate) Or(p2 Uint8ArrOptionOptionListListPredicate) Uint8ArrOptionOptionListListPredicate {
	return func(e Uint8ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrOptionOptionListListPredicate) Or(p2 Uint16ArrOptionOptionListListPredicate) Uint16ArrOptionOptionListListPredicate {
	return func(e Uint16ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrOptionOptionListListPredicate) Or(p2 Uint32ArrOptionOptionListListPredicate) Uint32ArrOptionOptionListListPredicate {
	return func(e Uint32ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrOptionOptionListListPredicate) Or(p2 Uint64ArrOptionOptionListListPredicate) Uint64ArrOptionOptionListListPredicate {
	return func(e Uint64ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrOptionOptionListListPredicate) Or(p2 UintptrArrOptionOptionListListPredicate) UintptrArrOptionOptionListListPredicate {
	return func(e UintptrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrOptionOptionListListPredicate) Or(p2 ByteArrOptionOptionListListPredicate) ByteArrOptionOptionListListPredicate {
	return func(e ByteArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrOptionOptionListListPredicate) Or(p2 RuneArrOptionOptionListListPredicate) RuneArrOptionOptionListListPredicate {
	return func(e RuneArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrOptionOptionListListPredicate) Or(p2 Float32ArrOptionOptionListListPredicate) Float32ArrOptionOptionListListPredicate {
	return func(e Float32ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrOptionOptionListListPredicate) Or(p2 Float64ArrOptionOptionListListPredicate) Float64ArrOptionOptionListListPredicate {
	return func(e Float64ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrOptionOptionListListPredicate) Or(p2 Complex64ArrOptionOptionListListPredicate) Complex64ArrOptionOptionListListPredicate {
	return func(e Complex64ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrOptionOptionListListPredicate) Or(p2 Complex128ArrOptionOptionListListPredicate) Complex128ArrOptionOptionListListPredicate {
	return func(e Complex128ArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrOptionOptionListListPredicate) Or(p2 AnyArrOptionOptionListListPredicate) AnyArrOptionOptionListListPredicate {
	return func(e AnyArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrOptionOptionListListPredicate) Or(p2 BoolArrArrOptionOptionListListPredicate) BoolArrArrOptionOptionListListPredicate {
	return func(e BoolArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrOptionOptionListListPredicate) Or(p2 StringArrArrOptionOptionListListPredicate) StringArrArrOptionOptionListListPredicate {
	return func(e StringArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrOptionOptionListListPredicate) Or(p2 IntArrArrOptionOptionListListPredicate) IntArrArrOptionOptionListListPredicate {
	return func(e IntArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrOptionOptionListListPredicate) Or(p2 Int8ArrArrOptionOptionListListPredicate) Int8ArrArrOptionOptionListListPredicate {
	return func(e Int8ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrOptionOptionListListPredicate) Or(p2 Int16ArrArrOptionOptionListListPredicate) Int16ArrArrOptionOptionListListPredicate {
	return func(e Int16ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrOptionOptionListListPredicate) Or(p2 Int32ArrArrOptionOptionListListPredicate) Int32ArrArrOptionOptionListListPredicate {
	return func(e Int32ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrOptionOptionListListPredicate) Or(p2 Int64ArrArrOptionOptionListListPredicate) Int64ArrArrOptionOptionListListPredicate {
	return func(e Int64ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrOptionOptionListListPredicate) Or(p2 UintArrArrOptionOptionListListPredicate) UintArrArrOptionOptionListListPredicate {
	return func(e UintArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrOptionOptionListListPredicate) Or(p2 Uint8ArrArrOptionOptionListListPredicate) Uint8ArrArrOptionOptionListListPredicate {
	return func(e Uint8ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrOptionOptionListListPredicate) Or(p2 Uint16ArrArrOptionOptionListListPredicate) Uint16ArrArrOptionOptionListListPredicate {
	return func(e Uint16ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrOptionOptionListListPredicate) Or(p2 Uint32ArrArrOptionOptionListListPredicate) Uint32ArrArrOptionOptionListListPredicate {
	return func(e Uint32ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrOptionOptionListListPredicate) Or(p2 Uint64ArrArrOptionOptionListListPredicate) Uint64ArrArrOptionOptionListListPredicate {
	return func(e Uint64ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrOptionOptionListListPredicate) Or(p2 UintptrArrArrOptionOptionListListPredicate) UintptrArrArrOptionOptionListListPredicate {
	return func(e UintptrArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrOptionOptionListListPredicate) Or(p2 ByteArrArrOptionOptionListListPredicate) ByteArrArrOptionOptionListListPredicate {
	return func(e ByteArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrOptionOptionListListPredicate) Or(p2 RuneArrArrOptionOptionListListPredicate) RuneArrArrOptionOptionListListPredicate {
	return func(e RuneArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrOptionOptionListListPredicate) Or(p2 Float32ArrArrOptionOptionListListPredicate) Float32ArrArrOptionOptionListListPredicate {
	return func(e Float32ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrOptionOptionListListPredicate) Or(p2 Float64ArrArrOptionOptionListListPredicate) Float64ArrArrOptionOptionListListPredicate {
	return func(e Float64ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrOptionOptionListListPredicate) Or(p2 Complex64ArrArrOptionOptionListListPredicate) Complex64ArrArrOptionOptionListListPredicate {
	return func(e Complex64ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrOptionOptionListListPredicate) Or(p2 Complex128ArrArrOptionOptionListListPredicate) Complex128ArrArrOptionOptionListListPredicate {
	return func(e Complex128ArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrOptionOptionListListPredicate) Or(p2 AnyArrArrOptionOptionListListPredicate) AnyArrArrOptionOptionListListPredicate {
	return func(e AnyArrArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrOptionOptionListListPredicate) Or(p2 BoolOptionArrOptionOptionListListPredicate) BoolOptionArrOptionOptionListListPredicate {
	return func(e BoolOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrOptionOptionListListPredicate) Or(p2 StringOptionArrOptionOptionListListPredicate) StringOptionArrOptionOptionListListPredicate {
	return func(e StringOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrOptionOptionListListPredicate) Or(p2 IntOptionArrOptionOptionListListPredicate) IntOptionArrOptionOptionListListPredicate {
	return func(e IntOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrOptionOptionListListPredicate) Or(p2 Int8OptionArrOptionOptionListListPredicate) Int8OptionArrOptionOptionListListPredicate {
	return func(e Int8OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrOptionOptionListListPredicate) Or(p2 Int16OptionArrOptionOptionListListPredicate) Int16OptionArrOptionOptionListListPredicate {
	return func(e Int16OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrOptionOptionListListPredicate) Or(p2 Int32OptionArrOptionOptionListListPredicate) Int32OptionArrOptionOptionListListPredicate {
	return func(e Int32OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrOptionOptionListListPredicate) Or(p2 Int64OptionArrOptionOptionListListPredicate) Int64OptionArrOptionOptionListListPredicate {
	return func(e Int64OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrOptionOptionListListPredicate) Or(p2 UintOptionArrOptionOptionListListPredicate) UintOptionArrOptionOptionListListPredicate {
	return func(e UintOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrOptionOptionListListPredicate) Or(p2 Uint8OptionArrOptionOptionListListPredicate) Uint8OptionArrOptionOptionListListPredicate {
	return func(e Uint8OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrOptionOptionListListPredicate) Or(p2 Uint16OptionArrOptionOptionListListPredicate) Uint16OptionArrOptionOptionListListPredicate {
	return func(e Uint16OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrOptionOptionListListPredicate) Or(p2 Uint32OptionArrOptionOptionListListPredicate) Uint32OptionArrOptionOptionListListPredicate {
	return func(e Uint32OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrOptionOptionListListPredicate) Or(p2 Uint64OptionArrOptionOptionListListPredicate) Uint64OptionArrOptionOptionListListPredicate {
	return func(e Uint64OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrOptionOptionListListPredicate) Or(p2 UintptrOptionArrOptionOptionListListPredicate) UintptrOptionArrOptionOptionListListPredicate {
	return func(e UintptrOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrOptionOptionListListPredicate) Or(p2 ByteOptionArrOptionOptionListListPredicate) ByteOptionArrOptionOptionListListPredicate {
	return func(e ByteOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrOptionOptionListListPredicate) Or(p2 RuneOptionArrOptionOptionListListPredicate) RuneOptionArrOptionOptionListListPredicate {
	return func(e RuneOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrOptionOptionListListPredicate) Or(p2 Float32OptionArrOptionOptionListListPredicate) Float32OptionArrOptionOptionListListPredicate {
	return func(e Float32OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrOptionOptionListListPredicate) Or(p2 Float64OptionArrOptionOptionListListPredicate) Float64OptionArrOptionOptionListListPredicate {
	return func(e Float64OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrOptionOptionListListPredicate) Or(p2 Complex64OptionArrOptionOptionListListPredicate) Complex64OptionArrOptionOptionListListPredicate {
	return func(e Complex64OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrOptionOptionListListPredicate) Or(p2 Complex128OptionArrOptionOptionListListPredicate) Complex128OptionArrOptionOptionListListPredicate {
	return func(e Complex128OptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrOptionOptionListListPredicate) Or(p2 AnyOptionArrOptionOptionListListPredicate) AnyOptionArrOptionOptionListListPredicate {
	return func(e AnyOptionArrOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolListOptionOptionListListPredicate) Or(p2 BoolListOptionOptionListListPredicate) BoolListOptionOptionListListPredicate {
	return func(e BoolListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 StringListOptionOptionListListPredicate) Or(p2 StringListOptionOptionListListPredicate) StringListOptionOptionListListPredicate {
	return func(e StringListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 IntListOptionOptionListListPredicate) Or(p2 IntListOptionOptionListListPredicate) IntListOptionOptionListListPredicate {
	return func(e IntListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ListOptionOptionListListPredicate) Or(p2 Int8ListOptionOptionListListPredicate) Int8ListOptionOptionListListPredicate {
	return func(e Int8ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ListOptionOptionListListPredicate) Or(p2 Int16ListOptionOptionListListPredicate) Int16ListOptionOptionListListPredicate {
	return func(e Int16ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ListOptionOptionListListPredicate) Or(p2 Int32ListOptionOptionListListPredicate) Int32ListOptionOptionListListPredicate {
	return func(e Int32ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ListOptionOptionListListPredicate) Or(p2 Int64ListOptionOptionListListPredicate) Int64ListOptionOptionListListPredicate {
	return func(e Int64ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintListOptionOptionListListPredicate) Or(p2 UintListOptionOptionListListPredicate) UintListOptionOptionListListPredicate {
	return func(e UintListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ListOptionOptionListListPredicate) Or(p2 Uint8ListOptionOptionListListPredicate) Uint8ListOptionOptionListListPredicate {
	return func(e Uint8ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ListOptionOptionListListPredicate) Or(p2 Uint16ListOptionOptionListListPredicate) Uint16ListOptionOptionListListPredicate {
	return func(e Uint16ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ListOptionOptionListListPredicate) Or(p2 Uint32ListOptionOptionListListPredicate) Uint32ListOptionOptionListListPredicate {
	return func(e Uint32ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ListOptionOptionListListPredicate) Or(p2 Uint64ListOptionOptionListListPredicate) Uint64ListOptionOptionListListPredicate {
	return func(e Uint64ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrListOptionOptionListListPredicate) Or(p2 UintptrListOptionOptionListListPredicate) UintptrListOptionOptionListListPredicate {
	return func(e UintptrListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteListOptionOptionListListPredicate) Or(p2 ByteListOptionOptionListListPredicate) ByteListOptionOptionListListPredicate {
	return func(e ByteListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneListOptionOptionListListPredicate) Or(p2 RuneListOptionOptionListListPredicate) RuneListOptionOptionListListPredicate {
	return func(e RuneListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ListOptionOptionListListPredicate) Or(p2 Float32ListOptionOptionListListPredicate) Float32ListOptionOptionListListPredicate {
	return func(e Float32ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ListOptionOptionListListPredicate) Or(p2 Float64ListOptionOptionListListPredicate) Float64ListOptionOptionListListPredicate {
	return func(e Float64ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ListOptionOptionListListPredicate) Or(p2 Complex64ListOptionOptionListListPredicate) Complex64ListOptionOptionListListPredicate {
	return func(e Complex64ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ListOptionOptionListListPredicate) Or(p2 Complex128ListOptionOptionListListPredicate) Complex128ListOptionOptionListListPredicate {
	return func(e Complex128ListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyListOptionOptionListListPredicate) Or(p2 AnyListOptionOptionListListPredicate) AnyListOptionOptionListListPredicate {
	return func(e AnyListOptionOptionListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrListListPredicate) Or(p2 BoolArrListListPredicate) BoolArrListListPredicate {
	return func(e BoolArrListList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrListListPredicate) Or(p2 StringArrListListPredicate) StringArrListListPredicate {
	return func(e StringArrListList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrListListPredicate) Or(p2 IntArrListListPredicate) IntArrListListPredicate {
	return func(e IntArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrListListPredicate) Or(p2 Int8ArrListListPredicate) Int8ArrListListPredicate {
	return func(e Int8ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrListListPredicate) Or(p2 Int16ArrListListPredicate) Int16ArrListListPredicate {
	return func(e Int16ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrListListPredicate) Or(p2 Int32ArrListListPredicate) Int32ArrListListPredicate {
	return func(e Int32ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrListListPredicate) Or(p2 Int64ArrListListPredicate) Int64ArrListListPredicate {
	return func(e Int64ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrListListPredicate) Or(p2 UintArrListListPredicate) UintArrListListPredicate {
	return func(e UintArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrListListPredicate) Or(p2 Uint8ArrListListPredicate) Uint8ArrListListPredicate {
	return func(e Uint8ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrListListPredicate) Or(p2 Uint16ArrListListPredicate) Uint16ArrListListPredicate {
	return func(e Uint16ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrListListPredicate) Or(p2 Uint32ArrListListPredicate) Uint32ArrListListPredicate {
	return func(e Uint32ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrListListPredicate) Or(p2 Uint64ArrListListPredicate) Uint64ArrListListPredicate {
	return func(e Uint64ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrListListPredicate) Or(p2 UintptrArrListListPredicate) UintptrArrListListPredicate {
	return func(e UintptrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrListListPredicate) Or(p2 ByteArrListListPredicate) ByteArrListListPredicate {
	return func(e ByteArrListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrListListPredicate) Or(p2 RuneArrListListPredicate) RuneArrListListPredicate {
	return func(e RuneArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrListListPredicate) Or(p2 Float32ArrListListPredicate) Float32ArrListListPredicate {
	return func(e Float32ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrListListPredicate) Or(p2 Float64ArrListListPredicate) Float64ArrListListPredicate {
	return func(e Float64ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrListListPredicate) Or(p2 Complex64ArrListListPredicate) Complex64ArrListListPredicate {
	return func(e Complex64ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrListListPredicate) Or(p2 Complex128ArrListListPredicate) Complex128ArrListListPredicate {
	return func(e Complex128ArrListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrListListPredicate) Or(p2 AnyArrListListPredicate) AnyArrListListPredicate {
	return func(e AnyArrListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolArrArrListListPredicate) Or(p2 BoolArrArrListListPredicate) BoolArrArrListListPredicate {
	return func(e BoolArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 StringArrArrListListPredicate) Or(p2 StringArrArrListListPredicate) StringArrArrListListPredicate {
	return func(e StringArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 IntArrArrListListPredicate) Or(p2 IntArrArrListListPredicate) IntArrArrListListPredicate {
	return func(e IntArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8ArrArrListListPredicate) Or(p2 Int8ArrArrListListPredicate) Int8ArrArrListListPredicate {
	return func(e Int8ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16ArrArrListListPredicate) Or(p2 Int16ArrArrListListPredicate) Int16ArrArrListListPredicate {
	return func(e Int16ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32ArrArrListListPredicate) Or(p2 Int32ArrArrListListPredicate) Int32ArrArrListListPredicate {
	return func(e Int32ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64ArrArrListListPredicate) Or(p2 Int64ArrArrListListPredicate) Int64ArrArrListListPredicate {
	return func(e Int64ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 UintArrArrListListPredicate) Or(p2 UintArrArrListListPredicate) UintArrArrListListPredicate {
	return func(e UintArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8ArrArrListListPredicate) Or(p2 Uint8ArrArrListListPredicate) Uint8ArrArrListListPredicate {
	return func(e Uint8ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16ArrArrListListPredicate) Or(p2 Uint16ArrArrListListPredicate) Uint16ArrArrListListPredicate {
	return func(e Uint16ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32ArrArrListListPredicate) Or(p2 Uint32ArrArrListListPredicate) Uint32ArrArrListListPredicate {
	return func(e Uint32ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64ArrArrListListPredicate) Or(p2 Uint64ArrArrListListPredicate) Uint64ArrArrListListPredicate {
	return func(e Uint64ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrArrArrListListPredicate) Or(p2 UintptrArrArrListListPredicate) UintptrArrArrListListPredicate {
	return func(e UintptrArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteArrArrListListPredicate) Or(p2 ByteArrArrListListPredicate) ByteArrArrListListPredicate {
	return func(e ByteArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneArrArrListListPredicate) Or(p2 RuneArrArrListListPredicate) RuneArrArrListListPredicate {
	return func(e RuneArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32ArrArrListListPredicate) Or(p2 Float32ArrArrListListPredicate) Float32ArrArrListListPredicate {
	return func(e Float32ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64ArrArrListListPredicate) Or(p2 Float64ArrArrListListPredicate) Float64ArrArrListListPredicate {
	return func(e Float64ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64ArrArrListListPredicate) Or(p2 Complex64ArrArrListListPredicate) Complex64ArrArrListListPredicate {
	return func(e Complex64ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128ArrArrListListPredicate) Or(p2 Complex128ArrArrListListPredicate) Complex128ArrArrListListPredicate {
	return func(e Complex128ArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyArrArrListListPredicate) Or(p2 AnyArrArrListListPredicate) AnyArrArrListListPredicate {
	return func(e AnyArrArrListList) bool { return p1(e) || p2(e) }
}
func (p1 BoolOptionArrListListPredicate) Or(p2 BoolOptionArrListListPredicate) BoolOptionArrListListPredicate {
	return func(e BoolOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 StringOptionArrListListPredicate) Or(p2 StringOptionArrListListPredicate) StringOptionArrListListPredicate {
	return func(e StringOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 IntOptionArrListListPredicate) Or(p2 IntOptionArrListListPredicate) IntOptionArrListListPredicate {
	return func(e IntOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int8OptionArrListListPredicate) Or(p2 Int8OptionArrListListPredicate) Int8OptionArrListListPredicate {
	return func(e Int8OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int16OptionArrListListPredicate) Or(p2 Int16OptionArrListListPredicate) Int16OptionArrListListPredicate {
	return func(e Int16OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int32OptionArrListListPredicate) Or(p2 Int32OptionArrListListPredicate) Int32OptionArrListListPredicate {
	return func(e Int32OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Int64OptionArrListListPredicate) Or(p2 Int64OptionArrListListPredicate) Int64OptionArrListListPredicate {
	return func(e Int64OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 UintOptionArrListListPredicate) Or(p2 UintOptionArrListListPredicate) UintOptionArrListListPredicate {
	return func(e UintOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint8OptionArrListListPredicate) Or(p2 Uint8OptionArrListListPredicate) Uint8OptionArrListListPredicate {
	return func(e Uint8OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint16OptionArrListListPredicate) Or(p2 Uint16OptionArrListListPredicate) Uint16OptionArrListListPredicate {
	return func(e Uint16OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint32OptionArrListListPredicate) Or(p2 Uint32OptionArrListListPredicate) Uint32OptionArrListListPredicate {
	return func(e Uint32OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Uint64OptionArrListListPredicate) Or(p2 Uint64OptionArrListListPredicate) Uint64OptionArrListListPredicate {
	return func(e Uint64OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 UintptrOptionArrListListPredicate) Or(p2 UintptrOptionArrListListPredicate) UintptrOptionArrListListPredicate {
	return func(e UintptrOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 ByteOptionArrListListPredicate) Or(p2 ByteOptionArrListListPredicate) ByteOptionArrListListPredicate {
	return func(e ByteOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 RuneOptionArrListListPredicate) Or(p2 RuneOptionArrListListPredicate) RuneOptionArrListListPredicate {
	return func(e RuneOptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Float32OptionArrListListPredicate) Or(p2 Float32OptionArrListListPredicate) Float32OptionArrListListPredicate {
	return func(e Float32OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Float64OptionArrListListPredicate) Or(p2 Float64OptionArrListListPredicate) Float64OptionArrListListPredicate {
	return func(e Float64OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex64OptionArrListListPredicate) Or(p2 Complex64OptionArrListListPredicate) Complex64OptionArrListListPredicate {
	return func(e Complex64OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 Complex128OptionArrListListPredicate) Or(p2 Complex128OptionArrListListPredicate) Complex128OptionArrListListPredicate {
	return func(e Complex128OptionArrListList) bool { return p1(e) || p2(e) }
}
func (p1 AnyOptionArrListListPredicate) Or(p2 AnyOptionArrListListPredicate) AnyOptionArrListListPredicate {
	return func(e AnyOptionArrListList) bool { return p1(e) || p2(e) }
}
