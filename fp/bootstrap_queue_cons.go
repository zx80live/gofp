// bootstrap_queue_cons.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func MkBoolQueue(elements ...bool) BoolQueue {
	q := NilBoolQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkStringQueue(elements ...string) StringQueue {
	q := NilStringQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkIntQueue(elements ...int) IntQueue {
	q := NilIntQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkInt64Queue(elements ...int64) Int64Queue {
	q := NilInt64Queue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkByteQueue(elements ...byte) ByteQueue {
	q := NilByteQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkRuneQueue(elements ...rune) RuneQueue {
	q := NilRuneQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat32Queue(elements ...float32) Float32Queue {
	q := NilFloat32Queue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat64Queue(elements ...float64) Float64Queue {
	q := NilFloat64Queue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkAnyQueue(elements ...Any) AnyQueue {
	q := NilAnyQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkTuple2Queue(elements ...Tuple2) Tuple2Queue {
	q := NilTuple2Queue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkBoolArrayQueue(elements ...[]bool) BoolArrayQueue {
	q := NilBoolArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkStringArrayQueue(elements ...[]string) StringArrayQueue {
	q := NilStringArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkIntArrayQueue(elements ...[]int) IntArrayQueue {
	q := NilIntArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkInt64ArrayQueue(elements ...[]int64) Int64ArrayQueue {
	q := NilInt64ArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkByteArrayQueue(elements ...[]byte) ByteArrayQueue {
	q := NilByteArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkRuneArrayQueue(elements ...[]rune) RuneArrayQueue {
	q := NilRuneArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat32ArrayQueue(elements ...[]float32) Float32ArrayQueue {
	q := NilFloat32ArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat64ArrayQueue(elements ...[]float64) Float64ArrayQueue {
	q := NilFloat64ArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkAnyArrayQueue(elements ...[]Any) AnyArrayQueue {
	q := NilAnyArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkTuple2ArrayQueue(elements ...[]Tuple2) Tuple2ArrayQueue {
	q := NilTuple2ArrayQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkBoolOptionQueue(elements ...BoolOption) BoolOptionQueue {
	q := NilBoolOptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkStringOptionQueue(elements ...StringOption) StringOptionQueue {
	q := NilStringOptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkIntOptionQueue(elements ...IntOption) IntOptionQueue {
	q := NilIntOptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkInt64OptionQueue(elements ...Int64Option) Int64OptionQueue {
	q := NilInt64OptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkByteOptionQueue(elements ...ByteOption) ByteOptionQueue {
	q := NilByteOptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkRuneOptionQueue(elements ...RuneOption) RuneOptionQueue {
	q := NilRuneOptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat32OptionQueue(elements ...Float32Option) Float32OptionQueue {
	q := NilFloat32OptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat64OptionQueue(elements ...Float64Option) Float64OptionQueue {
	q := NilFloat64OptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkAnyOptionQueue(elements ...AnyOption) AnyOptionQueue {
	q := NilAnyOptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkTuple2OptionQueue(elements ...Tuple2Option) Tuple2OptionQueue {
	q := NilTuple2OptionQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkBoolListQueue(elements ...BoolList) BoolListQueue {
	q := NilBoolListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkStringListQueue(elements ...StringList) StringListQueue {
	q := NilStringListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkIntListQueue(elements ...IntList) IntListQueue {
	q := NilIntListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkInt64ListQueue(elements ...Int64List) Int64ListQueue {
	q := NilInt64ListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkByteListQueue(elements ...ByteList) ByteListQueue {
	q := NilByteListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkRuneListQueue(elements ...RuneList) RuneListQueue {
	q := NilRuneListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat32ListQueue(elements ...Float32List) Float32ListQueue {
	q := NilFloat32ListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkFloat64ListQueue(elements ...Float64List) Float64ListQueue {
	q := NilFloat64ListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkAnyListQueue(elements ...AnyList) AnyListQueue {
	q := NilAnyListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
func MkTuple2ListQueue(elements ...Tuple2List) Tuple2ListQueue {
	q := NilTuple2ListQueue
	for _, e := range elements {
		q = q.Enqueue(e)
	}
	return q
}
