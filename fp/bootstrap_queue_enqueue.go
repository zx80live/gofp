// bootstrap_queue_enqueue.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (q BoolQueue) Enqueue(e bool) BoolQueue {
	in := (*q.in).Cons(e)
	return BoolQueue{&in, q.out}
}
func (q StringQueue) Enqueue(e string) StringQueue {
	in := (*q.in).Cons(e)
	return StringQueue{&in, q.out}
}
func (q IntQueue) Enqueue(e int) IntQueue {
	in := (*q.in).Cons(e)
	return IntQueue{&in, q.out}
}
func (q Int64Queue) Enqueue(e int64) Int64Queue {
	in := (*q.in).Cons(e)
	return Int64Queue{&in, q.out}
}
func (q ByteQueue) Enqueue(e byte) ByteQueue {
	in := (*q.in).Cons(e)
	return ByteQueue{&in, q.out}
}
func (q RuneQueue) Enqueue(e rune) RuneQueue {
	in := (*q.in).Cons(e)
	return RuneQueue{&in, q.out}
}
func (q Float32Queue) Enqueue(e float32) Float32Queue {
	in := (*q.in).Cons(e)
	return Float32Queue{&in, q.out}
}
func (q Float64Queue) Enqueue(e float64) Float64Queue {
	in := (*q.in).Cons(e)
	return Float64Queue{&in, q.out}
}
func (q AnyQueue) Enqueue(e Any) AnyQueue {
	in := (*q.in).Cons(e)
	return AnyQueue{&in, q.out}
}
func (q Tuple2Queue) Enqueue(e Tuple2) Tuple2Queue {
	in := (*q.in).Cons(e)
	return Tuple2Queue{&in, q.out}
}
func (q BoolArrayQueue) Enqueue(e []bool) BoolArrayQueue {
	in := (*q.in).Cons(e)
	return BoolArrayQueue{&in, q.out}
}
func (q StringArrayQueue) Enqueue(e []string) StringArrayQueue {
	in := (*q.in).Cons(e)
	return StringArrayQueue{&in, q.out}
}
func (q IntArrayQueue) Enqueue(e []int) IntArrayQueue {
	in := (*q.in).Cons(e)
	return IntArrayQueue{&in, q.out}
}
func (q Int64ArrayQueue) Enqueue(e []int64) Int64ArrayQueue {
	in := (*q.in).Cons(e)
	return Int64ArrayQueue{&in, q.out}
}
func (q ByteArrayQueue) Enqueue(e []byte) ByteArrayQueue {
	in := (*q.in).Cons(e)
	return ByteArrayQueue{&in, q.out}
}
func (q RuneArrayQueue) Enqueue(e []rune) RuneArrayQueue {
	in := (*q.in).Cons(e)
	return RuneArrayQueue{&in, q.out}
}
func (q Float32ArrayQueue) Enqueue(e []float32) Float32ArrayQueue {
	in := (*q.in).Cons(e)
	return Float32ArrayQueue{&in, q.out}
}
func (q Float64ArrayQueue) Enqueue(e []float64) Float64ArrayQueue {
	in := (*q.in).Cons(e)
	return Float64ArrayQueue{&in, q.out}
}
func (q AnyArrayQueue) Enqueue(e []Any) AnyArrayQueue {
	in := (*q.in).Cons(e)
	return AnyArrayQueue{&in, q.out}
}
func (q Tuple2ArrayQueue) Enqueue(e []Tuple2) Tuple2ArrayQueue {
	in := (*q.in).Cons(e)
	return Tuple2ArrayQueue{&in, q.out}
}
func (q BoolOptionQueue) Enqueue(e BoolOption) BoolOptionQueue {
	in := (*q.in).Cons(e)
	return BoolOptionQueue{&in, q.out}
}
func (q StringOptionQueue) Enqueue(e StringOption) StringOptionQueue {
	in := (*q.in).Cons(e)
	return StringOptionQueue{&in, q.out}
}
func (q IntOptionQueue) Enqueue(e IntOption) IntOptionQueue {
	in := (*q.in).Cons(e)
	return IntOptionQueue{&in, q.out}
}
func (q Int64OptionQueue) Enqueue(e Int64Option) Int64OptionQueue {
	in := (*q.in).Cons(e)
	return Int64OptionQueue{&in, q.out}
}
func (q ByteOptionQueue) Enqueue(e ByteOption) ByteOptionQueue {
	in := (*q.in).Cons(e)
	return ByteOptionQueue{&in, q.out}
}
func (q RuneOptionQueue) Enqueue(e RuneOption) RuneOptionQueue {
	in := (*q.in).Cons(e)
	return RuneOptionQueue{&in, q.out}
}
func (q Float32OptionQueue) Enqueue(e Float32Option) Float32OptionQueue {
	in := (*q.in).Cons(e)
	return Float32OptionQueue{&in, q.out}
}
func (q Float64OptionQueue) Enqueue(e Float64Option) Float64OptionQueue {
	in := (*q.in).Cons(e)
	return Float64OptionQueue{&in, q.out}
}
func (q AnyOptionQueue) Enqueue(e AnyOption) AnyOptionQueue {
	in := (*q.in).Cons(e)
	return AnyOptionQueue{&in, q.out}
}
func (q Tuple2OptionQueue) Enqueue(e Tuple2Option) Tuple2OptionQueue {
	in := (*q.in).Cons(e)
	return Tuple2OptionQueue{&in, q.out}
}
func (q BoolListQueue) Enqueue(e BoolList) BoolListQueue {
	in := (*q.in).Cons(e)
	return BoolListQueue{&in, q.out}
}
func (q StringListQueue) Enqueue(e StringList) StringListQueue {
	in := (*q.in).Cons(e)
	return StringListQueue{&in, q.out}
}
func (q IntListQueue) Enqueue(e IntList) IntListQueue {
	in := (*q.in).Cons(e)
	return IntListQueue{&in, q.out}
}
func (q Int64ListQueue) Enqueue(e Int64List) Int64ListQueue {
	in := (*q.in).Cons(e)
	return Int64ListQueue{&in, q.out}
}
func (q ByteListQueue) Enqueue(e ByteList) ByteListQueue {
	in := (*q.in).Cons(e)
	return ByteListQueue{&in, q.out}
}
func (q RuneListQueue) Enqueue(e RuneList) RuneListQueue {
	in := (*q.in).Cons(e)
	return RuneListQueue{&in, q.out}
}
func (q Float32ListQueue) Enqueue(e Float32List) Float32ListQueue {
	in := (*q.in).Cons(e)
	return Float32ListQueue{&in, q.out}
}
func (q Float64ListQueue) Enqueue(e Float64List) Float64ListQueue {
	in := (*q.in).Cons(e)
	return Float64ListQueue{&in, q.out}
}
func (q AnyListQueue) Enqueue(e AnyList) AnyListQueue {
	in := (*q.in).Cons(e)
	return AnyListQueue{&in, q.out}
}
func (q Tuple2ListQueue) Enqueue(e Tuple2List) Tuple2ListQueue {
	in := (*q.in).Cons(e)
	return Tuple2ListQueue{&in, q.out}
}
