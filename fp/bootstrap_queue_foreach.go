// bootstrap_queue_foreach.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package fp

func (q BoolQueue) Foreach(f func(e bool)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q StringQueue) Foreach(f func(e string)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q IntQueue) Foreach(f func(e int)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Int64Queue) Foreach(f func(e int64)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q ByteQueue) Foreach(f func(e byte)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q RuneQueue) Foreach(f func(e rune)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float32Queue) Foreach(f func(e float32)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float64Queue) Foreach(f func(e float64)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q AnyQueue) Foreach(f func(e Any)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Tuple2Queue) Foreach(f func(e Tuple2)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q BoolArrayQueue) Foreach(f func(e []bool)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q StringArrayQueue) Foreach(f func(e []string)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q IntArrayQueue) Foreach(f func(e []int)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Int64ArrayQueue) Foreach(f func(e []int64)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q ByteArrayQueue) Foreach(f func(e []byte)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q RuneArrayQueue) Foreach(f func(e []rune)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float32ArrayQueue) Foreach(f func(e []float32)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float64ArrayQueue) Foreach(f func(e []float64)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q AnyArrayQueue) Foreach(f func(e []Any)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Tuple2ArrayQueue) Foreach(f func(e []Tuple2)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q BoolOptionQueue) Foreach(f func(e BoolOption)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q StringOptionQueue) Foreach(f func(e StringOption)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q IntOptionQueue) Foreach(f func(e IntOption)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Int64OptionQueue) Foreach(f func(e Int64Option)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q ByteOptionQueue) Foreach(f func(e ByteOption)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q RuneOptionQueue) Foreach(f func(e RuneOption)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float32OptionQueue) Foreach(f func(e Float32Option)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float64OptionQueue) Foreach(f func(e Float64Option)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q AnyOptionQueue) Foreach(f func(e AnyOption)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Tuple2OptionQueue) Foreach(f func(e Tuple2Option)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q BoolListQueue) Foreach(f func(e BoolList)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q StringListQueue) Foreach(f func(e StringList)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q IntListQueue) Foreach(f func(e IntList)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Int64ListQueue) Foreach(f func(e Int64List)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q ByteListQueue) Foreach(f func(e ByteList)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q RuneListQueue) Foreach(f func(e RuneList)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float32ListQueue) Foreach(f func(e Float32List)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Float64ListQueue) Foreach(f func(e Float64List)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q AnyListQueue) Foreach(f func(e AnyList)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
func (q Tuple2ListQueue) Foreach(f func(e Tuple2List)) {
	xs := q
	for xs.NonEmpty() {
		f(xs.Head())
		xs = xs.Tail()
	}
}
