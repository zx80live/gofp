// flist_cons.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY gofp-bootstrap

package fp

func (l BoolList) Cons(e bool) BoolList {
	tail := l.Copy()
	xs := BoolList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l RuneList) Cons(e rune) RuneList {
	tail := l.Copy()
	xs := RuneList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l ByteList) Cons(e byte) ByteList {
	tail := l.Copy()
	xs := ByteList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l IntList) Cons(e int) IntList {
	tail := l.Copy()
	xs := IntList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int8List) Cons(e int8) Int8List {
	tail := l.Copy()
	xs := Int8List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int16List) Cons(e int16) Int16List {
	tail := l.Copy()
	xs := Int16List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int32List) Cons(e int32) Int32List {
	tail := l.Copy()
	xs := Int32List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int64List) Cons(e int64) Int64List {
	tail := l.Copy()
	xs := Int64List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l UintList) Cons(e uint) UintList {
	tail := l.Copy()
	xs := UintList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint8List) Cons(e uint8) Uint8List {
	tail := l.Copy()
	xs := Uint8List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint16List) Cons(e uint16) Uint16List {
	tail := l.Copy()
	xs := Uint16List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint32List) Cons(e uint32) Uint32List {
	tail := l.Copy()
	xs := Uint32List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint64List) Cons(e uint64) Uint64List {
	tail := l.Copy()
	xs := Uint64List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l UintptrList) Cons(e uintptr) UintptrList {
	tail := l.Copy()
	xs := UintptrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Float32List) Cons(e float32) Float32List {
	tail := l.Copy()
	xs := Float32List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Float64List) Cons(e float64) Float64List {
	tail := l.Copy()
	xs := Float64List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Complex64List) Cons(e complex64) Complex64List {
	tail := l.Copy()
	xs := Complex64List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Complex128List) Cons(e complex128) Complex128List {
	tail := l.Copy()
	xs := Complex128List{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l StringList) Cons(e string) StringList {
	tail := l.Copy()
	xs := StringList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l AnyList) Cons(e Any) AnyList {
	tail := l.Copy()
	xs := AnyList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l BoolArrList) Cons(e []bool) BoolArrList {
	tail := l.Copy()
	xs := BoolArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l RuneArrList) Cons(e []rune) RuneArrList {
	tail := l.Copy()
	xs := RuneArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l ByteArrList) Cons(e []byte) ByteArrList {
	tail := l.Copy()
	xs := ByteArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l IntArrList) Cons(e []int) IntArrList {
	tail := l.Copy()
	xs := IntArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int8ArrList) Cons(e []int8) Int8ArrList {
	tail := l.Copy()
	xs := Int8ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int16ArrList) Cons(e []int16) Int16ArrList {
	tail := l.Copy()
	xs := Int16ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int32ArrList) Cons(e []int32) Int32ArrList {
	tail := l.Copy()
	xs := Int32ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Int64ArrList) Cons(e []int64) Int64ArrList {
	tail := l.Copy()
	xs := Int64ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l UintArrList) Cons(e []uint) UintArrList {
	tail := l.Copy()
	xs := UintArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint8ArrList) Cons(e []uint8) Uint8ArrList {
	tail := l.Copy()
	xs := Uint8ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint16ArrList) Cons(e []uint16) Uint16ArrList {
	tail := l.Copy()
	xs := Uint16ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint32ArrList) Cons(e []uint32) Uint32ArrList {
	tail := l.Copy()
	xs := Uint32ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Uint64ArrList) Cons(e []uint64) Uint64ArrList {
	tail := l.Copy()
	xs := Uint64ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l UintptrArrList) Cons(e []uintptr) UintptrArrList {
	tail := l.Copy()
	xs := UintptrArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Float32ArrList) Cons(e []float32) Float32ArrList {
	tail := l.Copy()
	xs := Float32ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Float64ArrList) Cons(e []float64) Float64ArrList {
	tail := l.Copy()
	xs := Float64ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Complex64ArrList) Cons(e []complex64) Complex64ArrList {
	tail := l.Copy()
	xs := Complex64ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l Complex128ArrList) Cons(e []complex128) Complex128ArrList {
	tail := l.Copy()
	xs := Complex128ArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l StringArrList) Cons(e []string) StringArrList {
	tail := l.Copy()
	xs := StringArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
func (l AnyArrList) Cons(e []Any) AnyArrList {
	tail := l.Copy()
	xs := AnyArrList{
		head: &e,
		tail: &tail,
	}
	return xs
}
