// flist_copy.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY gofp-bootstrap

package fp

func (l BoolList) Copy() BoolList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return BoolList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l RuneList) Copy() RuneList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return RuneList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l ByteList) Copy() ByteList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return ByteList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l IntList) Copy() IntList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return IntList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int8List) Copy() Int8List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int8List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int16List) Copy() Int16List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int16List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int32List) Copy() Int32List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int32List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int64List) Copy() Int64List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int64List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l UintList) Copy() UintList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return UintList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint8List) Copy() Uint8List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint8List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint16List) Copy() Uint16List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint16List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint32List) Copy() Uint32List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint32List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint64List) Copy() Uint64List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint64List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l UintptrList) Copy() UintptrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return UintptrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Float32List) Copy() Float32List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Float32List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Float64List) Copy() Float64List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Float64List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Complex64List) Copy() Complex64List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Complex64List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Complex128List) Copy() Complex128List {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Complex128List{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l StringList) Copy() StringList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return StringList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l AnyList) Copy() AnyList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return AnyList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l BoolArrList) Copy() BoolArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return BoolArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l RuneArrList) Copy() RuneArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return RuneArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l ByteArrList) Copy() ByteArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return ByteArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l IntArrList) Copy() IntArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return IntArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int8ArrList) Copy() Int8ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int8ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int16ArrList) Copy() Int16ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int16ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int32ArrList) Copy() Int32ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int32ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Int64ArrList) Copy() Int64ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Int64ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l UintArrList) Copy() UintArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return UintArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint8ArrList) Copy() Uint8ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint8ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint16ArrList) Copy() Uint16ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint16ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint32ArrList) Copy() Uint32ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint32ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Uint64ArrList) Copy() Uint64ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Uint64ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l UintptrArrList) Copy() UintptrArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return UintptrArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Float32ArrList) Copy() Float32ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Float32ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Float64ArrList) Copy() Float64ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Float64ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Complex64ArrList) Copy() Complex64ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Complex64ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l Complex128ArrList) Copy() Complex128ArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return Complex128ArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l StringArrList) Copy() StringArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return StringArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
func (l AnyArrList) Copy() AnyArrList {
	if l.IsEmpty() {
		return l
	} else {
		tail := l.tail.Copy()
		return AnyArrList{
			head: l.head,
			tail: &tail,
		}
	}
}
