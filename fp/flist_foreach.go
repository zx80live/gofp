// flist_foreach.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY gofp-bootstrap

package fp

func (l BoolList) Foreach(f func(bool)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l RuneList) Foreach(f func(rune)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l ByteList) Foreach(f func(byte)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l IntList) Foreach(f func(int)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int8List) Foreach(f func(int8)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int16List) Foreach(f func(int16)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int32List) Foreach(f func(int32)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int64List) Foreach(f func(int64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l UintList) Foreach(f func(uint)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint8List) Foreach(f func(uint8)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint16List) Foreach(f func(uint16)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint32List) Foreach(f func(uint32)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint64List) Foreach(f func(uint64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l UintptrList) Foreach(f func(uintptr)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Float32List) Foreach(f func(float32)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Float64List) Foreach(f func(float64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Complex64List) Foreach(f func(complex64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Complex128List) Foreach(f func(complex128)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l StringList) Foreach(f func(string)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l AnyList) Foreach(f func(Any)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l BoolArrList) Foreach(f func([]bool)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l RuneArrList) Foreach(f func([]rune)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l ByteArrList) Foreach(f func([]byte)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l IntArrList) Foreach(f func([]int)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int8ArrList) Foreach(f func([]int8)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int16ArrList) Foreach(f func([]int16)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int32ArrList) Foreach(f func([]int32)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Int64ArrList) Foreach(f func([]int64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l UintArrList) Foreach(f func([]uint)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint8ArrList) Foreach(f func([]uint8)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint16ArrList) Foreach(f func([]uint16)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint32ArrList) Foreach(f func([]uint32)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Uint64ArrList) Foreach(f func([]uint64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l UintptrArrList) Foreach(f func([]uintptr)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Float32ArrList) Foreach(f func([]float32)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Float64ArrList) Foreach(f func([]float64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Complex64ArrList) Foreach(f func([]complex64)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l Complex128ArrList) Foreach(f func([]complex128)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l StringArrList) Foreach(f func([]string)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
func (l AnyArrList) Foreach(f func([]Any)) {
	if l.IsNotEmpty() {
		f(*l.head)
		l.tail.Foreach(f)
	}
}
