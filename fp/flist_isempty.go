// flist_isempty.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY gofp-bootstrap

package fp

func (l BoolList) IsEmpty() bool             { return l.head == nil && l.tail == nil }
func (l BoolList) IsNotEmpty() bool          { return !l.IsEmpty() }
func (l RuneList) IsEmpty() bool             { return l.head == nil && l.tail == nil }
func (l RuneList) IsNotEmpty() bool          { return !l.IsEmpty() }
func (l ByteList) IsEmpty() bool             { return l.head == nil && l.tail == nil }
func (l ByteList) IsNotEmpty() bool          { return !l.IsEmpty() }
func (l IntList) IsEmpty() bool              { return l.head == nil && l.tail == nil }
func (l IntList) IsNotEmpty() bool           { return !l.IsEmpty() }
func (l Int8List) IsEmpty() bool             { return l.head == nil && l.tail == nil }
func (l Int8List) IsNotEmpty() bool          { return !l.IsEmpty() }
func (l Int16List) IsEmpty() bool            { return l.head == nil && l.tail == nil }
func (l Int16List) IsNotEmpty() bool         { return !l.IsEmpty() }
func (l Int32List) IsEmpty() bool            { return l.head == nil && l.tail == nil }
func (l Int32List) IsNotEmpty() bool         { return !l.IsEmpty() }
func (l Int64List) IsEmpty() bool            { return l.head == nil && l.tail == nil }
func (l Int64List) IsNotEmpty() bool         { return !l.IsEmpty() }
func (l UintList) IsEmpty() bool             { return l.head == nil && l.tail == nil }
func (l UintList) IsNotEmpty() bool          { return !l.IsEmpty() }
func (l Uint8List) IsEmpty() bool            { return l.head == nil && l.tail == nil }
func (l Uint8List) IsNotEmpty() bool         { return !l.IsEmpty() }
func (l Uint16List) IsEmpty() bool           { return l.head == nil && l.tail == nil }
func (l Uint16List) IsNotEmpty() bool        { return !l.IsEmpty() }
func (l Uint32List) IsEmpty() bool           { return l.head == nil && l.tail == nil }
func (l Uint32List) IsNotEmpty() bool        { return !l.IsEmpty() }
func (l Uint64List) IsEmpty() bool           { return l.head == nil && l.tail == nil }
func (l Uint64List) IsNotEmpty() bool        { return !l.IsEmpty() }
func (l UintptrList) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l UintptrList) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l Float32List) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l Float32List) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l Float64List) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l Float64List) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l Complex64List) IsEmpty() bool        { return l.head == nil && l.tail == nil }
func (l Complex64List) IsNotEmpty() bool     { return !l.IsEmpty() }
func (l Complex128List) IsEmpty() bool       { return l.head == nil && l.tail == nil }
func (l Complex128List) IsNotEmpty() bool    { return !l.IsEmpty() }
func (l StringList) IsEmpty() bool           { return l.head == nil && l.tail == nil }
func (l StringList) IsNotEmpty() bool        { return !l.IsEmpty() }
func (l AnyList) IsEmpty() bool              { return l.head == nil && l.tail == nil }
func (l AnyList) IsNotEmpty() bool           { return !l.IsEmpty() }
func (l BoolArrList) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l BoolArrList) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l RuneArrList) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l RuneArrList) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l ByteArrList) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l ByteArrList) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l IntArrList) IsEmpty() bool           { return l.head == nil && l.tail == nil }
func (l IntArrList) IsNotEmpty() bool        { return !l.IsEmpty() }
func (l Int8ArrList) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l Int8ArrList) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l Int16ArrList) IsEmpty() bool         { return l.head == nil && l.tail == nil }
func (l Int16ArrList) IsNotEmpty() bool      { return !l.IsEmpty() }
func (l Int32ArrList) IsEmpty() bool         { return l.head == nil && l.tail == nil }
func (l Int32ArrList) IsNotEmpty() bool      { return !l.IsEmpty() }
func (l Int64ArrList) IsEmpty() bool         { return l.head == nil && l.tail == nil }
func (l Int64ArrList) IsNotEmpty() bool      { return !l.IsEmpty() }
func (l UintArrList) IsEmpty() bool          { return l.head == nil && l.tail == nil }
func (l UintArrList) IsNotEmpty() bool       { return !l.IsEmpty() }
func (l Uint8ArrList) IsEmpty() bool         { return l.head == nil && l.tail == nil }
func (l Uint8ArrList) IsNotEmpty() bool      { return !l.IsEmpty() }
func (l Uint16ArrList) IsEmpty() bool        { return l.head == nil && l.tail == nil }
func (l Uint16ArrList) IsNotEmpty() bool     { return !l.IsEmpty() }
func (l Uint32ArrList) IsEmpty() bool        { return l.head == nil && l.tail == nil }
func (l Uint32ArrList) IsNotEmpty() bool     { return !l.IsEmpty() }
func (l Uint64ArrList) IsEmpty() bool        { return l.head == nil && l.tail == nil }
func (l Uint64ArrList) IsNotEmpty() bool     { return !l.IsEmpty() }
func (l UintptrArrList) IsEmpty() bool       { return l.head == nil && l.tail == nil }
func (l UintptrArrList) IsNotEmpty() bool    { return !l.IsEmpty() }
func (l Float32ArrList) IsEmpty() bool       { return l.head == nil && l.tail == nil }
func (l Float32ArrList) IsNotEmpty() bool    { return !l.IsEmpty() }
func (l Float64ArrList) IsEmpty() bool       { return l.head == nil && l.tail == nil }
func (l Float64ArrList) IsNotEmpty() bool    { return !l.IsEmpty() }
func (l Complex64ArrList) IsEmpty() bool     { return l.head == nil && l.tail == nil }
func (l Complex64ArrList) IsNotEmpty() bool  { return !l.IsEmpty() }
func (l Complex128ArrList) IsEmpty() bool    { return l.head == nil && l.tail == nil }
func (l Complex128ArrList) IsNotEmpty() bool { return !l.IsEmpty() }
func (l StringArrList) IsEmpty() bool        { return l.head == nil && l.tail == nil }
func (l StringArrList) IsNotEmpty() bool     { return !l.IsEmpty() }
func (l AnyArrList) IsEmpty() bool           { return l.head == nil && l.tail == nil }
func (l AnyArrList) IsNotEmpty() bool        { return !l.IsEmpty() }
