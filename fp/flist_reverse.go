// flist_reverse.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY gofp-bootstrap

package fp

func (l BoolList) Reverse() BoolList {
	xs := NilBool
	l.Foreach(func(e bool) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l RuneList) Reverse() RuneList {
	xs := NilRune
	l.Foreach(func(e rune) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l ByteList) Reverse() ByteList {
	xs := NilByte
	l.Foreach(func(e byte) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l IntList) Reverse() IntList {
	xs := NilInt
	l.Foreach(func(e int) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int8List) Reverse() Int8List {
	xs := NilInt8
	l.Foreach(func(e int8) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int16List) Reverse() Int16List {
	xs := NilInt16
	l.Foreach(func(e int16) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int32List) Reverse() Int32List {
	xs := NilInt32
	l.Foreach(func(e int32) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int64List) Reverse() Int64List {
	xs := NilInt64
	l.Foreach(func(e int64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l UintList) Reverse() UintList {
	xs := NilUint
	l.Foreach(func(e uint) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint8List) Reverse() Uint8List {
	xs := NilUint8
	l.Foreach(func(e uint8) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint16List) Reverse() Uint16List {
	xs := NilUint16
	l.Foreach(func(e uint16) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint32List) Reverse() Uint32List {
	xs := NilUint32
	l.Foreach(func(e uint32) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint64List) Reverse() Uint64List {
	xs := NilUint64
	l.Foreach(func(e uint64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l UintptrList) Reverse() UintptrList {
	xs := NilUintptr
	l.Foreach(func(e uintptr) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Float32List) Reverse() Float32List {
	xs := NilFloat32
	l.Foreach(func(e float32) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Float64List) Reverse() Float64List {
	xs := NilFloat64
	l.Foreach(func(e float64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Complex64List) Reverse() Complex64List {
	xs := NilComplex64
	l.Foreach(func(e complex64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Complex128List) Reverse() Complex128List {
	xs := NilComplex128
	l.Foreach(func(e complex128) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l StringList) Reverse() StringList {
	xs := NilString
	l.Foreach(func(e string) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l AnyList) Reverse() AnyList {
	xs := NilAny
	l.Foreach(func(e Any) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l BoolArrList) Reverse() BoolArrList {
	xs := NilBoolArr
	l.Foreach(func(e []bool) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l RuneArrList) Reverse() RuneArrList {
	xs := NilRuneArr
	l.Foreach(func(e []rune) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l ByteArrList) Reverse() ByteArrList {
	xs := NilByteArr
	l.Foreach(func(e []byte) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l IntArrList) Reverse() IntArrList {
	xs := NilIntArr
	l.Foreach(func(e []int) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int8ArrList) Reverse() Int8ArrList {
	xs := NilInt8Arr
	l.Foreach(func(e []int8) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int16ArrList) Reverse() Int16ArrList {
	xs := NilInt16Arr
	l.Foreach(func(e []int16) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int32ArrList) Reverse() Int32ArrList {
	xs := NilInt32Arr
	l.Foreach(func(e []int32) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Int64ArrList) Reverse() Int64ArrList {
	xs := NilInt64Arr
	l.Foreach(func(e []int64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l UintArrList) Reverse() UintArrList {
	xs := NilUintArr
	l.Foreach(func(e []uint) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint8ArrList) Reverse() Uint8ArrList {
	xs := NilUint8Arr
	l.Foreach(func(e []uint8) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint16ArrList) Reverse() Uint16ArrList {
	xs := NilUint16Arr
	l.Foreach(func(e []uint16) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint32ArrList) Reverse() Uint32ArrList {
	xs := NilUint32Arr
	l.Foreach(func(e []uint32) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Uint64ArrList) Reverse() Uint64ArrList {
	xs := NilUint64Arr
	l.Foreach(func(e []uint64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l UintptrArrList) Reverse() UintptrArrList {
	xs := NilUintptrArr
	l.Foreach(func(e []uintptr) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Float32ArrList) Reverse() Float32ArrList {
	xs := NilFloat32Arr
	l.Foreach(func(e []float32) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Float64ArrList) Reverse() Float64ArrList {
	xs := NilFloat64Arr
	l.Foreach(func(e []float64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Complex64ArrList) Reverse() Complex64ArrList {
	xs := NilComplex64Arr
	l.Foreach(func(e []complex64) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l Complex128ArrList) Reverse() Complex128ArrList {
	xs := NilComplex128Arr
	l.Foreach(func(e []complex128) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l StringArrList) Reverse() StringArrList {
	xs := NilStringArr
	l.Foreach(func(e []string) {
		xs = xs.Cons(e)
	})
	return xs
}

func (l AnyArrList) Reverse() AnyArrList {
	xs := NilAnyArr
	l.Foreach(func(e []Any) {
		xs = xs.Cons(e)
	})
	return xs
}
