// ftransformer_map.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY gofp-bootstrap

package fp

func (f1 BoolBoolTransformer) MapBool(f2 BoolBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapRune(f2 BoolRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapByte(f2 BoolByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapInt(f2 BoolIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapInt64(f2 BoolInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapUint(f2 BoolUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapUint64(f2 BoolUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapString(f2 BoolStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolBoolTransformer) MapAny(f2 BoolAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapBool(f2 RuneBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapRune(f2 RuneRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapByte(f2 RuneByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapInt(f2 RuneIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapInt64(f2 RuneInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapUint(f2 RuneUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapUint64(f2 RuneUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapString(f2 RuneStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolRuneTransformer) MapAny(f2 RuneAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapBool(f2 ByteBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapRune(f2 ByteRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapByte(f2 ByteByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapInt(f2 ByteIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapInt64(f2 ByteInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapUint(f2 ByteUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapUint64(f2 ByteUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapFloat32(f2 ByteFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapFloat64(f2 ByteFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapString(f2 ByteStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolByteTransformer) MapAny(f2 ByteAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapBool(f2 IntBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapRune(f2 IntRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapByte(f2 IntByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapInt(f2 IntIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapInt64(f2 IntInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapUint(f2 IntUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapUint64(f2 IntUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapFloat32(f2 IntFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapFloat64(f2 IntFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapString(f2 IntStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolIntTransformer) MapAny(f2 IntAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapBool(f2 Int64BoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapRune(f2 Int64RuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapByte(f2 Int64ByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapInt(f2 Int64IntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapInt64(f2 Int64Int64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapUint(f2 Int64UintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapUint64(f2 Int64Uint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapFloat32(f2 Int64Float32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapFloat64(f2 Int64Float64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapString(f2 Int64StringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolInt64Transformer) MapAny(f2 Int64AnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapBool(f2 UintBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapRune(f2 UintRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapByte(f2 UintByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapInt(f2 UintIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapInt64(f2 UintInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapUint(f2 UintUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapUint64(f2 UintUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapFloat32(f2 UintFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapFloat64(f2 UintFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapString(f2 UintStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolUintTransformer) MapAny(f2 UintAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapBool(f2 Uint64BoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapRune(f2 Uint64RuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapByte(f2 Uint64ByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapInt(f2 Uint64IntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapInt64(f2 Uint64Int64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapUint(f2 Uint64UintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapString(f2 Uint64StringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolUint64Transformer) MapAny(f2 Uint64AnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapBool(f2 Float32BoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapRune(f2 Float32RuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapByte(f2 Float32ByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapInt(f2 Float32IntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapInt64(f2 Float32Int64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapUint(f2 Float32UintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapString(f2 Float32StringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolFloat32Transformer) MapAny(f2 Float32AnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapBool(f2 Float64BoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapRune(f2 Float64RuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapByte(f2 Float64ByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapInt(f2 Float64IntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapInt64(f2 Float64Int64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapUint(f2 Float64UintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapString(f2 Float64StringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolFloat64Transformer) MapAny(f2 Float64AnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapBool(f2 StringBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapRune(f2 StringRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapByte(f2 StringByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapInt(f2 StringIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapInt64(f2 StringInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapUint(f2 StringUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapUint64(f2 StringUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapFloat32(f2 StringFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapFloat64(f2 StringFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapString(f2 StringStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolStringTransformer) MapAny(f2 StringAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapBool(f2 AnyBoolTransformer) BoolBoolTransformer {
	return func(e bool) bool { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapRune(f2 AnyRuneTransformer) BoolRuneTransformer {
	return func(e bool) rune { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapByte(f2 AnyByteTransformer) BoolByteTransformer {
	return func(e bool) byte { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapInt(f2 AnyIntTransformer) BoolIntTransformer {
	return func(e bool) int { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapInt64(f2 AnyInt64Transformer) BoolInt64Transformer {
	return func(e bool) int64 { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapUint(f2 AnyUintTransformer) BoolUintTransformer {
	return func(e bool) uint { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapUint64(f2 AnyUint64Transformer) BoolUint64Transformer {
	return func(e bool) uint64 { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) BoolFloat32Transformer {
	return func(e bool) float32 { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) BoolFloat64Transformer {
	return func(e bool) float64 { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapString(f2 AnyStringTransformer) BoolStringTransformer {
	return func(e bool) string { return f2(f1(e)) }
}
func (f1 BoolAnyTransformer) MapAny(f2 AnyAnyTransformer) BoolAnyTransformer {
	return func(e bool) Any { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapBool(f2 BoolBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapRune(f2 BoolRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapByte(f2 BoolByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapInt(f2 BoolIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapInt64(f2 BoolInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapUint(f2 BoolUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapUint64(f2 BoolUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapString(f2 BoolStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneBoolTransformer) MapAny(f2 BoolAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapBool(f2 RuneBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapRune(f2 RuneRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapByte(f2 RuneByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapInt(f2 RuneIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapInt64(f2 RuneInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapUint(f2 RuneUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapUint64(f2 RuneUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapString(f2 RuneStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneRuneTransformer) MapAny(f2 RuneAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapBool(f2 ByteBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapRune(f2 ByteRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapByte(f2 ByteByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapInt(f2 ByteIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapInt64(f2 ByteInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapUint(f2 ByteUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapUint64(f2 ByteUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapFloat32(f2 ByteFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapFloat64(f2 ByteFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapString(f2 ByteStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneByteTransformer) MapAny(f2 ByteAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapBool(f2 IntBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapRune(f2 IntRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapByte(f2 IntByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapInt(f2 IntIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapInt64(f2 IntInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapUint(f2 IntUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapUint64(f2 IntUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapFloat32(f2 IntFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapFloat64(f2 IntFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapString(f2 IntStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneIntTransformer) MapAny(f2 IntAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapBool(f2 Int64BoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapRune(f2 Int64RuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapByte(f2 Int64ByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapInt(f2 Int64IntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapInt64(f2 Int64Int64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapUint(f2 Int64UintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapUint64(f2 Int64Uint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapFloat32(f2 Int64Float32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapFloat64(f2 Int64Float64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapString(f2 Int64StringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneInt64Transformer) MapAny(f2 Int64AnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapBool(f2 UintBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapRune(f2 UintRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapByte(f2 UintByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapInt(f2 UintIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapInt64(f2 UintInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapUint(f2 UintUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapUint64(f2 UintUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapFloat32(f2 UintFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapFloat64(f2 UintFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapString(f2 UintStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneUintTransformer) MapAny(f2 UintAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapBool(f2 Uint64BoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapRune(f2 Uint64RuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapByte(f2 Uint64ByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapInt(f2 Uint64IntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapInt64(f2 Uint64Int64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapUint(f2 Uint64UintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapString(f2 Uint64StringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneUint64Transformer) MapAny(f2 Uint64AnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapBool(f2 Float32BoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapRune(f2 Float32RuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapByte(f2 Float32ByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapInt(f2 Float32IntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapInt64(f2 Float32Int64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapUint(f2 Float32UintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapString(f2 Float32StringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneFloat32Transformer) MapAny(f2 Float32AnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapBool(f2 Float64BoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapRune(f2 Float64RuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapByte(f2 Float64ByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapInt(f2 Float64IntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapInt64(f2 Float64Int64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapUint(f2 Float64UintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapString(f2 Float64StringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneFloat64Transformer) MapAny(f2 Float64AnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapBool(f2 StringBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapRune(f2 StringRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapByte(f2 StringByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapInt(f2 StringIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapInt64(f2 StringInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapUint(f2 StringUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapUint64(f2 StringUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapFloat32(f2 StringFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapFloat64(f2 StringFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapString(f2 StringStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneStringTransformer) MapAny(f2 StringAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapBool(f2 AnyBoolTransformer) RuneBoolTransformer {
	return func(e rune) bool { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapRune(f2 AnyRuneTransformer) RuneRuneTransformer {
	return func(e rune) rune { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapByte(f2 AnyByteTransformer) RuneByteTransformer {
	return func(e rune) byte { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapInt(f2 AnyIntTransformer) RuneIntTransformer {
	return func(e rune) int { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapInt64(f2 AnyInt64Transformer) RuneInt64Transformer {
	return func(e rune) int64 { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapUint(f2 AnyUintTransformer) RuneUintTransformer {
	return func(e rune) uint { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapUint64(f2 AnyUint64Transformer) RuneUint64Transformer {
	return func(e rune) uint64 { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) RuneFloat32Transformer {
	return func(e rune) float32 { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) RuneFloat64Transformer {
	return func(e rune) float64 { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapString(f2 AnyStringTransformer) RuneStringTransformer {
	return func(e rune) string { return f2(f1(e)) }
}
func (f1 RuneAnyTransformer) MapAny(f2 AnyAnyTransformer) RuneAnyTransformer {
	return func(e rune) Any { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapBool(f2 BoolBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapRune(f2 BoolRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapByte(f2 BoolByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapInt(f2 BoolIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapInt64(f2 BoolInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapUint(f2 BoolUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapUint64(f2 BoolUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapString(f2 BoolStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteBoolTransformer) MapAny(f2 BoolAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapBool(f2 RuneBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapRune(f2 RuneRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapByte(f2 RuneByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapInt(f2 RuneIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapInt64(f2 RuneInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapUint(f2 RuneUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapUint64(f2 RuneUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapString(f2 RuneStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteRuneTransformer) MapAny(f2 RuneAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapBool(f2 ByteBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapRune(f2 ByteRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapByte(f2 ByteByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapInt(f2 ByteIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapInt64(f2 ByteInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapUint(f2 ByteUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapUint64(f2 ByteUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapFloat32(f2 ByteFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapFloat64(f2 ByteFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapString(f2 ByteStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteByteTransformer) MapAny(f2 ByteAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapBool(f2 IntBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapRune(f2 IntRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapByte(f2 IntByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapInt(f2 IntIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapInt64(f2 IntInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapUint(f2 IntUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapUint64(f2 IntUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapFloat32(f2 IntFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapFloat64(f2 IntFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapString(f2 IntStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteIntTransformer) MapAny(f2 IntAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapBool(f2 Int64BoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapRune(f2 Int64RuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapByte(f2 Int64ByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapInt(f2 Int64IntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapInt64(f2 Int64Int64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapUint(f2 Int64UintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapUint64(f2 Int64Uint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapFloat32(f2 Int64Float32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapFloat64(f2 Int64Float64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapString(f2 Int64StringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteInt64Transformer) MapAny(f2 Int64AnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapBool(f2 UintBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapRune(f2 UintRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapByte(f2 UintByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapInt(f2 UintIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapInt64(f2 UintInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapUint(f2 UintUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapUint64(f2 UintUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapFloat32(f2 UintFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapFloat64(f2 UintFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapString(f2 UintStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteUintTransformer) MapAny(f2 UintAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapBool(f2 Uint64BoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapRune(f2 Uint64RuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapByte(f2 Uint64ByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapInt(f2 Uint64IntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapInt64(f2 Uint64Int64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapUint(f2 Uint64UintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapString(f2 Uint64StringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteUint64Transformer) MapAny(f2 Uint64AnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapBool(f2 Float32BoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapRune(f2 Float32RuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapByte(f2 Float32ByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapInt(f2 Float32IntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapInt64(f2 Float32Int64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapUint(f2 Float32UintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapString(f2 Float32StringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteFloat32Transformer) MapAny(f2 Float32AnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapBool(f2 Float64BoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapRune(f2 Float64RuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapByte(f2 Float64ByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapInt(f2 Float64IntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapInt64(f2 Float64Int64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapUint(f2 Float64UintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapString(f2 Float64StringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteFloat64Transformer) MapAny(f2 Float64AnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapBool(f2 StringBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapRune(f2 StringRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapByte(f2 StringByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapInt(f2 StringIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapInt64(f2 StringInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapUint(f2 StringUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapUint64(f2 StringUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapFloat32(f2 StringFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapFloat64(f2 StringFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapString(f2 StringStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteStringTransformer) MapAny(f2 StringAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapBool(f2 AnyBoolTransformer) ByteBoolTransformer {
	return func(e byte) bool { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapRune(f2 AnyRuneTransformer) ByteRuneTransformer {
	return func(e byte) rune { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapByte(f2 AnyByteTransformer) ByteByteTransformer {
	return func(e byte) byte { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapInt(f2 AnyIntTransformer) ByteIntTransformer {
	return func(e byte) int { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapInt64(f2 AnyInt64Transformer) ByteInt64Transformer {
	return func(e byte) int64 { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapUint(f2 AnyUintTransformer) ByteUintTransformer {
	return func(e byte) uint { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapUint64(f2 AnyUint64Transformer) ByteUint64Transformer {
	return func(e byte) uint64 { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) ByteFloat32Transformer {
	return func(e byte) float32 { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) ByteFloat64Transformer {
	return func(e byte) float64 { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapString(f2 AnyStringTransformer) ByteStringTransformer {
	return func(e byte) string { return f2(f1(e)) }
}
func (f1 ByteAnyTransformer) MapAny(f2 AnyAnyTransformer) ByteAnyTransformer {
	return func(e byte) Any { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapBool(f2 BoolBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapRune(f2 BoolRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapByte(f2 BoolByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapInt(f2 BoolIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapInt64(f2 BoolInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapUint(f2 BoolUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapUint64(f2 BoolUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapString(f2 BoolStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntBoolTransformer) MapAny(f2 BoolAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapBool(f2 RuneBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapRune(f2 RuneRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapByte(f2 RuneByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapInt(f2 RuneIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapInt64(f2 RuneInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapUint(f2 RuneUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapUint64(f2 RuneUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapString(f2 RuneStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntRuneTransformer) MapAny(f2 RuneAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapBool(f2 ByteBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapRune(f2 ByteRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapByte(f2 ByteByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapInt(f2 ByteIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapInt64(f2 ByteInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapUint(f2 ByteUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapUint64(f2 ByteUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapFloat32(f2 ByteFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapFloat64(f2 ByteFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapString(f2 ByteStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntByteTransformer) MapAny(f2 ByteAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapBool(f2 IntBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapRune(f2 IntRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapByte(f2 IntByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapInt(f2 IntIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapInt64(f2 IntInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapUint(f2 IntUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapUint64(f2 IntUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapFloat32(f2 IntFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapFloat64(f2 IntFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapString(f2 IntStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntIntTransformer) MapAny(f2 IntAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapBool(f2 Int64BoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapRune(f2 Int64RuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapByte(f2 Int64ByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapInt(f2 Int64IntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapInt64(f2 Int64Int64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapUint(f2 Int64UintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapUint64(f2 Int64Uint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapFloat32(f2 Int64Float32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapFloat64(f2 Int64Float64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapString(f2 Int64StringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntInt64Transformer) MapAny(f2 Int64AnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapBool(f2 UintBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapRune(f2 UintRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapByte(f2 UintByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapInt(f2 UintIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapInt64(f2 UintInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapUint(f2 UintUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapUint64(f2 UintUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapFloat32(f2 UintFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapFloat64(f2 UintFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapString(f2 UintStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntUintTransformer) MapAny(f2 UintAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapBool(f2 Uint64BoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapRune(f2 Uint64RuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapByte(f2 Uint64ByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapInt(f2 Uint64IntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapInt64(f2 Uint64Int64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapUint(f2 Uint64UintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapString(f2 Uint64StringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntUint64Transformer) MapAny(f2 Uint64AnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapBool(f2 Float32BoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapRune(f2 Float32RuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapByte(f2 Float32ByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapInt(f2 Float32IntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapInt64(f2 Float32Int64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapUint(f2 Float32UintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapString(f2 Float32StringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntFloat32Transformer) MapAny(f2 Float32AnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapBool(f2 Float64BoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapRune(f2 Float64RuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapByte(f2 Float64ByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapInt(f2 Float64IntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapInt64(f2 Float64Int64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapUint(f2 Float64UintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapString(f2 Float64StringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntFloat64Transformer) MapAny(f2 Float64AnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapBool(f2 StringBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapRune(f2 StringRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapByte(f2 StringByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapInt(f2 StringIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapInt64(f2 StringInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapUint(f2 StringUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapUint64(f2 StringUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapFloat32(f2 StringFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapFloat64(f2 StringFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapString(f2 StringStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntStringTransformer) MapAny(f2 StringAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapBool(f2 AnyBoolTransformer) IntBoolTransformer {
	return func(e int) bool { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapRune(f2 AnyRuneTransformer) IntRuneTransformer {
	return func(e int) rune { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapByte(f2 AnyByteTransformer) IntByteTransformer {
	return func(e int) byte { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapInt(f2 AnyIntTransformer) IntIntTransformer {
	return func(e int) int { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapInt64(f2 AnyInt64Transformer) IntInt64Transformer {
	return func(e int) int64 { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapUint(f2 AnyUintTransformer) IntUintTransformer {
	return func(e int) uint { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapUint64(f2 AnyUint64Transformer) IntUint64Transformer {
	return func(e int) uint64 { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) IntFloat32Transformer {
	return func(e int) float32 { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) IntFloat64Transformer {
	return func(e int) float64 { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapString(f2 AnyStringTransformer) IntStringTransformer {
	return func(e int) string { return f2(f1(e)) }
}
func (f1 IntAnyTransformer) MapAny(f2 AnyAnyTransformer) IntAnyTransformer {
	return func(e int) Any { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapBool(f2 BoolBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapRune(f2 BoolRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapByte(f2 BoolByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapInt(f2 BoolIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapInt64(f2 BoolInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapUint(f2 BoolUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapUint64(f2 BoolUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapFloat32(f2 BoolFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapFloat64(f2 BoolFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapString(f2 BoolStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64BoolTransformer) MapAny(f2 BoolAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapBool(f2 RuneBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapRune(f2 RuneRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapByte(f2 RuneByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapInt(f2 RuneIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapInt64(f2 RuneInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapUint(f2 RuneUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapUint64(f2 RuneUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapFloat32(f2 RuneFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapFloat64(f2 RuneFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapString(f2 RuneStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64RuneTransformer) MapAny(f2 RuneAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapBool(f2 ByteBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapRune(f2 ByteRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapByte(f2 ByteByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapInt(f2 ByteIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapInt64(f2 ByteInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapUint(f2 ByteUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapUint64(f2 ByteUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapFloat32(f2 ByteFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapFloat64(f2 ByteFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapString(f2 ByteStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64ByteTransformer) MapAny(f2 ByteAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapBool(f2 IntBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapRune(f2 IntRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapByte(f2 IntByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapInt(f2 IntIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapInt64(f2 IntInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapUint(f2 IntUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapUint64(f2 IntUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapFloat32(f2 IntFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapFloat64(f2 IntFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapString(f2 IntStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64IntTransformer) MapAny(f2 IntAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapBool(f2 Int64BoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapRune(f2 Int64RuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapByte(f2 Int64ByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapInt(f2 Int64IntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapInt64(f2 Int64Int64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapUint(f2 Int64UintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapUint64(f2 Int64Uint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapFloat32(f2 Int64Float32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapFloat64(f2 Int64Float64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapString(f2 Int64StringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64Int64Transformer) MapAny(f2 Int64AnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapBool(f2 UintBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapRune(f2 UintRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapByte(f2 UintByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapInt(f2 UintIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapInt64(f2 UintInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapUint(f2 UintUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapUint64(f2 UintUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapFloat32(f2 UintFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapFloat64(f2 UintFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapString(f2 UintStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64UintTransformer) MapAny(f2 UintAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapBool(f2 Uint64BoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapRune(f2 Uint64RuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapByte(f2 Uint64ByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapInt(f2 Uint64IntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapInt64(f2 Uint64Int64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapUint(f2 Uint64UintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapUint64(f2 Uint64Uint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapFloat32(f2 Uint64Float32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapFloat64(f2 Uint64Float64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapString(f2 Uint64StringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64Uint64Transformer) MapAny(f2 Uint64AnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapBool(f2 Float32BoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapRune(f2 Float32RuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapByte(f2 Float32ByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapInt(f2 Float32IntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapInt64(f2 Float32Int64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapUint(f2 Float32UintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapUint64(f2 Float32Uint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapFloat32(f2 Float32Float32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapFloat64(f2 Float32Float64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapString(f2 Float32StringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64Float32Transformer) MapAny(f2 Float32AnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapBool(f2 Float64BoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapRune(f2 Float64RuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapByte(f2 Float64ByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapInt(f2 Float64IntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapInt64(f2 Float64Int64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapUint(f2 Float64UintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapUint64(f2 Float64Uint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapFloat32(f2 Float64Float32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapFloat64(f2 Float64Float64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapString(f2 Float64StringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64Float64Transformer) MapAny(f2 Float64AnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapBool(f2 StringBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapRune(f2 StringRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapByte(f2 StringByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapInt(f2 StringIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapInt64(f2 StringInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapUint(f2 StringUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapUint64(f2 StringUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapFloat32(f2 StringFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapFloat64(f2 StringFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapString(f2 StringStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64StringTransformer) MapAny(f2 StringAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapBool(f2 AnyBoolTransformer) Int64BoolTransformer {
	return func(e int64) bool { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapRune(f2 AnyRuneTransformer) Int64RuneTransformer {
	return func(e int64) rune { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapByte(f2 AnyByteTransformer) Int64ByteTransformer {
	return func(e int64) byte { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapInt(f2 AnyIntTransformer) Int64IntTransformer {
	return func(e int64) int { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapInt64(f2 AnyInt64Transformer) Int64Int64Transformer {
	return func(e int64) int64 { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapUint(f2 AnyUintTransformer) Int64UintTransformer {
	return func(e int64) uint { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapUint64(f2 AnyUint64Transformer) Int64Uint64Transformer {
	return func(e int64) uint64 { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapFloat32(f2 AnyFloat32Transformer) Int64Float32Transformer {
	return func(e int64) float32 { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapFloat64(f2 AnyFloat64Transformer) Int64Float64Transformer {
	return func(e int64) float64 { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapString(f2 AnyStringTransformer) Int64StringTransformer {
	return func(e int64) string { return f2(f1(e)) }
}
func (f1 Int64AnyTransformer) MapAny(f2 AnyAnyTransformer) Int64AnyTransformer {
	return func(e int64) Any { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapBool(f2 BoolBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapRune(f2 BoolRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapByte(f2 BoolByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapInt(f2 BoolIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapInt64(f2 BoolInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapUint(f2 BoolUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapUint64(f2 BoolUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapString(f2 BoolStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintBoolTransformer) MapAny(f2 BoolAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapBool(f2 RuneBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapRune(f2 RuneRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapByte(f2 RuneByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapInt(f2 RuneIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapInt64(f2 RuneInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapUint(f2 RuneUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapUint64(f2 RuneUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapString(f2 RuneStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintRuneTransformer) MapAny(f2 RuneAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapBool(f2 ByteBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapRune(f2 ByteRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapByte(f2 ByteByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapInt(f2 ByteIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapInt64(f2 ByteInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapUint(f2 ByteUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapUint64(f2 ByteUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapFloat32(f2 ByteFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapFloat64(f2 ByteFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapString(f2 ByteStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintByteTransformer) MapAny(f2 ByteAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapBool(f2 IntBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapRune(f2 IntRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapByte(f2 IntByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapInt(f2 IntIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapInt64(f2 IntInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapUint(f2 IntUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapUint64(f2 IntUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapFloat32(f2 IntFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapFloat64(f2 IntFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapString(f2 IntStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintIntTransformer) MapAny(f2 IntAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapBool(f2 Int64BoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapRune(f2 Int64RuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapByte(f2 Int64ByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapInt(f2 Int64IntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapInt64(f2 Int64Int64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapUint(f2 Int64UintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapUint64(f2 Int64Uint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapFloat32(f2 Int64Float32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapFloat64(f2 Int64Float64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapString(f2 Int64StringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintInt64Transformer) MapAny(f2 Int64AnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapBool(f2 UintBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapRune(f2 UintRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapByte(f2 UintByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapInt(f2 UintIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapInt64(f2 UintInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapUint(f2 UintUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapUint64(f2 UintUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapFloat32(f2 UintFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapFloat64(f2 UintFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapString(f2 UintStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintUintTransformer) MapAny(f2 UintAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapBool(f2 Uint64BoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapRune(f2 Uint64RuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapByte(f2 Uint64ByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapInt(f2 Uint64IntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapInt64(f2 Uint64Int64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapUint(f2 Uint64UintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapString(f2 Uint64StringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintUint64Transformer) MapAny(f2 Uint64AnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapBool(f2 Float32BoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapRune(f2 Float32RuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapByte(f2 Float32ByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapInt(f2 Float32IntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapInt64(f2 Float32Int64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapUint(f2 Float32UintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapString(f2 Float32StringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintFloat32Transformer) MapAny(f2 Float32AnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapBool(f2 Float64BoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapRune(f2 Float64RuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapByte(f2 Float64ByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapInt(f2 Float64IntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapInt64(f2 Float64Int64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapUint(f2 Float64UintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapString(f2 Float64StringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintFloat64Transformer) MapAny(f2 Float64AnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapBool(f2 StringBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapRune(f2 StringRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapByte(f2 StringByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapInt(f2 StringIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapInt64(f2 StringInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapUint(f2 StringUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapUint64(f2 StringUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapFloat32(f2 StringFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapFloat64(f2 StringFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapString(f2 StringStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintStringTransformer) MapAny(f2 StringAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapBool(f2 AnyBoolTransformer) UintBoolTransformer {
	return func(e uint) bool { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapRune(f2 AnyRuneTransformer) UintRuneTransformer {
	return func(e uint) rune { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapByte(f2 AnyByteTransformer) UintByteTransformer {
	return func(e uint) byte { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapInt(f2 AnyIntTransformer) UintIntTransformer {
	return func(e uint) int { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapInt64(f2 AnyInt64Transformer) UintInt64Transformer {
	return func(e uint) int64 { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapUint(f2 AnyUintTransformer) UintUintTransformer {
	return func(e uint) uint { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapUint64(f2 AnyUint64Transformer) UintUint64Transformer {
	return func(e uint) uint64 { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) UintFloat32Transformer {
	return func(e uint) float32 { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) UintFloat64Transformer {
	return func(e uint) float64 { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapString(f2 AnyStringTransformer) UintStringTransformer {
	return func(e uint) string { return f2(f1(e)) }
}
func (f1 UintAnyTransformer) MapAny(f2 AnyAnyTransformer) UintAnyTransformer {
	return func(e uint) Any { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapBool(f2 BoolBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapRune(f2 BoolRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapByte(f2 BoolByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapInt(f2 BoolIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapInt64(f2 BoolInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapUint(f2 BoolUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapUint64(f2 BoolUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapFloat32(f2 BoolFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapFloat64(f2 BoolFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapString(f2 BoolStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64BoolTransformer) MapAny(f2 BoolAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapBool(f2 RuneBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapRune(f2 RuneRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapByte(f2 RuneByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapInt(f2 RuneIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapInt64(f2 RuneInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapUint(f2 RuneUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapUint64(f2 RuneUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapFloat32(f2 RuneFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapFloat64(f2 RuneFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapString(f2 RuneStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64RuneTransformer) MapAny(f2 RuneAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapBool(f2 ByteBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapRune(f2 ByteRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapByte(f2 ByteByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapInt(f2 ByteIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapInt64(f2 ByteInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapUint(f2 ByteUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapUint64(f2 ByteUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapFloat32(f2 ByteFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapFloat64(f2 ByteFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapString(f2 ByteStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64ByteTransformer) MapAny(f2 ByteAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapBool(f2 IntBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapRune(f2 IntRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapByte(f2 IntByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapInt(f2 IntIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapInt64(f2 IntInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapUint(f2 IntUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapUint64(f2 IntUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapFloat32(f2 IntFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapFloat64(f2 IntFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapString(f2 IntStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64IntTransformer) MapAny(f2 IntAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapBool(f2 Int64BoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapRune(f2 Int64RuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapByte(f2 Int64ByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapInt(f2 Int64IntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapInt64(f2 Int64Int64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapUint(f2 Int64UintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapUint64(f2 Int64Uint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapFloat32(f2 Int64Float32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapFloat64(f2 Int64Float64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapString(f2 Int64StringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64Int64Transformer) MapAny(f2 Int64AnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapBool(f2 UintBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapRune(f2 UintRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapByte(f2 UintByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapInt(f2 UintIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapInt64(f2 UintInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapUint(f2 UintUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapUint64(f2 UintUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapFloat32(f2 UintFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapFloat64(f2 UintFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapString(f2 UintStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64UintTransformer) MapAny(f2 UintAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapBool(f2 Uint64BoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapRune(f2 Uint64RuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapByte(f2 Uint64ByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapInt(f2 Uint64IntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapInt64(f2 Uint64Int64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapUint(f2 Uint64UintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapUint64(f2 Uint64Uint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapFloat32(f2 Uint64Float32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapFloat64(f2 Uint64Float64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapString(f2 Uint64StringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64Uint64Transformer) MapAny(f2 Uint64AnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapBool(f2 Float32BoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapRune(f2 Float32RuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapByte(f2 Float32ByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapInt(f2 Float32IntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapInt64(f2 Float32Int64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapUint(f2 Float32UintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapUint64(f2 Float32Uint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapFloat32(f2 Float32Float32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapFloat64(f2 Float32Float64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapString(f2 Float32StringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64Float32Transformer) MapAny(f2 Float32AnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapBool(f2 Float64BoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapRune(f2 Float64RuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapByte(f2 Float64ByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapInt(f2 Float64IntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapInt64(f2 Float64Int64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapUint(f2 Float64UintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapUint64(f2 Float64Uint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapFloat32(f2 Float64Float32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapFloat64(f2 Float64Float64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapString(f2 Float64StringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64Float64Transformer) MapAny(f2 Float64AnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapBool(f2 StringBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapRune(f2 StringRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapByte(f2 StringByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapInt(f2 StringIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapInt64(f2 StringInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapUint(f2 StringUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapUint64(f2 StringUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapFloat32(f2 StringFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapFloat64(f2 StringFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapString(f2 StringStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64StringTransformer) MapAny(f2 StringAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapBool(f2 AnyBoolTransformer) Uint64BoolTransformer {
	return func(e uint64) bool { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapRune(f2 AnyRuneTransformer) Uint64RuneTransformer {
	return func(e uint64) rune { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapByte(f2 AnyByteTransformer) Uint64ByteTransformer {
	return func(e uint64) byte { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapInt(f2 AnyIntTransformer) Uint64IntTransformer {
	return func(e uint64) int { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapInt64(f2 AnyInt64Transformer) Uint64Int64Transformer {
	return func(e uint64) int64 { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapUint(f2 AnyUintTransformer) Uint64UintTransformer {
	return func(e uint64) uint { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapUint64(f2 AnyUint64Transformer) Uint64Uint64Transformer {
	return func(e uint64) uint64 { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapFloat32(f2 AnyFloat32Transformer) Uint64Float32Transformer {
	return func(e uint64) float32 { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapFloat64(f2 AnyFloat64Transformer) Uint64Float64Transformer {
	return func(e uint64) float64 { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapString(f2 AnyStringTransformer) Uint64StringTransformer {
	return func(e uint64) string { return f2(f1(e)) }
}
func (f1 Uint64AnyTransformer) MapAny(f2 AnyAnyTransformer) Uint64AnyTransformer {
	return func(e uint64) Any { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapBool(f2 BoolBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapRune(f2 BoolRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapByte(f2 BoolByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapInt(f2 BoolIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapInt64(f2 BoolInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapUint(f2 BoolUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapUint64(f2 BoolUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapFloat32(f2 BoolFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapFloat64(f2 BoolFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapString(f2 BoolStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32BoolTransformer) MapAny(f2 BoolAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapBool(f2 RuneBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapRune(f2 RuneRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapByte(f2 RuneByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapInt(f2 RuneIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapInt64(f2 RuneInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapUint(f2 RuneUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapUint64(f2 RuneUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapFloat32(f2 RuneFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapFloat64(f2 RuneFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapString(f2 RuneStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32RuneTransformer) MapAny(f2 RuneAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapBool(f2 ByteBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapRune(f2 ByteRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapByte(f2 ByteByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapInt(f2 ByteIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapInt64(f2 ByteInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapUint(f2 ByteUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapUint64(f2 ByteUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapFloat32(f2 ByteFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapFloat64(f2 ByteFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapString(f2 ByteStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32ByteTransformer) MapAny(f2 ByteAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapBool(f2 IntBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapRune(f2 IntRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapByte(f2 IntByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapInt(f2 IntIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapInt64(f2 IntInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapUint(f2 IntUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapUint64(f2 IntUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapFloat32(f2 IntFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapFloat64(f2 IntFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapString(f2 IntStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32IntTransformer) MapAny(f2 IntAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapBool(f2 Int64BoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapRune(f2 Int64RuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapByte(f2 Int64ByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapInt(f2 Int64IntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapInt64(f2 Int64Int64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapUint(f2 Int64UintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapUint64(f2 Int64Uint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapFloat32(f2 Int64Float32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapFloat64(f2 Int64Float64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapString(f2 Int64StringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32Int64Transformer) MapAny(f2 Int64AnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapBool(f2 UintBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapRune(f2 UintRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapByte(f2 UintByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapInt(f2 UintIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapInt64(f2 UintInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapUint(f2 UintUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapUint64(f2 UintUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapFloat32(f2 UintFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapFloat64(f2 UintFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapString(f2 UintStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32UintTransformer) MapAny(f2 UintAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapBool(f2 Uint64BoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapRune(f2 Uint64RuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapByte(f2 Uint64ByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapInt(f2 Uint64IntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapInt64(f2 Uint64Int64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapUint(f2 Uint64UintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapUint64(f2 Uint64Uint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapFloat32(f2 Uint64Float32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapFloat64(f2 Uint64Float64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapString(f2 Uint64StringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32Uint64Transformer) MapAny(f2 Uint64AnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapBool(f2 Float32BoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapRune(f2 Float32RuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapByte(f2 Float32ByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapInt(f2 Float32IntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapInt64(f2 Float32Int64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapUint(f2 Float32UintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapUint64(f2 Float32Uint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapFloat32(f2 Float32Float32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapFloat64(f2 Float32Float64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapString(f2 Float32StringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32Float32Transformer) MapAny(f2 Float32AnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapBool(f2 Float64BoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapRune(f2 Float64RuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapByte(f2 Float64ByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapInt(f2 Float64IntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapInt64(f2 Float64Int64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapUint(f2 Float64UintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapUint64(f2 Float64Uint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapFloat32(f2 Float64Float32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapFloat64(f2 Float64Float64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapString(f2 Float64StringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32Float64Transformer) MapAny(f2 Float64AnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapBool(f2 StringBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapRune(f2 StringRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapByte(f2 StringByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapInt(f2 StringIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapInt64(f2 StringInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapUint(f2 StringUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapUint64(f2 StringUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapFloat32(f2 StringFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapFloat64(f2 StringFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapString(f2 StringStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32StringTransformer) MapAny(f2 StringAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapBool(f2 AnyBoolTransformer) Float32BoolTransformer {
	return func(e float32) bool { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapRune(f2 AnyRuneTransformer) Float32RuneTransformer {
	return func(e float32) rune { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapByte(f2 AnyByteTransformer) Float32ByteTransformer {
	return func(e float32) byte { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapInt(f2 AnyIntTransformer) Float32IntTransformer {
	return func(e float32) int { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapInt64(f2 AnyInt64Transformer) Float32Int64Transformer {
	return func(e float32) int64 { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapUint(f2 AnyUintTransformer) Float32UintTransformer {
	return func(e float32) uint { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapUint64(f2 AnyUint64Transformer) Float32Uint64Transformer {
	return func(e float32) uint64 { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapFloat32(f2 AnyFloat32Transformer) Float32Float32Transformer {
	return func(e float32) float32 { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapFloat64(f2 AnyFloat64Transformer) Float32Float64Transformer {
	return func(e float32) float64 { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapString(f2 AnyStringTransformer) Float32StringTransformer {
	return func(e float32) string { return f2(f1(e)) }
}
func (f1 Float32AnyTransformer) MapAny(f2 AnyAnyTransformer) Float32AnyTransformer {
	return func(e float32) Any { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapBool(f2 BoolBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapRune(f2 BoolRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapByte(f2 BoolByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapInt(f2 BoolIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapInt64(f2 BoolInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapUint(f2 BoolUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapUint64(f2 BoolUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapFloat32(f2 BoolFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapFloat64(f2 BoolFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapString(f2 BoolStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64BoolTransformer) MapAny(f2 BoolAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapBool(f2 RuneBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapRune(f2 RuneRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapByte(f2 RuneByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapInt(f2 RuneIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapInt64(f2 RuneInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapUint(f2 RuneUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapUint64(f2 RuneUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapFloat32(f2 RuneFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapFloat64(f2 RuneFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapString(f2 RuneStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64RuneTransformer) MapAny(f2 RuneAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapBool(f2 ByteBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapRune(f2 ByteRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapByte(f2 ByteByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapInt(f2 ByteIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapInt64(f2 ByteInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapUint(f2 ByteUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapUint64(f2 ByteUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapFloat32(f2 ByteFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapFloat64(f2 ByteFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapString(f2 ByteStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64ByteTransformer) MapAny(f2 ByteAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapBool(f2 IntBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapRune(f2 IntRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapByte(f2 IntByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapInt(f2 IntIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapInt64(f2 IntInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapUint(f2 IntUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapUint64(f2 IntUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapFloat32(f2 IntFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapFloat64(f2 IntFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapString(f2 IntStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64IntTransformer) MapAny(f2 IntAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapBool(f2 Int64BoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapRune(f2 Int64RuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapByte(f2 Int64ByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapInt(f2 Int64IntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapInt64(f2 Int64Int64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapUint(f2 Int64UintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapUint64(f2 Int64Uint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapFloat32(f2 Int64Float32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapFloat64(f2 Int64Float64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapString(f2 Int64StringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64Int64Transformer) MapAny(f2 Int64AnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapBool(f2 UintBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapRune(f2 UintRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapByte(f2 UintByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapInt(f2 UintIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapInt64(f2 UintInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapUint(f2 UintUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapUint64(f2 UintUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapFloat32(f2 UintFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapFloat64(f2 UintFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapString(f2 UintStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64UintTransformer) MapAny(f2 UintAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapBool(f2 Uint64BoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapRune(f2 Uint64RuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapByte(f2 Uint64ByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapInt(f2 Uint64IntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapInt64(f2 Uint64Int64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapUint(f2 Uint64UintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapUint64(f2 Uint64Uint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapFloat32(f2 Uint64Float32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapFloat64(f2 Uint64Float64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapString(f2 Uint64StringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64Uint64Transformer) MapAny(f2 Uint64AnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapBool(f2 Float32BoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapRune(f2 Float32RuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapByte(f2 Float32ByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapInt(f2 Float32IntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapInt64(f2 Float32Int64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapUint(f2 Float32UintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapUint64(f2 Float32Uint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapFloat32(f2 Float32Float32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapFloat64(f2 Float32Float64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapString(f2 Float32StringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64Float32Transformer) MapAny(f2 Float32AnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapBool(f2 Float64BoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapRune(f2 Float64RuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapByte(f2 Float64ByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapInt(f2 Float64IntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapInt64(f2 Float64Int64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapUint(f2 Float64UintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapUint64(f2 Float64Uint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapFloat32(f2 Float64Float32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapFloat64(f2 Float64Float64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapString(f2 Float64StringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64Float64Transformer) MapAny(f2 Float64AnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapBool(f2 StringBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapRune(f2 StringRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapByte(f2 StringByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapInt(f2 StringIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapInt64(f2 StringInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapUint(f2 StringUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapUint64(f2 StringUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapFloat32(f2 StringFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapFloat64(f2 StringFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapString(f2 StringStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64StringTransformer) MapAny(f2 StringAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapBool(f2 AnyBoolTransformer) Float64BoolTransformer {
	return func(e float64) bool { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapRune(f2 AnyRuneTransformer) Float64RuneTransformer {
	return func(e float64) rune { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapByte(f2 AnyByteTransformer) Float64ByteTransformer {
	return func(e float64) byte { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapInt(f2 AnyIntTransformer) Float64IntTransformer {
	return func(e float64) int { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapInt64(f2 AnyInt64Transformer) Float64Int64Transformer {
	return func(e float64) int64 { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapUint(f2 AnyUintTransformer) Float64UintTransformer {
	return func(e float64) uint { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapUint64(f2 AnyUint64Transformer) Float64Uint64Transformer {
	return func(e float64) uint64 { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapFloat32(f2 AnyFloat32Transformer) Float64Float32Transformer {
	return func(e float64) float32 { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapFloat64(f2 AnyFloat64Transformer) Float64Float64Transformer {
	return func(e float64) float64 { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapString(f2 AnyStringTransformer) Float64StringTransformer {
	return func(e float64) string { return f2(f1(e)) }
}
func (f1 Float64AnyTransformer) MapAny(f2 AnyAnyTransformer) Float64AnyTransformer {
	return func(e float64) Any { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapBool(f2 BoolBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapRune(f2 BoolRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapByte(f2 BoolByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapInt(f2 BoolIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapInt64(f2 BoolInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapUint(f2 BoolUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapUint64(f2 BoolUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapString(f2 BoolStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringBoolTransformer) MapAny(f2 BoolAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapBool(f2 RuneBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapRune(f2 RuneRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapByte(f2 RuneByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapInt(f2 RuneIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapInt64(f2 RuneInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapUint(f2 RuneUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapUint64(f2 RuneUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapString(f2 RuneStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringRuneTransformer) MapAny(f2 RuneAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapBool(f2 ByteBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapRune(f2 ByteRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapByte(f2 ByteByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapInt(f2 ByteIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapInt64(f2 ByteInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapUint(f2 ByteUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapUint64(f2 ByteUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapFloat32(f2 ByteFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapFloat64(f2 ByteFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapString(f2 ByteStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringByteTransformer) MapAny(f2 ByteAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapBool(f2 IntBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapRune(f2 IntRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapByte(f2 IntByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapInt(f2 IntIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapInt64(f2 IntInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapUint(f2 IntUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapUint64(f2 IntUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapFloat32(f2 IntFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapFloat64(f2 IntFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapString(f2 IntStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringIntTransformer) MapAny(f2 IntAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapBool(f2 Int64BoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapRune(f2 Int64RuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapByte(f2 Int64ByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapInt(f2 Int64IntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapInt64(f2 Int64Int64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapUint(f2 Int64UintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapUint64(f2 Int64Uint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapFloat32(f2 Int64Float32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapFloat64(f2 Int64Float64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapString(f2 Int64StringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringInt64Transformer) MapAny(f2 Int64AnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapBool(f2 UintBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapRune(f2 UintRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapByte(f2 UintByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapInt(f2 UintIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapInt64(f2 UintInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapUint(f2 UintUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapUint64(f2 UintUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapFloat32(f2 UintFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapFloat64(f2 UintFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapString(f2 UintStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringUintTransformer) MapAny(f2 UintAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapBool(f2 Uint64BoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapRune(f2 Uint64RuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapByte(f2 Uint64ByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapInt(f2 Uint64IntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapInt64(f2 Uint64Int64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapUint(f2 Uint64UintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapString(f2 Uint64StringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringUint64Transformer) MapAny(f2 Uint64AnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapBool(f2 Float32BoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapRune(f2 Float32RuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapByte(f2 Float32ByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapInt(f2 Float32IntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapInt64(f2 Float32Int64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapUint(f2 Float32UintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapString(f2 Float32StringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringFloat32Transformer) MapAny(f2 Float32AnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapBool(f2 Float64BoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapRune(f2 Float64RuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapByte(f2 Float64ByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapInt(f2 Float64IntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapInt64(f2 Float64Int64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapUint(f2 Float64UintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapString(f2 Float64StringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringFloat64Transformer) MapAny(f2 Float64AnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapBool(f2 StringBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapRune(f2 StringRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapByte(f2 StringByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapInt(f2 StringIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapInt64(f2 StringInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapUint(f2 StringUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapUint64(f2 StringUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapFloat32(f2 StringFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapFloat64(f2 StringFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapString(f2 StringStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringStringTransformer) MapAny(f2 StringAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapBool(f2 AnyBoolTransformer) StringBoolTransformer {
	return func(e string) bool { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapRune(f2 AnyRuneTransformer) StringRuneTransformer {
	return func(e string) rune { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapByte(f2 AnyByteTransformer) StringByteTransformer {
	return func(e string) byte { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapInt(f2 AnyIntTransformer) StringIntTransformer {
	return func(e string) int { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapInt64(f2 AnyInt64Transformer) StringInt64Transformer {
	return func(e string) int64 { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapUint(f2 AnyUintTransformer) StringUintTransformer {
	return func(e string) uint { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapUint64(f2 AnyUint64Transformer) StringUint64Transformer {
	return func(e string) uint64 { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) StringFloat32Transformer {
	return func(e string) float32 { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) StringFloat64Transformer {
	return func(e string) float64 { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapString(f2 AnyStringTransformer) StringStringTransformer {
	return func(e string) string { return f2(f1(e)) }
}
func (f1 StringAnyTransformer) MapAny(f2 AnyAnyTransformer) StringAnyTransformer {
	return func(e string) Any { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapBool(f2 BoolBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapRune(f2 BoolRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapByte(f2 BoolByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapInt(f2 BoolIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapInt64(f2 BoolInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapUint(f2 BoolUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapUint64(f2 BoolUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapFloat32(f2 BoolFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapFloat64(f2 BoolFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapString(f2 BoolStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyBoolTransformer) MapAny(f2 BoolAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapBool(f2 RuneBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapRune(f2 RuneRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapByte(f2 RuneByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapInt(f2 RuneIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapInt64(f2 RuneInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapUint(f2 RuneUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapUint64(f2 RuneUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapFloat32(f2 RuneFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapFloat64(f2 RuneFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapString(f2 RuneStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyRuneTransformer) MapAny(f2 RuneAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapBool(f2 ByteBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapRune(f2 ByteRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapByte(f2 ByteByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapInt(f2 ByteIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapInt64(f2 ByteInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapUint(f2 ByteUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapUint64(f2 ByteUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapFloat32(f2 ByteFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapFloat64(f2 ByteFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapString(f2 ByteStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyByteTransformer) MapAny(f2 ByteAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapBool(f2 IntBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapRune(f2 IntRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapByte(f2 IntByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapInt(f2 IntIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapInt64(f2 IntInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapUint(f2 IntUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapUint64(f2 IntUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapFloat32(f2 IntFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapFloat64(f2 IntFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapString(f2 IntStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyIntTransformer) MapAny(f2 IntAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapBool(f2 Int64BoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapRune(f2 Int64RuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapByte(f2 Int64ByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapInt(f2 Int64IntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapInt64(f2 Int64Int64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapUint(f2 Int64UintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapUint64(f2 Int64Uint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapFloat32(f2 Int64Float32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapFloat64(f2 Int64Float64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapString(f2 Int64StringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyInt64Transformer) MapAny(f2 Int64AnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapBool(f2 UintBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapRune(f2 UintRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapByte(f2 UintByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapInt(f2 UintIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapInt64(f2 UintInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapUint(f2 UintUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapUint64(f2 UintUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapFloat32(f2 UintFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapFloat64(f2 UintFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapString(f2 UintStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyUintTransformer) MapAny(f2 UintAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapBool(f2 Uint64BoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapRune(f2 Uint64RuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapByte(f2 Uint64ByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapInt(f2 Uint64IntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapInt64(f2 Uint64Int64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapUint(f2 Uint64UintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapUint64(f2 Uint64Uint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapFloat32(f2 Uint64Float32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapFloat64(f2 Uint64Float64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapString(f2 Uint64StringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyUint64Transformer) MapAny(f2 Uint64AnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapBool(f2 Float32BoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapRune(f2 Float32RuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapByte(f2 Float32ByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapInt(f2 Float32IntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapInt64(f2 Float32Int64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapUint(f2 Float32UintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapUint64(f2 Float32Uint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapFloat32(f2 Float32Float32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapFloat64(f2 Float32Float64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapString(f2 Float32StringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyFloat32Transformer) MapAny(f2 Float32AnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapBool(f2 Float64BoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapRune(f2 Float64RuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapByte(f2 Float64ByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapInt(f2 Float64IntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapInt64(f2 Float64Int64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapUint(f2 Float64UintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapUint64(f2 Float64Uint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapFloat32(f2 Float64Float32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapFloat64(f2 Float64Float64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapString(f2 Float64StringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyFloat64Transformer) MapAny(f2 Float64AnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapBool(f2 StringBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapRune(f2 StringRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapByte(f2 StringByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapInt(f2 StringIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapInt64(f2 StringInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapUint(f2 StringUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapUint64(f2 StringUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapFloat32(f2 StringFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapFloat64(f2 StringFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapString(f2 StringStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyStringTransformer) MapAny(f2 StringAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapBool(f2 AnyBoolTransformer) AnyBoolTransformer {
	return func(e Any) bool { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapRune(f2 AnyRuneTransformer) AnyRuneTransformer {
	return func(e Any) rune { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapByte(f2 AnyByteTransformer) AnyByteTransformer {
	return func(e Any) byte { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapInt(f2 AnyIntTransformer) AnyIntTransformer {
	return func(e Any) int { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapInt64(f2 AnyInt64Transformer) AnyInt64Transformer {
	return func(e Any) int64 { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapUint(f2 AnyUintTransformer) AnyUintTransformer {
	return func(e Any) uint { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapUint64(f2 AnyUint64Transformer) AnyUint64Transformer {
	return func(e Any) uint64 { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapFloat32(f2 AnyFloat32Transformer) AnyFloat32Transformer {
	return func(e Any) float32 { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapFloat64(f2 AnyFloat64Transformer) AnyFloat64Transformer {
	return func(e Any) float64 { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapString(f2 AnyStringTransformer) AnyStringTransformer {
	return func(e Any) string { return f2(f1(e)) }
}
func (f1 AnyAnyTransformer) MapAny(f2 AnyAnyTransformer) AnyAnyTransformer {
	return func(e Any) Any { return f2(f1(e)) }
}
