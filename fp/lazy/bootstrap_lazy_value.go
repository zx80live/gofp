// bootstrap_lazy_value.go
// DO NOT EDIT THIS FILE WAS GENERATED AUTOMATICALLY BY https://github.com/zx80live/gofp-bootstrap

package lazy

import . "github.com/zx80live/gofp/fp"

func (n LazyBool) Value() bool {
	if n.cached != nil {
		//fmt.Println(" Bool.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Bool.eval", n.eval())
		return n.eval()
	}
}
func (n LazyString) Value() string {
	if n.cached != nil {
		//fmt.Println(" String.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*String.eval", n.eval())
		return n.eval()
	}
}
func (n LazyInt) Value() int {
	if n.cached != nil {
		//fmt.Println(" Int.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Int.eval", n.eval())
		return n.eval()
	}
}
func (n LazyInt64) Value() int64 {
	if n.cached != nil {
		//fmt.Println(" Int64.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Int64.eval", n.eval())
		return n.eval()
	}
}
func (n LazyByte) Value() byte {
	if n.cached != nil {
		//fmt.Println(" Byte.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Byte.eval", n.eval())
		return n.eval()
	}
}
func (n LazyRune) Value() rune {
	if n.cached != nil {
		//fmt.Println(" Rune.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Rune.eval", n.eval())
		return n.eval()
	}
}
func (n LazyFloat32) Value() float32 {
	if n.cached != nil {
		//fmt.Println(" Float32.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Float32.eval", n.eval())
		return n.eval()
	}
}
func (n LazyFloat64) Value() float64 {
	if n.cached != nil {
		//fmt.Println(" Float64.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Float64.eval", n.eval())
		return n.eval()
	}
}
func (n LazyAny) Value() Any {
	if n.cached != nil {
		//fmt.Println(" Any.cached", *n.cached)
		return *n.cached
	} else {
		//fmt.Println("*Any.eval", n.eval())
		return n.eval()
	}
}
